{
  "version": 3,
  "sources": ["../../validator/lib/util/assertString.js", "../../validator/lib/toDate.js", "../../validator/lib/alpha.js", "../../validator/lib/isFloat.js", "../../validator/lib/toFloat.js", "../../validator/lib/toInt.js", "../../validator/lib/toBoolean.js", "../../validator/lib/equals.js", "../../validator/lib/util/toString.js", "../../validator/lib/util/merge.js", "../../validator/lib/contains.js", "../../validator/lib/matches.js", "../../validator/lib/isByteLength.js", "../../validator/lib/isFQDN.js", "../../validator/lib/isIP.js", "../../validator/lib/isEmail.js", "../../validator/lib/isURL.js", "../../validator/lib/isMACAddress.js", "../../validator/lib/isIPRange.js", "../../validator/lib/isDate.js", "../../validator/lib/isTime.js", "../../validator/lib/isBoolean.js", "../../validator/lib/isLocale.js", "../../validator/lib/isAbaRouting.js", "../../validator/lib/isAlpha.js", "../../validator/lib/isAlphanumeric.js", "../../validator/lib/isNumeric.js", "../../validator/lib/isPassportNumber.js", "../../validator/lib/isInt.js", "../../validator/lib/isPort.js", "../../validator/lib/isLowercase.js", "../../validator/lib/isUppercase.js", "../../validator/lib/isIMEI.js", "../../validator/lib/isAscii.js", "../../validator/lib/isFullWidth.js", "../../validator/lib/isHalfWidth.js", "../../validator/lib/isVariableWidth.js", "../../validator/lib/isMultibyte.js", "../../validator/lib/util/multilineRegex.js", "../../validator/lib/isSemVer.js", "../../validator/lib/isSurrogatePair.js", "../../validator/lib/util/includes.js", "../../validator/lib/isDecimal.js", "../../validator/lib/isHexadecimal.js", "../../validator/lib/isOctal.js", "../../validator/lib/isDivisibleBy.js", "../../validator/lib/isHexColor.js", "../../validator/lib/isRgbColor.js", "../../validator/lib/isHSL.js", "../../validator/lib/isISRC.js", "../../validator/lib/isIBAN.js", "../../validator/lib/isISO31661Alpha2.js", "../../validator/lib/isBIC.js", "../../validator/lib/isMD5.js", "../../validator/lib/isHash.js", "../../validator/lib/isBase64.js", "../../validator/lib/isJWT.js", "../../validator/lib/isJSON.js", "../../validator/lib/isEmpty.js", "../../validator/lib/isLength.js", "../../validator/lib/isUUID.js", "../../validator/lib/isMongoId.js", "../../validator/lib/isAfter.js", "../../validator/lib/isBefore.js", "../../validator/lib/isIn.js", "../../validator/lib/isLuhnNumber.js", "../../validator/lib/isCreditCard.js", "../../validator/lib/isIdentityCard.js", "../../validator/lib/isEAN.js", "../../validator/lib/isISIN.js", "../../validator/lib/isISBN.js", "../../validator/lib/isISSN.js", "../../validator/lib/util/algorithms.js", "../../validator/lib/isTaxID.js", "../../validator/lib/isMobilePhone.js", "../../validator/lib/isEthereumAddress.js", "../../validator/lib/isCurrency.js", "../../validator/lib/isBtcAddress.js", "../../validator/lib/isISO6346.js", "../../validator/lib/isISO6391.js", "../../validator/lib/isISO8601.js", "../../validator/lib/isRFC3339.js", "../../validator/lib/isISO31661Alpha3.js", "../../validator/lib/isISO4217.js", "../../validator/lib/isBase32.js", "../../validator/lib/isBase58.js", "../../validator/lib/isDataURI.js", "../../validator/lib/isMagnetURI.js", "../../validator/lib/rtrim.js", "../../validator/lib/ltrim.js", "../../validator/lib/trim.js", "../../validator/lib/isMailtoURI.js", "../../validator/lib/isMimeType.js", "../../validator/lib/isLatLong.js", "../../validator/lib/isPostalCode.js", "../../validator/lib/escape.js", "../../validator/lib/unescape.js", "../../validator/lib/blacklist.js", "../../validator/lib/stripLow.js", "../../validator/lib/whitelist.js", "../../validator/lib/isWhitelisted.js", "../../validator/lib/normalizeEmail.js", "../../validator/lib/isSlug.js", "../../validator/lib/isLicensePlate.js", "../../validator/lib/isStrongPassword.js", "../../validator/lib/isVAT.js", "../../validator/index.js", "../../eventemitter3/index.js", "../../tronweb/node_modules/semver/internal/constants.js", "../../tronweb/node_modules/semver/internal/debug.js", "../../tronweb/node_modules/semver/internal/re.js", "../../tronweb/node_modules/semver/internal/parse-options.js", "../../tronweb/node_modules/semver/internal/identifiers.js", "../../tronweb/node_modules/semver/classes/semver.js", "../../tronweb/node_modules/semver/functions/parse.js", "../../tronweb/node_modules/semver/functions/valid.js", "../../tronweb/node_modules/semver/functions/clean.js", "../../tronweb/node_modules/semver/functions/inc.js", "../../tronweb/node_modules/semver/functions/diff.js", "../../tronweb/node_modules/semver/functions/major.js", "../../tronweb/node_modules/semver/functions/minor.js", "../../tronweb/node_modules/semver/functions/patch.js", "../../tronweb/node_modules/semver/functions/prerelease.js", "../../tronweb/node_modules/semver/functions/compare.js", "../../tronweb/node_modules/semver/functions/rcompare.js", "../../tronweb/node_modules/semver/functions/compare-loose.js", "../../tronweb/node_modules/semver/functions/compare-build.js", "../../tronweb/node_modules/semver/functions/sort.js", "../../tronweb/node_modules/semver/functions/rsort.js", "../../tronweb/node_modules/semver/functions/gt.js", "../../tronweb/node_modules/semver/functions/lt.js", "../../tronweb/node_modules/semver/functions/eq.js", "../../tronweb/node_modules/semver/functions/neq.js", "../../tronweb/node_modules/semver/functions/gte.js", "../../tronweb/node_modules/semver/functions/lte.js", "../../tronweb/node_modules/semver/functions/cmp.js", "../../tronweb/node_modules/semver/functions/coerce.js", "../../tronweb/node_modules/semver/internal/lrucache.js", "../../tronweb/node_modules/semver/classes/range.js", "../../tronweb/node_modules/semver/classes/comparator.js", "../../tronweb/node_modules/semver/functions/satisfies.js", "../../tronweb/node_modules/semver/ranges/to-comparators.js", "../../tronweb/node_modules/semver/ranges/max-satisfying.js", "../../tronweb/node_modules/semver/ranges/min-satisfying.js", "../../tronweb/node_modules/semver/ranges/min-version.js", "../../tronweb/node_modules/semver/ranges/valid.js", "../../tronweb/node_modules/semver/ranges/outside.js", "../../tronweb/node_modules/semver/ranges/gtr.js", "../../tronweb/node_modules/semver/ranges/ltr.js", "../../tronweb/node_modules/semver/ranges/intersects.js", "../../tronweb/node_modules/semver/ranges/simplify.js", "../../tronweb/node_modules/semver/ranges/subset.js", "../../tronweb/node_modules/semver/index.js", "../../google-protobuf/google-protobuf.js", "../../google-protobuf/google/protobuf/any_pb.js", "../../tronweb/lib/esm/protocol/core/Tron_pb.cjs", "../../tronweb/lib/esm/protocol/core/contract/common_pb.cjs", "../../tronweb/lib/esm/protocol/core/contract/balance_contract_pb.cjs", "../../tronweb/lib/esm/protocol/core/contract/asset_issue_contract_pb.cjs", "../../tronweb/lib/esm/protocol/core/contract/smart_contract_pb.cjs", "../../tronweb/lib/esm/protocol/core/contract/witness_contract_pb.cjs", "../../tronweb/lib/esm/protocol/core/contract/storage_contract_pb.cjs", "../../tronweb/lib/esm/protocol/core/contract/account_contract_pb.cjs", "../../tronweb/lib/esm/protocol/core/contract/proposal_contract_pb.cjs", "../../tronweb/lib/esm/protocol/core/contract/exchange_contract_pb.cjs", "../../tronweb/src/utils/accounts.ts", "../../tronweb/src/utils/bytes.ts", "../../tronweb/src/utils/base64.ts", "../../tronweb/src/utils/crypto.ts", "../../tronweb/src/utils/address.ts", "../../tronweb/src/utils/code.ts", "../../tronweb/src/utils/validations.ts", "../../bignumber.js/bignumber.mjs", "../../tronweb/src/utils/ethersUtils.ts", "../../tronweb/node_modules/ethers/src.ts/_version.ts", "../../tronweb/node_modules/ethers/src.ts/utils/properties.ts", "../../tronweb/node_modules/ethers/src.ts/utils/errors.ts", "../../tronweb/node_modules/ethers/src.ts/utils/data.ts", "../../tronweb/node_modules/ethers/src.ts/utils/maths.ts", "../../tronweb/node_modules/ethers/src.ts/utils/base58.ts", "../../tronweb/node_modules/ethers/src.ts/utils/base64-browser.ts", "../../tronweb/node_modules/ethers/src.ts/utils/events.ts", "../../tronweb/node_modules/ethers/src.ts/utils/utf8.ts", "../../tronweb/node_modules/ethers/src.ts/utils/geturl-browser.ts", "../../tronweb/node_modules/ethers/src.ts/utils/fetch.ts", "../../tronweb/node_modules/ethers/src.ts/utils/fixednumber.ts", "../../tronweb/node_modules/ethers/src.ts/utils/rlp-decode.ts", "../../tronweb/node_modules/ethers/src.ts/utils/rlp-encode.ts", "../../tronweb/node_modules/ethers/src.ts/utils/uuid.ts", "../../tronweb/node_modules/ethers/src.ts/abi/coders/abstract-coder.ts", "../../tronweb/node_modules/@noble/hashes/src/_assert.ts", "../../tronweb/node_modules/@noble/hashes/src/crypto.ts", "../../tronweb/node_modules/@noble/hashes/src/utils.ts", "../../tronweb/node_modules/@noble/hashes/src/hmac.ts", "../../tronweb/node_modules/@noble/hashes/src/pbkdf2.ts", "../../tronweb/node_modules/@noble/hashes/src/_sha2.ts", "../../tronweb/node_modules/@noble/hashes/src/sha256.ts", "../../tronweb/node_modules/@noble/hashes/src/_u64.ts", "../../tronweb/node_modules/@noble/hashes/src/sha512.ts", "../../tronweb/node_modules/ethers/src.ts/crypto/crypto-browser.ts", "../../tronweb/node_modules/ethers/src.ts/crypto/hmac.ts", "../../tronweb/node_modules/@noble/hashes/src/sha3.ts", "../../tronweb/node_modules/ethers/src.ts/crypto/keccak.ts", "../../tronweb/node_modules/@noble/hashes/src/ripemd160.ts", "../../tronweb/node_modules/ethers/src.ts/crypto/ripemd160.ts", "../../tronweb/node_modules/ethers/src.ts/crypto/pbkdf2.ts", "../../tronweb/node_modules/ethers/src.ts/crypto/random.ts", "../../tronweb/node_modules/@noble/hashes/src/scrypt.ts", "../../tronweb/node_modules/ethers/src.ts/crypto/scrypt.ts", "../../tronweb/node_modules/ethers/src.ts/crypto/sha2.ts", "../../tronweb/node_modules/@noble/curves/src/abstract/utils.ts", "../../tronweb/node_modules/@noble/curves/src/abstract/modular.ts", "../../tronweb/node_modules/@noble/curves/src/abstract/curve.ts", "../../tronweb/node_modules/@noble/curves/src/abstract/weierstrass.ts", "../../tronweb/node_modules/@noble/curves/src/abstract/hash-to-curve.ts", "../../tronweb/node_modules/@noble/curves/src/_shortw_utils.ts", "../../tronweb/node_modules/@noble/curves/src/secp256k1.ts", "../../tronweb/node_modules/ethers/src.ts/constants/addresses.ts", "../../tronweb/node_modules/ethers/src.ts/constants/hashes.ts", "../../tronweb/node_modules/ethers/src.ts/constants/numbers.ts", "../../tronweb/node_modules/ethers/src.ts/constants/strings.ts", "../../tronweb/node_modules/ethers/src.ts/crypto/signature.ts", "../../tronweb/node_modules/ethers/src.ts/crypto/signing-key.ts", "../../tronweb/node_modules/ethers/src.ts/address/address.ts", "../../tronweb/node_modules/ethers/src.ts/address/checks.ts", "../../tronweb/node_modules/ethers/src.ts/abi/typed.ts", "../../tronweb/node_modules/ethers/src.ts/abi/coders/address.ts", "../../tronweb/node_modules/ethers/src.ts/abi/coders/anonymous.ts", "../../tronweb/node_modules/ethers/src.ts/abi/coders/array.ts", "../../tronweb/node_modules/ethers/src.ts/abi/coders/boolean.ts", "../../tronweb/node_modules/ethers/src.ts/abi/coders/bytes.ts", "../../tronweb/node_modules/ethers/src.ts/abi/coders/fixed-bytes.ts", "../../tronweb/node_modules/ethers/src.ts/abi/coders/null.ts", "../../tronweb/node_modules/ethers/src.ts/abi/coders/number.ts", "../../tronweb/node_modules/ethers/src.ts/abi/coders/string.ts", "../../tronweb/node_modules/ethers/src.ts/abi/coders/tuple.ts", "../../tronweb/node_modules/ethers/src.ts/hash/id.ts", "../../@adraffy/ens-normalize/dist/index.mjs", "../../tronweb/node_modules/ethers/src.ts/hash/namehash.ts", "../../tronweb/node_modules/ethers/src.ts/transaction/accesslist.ts", "../../tronweb/node_modules/ethers/src.ts/transaction/address.ts", "../../tronweb/node_modules/ethers/src.ts/transaction/transaction.ts", "../../tronweb/node_modules/ethers/src.ts/hash/message.ts", "../../tronweb/node_modules/ethers/src.ts/hash/solidity.ts", "../../tronweb/node_modules/ethers/src.ts/hash/typed-data.ts", "../../tronweb/node_modules/ethers/src.ts/abi/fragments.ts", "../../tronweb/node_modules/ethers/src.ts/abi/abi-coder.ts", "../../tronweb/node_modules/ethers/src.ts/abi/interface.ts", "../../tronweb/node_modules/ethers/src.ts/providers/provider.ts", "../../tronweb/node_modules/ethers/src.ts/contract/wrappers.ts", "../../tronweb/node_modules/ethers/src.ts/contract/contract.ts", "../../tronweb/node_modules/ethers/src.ts/providers/ens-resolver.ts", "../../tronweb/node_modules/ethers/src.ts/providers/format.ts", "../../tronweb/node_modules/ethers/src.ts/providers/abstract-provider.ts", "../../tronweb/node_modules/ethers/src.ts/providers/abstract-signer.ts", "../../tronweb/node_modules/ethers/src.ts/providers/provider-jsonrpc.ts", "../../tronweb/node_modules/ethers/src.ts/providers/ws-browser.ts", "../../tronweb/node_modules/ethers/src.ts/providers/provider-fallback.ts", "../../tronweb/node_modules/ethers/src.ts/providers/default-provider.ts", "../../tronweb/node_modules/ethers/src.ts/wallet/base-wallet.ts", "../../tronweb/node_modules/ethers/src.ts/wordlists/decode-owl.ts", "../../tronweb/node_modules/ethers/src.ts/wordlists/wordlist.ts", "../../tronweb/node_modules/ethers/src.ts/wordlists/wordlist-owl.ts", "../../tronweb/node_modules/ethers/src.ts/wordlists/lang-en.ts", "../../tronweb/node_modules/ethers/src.ts/wallet/mnemonic.ts", "../../aes-js/src.ts/aes.ts", "../../aes-js/src.ts/mode.ts", "../../aes-js/src.ts/mode-cfb.ts", "../../aes-js/src.ts/mode-ctr.ts", "../../tronweb/node_modules/ethers/src.ts/wallet/utils.ts", "../../tronweb/node_modules/ethers/src.ts/wallet/json-keystore.ts", "../../tronweb/node_modules/ethers/src.ts/wallet/hdwallet.ts", "../../tronweb/node_modules/ethers/src.ts/wordlists/wordlists-browser.ts", "../../tronweb/src/utils/fragments.ts", "../../tronweb/src/utils/interface.ts", "../../tronweb/src/utils/base58.ts", "../../axios/lib/helpers/bind.js", "../../axios/lib/utils.js", "../../axios/lib/core/AxiosError.js", "../../axios/lib/helpers/null.js", "../../axios/lib/helpers/toFormData.js", "../../axios/lib/helpers/AxiosURLSearchParams.js", "../../axios/lib/helpers/buildURL.js", "../../axios/lib/core/InterceptorManager.js", "../../axios/lib/defaults/transitional.js", "../../axios/lib/platform/browser/classes/URLSearchParams.js", "../../axios/lib/platform/browser/classes/FormData.js", "../../axios/lib/platform/browser/classes/Blob.js", "../../axios/lib/platform/browser/index.js", "../../axios/lib/platform/common/utils.js", "../../axios/lib/platform/index.js", "../../axios/lib/helpers/toURLEncodedForm.js", "../../axios/lib/helpers/formDataToJSON.js", "../../axios/lib/defaults/index.js", "../../axios/lib/helpers/parseHeaders.js", "../../axios/lib/core/AxiosHeaders.js", "../../axios/lib/core/transformData.js", "../../axios/lib/cancel/isCancel.js", "../../axios/lib/cancel/CanceledError.js", "../../axios/lib/core/settle.js", "../../axios/lib/helpers/parseProtocol.js", "../../axios/lib/helpers/speedometer.js", "../../axios/lib/helpers/throttle.js", "../../axios/lib/helpers/progressEventReducer.js", "../../axios/lib/helpers/isURLSameOrigin.js", "../../axios/lib/helpers/cookies.js", "../../axios/lib/helpers/isAbsoluteURL.js", "../../axios/lib/helpers/combineURLs.js", "../../axios/lib/core/buildFullPath.js", "../../axios/lib/core/mergeConfig.js", "../../axios/lib/helpers/resolveConfig.js", "../../axios/lib/adapters/xhr.js", "../../axios/lib/helpers/composeSignals.js", "../../axios/lib/helpers/trackStream.js", "../../axios/lib/adapters/fetch.js", "../../axios/lib/adapters/adapters.js", "../../axios/lib/core/dispatchRequest.js", "../../axios/lib/env/data.js", "../../axios/lib/helpers/validator.js", "../../axios/lib/core/Axios.js", "../../axios/lib/cancel/CancelToken.js", "../../axios/lib/helpers/spread.js", "../../axios/lib/helpers/isAxiosError.js", "../../axios/lib/helpers/HttpStatusCode.js", "../../axios/lib/axios.js", "../../axios/index.js", "../../tronweb/src/lib/providers/HttpProvider.ts", "../../tronweb/src/lib/providers/index.ts", "../../eventemitter3/index.mjs", "../../tronweb/src/tronweb.ts", "../../tronweb/src/utils/abi.ts", "../../tronweb/src/paramValidator/index.ts", "../../tronweb/src/types/Contract.ts", "../../tronweb/src/utils/transaction.ts", "../../tronweb/src/lib/TransactionBuilder/helper.ts", "../../tronweb/src/lib/TransactionBuilder/TransactionBuilder.ts", "../../tronweb/src/lib/trx.ts", "../../tronweb/src/lib/contract/method.ts", "../../tronweb/src/lib/contract/index.ts", "../../tronweb/src/lib/plugin.ts", "../../tronweb/src/lib/event.ts", "../../tronweb/src/utils/typedData.ts", "../../ethereum-cryptography/node_modules/@noble/hashes/src/_assert.ts", "../../ethereum-cryptography/node_modules/@noble/hashes/src/crypto.ts", "../../ethereum-cryptography/node_modules/@noble/hashes/src/utils.ts", "../../ethereum-cryptography/node_modules/@noble/hashes/src/_md.ts", "../../ethereum-cryptography/node_modules/@noble/hashes/src/sha256.ts", "../../ethereum-cryptography/node_modules/@noble/hashes/src/hmac.ts", "../../ethereum-cryptography/node_modules/@noble/curves/src/abstract/utils.ts", "../../ethereum-cryptography/node_modules/@noble/curves/src/abstract/modular.ts", "../../ethereum-cryptography/node_modules/@noble/curves/src/abstract/curve.ts", "../../ethereum-cryptography/node_modules/@noble/curves/src/abstract/weierstrass.ts", "../../ethereum-cryptography/node_modules/@noble/curves/src/_shortw_utils.ts", "../../ethereum-cryptography/node_modules/@noble/curves/src/abstract/hash-to-curve.ts", "../../ethereum-cryptography/node_modules/@noble/curves/src/secp256k1.ts", "../../tronweb/src/utils/message.ts", "../../tronweb/src/utils/index.ts", "../../tronweb/src/types/index.ts", "../../tronweb/src/types/Trx.ts", "../../tronweb/src/index.ts"],
  "sourcesContent": ["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertString;\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction assertString(input) {\n  var isString = typeof input === 'string' || input instanceof String;\n  if (!isString) {\n    var invalidType = _typeof(input);\n    if (input === null) invalidType = 'null';else if (invalidType === 'object') invalidType = input.constructor.name;\n    throw new TypeError(\"Expected a string but received a \".concat(invalidType));\n  }\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toDate;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction toDate(date) {\n  (0, _assertString.default)(date);\n  date = Date.parse(date);\n  return !isNaN(date) ? new Date(date) : null;\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.farsiLocales = exports.englishLocales = exports.dotDecimal = exports.decimal = exports.commaDecimal = exports.bengaliLocales = exports.arabicLocales = exports.alphanumeric = exports.alpha = void 0;\nvar alpha = exports.alpha = {\n  'en-US': /^[A-Z]+$/i,\n  'az-AZ': /^[A-VXYZÇƏĞİıÖŞÜ]+$/i,\n  'bg-BG': /^[А-Я]+$/i,\n  'cs-CZ': /^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,\n  'da-DK': /^[A-ZÆØÅ]+$/i,\n  'de-DE': /^[A-ZÄÖÜß]+$/i,\n  'el-GR': /^[Α-ώ]+$/i,\n  'es-ES': /^[A-ZÁÉÍÑÓÚÜ]+$/i,\n  'fa-IR': /^[ابپتثجچحخدذرزژسشصضطظعغفقکگلمنوهی]+$/i,\n  'fi-FI': /^[A-ZÅÄÖ]+$/i,\n  'fr-FR': /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,\n  'it-IT': /^[A-ZÀÉÈÌÎÓÒÙ]+$/i,\n  'ja-JP': /^[ぁ-んァ-ヶｦ-ﾟ一-龠ー・。、]+$/i,\n  'nb-NO': /^[A-ZÆØÅ]+$/i,\n  'nl-NL': /^[A-ZÁÉËÏÓÖÜÚ]+$/i,\n  'nn-NO': /^[A-ZÆØÅ]+$/i,\n  'hu-HU': /^[A-ZÁÉÍÓÖŐÚÜŰ]+$/i,\n  'pl-PL': /^[A-ZĄĆĘŚŁŃÓŻŹ]+$/i,\n  'pt-PT': /^[A-ZÃÁÀÂÄÇÉÊËÍÏÕÓÔÖÚÜ]+$/i,\n  'ru-RU': /^[А-ЯЁ]+$/i,\n  'kk-KZ': /^[А-ЯЁ\\u04D8\\u04B0\\u0406\\u04A2\\u0492\\u04AE\\u049A\\u04E8\\u04BA]+$/i,\n  'sl-SI': /^[A-ZČĆĐŠŽ]+$/i,\n  'sk-SK': /^[A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,\n  'sr-RS@latin': /^[A-ZČĆŽŠĐ]+$/i,\n  'sr-RS': /^[А-ЯЂЈЉЊЋЏ]+$/i,\n  'sv-SE': /^[A-ZÅÄÖ]+$/i,\n  'th-TH': /^[ก-๐\\s]+$/i,\n  'tr-TR': /^[A-ZÇĞİıÖŞÜ]+$/i,\n  'uk-UA': /^[А-ЩЬЮЯЄIЇҐі]+$/i,\n  'vi-VN': /^[A-ZÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴĐÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸ]+$/i,\n  'ko-KR': /^[ㄱ-ㅎㅏ-ㅣ가-힣]*$/,\n  'ku-IQ': /^[ئابپتجچحخدرڕزژسشعغفڤقکگلڵمنوۆھەیێيطؤثآإأكضصةظذ]+$/i,\n  ar: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/,\n  he: /^[א-ת]+$/,\n  fa: /^['آاءأؤئبپتثجچحخدذرزژسشصضطظعغفقکگلمنوهةی']+$/i,\n  bn: /^['ঀঁংঃঅআইঈউঊঋঌএঐওঔকখগঘঙচছজঝঞটঠডঢণতথদধনপফবভমযরলশষসহ়ঽািীুূৃৄেৈোৌ্ৎৗড়ঢ়য়ৠৡৢৣৰৱ৲৳৴৵৶৷৸৹৺৻']+$/,\n  eo: /^[ABCĈD-GĜHĤIJĴK-PRSŜTUŬVZ]+$/i,\n  'hi-IN': /^[\\u0900-\\u0961]+[\\u0972-\\u097F]*$/i,\n  'si-LK': /^[\\u0D80-\\u0DFF]+$/\n};\nvar alphanumeric = exports.alphanumeric = {\n  'en-US': /^[0-9A-Z]+$/i,\n  'az-AZ': /^[0-9A-VXYZÇƏĞİıÖŞÜ]+$/i,\n  'bg-BG': /^[0-9А-Я]+$/i,\n  'cs-CZ': /^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,\n  'da-DK': /^[0-9A-ZÆØÅ]+$/i,\n  'de-DE': /^[0-9A-ZÄÖÜß]+$/i,\n  'el-GR': /^[0-9Α-ω]+$/i,\n  'es-ES': /^[0-9A-ZÁÉÍÑÓÚÜ]+$/i,\n  'fi-FI': /^[0-9A-ZÅÄÖ]+$/i,\n  'fr-FR': /^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,\n  'it-IT': /^[0-9A-ZÀÉÈÌÎÓÒÙ]+$/i,\n  'ja-JP': /^[0-9０-９ぁ-んァ-ヶｦ-ﾟ一-龠ー・。、]+$/i,\n  'hu-HU': /^[0-9A-ZÁÉÍÓÖŐÚÜŰ]+$/i,\n  'nb-NO': /^[0-9A-ZÆØÅ]+$/i,\n  'nl-NL': /^[0-9A-ZÁÉËÏÓÖÜÚ]+$/i,\n  'nn-NO': /^[0-9A-ZÆØÅ]+$/i,\n  'pl-PL': /^[0-9A-ZĄĆĘŚŁŃÓŻŹ]+$/i,\n  'pt-PT': /^[0-9A-ZÃÁÀÂÄÇÉÊËÍÏÕÓÔÖÚÜ]+$/i,\n  'ru-RU': /^[0-9А-ЯЁ]+$/i,\n  'kk-KZ': /^[0-9А-ЯЁ\\u04D8\\u04B0\\u0406\\u04A2\\u0492\\u04AE\\u049A\\u04E8\\u04BA]+$/i,\n  'sl-SI': /^[0-9A-ZČĆĐŠŽ]+$/i,\n  'sk-SK': /^[0-9A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,\n  'sr-RS@latin': /^[0-9A-ZČĆŽŠĐ]+$/i,\n  'sr-RS': /^[0-9А-ЯЂЈЉЊЋЏ]+$/i,\n  'sv-SE': /^[0-9A-ZÅÄÖ]+$/i,\n  'th-TH': /^[ก-๙\\s]+$/i,\n  'tr-TR': /^[0-9A-ZÇĞİıÖŞÜ]+$/i,\n  'uk-UA': /^[0-9А-ЩЬЮЯЄIЇҐі]+$/i,\n  'ko-KR': /^[0-9ㄱ-ㅎㅏ-ㅣ가-힣]*$/,\n  'ku-IQ': /^[٠١٢٣٤٥٦٧٨٩0-9ئابپتجچحخدرڕزژسشعغفڤقکگلڵمنوۆھەیێيطؤثآإأكضصةظذ]+$/i,\n  'vi-VN': /^[0-9A-ZÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴĐÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸ]+$/i,\n  ar: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/,\n  he: /^[0-9א-ת]+$/,\n  fa: /^['0-9آاءأؤئبپتثجچحخدذرزژسشصضطظعغفقکگلمنوهةی۱۲۳۴۵۶۷۸۹۰']+$/i,\n  bn: /^['ঀঁংঃঅআইঈউঊঋঌএঐওঔকখগঘঙচছজঝঞটঠডঢণতথদধনপফবভমযরলশষসহ়ঽািীুূৃৄেৈোৌ্ৎৗড়ঢ়য়ৠৡৢৣ০১২৩৪৫৬৭৮৯ৰৱ৲৳৴৵৶৷৸৹৺৻']+$/,\n  eo: /^[0-9ABCĈD-GĜHĤIJĴK-PRSŜTUŬVZ]+$/i,\n  'hi-IN': /^[\\u0900-\\u0963]+[\\u0966-\\u097F]*$/i,\n  'si-LK': /^[0-9\\u0D80-\\u0DFF]+$/\n};\nvar decimal = exports.decimal = {\n  'en-US': '.',\n  ar: '٫'\n};\nvar englishLocales = exports.englishLocales = ['AU', 'GB', 'HK', 'IN', 'NZ', 'ZA', 'ZM'];\nfor (var locale, i = 0; i < englishLocales.length; i++) {\n  locale = \"en-\".concat(englishLocales[i]);\n  alpha[locale] = alpha['en-US'];\n  alphanumeric[locale] = alphanumeric['en-US'];\n  decimal[locale] = decimal['en-US'];\n}\n\n// Source: http://www.localeplanet.com/java/\nvar arabicLocales = exports.arabicLocales = ['AE', 'BH', 'DZ', 'EG', 'IQ', 'JO', 'KW', 'LB', 'LY', 'MA', 'QM', 'QA', 'SA', 'SD', 'SY', 'TN', 'YE'];\nfor (var _locale, _i = 0; _i < arabicLocales.length; _i++) {\n  _locale = \"ar-\".concat(arabicLocales[_i]);\n  alpha[_locale] = alpha.ar;\n  alphanumeric[_locale] = alphanumeric.ar;\n  decimal[_locale] = decimal.ar;\n}\nvar farsiLocales = exports.farsiLocales = ['IR', 'AF'];\nfor (var _locale2, _i2 = 0; _i2 < farsiLocales.length; _i2++) {\n  _locale2 = \"fa-\".concat(farsiLocales[_i2]);\n  alphanumeric[_locale2] = alphanumeric.fa;\n  decimal[_locale2] = decimal.ar;\n}\nvar bengaliLocales = exports.bengaliLocales = ['BD', 'IN'];\nfor (var _locale3, _i3 = 0; _i3 < bengaliLocales.length; _i3++) {\n  _locale3 = \"bn-\".concat(bengaliLocales[_i3]);\n  alpha[_locale3] = alpha.bn;\n  alphanumeric[_locale3] = alphanumeric.bn;\n  decimal[_locale3] = decimal['en-US'];\n}\n\n// Source: https://en.wikipedia.org/wiki/Decimal_mark\nvar dotDecimal = exports.dotDecimal = ['ar-EG', 'ar-LB', 'ar-LY'];\nvar commaDecimal = exports.commaDecimal = ['bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-ZM', 'eo', 'es-ES', 'fr-CA', 'fr-FR', 'id-ID', 'it-IT', 'ku-IQ', 'hi-IN', 'hu-HU', 'nb-NO', 'nn-NO', 'nl-NL', 'pl-PL', 'pt-PT', 'ru-RU', 'kk-KZ', 'si-LK', 'sl-SI', 'sr-RS@latin', 'sr-RS', 'sv-SE', 'tr-TR', 'uk-UA', 'vi-VN'];\nfor (var _i4 = 0; _i4 < dotDecimal.length; _i4++) {\n  decimal[dotDecimal[_i4]] = decimal['en-US'];\n}\nfor (var _i5 = 0; _i5 < commaDecimal.length; _i5++) {\n  decimal[commaDecimal[_i5]] = ',';\n}\nalpha['fr-CA'] = alpha['fr-FR'];\nalphanumeric['fr-CA'] = alphanumeric['fr-FR'];\nalpha['pt-BR'] = alpha['pt-PT'];\nalphanumeric['pt-BR'] = alphanumeric['pt-PT'];\ndecimal['pt-BR'] = decimal['pt-PT'];\n\n// see #862\nalpha['pl-Pl'] = alpha['pl-PL'];\nalphanumeric['pl-Pl'] = alphanumeric['pl-PL'];\ndecimal['pl-Pl'] = decimal['pl-PL'];\n\n// see #1455\nalpha['fa-AF'] = alpha.fa;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isFloat;\nexports.locales = void 0;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar _alpha = require(\"./alpha\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction isFloat(str, options) {\n  (0, _assertString.default)(str);\n  options = options || {};\n  var float = new RegExp(\"^(?:[-+])?(?:[0-9]+)?(?:\\\\\".concat(options.locale ? _alpha.decimal[options.locale] : '.', \"[0-9]*)?(?:[eE][\\\\+\\\\-]?(?:[0-9]+))?$\"));\n  if (str === '' || str === '.' || str === ',' || str === '-' || str === '+') {\n    return false;\n  }\n  var value = parseFloat(str.replace(',', '.'));\n  return float.test(str) && (!options.hasOwnProperty('min') || value >= options.min) && (!options.hasOwnProperty('max') || value <= options.max) && (!options.hasOwnProperty('lt') || value < options.lt) && (!options.hasOwnProperty('gt') || value > options.gt);\n}\nvar locales = exports.locales = Object.keys(_alpha.decimal);", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toFloat;\nvar _isFloat = _interopRequireDefault(require(\"./isFloat\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction toFloat(str) {\n  if (!(0, _isFloat.default)(str)) return NaN;\n  return parseFloat(str);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toInt;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction toInt(str, radix) {\n  (0, _assertString.default)(str);\n  return parseInt(str, radix || 10);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toBoolean;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction toBoolean(str, strict) {\n  (0, _assertString.default)(str);\n  if (strict) {\n    return str === '1' || /^true$/i.test(str);\n  }\n  return str !== '0' && !/^false$/i.test(str) && str !== '';\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = equals;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction equals(str, comparison) {\n  (0, _assertString.default)(str);\n  return str === comparison;\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toString;\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction toString(input) {\n  if (_typeof(input) === 'object' && input !== null) {\n    if (typeof input.toString === 'function') {\n      input = input.toString();\n    } else {\n      input = '[object Object]';\n    }\n  } else if (input === null || typeof input === 'undefined' || isNaN(input) && !input.length) {\n    input = '';\n  }\n  return String(input);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = merge;\nfunction merge() {\n  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaults = arguments.length > 1 ? arguments[1] : undefined;\n  for (var key in defaults) {\n    if (typeof obj[key] === 'undefined') {\n      obj[key] = defaults[key];\n    }\n  }\n  return obj;\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = contains;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar _toString = _interopRequireDefault(require(\"./util/toString\"));\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar defaulContainsOptions = {\n  ignoreCase: false,\n  minOccurrences: 1\n};\nfunction contains(str, elem, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, defaulContainsOptions);\n  if (options.ignoreCase) {\n    return str.toLowerCase().split((0, _toString.default)(elem).toLowerCase()).length > options.minOccurrences;\n  }\n  return str.split((0, _toString.default)(elem)).length > options.minOccurrences;\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = matches;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction matches(str, pattern, modifiers) {\n  (0, _assertString.default)(str);\n  if (Object.prototype.toString.call(pattern) !== '[object RegExp]') {\n    pattern = new RegExp(pattern, modifiers);\n  }\n  return !!str.match(pattern);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isByteLength;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n/* eslint-disable prefer-rest-params */\nfunction isByteLength(str, options) {\n  (0, _assertString.default)(str);\n  var min;\n  var max;\n  if (_typeof(options) === 'object') {\n    min = options.min || 0;\n    max = options.max;\n  } else {\n    // backwards compatibility: isByteLength(str, min [, max])\n    min = arguments[1];\n    max = arguments[2];\n  }\n  var len = encodeURI(str).split(/%..|./).length - 1;\n  return len >= min && (typeof max === 'undefined' || len <= max);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isFQDN;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar default_fqdn_options = {\n  require_tld: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_numeric_tld: false,\n  allow_wildcard: false,\n  ignore_max_length: false\n};\nfunction isFQDN(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_fqdn_options);\n\n  /* Remove the optional trailing dot before checking validity */\n  if (options.allow_trailing_dot && str[str.length - 1] === '.') {\n    str = str.substring(0, str.length - 1);\n  }\n\n  /* Remove the optional wildcard before checking validity */\n  if (options.allow_wildcard === true && str.indexOf('*.') === 0) {\n    str = str.substring(2);\n  }\n  var parts = str.split('.');\n  var tld = parts[parts.length - 1];\n  if (options.require_tld) {\n    // disallow fqdns without tld\n    if (parts.length < 2) {\n      return false;\n    }\n    if (!options.allow_numeric_tld && !/^([a-z\\u00A1-\\u00A8\\u00AA-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\n      return false;\n    }\n\n    // disallow spaces\n    if (/\\s/.test(tld)) {\n      return false;\n    }\n  }\n\n  // reject numeric TLDs\n  if (!options.allow_numeric_tld && /^\\d+$/.test(tld)) {\n    return false;\n  }\n  return parts.every(function (part) {\n    if (part.length > 63 && !options.ignore_max_length) {\n      return false;\n    }\n    if (!/^[a-z_\\u00a1-\\uffff0-9-]+$/i.test(part)) {\n      return false;\n    }\n\n    // disallow full-width chars\n    if (/[\\uff01-\\uff5e]/.test(part)) {\n      return false;\n    }\n\n    // disallow parts starting or ending with hyphen\n    if (/^-|-$/.test(part)) {\n      return false;\n    }\n    if (!options.allow_underscores && /_/.test(part)) {\n      return false;\n    }\n    return true;\n  });\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIP;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n11.3.  Examples\n\n   The following addresses\n\n             fe80::1234 (on the 1st link of the node)\n             ff02::5678 (on the 5th link of the node)\n             ff08::9abc (on the 10th organization of the node)\n\n   would be represented as follows:\n\n             fe80::1234%1\n             ff02::5678%5\n             ff08::9abc%10\n\n   (Here we assume a natural translation from a zone index to the\n   <zone_id> part, where the Nth zone of any scope is translated into\n   \"N\".)\n\n   If we use interface names as <zone_id>, those addresses could also be\n   represented as follows:\n\n            fe80::1234%ne0\n            ff02::5678%pvc1.3\n            ff08::9abc%interface10\n\n   where the interface \"ne0\" belongs to the 1st link, \"pvc1.3\" belongs\n   to the 5th link, and \"interface10\" belongs to the 10th organization.\n * * */\nvar IPv4SegmentFormat = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\nvar IPv4AddressFormat = \"(\".concat(IPv4SegmentFormat, \"[.]){3}\").concat(IPv4SegmentFormat);\nvar IPv4AddressRegExp = new RegExp(\"^\".concat(IPv4AddressFormat, \"$\"));\nvar IPv6SegmentFormat = '(?:[0-9a-fA-F]{1,4})';\nvar IPv6AddressRegExp = new RegExp('^(' + \"(?:\".concat(IPv6SegmentFormat, \":){7}(?:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){6}(?:\").concat(IPv4AddressFormat, \"|:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){5}(?::\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,2}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){4}(?:(:\").concat(IPv6SegmentFormat, \"){0,1}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,3}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){3}(?:(:\").concat(IPv6SegmentFormat, \"){0,2}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,4}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){2}(?:(:\").concat(IPv6SegmentFormat, \"){0,3}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,5}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){1}(?:(:\").concat(IPv6SegmentFormat, \"){0,4}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,6}|:)|\") + \"(?::((?::\".concat(IPv6SegmentFormat, \"){0,5}:\").concat(IPv4AddressFormat, \"|(?::\").concat(IPv6SegmentFormat, \"){1,7}|:))\") + ')(%[0-9a-zA-Z-.:]{1,})?$');\nfunction isIP(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  (0, _assertString.default)(str);\n  version = String(version);\n  if (!version) {\n    return isIP(str, 4) || isIP(str, 6);\n  }\n  if (version === '4') {\n    return IPv4AddressRegExp.test(str);\n  }\n  if (version === '6') {\n    return IPv6AddressRegExp.test(str);\n  }\n  return false;\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEmail;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar _isByteLength = _interopRequireDefault(require(\"./isByteLength\"));\nvar _isFQDN = _interopRequireDefault(require(\"./isFQDN\"));\nvar _isIP = _interopRequireDefault(require(\"./isIP\"));\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar default_email_options = {\n  allow_display_name: false,\n  allow_underscores: false,\n  require_display_name: false,\n  allow_utf8_local_part: true,\n  require_tld: true,\n  blacklisted_chars: '',\n  ignore_max_length: false,\n  host_blacklist: [],\n  host_whitelist: []\n};\n\n/* eslint-disable max-len */\n/* eslint-disable no-control-regex */\nvar splitNameAddress = /^([^\\x00-\\x1F\\x7F-\\x9F\\cX]+)</i;\nvar emailUserPart = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]+$/i;\nvar gmailUserPart = /^[a-z\\d]+$/;\nvar quotedEmailUser = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]))*$/i;\nvar emailUserUtf8Part = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\u00A1-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+$/i;\nvar quotedEmailUserUtf8 = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*$/i;\nvar defaultMaxEmailLength = 254;\n/* eslint-enable max-len */\n/* eslint-enable no-control-regex */\n\n/**\n * Validate display name according to the RFC2822: https://tools.ietf.org/html/rfc2822#appendix-A.1.2\n * @param {String} display_name\n */\nfunction validateDisplayName(display_name) {\n  var display_name_without_quotes = display_name.replace(/^\"(.+)\"$/, '$1');\n  // display name with only spaces is not valid\n  if (!display_name_without_quotes.trim()) {\n    return false;\n  }\n\n  // check whether display name contains illegal character\n  var contains_illegal = /[\\.\";<>]/.test(display_name_without_quotes);\n  if (contains_illegal) {\n    // if contains illegal characters,\n    // must to be enclosed in double-quotes, otherwise it's not a valid display name\n    if (display_name_without_quotes === display_name) {\n      return false;\n    }\n\n    // the quotes in display name must start with character symbol \\\n    var all_start_with_back_slash = display_name_without_quotes.split('\"').length === display_name_without_quotes.split('\\\\\"').length;\n    if (!all_start_with_back_slash) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isEmail(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_email_options);\n  if (options.require_display_name || options.allow_display_name) {\n    var display_email = str.match(splitNameAddress);\n    if (display_email) {\n      var display_name = display_email[1];\n\n      // Remove display name and angle brackets to get email address\n      // Can be done in the regex but will introduce a ReDOS (See  #1597 for more info)\n      str = str.replace(display_name, '').replace(/(^<|>$)/g, '');\n\n      // sometimes need to trim the last space to get the display name\n      // because there may be a space between display name and email address\n      // eg. myname <address@gmail.com>\n      // the display name is `myname` instead of `myname `, so need to trim the last space\n      if (display_name.endsWith(' ')) {\n        display_name = display_name.slice(0, -1);\n      }\n      if (!validateDisplayName(display_name)) {\n        return false;\n      }\n    } else if (options.require_display_name) {\n      return false;\n    }\n  }\n  if (!options.ignore_max_length && str.length > defaultMaxEmailLength) {\n    return false;\n  }\n  var parts = str.split('@');\n  var domain = parts.pop();\n  var lower_domain = domain.toLowerCase();\n  if (options.host_blacklist.includes(lower_domain)) {\n    return false;\n  }\n  if (options.host_whitelist.length > 0 && !options.host_whitelist.includes(lower_domain)) {\n    return false;\n  }\n  var user = parts.join('@');\n  if (options.domain_specific_validation && (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com')) {\n    /*\n      Previously we removed dots for gmail addresses before validating.\n      This was removed because it allows `multiple..dots@gmail.com`\n      to be reported as valid, but it is not.\n      Gmail only normalizes single dots, removing them from here is pointless,\n      should be done in normalizeEmail\n    */\n    user = user.toLowerCase();\n\n    // Removing sub-address from username before gmail validation\n    var username = user.split('+')[0];\n\n    // Dots are not included in gmail length restriction\n    if (!(0, _isByteLength.default)(username.replace(/\\./g, ''), {\n      min: 6,\n      max: 30\n    })) {\n      return false;\n    }\n    var _user_parts = username.split('.');\n    for (var i = 0; i < _user_parts.length; i++) {\n      if (!gmailUserPart.test(_user_parts[i])) {\n        return false;\n      }\n    }\n  }\n  if (options.ignore_max_length === false && (!(0, _isByteLength.default)(user, {\n    max: 64\n  }) || !(0, _isByteLength.default)(domain, {\n    max: 254\n  }))) {\n    return false;\n  }\n  if (!(0, _isFQDN.default)(domain, {\n    require_tld: options.require_tld,\n    ignore_max_length: options.ignore_max_length,\n    allow_underscores: options.allow_underscores\n  })) {\n    if (!options.allow_ip_domain) {\n      return false;\n    }\n    if (!(0, _isIP.default)(domain)) {\n      if (!domain.startsWith('[') || !domain.endsWith(']')) {\n        return false;\n      }\n      var noBracketdomain = domain.slice(1, -1);\n      if (noBracketdomain.length === 0 || !(0, _isIP.default)(noBracketdomain)) {\n        return false;\n      }\n    }\n  }\n  if (user[0] === '\"') {\n    user = user.slice(1, user.length - 1);\n    return options.allow_utf8_local_part ? quotedEmailUserUtf8.test(user) : quotedEmailUser.test(user);\n  }\n  var pattern = options.allow_utf8_local_part ? emailUserUtf8Part : emailUserPart;\n  var user_parts = user.split('.');\n  for (var _i = 0; _i < user_parts.length; _i++) {\n    if (!pattern.test(user_parts[_i])) {\n      return false;\n    }\n  }\n  if (options.blacklisted_chars) {\n    if (user.search(new RegExp(\"[\".concat(options.blacklisted_chars, \"]+\"), 'g')) !== -1) return false;\n  }\n  return true;\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isURL;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar _isFQDN = _interopRequireDefault(require(\"./isFQDN\"));\nvar _isIP = _interopRequireDefault(require(\"./isIP\"));\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n/*\noptions for isURL method\n\nrequire_protocol - if set as true isURL will return false if protocol is not present in the URL\nrequire_valid_protocol - isURL will check if the URL's protocol is present in the protocols option\nprotocols - valid protocols can be modified with this option\nrequire_host - if set as false isURL will not check if host is present in the URL\nrequire_port - if set as true isURL will check if port is present in the URL\nallow_protocol_relative_urls - if set as true protocol relative URLs will be allowed\nvalidate_length - if set as false isURL will skip string length validation (IE maximum is 2083)\n\n*/\n\nvar default_url_options = {\n  protocols: ['http', 'https', 'ftp'],\n  require_tld: true,\n  require_protocol: false,\n  require_host: true,\n  require_port: false,\n  require_valid_protocol: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_protocol_relative_urls: false,\n  allow_fragments: true,\n  allow_query_components: true,\n  validate_length: true\n};\nvar wrapped_ipv6 = /^\\[([^\\]]+)\\](?::([0-9]+))?$/;\nfunction isRegExp(obj) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\nfunction checkHost(host, matches) {\n  for (var i = 0; i < matches.length; i++) {\n    var match = matches[i];\n    if (host === match || isRegExp(match) && match.test(host)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction isURL(url, options) {\n  (0, _assertString.default)(url);\n  if (!url || /[\\s<>]/.test(url)) {\n    return false;\n  }\n  if (url.indexOf('mailto:') === 0) {\n    return false;\n  }\n  options = (0, _merge.default)(options, default_url_options);\n  if (options.validate_length && url.length >= 2083) {\n    return false;\n  }\n  if (!options.allow_fragments && url.includes('#')) {\n    return false;\n  }\n  if (!options.allow_query_components && (url.includes('?') || url.includes('&'))) {\n    return false;\n  }\n  var protocol, auth, host, hostname, port, port_str, split, ipv6;\n  split = url.split('#');\n  url = split.shift();\n  split = url.split('?');\n  url = split.shift();\n  split = url.split('://');\n  if (split.length > 1) {\n    protocol = split.shift().toLowerCase();\n    if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\n      return false;\n    }\n  } else if (options.require_protocol) {\n    return false;\n  } else if (url.slice(0, 2) === '//') {\n    if (!options.allow_protocol_relative_urls) {\n      return false;\n    }\n    split[0] = url.slice(2);\n  }\n  url = split.join('://');\n  if (url === '') {\n    return false;\n  }\n  split = url.split('/');\n  url = split.shift();\n  if (url === '' && !options.require_host) {\n    return true;\n  }\n  split = url.split('@');\n  if (split.length > 1) {\n    if (options.disallow_auth) {\n      return false;\n    }\n    if (split[0] === '') {\n      return false;\n    }\n    auth = split.shift();\n    if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\n      return false;\n    }\n    var _auth$split = auth.split(':'),\n      _auth$split2 = _slicedToArray(_auth$split, 2),\n      user = _auth$split2[0],\n      password = _auth$split2[1];\n    if (user === '' && password === '') {\n      return false;\n    }\n  }\n  hostname = split.join('@');\n  port_str = null;\n  ipv6 = null;\n  var ipv6_match = hostname.match(wrapped_ipv6);\n  if (ipv6_match) {\n    host = '';\n    ipv6 = ipv6_match[1];\n    port_str = ipv6_match[2] || null;\n  } else {\n    split = hostname.split(':');\n    host = split.shift();\n    if (split.length) {\n      port_str = split.join(':');\n    }\n  }\n  if (port_str !== null && port_str.length > 0) {\n    port = parseInt(port_str, 10);\n    if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\n      return false;\n    }\n  } else if (options.require_port) {\n    return false;\n  }\n  if (options.host_whitelist) {\n    return checkHost(host, options.host_whitelist);\n  }\n  if (host === '' && !options.require_host) {\n    return true;\n  }\n  if (!(0, _isIP.default)(host) && !(0, _isFQDN.default)(host, options) && (!ipv6 || !(0, _isIP.default)(ipv6, 6))) {\n    return false;\n  }\n  host = host || ipv6;\n  if (options.host_blacklist && checkHost(host, options.host_blacklist)) {\n    return false;\n  }\n  return true;\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMACAddress;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar macAddress48 = /^(?:[0-9a-fA-F]{2}([-:\\s]))([0-9a-fA-F]{2}\\1){4}([0-9a-fA-F]{2})$/;\nvar macAddress48NoSeparators = /^([0-9a-fA-F]){12}$/;\nvar macAddress48WithDots = /^([0-9a-fA-F]{4}\\.){2}([0-9a-fA-F]{4})$/;\nvar macAddress64 = /^(?:[0-9a-fA-F]{2}([-:\\s]))([0-9a-fA-F]{2}\\1){6}([0-9a-fA-F]{2})$/;\nvar macAddress64NoSeparators = /^([0-9a-fA-F]){16}$/;\nvar macAddress64WithDots = /^([0-9a-fA-F]{4}\\.){3}([0-9a-fA-F]{4})$/;\nfunction isMACAddress(str, options) {\n  (0, _assertString.default)(str);\n  if (options !== null && options !== void 0 && options.eui) {\n    options.eui = String(options.eui);\n  }\n  /**\n   * @deprecated `no_colons` TODO: remove it in the next major\n  */\n  if (options !== null && options !== void 0 && options.no_colons || options !== null && options !== void 0 && options.no_separators) {\n    if (options.eui === '48') {\n      return macAddress48NoSeparators.test(str);\n    }\n    if (options.eui === '64') {\n      return macAddress64NoSeparators.test(str);\n    }\n    return macAddress48NoSeparators.test(str) || macAddress64NoSeparators.test(str);\n  }\n  if ((options === null || options === void 0 ? void 0 : options.eui) === '48') {\n    return macAddress48.test(str) || macAddress48WithDots.test(str);\n  }\n  if ((options === null || options === void 0 ? void 0 : options.eui) === '64') {\n    return macAddress64.test(str) || macAddress64WithDots.test(str);\n  }\n  return isMACAddress(str, {\n    eui: '48'\n  }) || isMACAddress(str, {\n    eui: '64'\n  });\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIPRange;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar _isIP = _interopRequireDefault(require(\"./isIP\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar subnetMaybe = /^\\d{1,3}$/;\nvar v4Subnet = 32;\nvar v6Subnet = 128;\nfunction isIPRange(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  (0, _assertString.default)(str);\n  var parts = str.split('/');\n\n  // parts[0] -> ip, parts[1] -> subnet\n  if (parts.length !== 2) {\n    return false;\n  }\n  if (!subnetMaybe.test(parts[1])) {\n    return false;\n  }\n\n  // Disallow preceding 0 i.e. 01, 02, ...\n  if (parts[1].length > 1 && parts[1].startsWith('0')) {\n    return false;\n  }\n  var isValidIP = (0, _isIP.default)(parts[0], version);\n  if (!isValidIP) {\n    return false;\n  }\n\n  // Define valid subnet according to IP's version\n  var expectedSubnet = null;\n  switch (String(version)) {\n    case '4':\n      expectedSubnet = v4Subnet;\n      break;\n    case '6':\n      expectedSubnet = v6Subnet;\n      break;\n    default:\n      expectedSubnet = (0, _isIP.default)(parts[0], '6') ? v6Subnet : v4Subnet;\n  }\n  return parts[1] <= expectedSubnet && parts[1] >= 0;\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isDate;\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar default_date_options = {\n  format: 'YYYY/MM/DD',\n  delimiters: ['/', '-'],\n  strictMode: false\n};\nfunction isValidFormat(format) {\n  return /(^(y{4}|y{2})[.\\/-](m{1,2})[.\\/-](d{1,2})$)|(^(m{1,2})[.\\/-](d{1,2})[.\\/-]((y{4}|y{2})$))|(^(d{1,2})[.\\/-](m{1,2})[.\\/-]((y{4}|y{2})$))/gi.test(format);\n}\nfunction zip(date, format) {\n  var zippedArr = [],\n    len = Math.min(date.length, format.length);\n  for (var i = 0; i < len; i++) {\n    zippedArr.push([date[i], format[i]]);\n  }\n  return zippedArr;\n}\nfunction isDate(input, options) {\n  if (typeof options === 'string') {\n    // Allow backward compatibility for old format isDate(input [, format])\n    options = (0, _merge.default)({\n      format: options\n    }, default_date_options);\n  } else {\n    options = (0, _merge.default)(options, default_date_options);\n  }\n  if (typeof input === 'string' && isValidFormat(options.format)) {\n    var formatDelimiter = options.delimiters.find(function (delimiter) {\n      return options.format.indexOf(delimiter) !== -1;\n    });\n    var dateDelimiter = options.strictMode ? formatDelimiter : options.delimiters.find(function (delimiter) {\n      return input.indexOf(delimiter) !== -1;\n    });\n    var dateAndFormat = zip(input.split(dateDelimiter), options.format.toLowerCase().split(formatDelimiter));\n    var dateObj = {};\n    var _iterator = _createForOfIteratorHelper(dateAndFormat),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _step$value = _slicedToArray(_step.value, 2),\n          dateWord = _step$value[0],\n          formatWord = _step$value[1];\n        if (dateWord.length !== formatWord.length) {\n          return false;\n        }\n        dateObj[formatWord.charAt(0)] = dateWord;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    var fullYear = dateObj.y;\n\n    // Check if the year starts with a hyphen\n    if (fullYear.startsWith('-')) {\n      return false; // Hyphen before year is not allowed\n    }\n    if (dateObj.y.length === 2) {\n      var parsedYear = parseInt(dateObj.y, 10);\n      if (isNaN(parsedYear)) {\n        return false;\n      }\n      var currentYearLastTwoDigits = new Date().getFullYear() % 100;\n      if (parsedYear < currentYearLastTwoDigits) {\n        fullYear = \"20\".concat(dateObj.y);\n      } else {\n        fullYear = \"19\".concat(dateObj.y);\n      }\n    }\n    var month = dateObj.m;\n    if (dateObj.m.length === 1) {\n      month = \"0\".concat(dateObj.m);\n    }\n    var day = dateObj.d;\n    if (dateObj.d.length === 1) {\n      day = \"0\".concat(dateObj.d);\n    }\n    return new Date(\"\".concat(fullYear, \"-\").concat(month, \"-\").concat(day, \"T00:00:00.000Z\")).getUTCDate() === +dateObj.d;\n  }\n  if (!options.strictMode) {\n    return Object.prototype.toString.call(input) === '[object Date]' && isFinite(input);\n  }\n  return false;\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isTime;\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar default_time_options = {\n  hourFormat: 'hour24',\n  mode: 'default'\n};\nvar formats = {\n  hour24: {\n    default: /^([01]?[0-9]|2[0-3]):([0-5][0-9])$/,\n    withSeconds: /^([01]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$/\n  },\n  hour12: {\n    default: /^(0?[1-9]|1[0-2]):([0-5][0-9]) (A|P)M$/,\n    withSeconds: /^(0?[1-9]|1[0-2]):([0-5][0-9]):([0-5][0-9]) (A|P)M$/\n  }\n};\nfunction isTime(input, options) {\n  options = (0, _merge.default)(options, default_time_options);\n  if (typeof input !== 'string') return false;\n  return formats[options.hourFormat][options.mode].test(input);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBoolean;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar defaultOptions = {\n  loose: false\n};\nvar strictBooleans = ['true', 'false', '1', '0'];\nvar looseBooleans = [].concat(strictBooleans, ['yes', 'no']);\nfunction isBoolean(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions;\n  (0, _assertString.default)(str);\n  if (options.loose) {\n    return looseBooleans.includes(str.toLowerCase());\n  }\n  return strictBooleans.includes(str);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isLocale;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/*\n  = 3ALPHA              ; selected ISO 639 codes\n    *2(\"-\" 3ALPHA)      ; permanently reserved\n */\nvar extlang = '([A-Za-z]{3}(-[A-Za-z]{3}){0,2})';\n\n/*\n  = 2*3ALPHA            ; shortest ISO 639 code\n    [\"-\" extlang]       ; sometimes followed by\n                        ; extended language subtags\n  / 4ALPHA              ; or reserved for future use\n  / 5*8ALPHA            ; or registered language subtag\n */\nvar language = \"(([a-zA-Z]{2,3}(-\".concat(extlang, \")?)|([a-zA-Z]{5,8}))\");\n\n/*\n  = 4ALPHA              ; ISO 15924 code\n */\nvar script = '([A-Za-z]{4})';\n\n/*\n  = 2ALPHA              ; ISO 3166-1 code\n  / 3DIGIT              ; UN M.49 code\n */\nvar region = '([A-Za-z]{2}|\\\\d{3})';\n\n/*\n  = 5*8alphanum         ; registered variants\n  / (DIGIT 3alphanum)\n */\nvar variant = '([A-Za-z0-9]{5,8}|(\\\\d[A-Z-a-z0-9]{3}))';\n\n/*\n  = DIGIT               ; 0 - 9\n  / %x41-57             ; A - W\n  / %x59-5A             ; Y - Z\n  / %x61-77             ; a - w\n  / %x79-7A             ; y - z\n */\nvar singleton = '(\\\\d|[A-W]|[Y-Z]|[a-w]|[y-z])';\n\n/*\n  = singleton 1*(\"-\" (2*8alphanum))\n                        ; Single alphanumerics\n                        ; \"x\" reserved for private use\n */\nvar extension = \"(\".concat(singleton, \"(-[A-Za-z0-9]{2,8})+)\");\n\n/*\n  = \"x\" 1*(\"-\" (1*8alphanum))\n */\nvar privateuse = '(x(-[A-Za-z0-9]{1,8})+)';\n\n// irregular tags do not match the 'langtag' production and would not\n// otherwise be considered 'well-formed'. These tags are all valid, but\n// most are deprecated in favor of more modern subtags or subtag combination\n\nvar irregular = '((en-GB-oed)|(i-ami)|(i-bnn)|(i-default)|(i-enochian)|' + '(i-hak)|(i-klingon)|(i-lux)|(i-mingo)|(i-navajo)|(i-pwn)|(i-tao)|' + '(i-tay)|(i-tsu)|(sgn-BE-FR)|(sgn-BE-NL)|(sgn-CH-DE))';\n\n// regular tags match the 'langtag' production, but their subtags are not\n// extended language or variant subtags: their meaning is defined by\n// their registration and all of these are deprecated in favor of a more\n// modern subtag or sequence of subtags\n\nvar regular = '((art-lojban)|(cel-gaulish)|(no-bok)|(no-nyn)|(zh-guoyu)|' + '(zh-hakka)|(zh-min)|(zh-min-nan)|(zh-xiang))';\n\n/*\n  = irregular           ; non-redundant tags registered\n  / regular             ; during the RFC 3066 era\n\n */\nvar grandfathered = \"(\".concat(irregular, \"|\").concat(regular, \")\");\n\n/*\n  RFC 5646 defines delimitation of subtags via a hyphen:\n\n      \"Subtag\" refers to a specific section of a tag, delimited by a\n      hyphen, such as the subtags 'zh', 'Hant', and 'CN' in the tag \"zh-\n      Hant-CN\".  Examples of subtags in this document are enclosed in\n      single quotes ('Hant')\n\n  However, we need to add \"_\" to maintain the existing behaviour.\n */\nvar delimiter = '(-|_)';\n\n/*\n  = language\n    [\"-\" script]\n    [\"-\" region]\n    *(\"-\" variant)\n    *(\"-\" extension)\n    [\"-\" privateuse]\n */\nvar langtag = \"\".concat(language, \"(\").concat(delimiter).concat(script, \")?(\").concat(delimiter).concat(region, \")?(\").concat(delimiter).concat(variant, \")*(\").concat(delimiter).concat(extension, \")*(\").concat(delimiter).concat(privateuse, \")?\");\n\n/*\n  Regex implementation based on BCP RFC 5646\n  Tags for Identifying Languages\n  https://www.rfc-editor.org/rfc/rfc5646.html\n */\nvar languageTagRegex = new RegExp(\"(^\".concat(privateuse, \"$)|(^\").concat(grandfathered, \"$)|(^\").concat(langtag, \"$)\"));\nfunction isLocale(str) {\n  (0, _assertString.default)(str);\n  return languageTagRegex.test(str);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isAbaRouting;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n// http://www.brainjar.com/js/validation/\n// https://www.aba.com/news-research/research-analysis/routing-number-policy-procedures\n// series reserved for future use are excluded\nvar isRoutingReg = /^(?!(1[3-9])|(20)|(3[3-9])|(4[0-9])|(5[0-9])|(60)|(7[3-9])|(8[1-9])|(9[0-2])|(9[3-9]))[0-9]{9}$/;\nfunction isAbaRouting(str) {\n  (0, _assertString.default)(str);\n  if (!isRoutingReg.test(str)) return false;\n  var checkSumVal = 0;\n  for (var i = 0; i < str.length; i++) {\n    if (i % 3 === 0) checkSumVal += str[i] * 3;else if (i % 3 === 1) checkSumVal += str[i] * 7;else checkSumVal += str[i] * 1;\n  }\n  return checkSumVal % 10 === 0;\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isAlpha;\nexports.locales = void 0;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar _alpha = require(\"./alpha\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction isAlpha(_str) {\n  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en-US';\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  (0, _assertString.default)(_str);\n  var str = _str;\n  var ignore = options.ignore;\n  if (ignore) {\n    if (ignore instanceof RegExp) {\n      str = str.replace(ignore, '');\n    } else if (typeof ignore === 'string') {\n      str = str.replace(new RegExp(\"[\".concat(ignore.replace(/[-[\\]{}()*+?.,\\\\^$|#\\\\s]/g, '\\\\$&'), \"]\"), 'g'), ''); // escape regex for ignore\n    } else {\n      throw new Error('ignore should be instance of a String or RegExp');\n    }\n  }\n  if (locale in _alpha.alpha) {\n    return _alpha.alpha[locale].test(str);\n  }\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}\nvar locales = exports.locales = Object.keys(_alpha.alpha);", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isAlphanumeric;\nexports.locales = void 0;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar _alpha = require(\"./alpha\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction isAlphanumeric(_str) {\n  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en-US';\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  (0, _assertString.default)(_str);\n  var str = _str;\n  var ignore = options.ignore;\n  if (ignore) {\n    if (ignore instanceof RegExp) {\n      str = str.replace(ignore, '');\n    } else if (typeof ignore === 'string') {\n      str = str.replace(new RegExp(\"[\".concat(ignore.replace(/[-[\\]{}()*+?.,\\\\^$|#\\\\s]/g, '\\\\$&'), \"]\"), 'g'), ''); // escape regex for ignore\n    } else {\n      throw new Error('ignore should be instance of a String or RegExp');\n    }\n  }\n  if (locale in _alpha.alphanumeric) {\n    return _alpha.alphanumeric[locale].test(str);\n  }\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}\nvar locales = exports.locales = Object.keys(_alpha.alphanumeric);", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isNumeric;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar _alpha = require(\"./alpha\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar numericNoSymbols = /^[0-9]+$/;\nfunction isNumeric(str, options) {\n  (0, _assertString.default)(str);\n  if (options && options.no_symbols) {\n    return numericNoSymbols.test(str);\n  }\n  return new RegExp(\"^[+-]?([0-9]*[\".concat((options || {}).locale ? _alpha.decimal[options.locale] : '.', \"])?[0-9]+$\")).test(str);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isPassportNumber;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Reference:\n * https://en.wikipedia.org/ -- Wikipedia\n * https://docs.microsoft.com/en-us/microsoft-365/compliance/eu-passport-number -- EU Passport Number\n * https://countrycode.org/ -- Country Codes\n */\nvar passportRegexByCountryCode = {\n  AM: /^[A-Z]{2}\\d{7}$/,\n  // ARMENIA\n  AR: /^[A-Z]{3}\\d{6}$/,\n  // ARGENTINA\n  AT: /^[A-Z]\\d{7}$/,\n  // AUSTRIA\n  AU: /^[A-Z]\\d{7}$/,\n  // AUSTRALIA\n  AZ: /^[A-Z]{1}\\d{8}$/,\n  // AZERBAIJAN\n  BE: /^[A-Z]{2}\\d{6}$/,\n  // BELGIUM\n  BG: /^\\d{9}$/,\n  // BULGARIA\n  BR: /^[A-Z]{2}\\d{6}$/,\n  // BRAZIL\n  BY: /^[A-Z]{2}\\d{7}$/,\n  // BELARUS\n  CA: /^[A-Z]{2}\\d{6}$/,\n  // CANADA\n  CH: /^[A-Z]\\d{7}$/,\n  // SWITZERLAND\n  CN: /^G\\d{8}$|^E(?![IO])[A-Z0-9]\\d{7}$/,\n  // CHINA [G=Ordinary, E=Electronic] followed by 8-digits, or E followed by any UPPERCASE letter (except I and O) followed by 7 digits\n  CY: /^[A-Z](\\d{6}|\\d{8})$/,\n  // CYPRUS\n  CZ: /^\\d{8}$/,\n  // CZECH REPUBLIC\n  DE: /^[CFGHJKLMNPRTVWXYZ0-9]{9}$/,\n  // GERMANY\n  DK: /^\\d{9}$/,\n  // DENMARK\n  DZ: /^\\d{9}$/,\n  // ALGERIA\n  EE: /^([A-Z]\\d{7}|[A-Z]{2}\\d{7})$/,\n  // ESTONIA (K followed by 7-digits), e-passports have 2 UPPERCASE followed by 7 digits\n  ES: /^[A-Z0-9]{2}([A-Z0-9]?)\\d{6}$/,\n  // SPAIN\n  FI: /^[A-Z]{2}\\d{7}$/,\n  // FINLAND\n  FR: /^\\d{2}[A-Z]{2}\\d{5}$/,\n  // FRANCE\n  GB: /^\\d{9}$/,\n  // UNITED KINGDOM\n  GR: /^[A-Z]{2}\\d{7}$/,\n  // GREECE\n  HR: /^\\d{9}$/,\n  // CROATIA\n  HU: /^[A-Z]{2}(\\d{6}|\\d{7})$/,\n  // HUNGARY\n  IE: /^[A-Z0-9]{2}\\d{7}$/,\n  // IRELAND\n  IN: /^[A-Z]{1}-?\\d{7}$/,\n  // INDIA\n  ID: /^[A-C]\\d{7}$/,\n  // INDONESIA\n  IR: /^[A-Z]\\d{8}$/,\n  // IRAN\n  IS: /^(A)\\d{7}$/,\n  // ICELAND\n  IT: /^[A-Z0-9]{2}\\d{7}$/,\n  // ITALY\n  JM: /^[Aa]\\d{7}$/,\n  // JAMAICA\n  JP: /^[A-Z]{2}\\d{7}$/,\n  // JAPAN\n  KR: /^[MS]\\d{8}$/,\n  // SOUTH KOREA, REPUBLIC OF KOREA, [S=PS Passports, M=PM Passports]\n  KZ: /^[a-zA-Z]\\d{7}$/,\n  // KAZAKHSTAN\n  LI: /^[a-zA-Z]\\d{5}$/,\n  // LIECHTENSTEIN\n  LT: /^[A-Z0-9]{8}$/,\n  // LITHUANIA\n  LU: /^[A-Z0-9]{8}$/,\n  // LUXEMBURG\n  LV: /^[A-Z0-9]{2}\\d{7}$/,\n  // LATVIA\n  LY: /^[A-Z0-9]{8}$/,\n  // LIBYA\n  MT: /^\\d{7}$/,\n  // MALTA\n  MZ: /^([A-Z]{2}\\d{7})|(\\d{2}[A-Z]{2}\\d{5})$/,\n  // MOZAMBIQUE\n  MY: /^[AHK]\\d{8}$/,\n  // MALAYSIA\n  MX: /^\\d{10,11}$/,\n  // MEXICO\n  NL: /^[A-Z]{2}[A-Z0-9]{6}\\d$/,\n  // NETHERLANDS\n  NZ: /^([Ll]([Aa]|[Dd]|[Ff]|[Hh])|[Ee]([Aa]|[Pp])|[Nn])\\d{6}$/,\n  // NEW ZEALAND\n  PH: /^([A-Z](\\d{6}|\\d{7}[A-Z]))|([A-Z]{2}(\\d{6}|\\d{7}))$/,\n  // PHILIPPINES\n  PK: /^[A-Z]{2}\\d{7}$/,\n  // PAKISTAN\n  PL: /^[A-Z]{2}\\d{7}$/,\n  // POLAND\n  PT: /^[A-Z]\\d{6}$/,\n  // PORTUGAL\n  RO: /^\\d{8,9}$/,\n  // ROMANIA\n  RU: /^\\d{9}$/,\n  // RUSSIAN FEDERATION\n  SE: /^\\d{8}$/,\n  // SWEDEN\n  SL: /^(P)[A-Z]\\d{7}$/,\n  // SLOVENIA\n  SK: /^[0-9A-Z]\\d{7}$/,\n  // SLOVAKIA\n  TH: /^[A-Z]{1,2}\\d{6,7}$/,\n  // THAILAND\n  TR: /^[A-Z]\\d{8}$/,\n  // TURKEY\n  UA: /^[A-Z]{2}\\d{6}$/,\n  // UKRAINE\n  US: /^\\d{9}$/,\n  // UNITED STATES\n  ZA: /^[TAMD]\\d{8}$/ // SOUTH AFRICA\n};\n\n/**\n * Check if str is a valid passport number\n * relative to provided ISO Country Code.\n *\n * @param {string} str\n * @param {string} countryCode\n * @return {boolean}\n */\nfunction isPassportNumber(str, countryCode) {\n  (0, _assertString.default)(str);\n  /** Remove All Whitespaces, Convert to UPPERCASE */\n  var normalizedStr = str.replace(/\\s/g, '').toUpperCase();\n  return countryCode.toUpperCase() in passportRegexByCountryCode && passportRegexByCountryCode[countryCode].test(normalizedStr);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isInt;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar int = /^(?:[-+]?(?:0|[1-9][0-9]*))$/;\nvar intLeadingZeroes = /^[-+]?[0-9]+$/;\nfunction isInt(str, options) {\n  (0, _assertString.default)(str);\n  options = options || {};\n\n  // Get the regex to use for testing, based on whether\n  // leading zeroes are allowed or not.\n  var regex = options.allow_leading_zeroes === false ? int : intLeadingZeroes;\n\n  // Check min/max/lt/gt\n  var minCheckPassed = !options.hasOwnProperty('min') || str >= options.min;\n  var maxCheckPassed = !options.hasOwnProperty('max') || str <= options.max;\n  var ltCheckPassed = !options.hasOwnProperty('lt') || str < options.lt;\n  var gtCheckPassed = !options.hasOwnProperty('gt') || str > options.gt;\n  return regex.test(str) && minCheckPassed && maxCheckPassed && ltCheckPassed && gtCheckPassed;\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isPort;\nvar _isInt = _interopRequireDefault(require(\"./isInt\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction isPort(str) {\n  return (0, _isInt.default)(str, {\n    allow_leading_zeroes: false,\n    min: 0,\n    max: 65535\n  });\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isLowercase;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction isLowercase(str) {\n  (0, _assertString.default)(str);\n  return str === str.toLowerCase();\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isUppercase;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction isUppercase(str) {\n  (0, _assertString.default)(str);\n  return str === str.toUpperCase();\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIMEI;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar imeiRegexWithoutHypens = /^[0-9]{15}$/;\nvar imeiRegexWithHypens = /^\\d{2}-\\d{6}-\\d{6}-\\d{1}$/;\nfunction isIMEI(str, options) {\n  (0, _assertString.default)(str);\n  options = options || {};\n\n  // default regex for checking imei is the one without hyphens\n\n  var imeiRegex = imeiRegexWithoutHypens;\n  if (options.allow_hyphens) {\n    imeiRegex = imeiRegexWithHypens;\n  }\n  if (!imeiRegex.test(str)) {\n    return false;\n  }\n  str = str.replace(/-/g, '');\n  var sum = 0,\n    mul = 2,\n    l = 14;\n  for (var i = 0; i < l; i++) {\n    var digit = str.substring(l - i - 1, l - i);\n    var tp = parseInt(digit, 10) * mul;\n    if (tp >= 10) {\n      sum += tp % 10 + 1;\n    } else {\n      sum += tp;\n    }\n    if (mul === 1) {\n      mul += 1;\n    } else {\n      mul -= 1;\n    }\n  }\n  var chk = (10 - sum % 10) % 10;\n  if (chk !== parseInt(str.substring(14, 15), 10)) {\n    return false;\n  }\n  return true;\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isAscii;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/* eslint-disable no-control-regex */\nvar ascii = /^[\\x00-\\x7F]+$/;\n/* eslint-enable no-control-regex */\n\nfunction isAscii(str) {\n  (0, _assertString.default)(str);\n  return ascii.test(str);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isFullWidth;\nexports.fullWidth = void 0;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar fullWidth = exports.fullWidth = /[^\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/;\nfunction isFullWidth(str) {\n  (0, _assertString.default)(str);\n  return fullWidth.test(str);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isHalfWidth;\nexports.halfWidth = void 0;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar halfWidth = exports.halfWidth = /[\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/;\nfunction isHalfWidth(str) {\n  (0, _assertString.default)(str);\n  return halfWidth.test(str);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isVariableWidth;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar _isFullWidth = require(\"./isFullWidth\");\nvar _isHalfWidth = require(\"./isHalfWidth\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction isVariableWidth(str) {\n  (0, _assertString.default)(str);\n  return _isFullWidth.fullWidth.test(str) && _isHalfWidth.halfWidth.test(str);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMultibyte;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/* eslint-disable no-control-regex */\nvar multibyte = /[^\\x00-\\x7F]/;\n/* eslint-enable no-control-regex */\n\nfunction isMultibyte(str) {\n  (0, _assertString.default)(str);\n  return multibyte.test(str);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = multilineRegexp;\n/**\n * Build RegExp object from an array\n * of multiple/multi-line regexp parts\n *\n * @param {string[]} parts\n * @param {string} flags\n * @return {object} - RegExp object\n */\nfunction multilineRegexp(parts, flags) {\n  var regexpAsStringLiteral = parts.join('');\n  return new RegExp(regexpAsStringLiteral, flags);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isSemVer;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar _multilineRegex = _interopRequireDefault(require(\"./util/multilineRegex\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Regular Expression to match\n * semantic versioning (SemVer)\n * built from multi-line, multi-parts regexp\n * Reference: https://semver.org/\n */\nvar semanticVersioningRegex = (0, _multilineRegex.default)(['^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)', '(?:-((?:0|[1-9]\\\\d*|\\\\d*[a-z-][0-9a-z-]*)(?:\\\\.(?:0|[1-9]\\\\d*|\\\\d*[a-z-][0-9a-z-]*))*))', '?(?:\\\\+([0-9a-z-]+(?:\\\\.[0-9a-z-]+)*))?$'], 'i');\nfunction isSemVer(str) {\n  (0, _assertString.default)(str);\n  return semanticVersioningRegex.test(str);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isSurrogatePair;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar surrogatePair = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/;\nfunction isSurrogatePair(str) {\n  (0, _assertString.default)(str);\n  return surrogatePair.test(str);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar includes = function includes(arr, val) {\n  return arr.some(function (arrVal) {\n    return val === arrVal;\n  });\n};\nvar _default = exports.default = includes;\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isDecimal;\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar _includes = _interopRequireDefault(require(\"./util/includes\"));\nvar _alpha = require(\"./alpha\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction decimalRegExp(options) {\n  var regExp = new RegExp(\"^[-+]?([0-9]+)?(\\\\\".concat(_alpha.decimal[options.locale], \"[0-9]{\").concat(options.decimal_digits, \"})\").concat(options.force_decimal ? '' : '?', \"$\"));\n  return regExp;\n}\nvar default_decimal_options = {\n  force_decimal: false,\n  decimal_digits: '1,',\n  locale: 'en-US'\n};\nvar blacklist = ['', '-', '+'];\nfunction isDecimal(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_decimal_options);\n  if (options.locale in _alpha.decimal) {\n    return !(0, _includes.default)(blacklist, str.replace(/ /g, '')) && decimalRegExp(options).test(str);\n  }\n  throw new Error(\"Invalid locale '\".concat(options.locale, \"'\"));\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isHexadecimal;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar hexadecimal = /^(0x|0h)?[0-9A-F]+$/i;\nfunction isHexadecimal(str) {\n  (0, _assertString.default)(str);\n  return hexadecimal.test(str);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isOctal;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar octal = /^(0o)?[0-7]+$/i;\nfunction isOctal(str) {\n  (0, _assertString.default)(str);\n  return octal.test(str);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isDivisibleBy;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar _toFloat = _interopRequireDefault(require(\"./toFloat\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction isDivisibleBy(str, num) {\n  (0, _assertString.default)(str);\n  return (0, _toFloat.default)(str) % parseInt(num, 10) === 0;\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isHexColor;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar hexcolor = /^#?([0-9A-F]{3}|[0-9A-F]{4}|[0-9A-F]{6}|[0-9A-F]{8})$/i;\nfunction isHexColor(str) {\n  (0, _assertString.default)(str);\n  return hexcolor.test(str);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isRgbColor;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar rgbColor = /^rgb\\((([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]),){2}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\)$/;\nvar rgbaColor = /^rgba\\((([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]),){3}(0?\\.\\d|1(\\.0)?|0(\\.0)?)\\)$/;\nvar rgbColorPercent = /^rgb\\((([0-9]%|[1-9][0-9]%|100%),){2}([0-9]%|[1-9][0-9]%|100%)\\)$/;\nvar rgbaColorPercent = /^rgba\\((([0-9]%|[1-9][0-9]%|100%),){3}(0?\\.\\d|1(\\.0)?|0(\\.0)?)\\)$/;\nfunction isRgbColor(str) {\n  var includePercentValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  (0, _assertString.default)(str);\n  if (!includePercentValues) {\n    return rgbColor.test(str) || rgbaColor.test(str);\n  }\n  return rgbColor.test(str) || rgbaColor.test(str) || rgbColorPercent.test(str) || rgbaColorPercent.test(str);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isHSL;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar hslComma = /^hsla?\\(((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?))(deg|grad|rad|turn)?(,(\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%){2}(,((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%?))?\\)$/i;\nvar hslSpace = /^hsla?\\(((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?))(deg|grad|rad|turn)?(\\s(\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%){2}\\s?(\\/\\s((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%?)\\s?)?\\)$/i;\nfunction isHSL(str) {\n  (0, _assertString.default)(str);\n\n  // Strip duplicate spaces before calling the validation regex (See  #1598 for more info)\n  var strippedStr = str.replace(/\\s+/g, ' ').replace(/\\s?(hsla?\\(|\\)|,)\\s?/ig, '$1');\n  if (strippedStr.indexOf(',') !== -1) {\n    return hslComma.test(strippedStr);\n  }\n  return hslSpace.test(strippedStr);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISRC;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n// see http://isrc.ifpi.org/en/isrc-standard/code-syntax\nvar isrc = /^[A-Z]{2}[0-9A-Z]{3}\\d{2}\\d{5}$/;\nfunction isISRC(str) {\n  (0, _assertString.default)(str);\n  return isrc.test(str);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIBAN;\nexports.locales = void 0;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * List of country codes with\n * corresponding IBAN regular expression\n * Reference: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n */\nvar ibanRegexThroughCountryCode = {\n  AD: /^(AD[0-9]{2})\\d{8}[A-Z0-9]{12}$/,\n  AE: /^(AE[0-9]{2})\\d{3}\\d{16}$/,\n  AL: /^(AL[0-9]{2})\\d{8}[A-Z0-9]{16}$/,\n  AT: /^(AT[0-9]{2})\\d{16}$/,\n  AZ: /^(AZ[0-9]{2})[A-Z0-9]{4}\\d{20}$/,\n  BA: /^(BA[0-9]{2})\\d{16}$/,\n  BE: /^(BE[0-9]{2})\\d{12}$/,\n  BG: /^(BG[0-9]{2})[A-Z]{4}\\d{6}[A-Z0-9]{8}$/,\n  BH: /^(BH[0-9]{2})[A-Z]{4}[A-Z0-9]{14}$/,\n  BR: /^(BR[0-9]{2})\\d{23}[A-Z]{1}[A-Z0-9]{1}$/,\n  BY: /^(BY[0-9]{2})[A-Z0-9]{4}\\d{20}$/,\n  CH: /^(CH[0-9]{2})\\d{5}[A-Z0-9]{12}$/,\n  CR: /^(CR[0-9]{2})\\d{18}$/,\n  CY: /^(CY[0-9]{2})\\d{8}[A-Z0-9]{16}$/,\n  CZ: /^(CZ[0-9]{2})\\d{20}$/,\n  DE: /^(DE[0-9]{2})\\d{18}$/,\n  DK: /^(DK[0-9]{2})\\d{14}$/,\n  DO: /^(DO[0-9]{2})[A-Z]{4}\\d{20}$/,\n  DZ: /^(DZ\\d{24})$/,\n  EE: /^(EE[0-9]{2})\\d{16}$/,\n  EG: /^(EG[0-9]{2})\\d{25}$/,\n  ES: /^(ES[0-9]{2})\\d{20}$/,\n  FI: /^(FI[0-9]{2})\\d{14}$/,\n  FO: /^(FO[0-9]{2})\\d{14}$/,\n  FR: /^(FR[0-9]{2})\\d{10}[A-Z0-9]{11}\\d{2}$/,\n  GB: /^(GB[0-9]{2})[A-Z]{4}\\d{14}$/,\n  GE: /^(GE[0-9]{2})[A-Z0-9]{2}\\d{16}$/,\n  GI: /^(GI[0-9]{2})[A-Z]{4}[A-Z0-9]{15}$/,\n  GL: /^(GL[0-9]{2})\\d{14}$/,\n  GR: /^(GR[0-9]{2})\\d{7}[A-Z0-9]{16}$/,\n  GT: /^(GT[0-9]{2})[A-Z0-9]{4}[A-Z0-9]{20}$/,\n  HR: /^(HR[0-9]{2})\\d{17}$/,\n  HU: /^(HU[0-9]{2})\\d{24}$/,\n  IE: /^(IE[0-9]{2})[A-Z0-9]{4}\\d{14}$/,\n  IL: /^(IL[0-9]{2})\\d{19}$/,\n  IQ: /^(IQ[0-9]{2})[A-Z]{4}\\d{15}$/,\n  IR: /^(IR[0-9]{2})0\\d{2}0\\d{18}$/,\n  IS: /^(IS[0-9]{2})\\d{22}$/,\n  IT: /^(IT[0-9]{2})[A-Z]{1}\\d{10}[A-Z0-9]{12}$/,\n  JO: /^(JO[0-9]{2})[A-Z]{4}\\d{22}$/,\n  KW: /^(KW[0-9]{2})[A-Z]{4}[A-Z0-9]{22}$/,\n  KZ: /^(KZ[0-9]{2})\\d{3}[A-Z0-9]{13}$/,\n  LB: /^(LB[0-9]{2})\\d{4}[A-Z0-9]{20}$/,\n  LC: /^(LC[0-9]{2})[A-Z]{4}[A-Z0-9]{24}$/,\n  LI: /^(LI[0-9]{2})\\d{5}[A-Z0-9]{12}$/,\n  LT: /^(LT[0-9]{2})\\d{16}$/,\n  LU: /^(LU[0-9]{2})\\d{3}[A-Z0-9]{13}$/,\n  LV: /^(LV[0-9]{2})[A-Z]{4}[A-Z0-9]{13}$/,\n  MA: /^(MA[0-9]{26})$/,\n  MC: /^(MC[0-9]{2})\\d{10}[A-Z0-9]{11}\\d{2}$/,\n  MD: /^(MD[0-9]{2})[A-Z0-9]{20}$/,\n  ME: /^(ME[0-9]{2})\\d{18}$/,\n  MK: /^(MK[0-9]{2})\\d{3}[A-Z0-9]{10}\\d{2}$/,\n  MR: /^(MR[0-9]{2})\\d{23}$/,\n  MT: /^(MT[0-9]{2})[A-Z]{4}\\d{5}[A-Z0-9]{18}$/,\n  MU: /^(MU[0-9]{2})[A-Z]{4}\\d{19}[A-Z]{3}$/,\n  MZ: /^(MZ[0-9]{2})\\d{21}$/,\n  NL: /^(NL[0-9]{2})[A-Z]{4}\\d{10}$/,\n  NO: /^(NO[0-9]{2})\\d{11}$/,\n  PK: /^(PK[0-9]{2})[A-Z0-9]{4}\\d{16}$/,\n  PL: /^(PL[0-9]{2})\\d{24}$/,\n  PS: /^(PS[0-9]{2})[A-Z0-9]{4}\\d{21}$/,\n  PT: /^(PT[0-9]{2})\\d{21}$/,\n  QA: /^(QA[0-9]{2})[A-Z]{4}[A-Z0-9]{21}$/,\n  RO: /^(RO[0-9]{2})[A-Z]{4}[A-Z0-9]{16}$/,\n  RS: /^(RS[0-9]{2})\\d{18}$/,\n  SA: /^(SA[0-9]{2})\\d{2}[A-Z0-9]{18}$/,\n  SC: /^(SC[0-9]{2})[A-Z]{4}\\d{20}[A-Z]{3}$/,\n  SE: /^(SE[0-9]{2})\\d{20}$/,\n  SI: /^(SI[0-9]{2})\\d{15}$/,\n  SK: /^(SK[0-9]{2})\\d{20}$/,\n  SM: /^(SM[0-9]{2})[A-Z]{1}\\d{10}[A-Z0-9]{12}$/,\n  SV: /^(SV[0-9]{2})[A-Z0-9]{4}\\d{20}$/,\n  TL: /^(TL[0-9]{2})\\d{19}$/,\n  TN: /^(TN[0-9]{2})\\d{20}$/,\n  TR: /^(TR[0-9]{2})\\d{5}[A-Z0-9]{17}$/,\n  UA: /^(UA[0-9]{2})\\d{6}[A-Z0-9]{19}$/,\n  VA: /^(VA[0-9]{2})\\d{18}$/,\n  VG: /^(VG[0-9]{2})[A-Z0-9]{4}\\d{16}$/,\n  XK: /^(XK[0-9]{2})\\d{16}$/\n};\n\n/**\n * Check if the country codes passed are valid using the\n * ibanRegexThroughCountryCode as a reference\n *\n * @param {array} countryCodeArray\n * @return {boolean}\n */\n\nfunction hasOnlyValidCountryCodes(countryCodeArray) {\n  var countryCodeArrayFilteredWithObjectIbanCode = countryCodeArray.filter(function (countryCode) {\n    return !(countryCode in ibanRegexThroughCountryCode);\n  });\n  if (countryCodeArrayFilteredWithObjectIbanCode.length > 0) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Check whether string has correct universal IBAN format\n * The IBAN consists of up to 34 alphanumeric characters, as follows:\n * Country Code using ISO 3166-1 alpha-2, two letters\n * check digits, two digits and\n * Basic Bank Account Number (BBAN), up to 30 alphanumeric characters.\n * NOTE: Permitted IBAN characters are: digits [0-9] and the 26 latin alphabetic [A-Z]\n *\n * @param {string} str - string under validation\n * @param {object} options - object to pass the countries to be either whitelisted or blacklisted\n * @return {boolean}\n */\nfunction hasValidIbanFormat(str, options) {\n  // Strip white spaces and hyphens\n  var strippedStr = str.replace(/[\\s\\-]+/gi, '').toUpperCase();\n  var isoCountryCode = strippedStr.slice(0, 2).toUpperCase();\n  var isoCountryCodeInIbanRegexCodeObject = (isoCountryCode in ibanRegexThroughCountryCode);\n  if (options.whitelist) {\n    if (!hasOnlyValidCountryCodes(options.whitelist)) {\n      return false;\n    }\n    var isoCountryCodeInWhiteList = options.whitelist.includes(isoCountryCode);\n    if (!isoCountryCodeInWhiteList) {\n      return false;\n    }\n  }\n  if (options.blacklist) {\n    var isoCountryCodeInBlackList = options.blacklist.includes(isoCountryCode);\n    if (isoCountryCodeInBlackList) {\n      return false;\n    }\n  }\n  return isoCountryCodeInIbanRegexCodeObject && ibanRegexThroughCountryCode[isoCountryCode].test(strippedStr);\n}\n\n/**\n   * Check whether string has valid IBAN Checksum\n   * by performing basic mod-97 operation and\n   * the remainder should equal 1\n   * -- Start by rearranging the IBAN by moving the four initial characters to the end of the string\n   * -- Replace each letter in the string with two digits, A -> 10, B = 11, Z = 35\n   * -- Interpret the string as a decimal integer and\n   * -- compute the remainder on division by 97 (mod 97)\n   * Reference: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n   *\n   * @param {string} str\n   * @return {boolean}\n   */\nfunction hasValidIbanChecksum(str) {\n  var strippedStr = str.replace(/[^A-Z0-9]+/gi, '').toUpperCase(); // Keep only digits and A-Z latin alphabetic\n  var rearranged = strippedStr.slice(4) + strippedStr.slice(0, 4);\n  var alphaCapsReplacedWithDigits = rearranged.replace(/[A-Z]/g, function (char) {\n    return char.charCodeAt(0) - 55;\n  });\n  var remainder = alphaCapsReplacedWithDigits.match(/\\d{1,7}/g).reduce(function (acc, value) {\n    return Number(acc + value) % 97;\n  }, '');\n  return remainder === 1;\n}\nfunction isIBAN(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  (0, _assertString.default)(str);\n  return hasValidIbanFormat(str, options) && hasValidIbanChecksum(str);\n}\nvar locales = exports.locales = Object.keys(ibanRegexThroughCountryCode);", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CountryCodes = void 0;\nexports.default = isISO31661Alpha2;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n// from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\nvar validISO31661Alpha2CountriesCodes = new Setnfunction isISO31661Alpha2(str) {\n  (0, _assertString.default)(str);\n  return validISO31661Alpha2CountriesCodes.has(str.toUpperCase());\n}\nvar CountryCodes = exports.CountryCodes = validISO31661Alpha2CountriesCodes;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBIC;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar _isISO31661Alpha = require(\"./isISO31661Alpha2\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n// https://en.wikipedia.org/wiki/ISO_9362\nvar isBICReg = /^[A-Za-z]{6}[A-Za-z0-9]{2}([A-Za-z0-9]{3})?$/;\nfunction isBIC(str) {\n  (0, _assertString.default)(str);\n\n  // toUpperCase() should be removed when a new major version goes out that changes\n  // the regex to [A-Z] (per the spec).\n  var countryCode = str.slice(4, 6).toUpperCase();\n  if (!_isISO31661Alpha.CountryCodes.has(countryCode) && countryCode !== 'XK') {\n    return false;\n  }\n  return isBICReg.test(str);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMD5;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar md5 = /^[a-f0-9]{32}$/;\nfunction isMD5(str) {\n  (0, _assertString.default)(str);\n  return md5.test(str);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isHash;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar lengths = {\n  md5: 32,\n  md4: 32,\n  sha1: 40,\n  sha256: 64,\n  sha384: 96,\n  sha512: 128,\n  ripemd128: 32,\n  ripemd160: 40,\n  tiger128: 32,\n  tiger160: 40,\n  tiger192: 48,\n  crc32: 8,\n  crc32b: 8\n};\nfunction isHash(str, algorithm) {\n  (0, _assertString.default)(str);\n  var hash = new RegExp(\"^[a-fA-F0-9]{\".concat(lengths[algorithm], \"}$\"));\n  return hash.test(str);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBase64;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar notBase64 = /[^A-Z0-9+\\/=]/i;\nvar urlSafeBase64 = /^[A-Z0-9_\\-]*$/i;\nvar defaultBase64Options = {\n  urlSafe: false\n};\nfunction isBase64(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, defaultBase64Options);\n  var len = str.length;\n  if (options.urlSafe) {\n    return urlSafeBase64.test(str);\n  }\n  if (len % 4 !== 0 || notBase64.test(str)) {\n    return false;\n  }\n  var firstPaddingChar = str.indexOf('=');\n  return firstPaddingChar === -1 || firstPaddingChar === len - 1 || firstPaddingChar === len - 2 && str[len - 1] === '=';\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isJWT;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar _isBase = _interopRequireDefault(require(\"./isBase64\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction isJWT(str) {\n  (0, _assertString.default)(str);\n  var dotSplit = str.split('.');\n  var len = dotSplit.length;\n  if (len !== 3) {\n    return false;\n  }\n  return dotSplit.reduce(function (acc, currElem) {\n    return acc && (0, _isBase.default)(currElem, {\n      urlSafe: true\n    });\n  }, true);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isJSON;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar default_json_options = {\n  allow_primitives: false\n};\nfunction isJSON(str, options) {\n  (0, _assertString.default)(str);\n  try {\n    options = (0, _merge.default)(options, default_json_options);\n    var primitives = [];\n    if (options.allow_primitives) {\n      primitives = [null, false, true];\n    }\n    var obj = JSON.parse(str);\n    return primitives.includes(obj) || !!obj && _typeof(obj) === 'object';\n  } catch (e) {/* ignore */}\n  return false;\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEmpty;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar default_is_empty_options = {\n  ignore_whitespace: false\n};\nfunction isEmpty(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_is_empty_options);\n  return (options.ignore_whitespace ? str.trim().length : str.length) === 0;\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isLength;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n/* eslint-disable prefer-rest-params */\nfunction isLength(str, options) {\n  (0, _assertString.default)(str);\n  var min;\n  var max;\n  if (_typeof(options) === 'object') {\n    min = options.min || 0;\n    max = options.max;\n  } else {\n    // backwards compatibility: isLength(str, min [, max])\n    min = arguments[1] || 0;\n    max = arguments[2];\n  }\n  var presentationSequences = str.match(/(\\uFE0F|\\uFE0E)/g) || [];\n  var surrogatePairs = str.match(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g) || [];\n  var len = str.length - presentationSequences.length - surrogatePairs.length;\n  return len >= min && (typeof max === 'undefined' || len <= max);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isUUID;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar uuid = {\n  1: /^[0-9A-F]{8}-[0-9A-F]{4}-1[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n  2: /^[0-9A-F]{8}-[0-9A-F]{4}-2[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n  3: /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n  4: /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n  5: /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n  7: /^[0-9A-F]{8}-[0-9A-F]{4}-7[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n  all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i\n};\nfunction isUUID(str, version) {\n  (0, _assertString.default)(str);\n  var pattern = uuid[![undefined, null].includes(version) ? version : 'all'];\n  return !!pattern && pattern.test(str);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMongoId;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar _isHexadecimal = _interopRequireDefault(require(\"./isHexadecimal\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction isMongoId(str) {\n  (0, _assertString.default)(str);\n  return (0, _isHexadecimal.default)(str) && str.length === 24;\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isAfter;\nvar _toDate = _interopRequireDefault(require(\"./toDate\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction isAfter(date, options) {\n  // For backwards compatibility:\n  // isAfter(str [, date]), i.e. `options` could be used as argument for the legacy `date`\n  var comparisonDate = (options === null || options === void 0 ? void 0 : options.comparisonDate) || options || Date().toString();\n  var comparison = (0, _toDate.default)(comparisonDate);\n  var original = (0, _toDate.default)(date);\n  return !!(original && comparison && original > comparison);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBefore;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar _toDate = _interopRequireDefault(require(\"./toDate\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction isBefore(str) {\n  var date = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : String(new Date());\n  (0, _assertString.default)(str);\n  var comparison = (0, _toDate.default)(date);\n  var original = (0, _toDate.default)(str);\n  return !!(original && comparison && original < comparison);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIn;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar _toString = _interopRequireDefault(require(\"./util/toString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction isIn(str, options) {\n  (0, _assertString.default)(str);\n  var i;\n  if (Object.prototype.toString.call(options) === '[object Array]') {\n    var array = [];\n    for (i in options) {\n      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n      // istanbul ignore else\n      if ({}.hasOwnProperty.call(options, i)) {\n        array[i] = (0, _toString.default)(options[i]);\n      }\n    }\n    return array.indexOf(str) >= 0;\n  } else if (_typeof(options) === 'object') {\n    return options.hasOwnProperty(str);\n  } else if (options && typeof options.indexOf === 'function') {\n    return options.indexOf(str) >= 0;\n  }\n  return false;\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isLuhnNumber;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction isLuhnNumber(str) {\n  (0, _assertString.default)(str);\n  var sanitized = str.replace(/[- ]+/g, '');\n  var sum = 0;\n  var digit;\n  var tmpNum;\n  var shouldDouble;\n  for (var i = sanitized.length - 1; i >= 0; i--) {\n    digit = sanitized.substring(i, i + 1);\n    tmpNum = parseInt(digit, 10);\n    if (shouldDouble) {\n      tmpNum *= 2;\n      if (tmpNum >= 10) {\n        sum += tmpNum % 10 + 1;\n      } else {\n        sum += tmpNum;\n      }\n    } else {\n      sum += tmpNum;\n    }\n    shouldDouble = !shouldDouble;\n  }\n  return !!(sum % 10 === 0 ? sanitized : false);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isCreditCard;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar _isLuhnNumber = _interopRequireDefault(require(\"./isLuhnNumber\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar cards = {\n  amex: /^3[47][0-9]{13}$/,\n  dinersclub: /^3(?:0[0-5]|[68][0-9])[0-9]{11}$/,\n  discover: /^6(?:011|5[0-9][0-9])[0-9]{12,15}$/,\n  jcb: /^(?:2131|1800|35\\d{3})\\d{11}$/,\n  mastercard: /^5[1-5][0-9]{2}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$/,\n  // /^[25][1-7][0-9]{14}$/;\n  unionpay: /^(6[27][0-9]{14}|^(81[0-9]{14,17}))$/,\n  visa: /^(?:4[0-9]{12})(?:[0-9]{3,6})?$/\n};\nvar allCards = function () {\n  var tmpCardsArray = [];\n  for (var cardProvider in cards) {\n    // istanbul ignore else\n    if (cards.hasOwnProperty(cardProvider)) {\n      tmpCardsArray.push(cards[cardProvider]);\n    }\n  }\n  return tmpCardsArray;\n}();\nfunction isCreditCard(card) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  (0, _assertString.default)(card);\n  var provider = options.provider;\n  var sanitized = card.replace(/[- ]+/g, '');\n  if (provider && provider.toLowerCase() in cards) {\n    // specific provider in the list\n    if (!cards[provider.toLowerCase()].test(sanitized)) {\n      return false;\n    }\n  } else if (provider && !(provider.toLowerCase() in cards)) {\n    /* specific provider not in the list */\n    throw new Error(\"\".concat(provider, \" is not a valid credit card provider.\"));\n  } else if (!allCards.some(function (cardProvider) {\n    return cardProvider.test(sanitized);\n  })) {\n    // no specific provider\n    return false;\n  }\n  return (0, _isLuhnNumber.default)(card);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIdentityCard;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar _isInt = _interopRequireDefault(require(\"./isInt\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar validators = {\n  PL: function PL(str) {\n    (0, _assertString.default)(str);\n    var weightOfDigits = {\n      1: 1,\n      2: 3,\n      3: 7,\n      4: 9,\n      5: 1,\n      6: 3,\n      7: 7,\n      8: 9,\n      9: 1,\n      10: 3,\n      11: 0\n    };\n    if (str != null && str.length === 11 && (0, _isInt.default)(str, {\n      allow_leading_zeroes: true\n    })) {\n      var digits = str.split('').slice(0, -1);\n      var sum = digits.reduce(function (acc, digit, index) {\n        return acc + Number(digit) * weightOfDigits[index + 1];\n      }, 0);\n      var modulo = sum % 10;\n      var lastDigit = Number(str.charAt(str.length - 1));\n      if (modulo === 0 && lastDigit === 0 || lastDigit === 10 - modulo) {\n        return true;\n      }\n    }\n    return false;\n  },\n  ES: function ES(str) {\n    (0, _assertString.default)(str);\n    var DNI = /^[0-9X-Z][0-9]{7}[TRWAGMYFPDXBNJZSQVHLCKE]$/;\n    var charsValue = {\n      X: 0,\n      Y: 1,\n      Z: 2\n    };\n    var controlDigits = ['T', 'R', 'W', 'A', 'G', 'M', 'Y', 'F', 'P', 'D', 'X', 'B', 'N', 'J', 'Z', 'S', 'Q', 'V', 'H', 'L', 'C', 'K', 'E'];\n\n    // sanitize user input\n    var sanitized = str.trim().toUpperCase();\n\n    // validate the data structure\n    if (!DNI.test(sanitized)) {\n      return false;\n    }\n\n    // validate the control digit\n    var number = sanitized.slice(0, -1).replace(/[X,Y,Z]/g, function (char) {\n      return charsValue[char];\n    });\n    return sanitized.endsWith(controlDigits[number % 23]);\n  },\n  FI: function FI(str) {\n    // https://dvv.fi/en/personal-identity-code#:~:text=control%20character%20for%20a-,personal,-identity%20code%20calculated\n    (0, _assertString.default)(str);\n    if (str.length !== 11) {\n      return false;\n    }\n    if (!str.match(/^\\d{6}[\\-A\\+]\\d{3}[0-9ABCDEFHJKLMNPRSTUVWXY]{1}$/)) {\n      return false;\n    }\n    var checkDigits = '0123456789ABCDEFHJKLMNPRSTUVWXY';\n    var idAsNumber = parseInt(str.slice(0, 6), 10) * 1000 + parseInt(str.slice(7, 10), 10);\n    var remainder = idAsNumber % 31;\n    var checkDigit = checkDigits[remainder];\n    return checkDigit === str.slice(10, 11);\n  },\n  IN: function IN(str) {\n    var DNI = /^[1-9]\\d{3}\\s?\\d{4}\\s?\\d{4}$/;\n\n    // multiplication table\n    var d = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 2, 3, 4, 0, 6, 7, 8, 9, 5], [2, 3, 4, 0, 1, 7, 8, 9, 5, 6], [3, 4, 0, 1, 2, 8, 9, 5, 6, 7], [4, 0, 1, 2, 3, 9, 5, 6, 7, 8], [5, 9, 8, 7, 6, 0, 4, 3, 2, 1], [6, 5, 9, 8, 7, 1, 0, 4, 3, 2], [7, 6, 5, 9, 8, 2, 1, 0, 4, 3], [8, 7, 6, 5, 9, 3, 2, 1, 0, 4], [9, 8, 7, 6, 5, 4, 3, 2, 1, 0]];\n\n    // permutation table\n    var p = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 5, 7, 6, 2, 8, 3, 0, 9, 4], [5, 8, 0, 3, 7, 9, 6, 1, 4, 2], [8, 9, 1, 6, 0, 4, 3, 5, 2, 7], [9, 4, 5, 3, 1, 2, 6, 8, 7, 0], [4, 2, 8, 6, 5, 7, 3, 9, 0, 1], [2, 7, 9, 3, 8, 0, 6, 4, 1, 5], [7, 0, 4, 6, 9, 1, 3, 2, 5, 8]];\n\n    // sanitize user input\n    var sanitized = str.trim();\n\n    // validate the data structure\n    if (!DNI.test(sanitized)) {\n      return false;\n    }\n    var c = 0;\n    var invertedArray = sanitized.replace(/\\s/g, '').split('').map(Number).reverse();\n    invertedArray.forEach(function (val, i) {\n      c = d[c][p[i % 8][val]];\n    });\n    return c === 0;\n  },\n  IR: function IR(str) {\n    if (!str.match(/^\\d{10}$/)) return false;\n    str = \"0000\".concat(str).slice(str.length - 6);\n    if (parseInt(str.slice(3, 9), 10) === 0) return false;\n    var lastNumber = parseInt(str.slice(9, 10), 10);\n    var sum = 0;\n    for (var i = 0; i < 9; i++) {\n      sum += parseInt(str.slice(i, i + 1), 10) * (10 - i);\n    }\n    sum %= 11;\n    return sum < 2 && lastNumber === sum || sum >= 2 && lastNumber === 11 - sum;\n  },\n  IT: function IT(str) {\n    if (str.length !== 9) return false;\n    if (str === 'CA00000AA') return false; // https://it.wikipedia.org/wiki/Carta_d%27identit%C3%A0_elettronica_italiana\n    return str.search(/C[A-Z]\\d{5}[A-Z]{2}/i) > -1;\n  },\n  NO: function NO(str) {\n    var sanitized = str.trim();\n    if (isNaN(Number(sanitized))) return false;\n    if (sanitized.length !== 11) return false;\n    if (sanitized === '00000000000') return false;\n\n    // https://no.wikipedia.org/wiki/F%C3%B8dselsnummer\n    var f = sanitized.split('').map(Number);\n    var k1 = (11 - (3 * f[0] + 7 * f[1] + 6 * f[2] + 1 * f[3] + 8 * f[4] + 9 * f[5] + 4 * f[6] + 5 * f[7] + 2 * f[8]) % 11) % 11;\n    var k2 = (11 - (5 * f[0] + 4 * f[1] + 3 * f[2] + 2 * f[3] + 7 * f[4] + 6 * f[5] + 5 * f[6] + 4 * f[7] + 3 * f[8] + 2 * k1) % 11) % 11;\n    if (k1 !== f[9] || k2 !== f[10]) return false;\n    return true;\n  },\n  TH: function TH(str) {\n    if (!str.match(/^[1-8]\\d{12}$/)) return false;\n\n    // validate check digit\n    var sum = 0;\n    for (var i = 0; i < 12; i++) {\n      sum += parseInt(str[i], 10) * (13 - i);\n    }\n    return str[12] === ((11 - sum % 11) % 10).toString();\n  },\n  LK: function LK(str) {\n    var old_nic = /^[1-9]\\d{8}[vx]$/i;\n    var new_nic = /^[1-9]\\d{11}$/i;\n    if (str.length === 10 && old_nic.test(str)) return true;else if (str.length === 12 && new_nic.test(str)) return true;\n    return false;\n  },\n  'he-IL': function heIL(str) {\n    var DNI = /^\\d{9}$/;\n\n    // sanitize user input\n    var sanitized = str.trim();\n\n    // validate the data structure\n    if (!DNI.test(sanitized)) {\n      return false;\n    }\n    var id = sanitized;\n    var sum = 0,\n      incNum;\n    for (var i = 0; i < id.length; i++) {\n      incNum = Number(id[i]) * (i % 2 + 1); // Multiply number by 1 or 2\n      sum += incNum > 9 ? incNum - 9 : incNum; // Sum the digits up and add to total\n    }\n    return sum % 10 === 0;\n  },\n  'ar-LY': function arLY(str) {\n    // Libya National Identity Number NIN is 12 digits, the first digit is either 1 or 2\n    var NIN = /^(1|2)\\d{11}$/;\n\n    // sanitize user input\n    var sanitized = str.trim();\n\n    // validate the data structure\n    if (!NIN.test(sanitized)) {\n      return false;\n    }\n    return true;\n  },\n  'ar-TN': function arTN(str) {\n    var DNI = /^\\d{8}$/;\n\n    // sanitize user input\n    var sanitized = str.trim();\n\n    // validate the data structure\n    if (!DNI.test(sanitized)) {\n      return false;\n    }\n    return true;\n  },\n  'zh-CN': function zhCN(str) {\n    var provincesAndCities = ['11',\n    // 北京\n    '12',\n    // 天津\n    '13',\n    // 河北\n    '14',\n    // 山西\n    '15',\n    // 内蒙古\n    '21',\n    // 辽宁\n    '22',\n    // 吉林\n    '23',\n    // 黑龙江\n    '31',\n    // 上海\n    '32',\n    // 江苏\n    '33',\n    // 浙江\n    '34',\n    // 安徽\n    '35',\n    // 福建\n    '36',\n    // 江西\n    '37',\n    // 山东\n    '41',\n    // 河南\n    '42',\n    // 湖北\n    '43',\n    // 湖南\n    '44',\n    // 广东\n    '45',\n    // 广西\n    '46',\n    // 海南\n    '50',\n    // 重庆\n    '51',\n    // 四川\n    '52',\n    // 贵州\n    '53',\n    // 云南\n    '54',\n    // 西藏\n    '61',\n    // 陕西\n    '62',\n    // 甘肃\n    '63',\n    // 青海\n    '64',\n    // 宁夏\n    '65',\n    // 新疆\n    '71',\n    // 台湾\n    '81',\n    // 香港\n    '82',\n    // 澳门\n    '91' // 国外\n    ];\n    var powers = ['7', '9', '10', '5', '8', '4', '2', '1', '6', '3', '7', '9', '10', '5', '8', '4', '2'];\n    var parityBit = ['1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2'];\n    var checkAddressCode = function checkAddressCode(addressCode) {\n      return provincesAndCities.includes(addressCode);\n    };\n    var checkBirthDayCode = function checkBirthDayCode(birDayCode) {\n      var yyyy = parseInt(birDayCode.substring(0, 4), 10);\n      var mm = parseInt(birDayCode.substring(4, 6), 10);\n      var dd = parseInt(birDayCode.substring(6), 10);\n      var xdata = new Date(yyyy, mm - 1, dd);\n      if (xdata > new Date()) {\n        return false;\n        // eslint-disable-next-line max-len\n      } else if (xdata.getFullYear() === yyyy && xdata.getMonth() === mm - 1 && xdata.getDate() === dd) {\n        return true;\n      }\n      return false;\n    };\n    var getParityBit = function getParityBit(idCardNo) {\n      var id17 = idCardNo.substring(0, 17);\n      var power = 0;\n      for (var i = 0; i < 17; i++) {\n        power += parseInt(id17.charAt(i), 10) * parseInt(powers[i], 10);\n      }\n      var mod = power % 11;\n      return parityBit[mod];\n    };\n    var checkParityBit = function checkParityBit(idCardNo) {\n      return getParityBit(idCardNo) === idCardNo.charAt(17).toUpperCase();\n    };\n    var check15IdCardNo = function check15IdCardNo(idCardNo) {\n      var check = /^[1-9]\\d{7}((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))\\d{3}$/.test(idCardNo);\n      if (!check) return false;\n      var addressCode = idCardNo.substring(0, 2);\n      check = checkAddressCode(addressCode);\n      if (!check) return false;\n      var birDayCode = \"19\".concat(idCardNo.substring(6, 12));\n      check = checkBirthDayCode(birDayCode);\n      if (!check) return false;\n      return true;\n    };\n    var check18IdCardNo = function check18IdCardNo(idCardNo) {\n      var check = /^[1-9]\\d{5}[1-9]\\d{3}((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))\\d{3}(\\d|x|X)$/.test(idCardNo);\n      if (!check) return false;\n      var addressCode = idCardNo.substring(0, 2);\n      check = checkAddressCode(addressCode);\n      if (!check) return false;\n      var birDayCode = idCardNo.substring(6, 14);\n      check = checkBirthDayCode(birDayCode);\n      if (!check) return false;\n      return checkParityBit(idCardNo);\n    };\n    var checkIdCardNo = function checkIdCardNo(idCardNo) {\n      var check = /^\\d{15}|(\\d{17}(\\d|x|X))$/.test(idCardNo);\n      if (!check) return false;\n      if (idCardNo.length === 15) {\n        return check15IdCardNo(idCardNo);\n      }\n      return check18IdCardNo(idCardNo);\n    };\n    return checkIdCardNo(str);\n  },\n  'zh-HK': function zhHK(str) {\n    // sanitize user input\n    str = str.trim();\n\n    // HKID number starts with 1 or 2 letters, followed by 6 digits,\n    // then a checksum contained in square / round brackets or nothing\n    var regexHKID = /^[A-Z]{1,2}[0-9]{6}((\\([0-9A]\\))|(\\[[0-9A]\\])|([0-9A]))$/;\n    var regexIsDigit = /^[0-9]$/;\n\n    // convert the user input to all uppercase and apply regex\n    str = str.toUpperCase();\n    if (!regexHKID.test(str)) return false;\n    str = str.replace(/\\[|\\]|\\(|\\)/g, '');\n    if (str.length === 8) str = \"3\".concat(str);\n    var checkSumVal = 0;\n    for (var i = 0; i <= 7; i++) {\n      var convertedChar = void 0;\n      if (!regexIsDigit.test(str[i])) convertedChar = (str[i].charCodeAt(0) - 55) % 11;else convertedChar = str[i];\n      checkSumVal += convertedChar * (9 - i);\n    }\n    checkSumVal %= 11;\n    var checkSumConverted;\n    if (checkSumVal === 0) checkSumConverted = '0';else if (checkSumVal === 1) checkSumConverted = 'A';else checkSumConverted = String(11 - checkSumVal);\n    if (checkSumConverted === str[str.length - 1]) return true;\n    return false;\n  },\n  'zh-TW': function zhTW(str) {\n    var ALPHABET_CODES = {\n      A: 10,\n      B: 11,\n      C: 12,\n      D: 13,\n      E: 14,\n      F: 15,\n      G: 16,\n      H: 17,\n      I: 34,\n      J: 18,\n      K: 19,\n      L: 20,\n      M: 21,\n      N: 22,\n      O: 35,\n      P: 23,\n      Q: 24,\n      R: 25,\n      S: 26,\n      T: 27,\n      U: 28,\n      V: 29,\n      W: 32,\n      X: 30,\n      Y: 31,\n      Z: 33\n    };\n    var sanitized = str.trim().toUpperCase();\n    if (!/^[A-Z][0-9]{9}$/.test(sanitized)) return false;\n    return Array.from(sanitized).reduce(function (sum, number, index) {\n      if (index === 0) {\n        var code = ALPHABET_CODES[number];\n        return code % 10 * 9 + Math.floor(code / 10);\n      }\n      if (index === 9) {\n        return (10 - sum % 10 - Number(number)) % 10 === 0;\n      }\n      return sum + Number(number) * (9 - index);\n    }, 0);\n  }\n};\nfunction isIdentityCard(str, locale) {\n  (0, _assertString.default)(str);\n  if (locale in validators) {\n    return validators[locale](str);\n  } else if (locale === 'any') {\n    for (var key in validators) {\n      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n      // istanbul ignore else\n      if (validators.hasOwnProperty(key)) {\n        var validator = validators[key];\n        if (validator(str)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEAN;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * The most commonly used EAN standard is\n * the thirteen-digit EAN-13, while the\n * less commonly used 8-digit EAN-8 barcode was\n * introduced for use on small packages.\n * Also EAN/UCC-14 is used for Grouping of individual\n * trade items above unit level(Intermediate, Carton or Pallet).\n * For more info about EAN-14 checkout: https://www.gtin.info/itf-14-barcodes/\n * EAN consists of:\n * GS1 prefix, manufacturer code, product code and check digit\n * Reference: https://en.wikipedia.org/wiki/International_Article_Number\n * Reference: https://www.gtin.info/\n */\n\n/**\n * Define EAN Lenghts; 8 for EAN-8; 13 for EAN-13; 14 for EAN-14\n * and Regular Expression for valid EANs (EAN-8, EAN-13, EAN-14),\n * with exact numberic matching of 8 or 13 or 14 digits [0-9]\n */\nvar LENGTH_EAN_8 = 8;\nvar LENGTH_EAN_14 = 14;\nvar validEanRegex = /^(\\d{8}|\\d{13}|\\d{14})$/;\n\n/**\n * Get position weight given:\n * EAN length and digit index/position\n *\n * @param {number} length\n * @param {number} index\n * @return {number}\n */\nfunction getPositionWeightThroughLengthAndIndex(length, index) {\n  if (length === LENGTH_EAN_8 || length === LENGTH_EAN_14) {\n    return index % 2 === 0 ? 3 : 1;\n  }\n  return index % 2 === 0 ? 1 : 3;\n}\n\n/**\n * Calculate EAN Check Digit\n * Reference: https://en.wikipedia.org/wiki/International_Article_Number#Calculation_of_checksum_digit\n *\n * @param {string} ean\n * @return {number}\n */\nfunction calculateCheckDigit(ean) {\n  var checksum = ean.slice(0, -1).split('').map(function (char, index) {\n    return Number(char) * getPositionWeightThroughLengthAndIndex(ean.length, index);\n  }).reduce(function (acc, partialSum) {\n    return acc + partialSum;\n  }, 0);\n  var remainder = 10 - checksum % 10;\n  return remainder < 10 ? remainder : 0;\n}\n\n/**\n * Check if string is valid EAN:\n * Matches EAN-8/EAN-13/EAN-14 regex\n * Has valid check digit.\n *\n * @param {string} str\n * @return {boolean}\n */\nfunction isEAN(str) {\n  (0, _assertString.default)(str);\n  var actualCheckDigit = Number(str.slice(-1));\n  return validEanRegex.test(str) && actualCheckDigit === calculateCheckDigit(str);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISIN;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar isin = /^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;\n\n// this link details how the check digit is calculated:\n// https://www.isin.org/isin-format/. it is a little bit\n// odd in that it works with digits, not numbers. in order\n// to make only one pass through the ISIN characters, the\n// each alpha character is handled as 2 characters within\n// the loop.\n\nfunction isISIN(str) {\n  (0, _assertString.default)(str);\n  if (!isin.test(str)) {\n    return false;\n  }\n  var double = true;\n  var sum = 0;\n  // convert values\n  for (var i = str.length - 2; i >= 0; i--) {\n    if (str[i] >= 'A' && str[i] <= 'Z') {\n      var value = str[i].charCodeAt(0) - 55;\n      var lo = value % 10;\n      var hi = Math.trunc(value / 10);\n      // letters have two digits, so handle the low order\n      // and high order digits separately.\n      for (var _i = 0, _arr = [lo, hi]; _i < _arr.length; _i++) {\n        var digit = _arr[_i];\n        if (double) {\n          if (digit >= 5) {\n            sum += 1 + (digit - 5) * 2;\n          } else {\n            sum += digit * 2;\n          }\n        } else {\n          sum += digit;\n        }\n        double = !double;\n      }\n    } else {\n      var _digit = str[i].charCodeAt(0) - '0'.charCodeAt(0);\n      if (double) {\n        if (_digit >= 5) {\n          sum += 1 + (_digit - 5) * 2;\n        } else {\n          sum += _digit * 2;\n        }\n      } else {\n        sum += _digit;\n      }\n      double = !double;\n    }\n  }\n  var check = Math.trunc((sum + 9) / 10) * 10 - sum;\n  return +str[str.length - 1] === check;\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISBN;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar possibleIsbn10 = /^(?:[0-9]{9}X|[0-9]{10})$/;\nvar possibleIsbn13 = /^(?:[0-9]{13})$/;\nvar factor = [1, 3];\nfunction isISBN(isbn, options) {\n  (0, _assertString.default)(isbn);\n\n  // For backwards compatibility:\n  // isISBN(str [, version]), i.e. `options` could be used as argument for the legacy `version`\n  var version = String((options === null || options === void 0 ? void 0 : options.version) || options);\n  if (!(options !== null && options !== void 0 && options.version || options)) {\n    return isISBN(isbn, {\n      version: 10\n    }) || isISBN(isbn, {\n      version: 13\n    });\n  }\n  var sanitizedIsbn = isbn.replace(/[\\s-]+/g, '');\n  var checksum = 0;\n  if (version === '10') {\n    if (!possibleIsbn10.test(sanitizedIsbn)) {\n      return false;\n    }\n    for (var i = 0; i < version - 1; i++) {\n      checksum += (i + 1) * sanitizedIsbn.charAt(i);\n    }\n    if (sanitizedIsbn.charAt(9) === 'X') {\n      checksum += 10 * 10;\n    } else {\n      checksum += 10 * sanitizedIsbn.charAt(9);\n    }\n    if (checksum % 11 === 0) {\n      return true;\n    }\n  } else if (version === '13') {\n    if (!possibleIsbn13.test(sanitizedIsbn)) {\n      return false;\n    }\n    for (var _i = 0; _i < 12; _i++) {\n      checksum += factor[_i % 2] * sanitizedIsbn.charAt(_i);\n    }\n    if (sanitizedIsbn.charAt(12) - (10 - checksum % 10) % 10 === 0) {\n      return true;\n    }\n  }\n  return false;\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISSN;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar issn = '^\\\\d{4}-?\\\\d{3}[\\\\dX]$';\nfunction isISSN(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  (0, _assertString.default)(str);\n  var testIssn = issn;\n  testIssn = options.require_hyphen ? testIssn.replace('?', '') : testIssn;\n  testIssn = options.case_sensitive ? new RegExp(testIssn) : new RegExp(testIssn, 'i');\n  if (!testIssn.test(str)) {\n    return false;\n  }\n  var digits = str.replace('-', '').toUpperCase();\n  var checksum = 0;\n  for (var i = 0; i < digits.length; i++) {\n    var digit = digits[i];\n    checksum += (digit === 'X' ? 10 : +digit) * (8 - i);\n  }\n  return checksum % 11 === 0;\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.iso7064Check = iso7064Check;\nexports.luhnCheck = luhnCheck;\nexports.reverseMultiplyAndSum = reverseMultiplyAndSum;\nexports.verhoeffCheck = verhoeffCheck;\n/**\n * Algorithmic validation functions\n * May be used as is or implemented in the workflow of other validators.\n */\n\n/*\n * ISO 7064 validation function\n * Called with a string of numbers (incl. check digit)\n * to validate according to ISO 7064 (MOD 11, 10).\n */\nfunction iso7064Check(str) {\n  var checkvalue = 10;\n  for (var i = 0; i < str.length - 1; i++) {\n    checkvalue = (parseInt(str[i], 10) + checkvalue) % 10 === 0 ? 10 * 2 % 11 : (parseInt(str[i], 10) + checkvalue) % 10 * 2 % 11;\n  }\n  checkvalue = checkvalue === 1 ? 0 : 11 - checkvalue;\n  return checkvalue === parseInt(str[10], 10);\n}\n\n/*\n * Luhn (mod 10) validation function\n * Called with a string of numbers (incl. check digit)\n * to validate according to the Luhn algorithm.\n */\nfunction luhnCheck(str) {\n  var checksum = 0;\n  var second = false;\n  for (var i = str.length - 1; i >= 0; i--) {\n    if (second) {\n      var product = parseInt(str[i], 10) * 2;\n      if (product > 9) {\n        // sum digits of product and add to checksum\n        checksum += product.toString().split('').map(function (a) {\n          return parseInt(a, 10);\n        }).reduce(function (a, b) {\n          return a + b;\n        }, 0);\n      } else {\n        checksum += product;\n      }\n    } else {\n      checksum += parseInt(str[i], 10);\n    }\n    second = !second;\n  }\n  return checksum % 10 === 0;\n}\n\n/*\n * Reverse TIN multiplication and summation helper function\n * Called with an array of single-digit integers and a base multiplier\n * to calculate the sum of the digits multiplied in reverse.\n * Normally used in variations of MOD 11 algorithmic checks.\n */\nfunction reverseMultiplyAndSum(digits, base) {\n  var total = 0;\n  for (var i = 0; i < digits.length; i++) {\n    total += digits[i] * (base - i);\n  }\n  return total;\n}\n\n/*\n * Verhoeff validation helper function\n * Called with a string of numbers\n * to validate according to the Verhoeff algorithm.\n */\nfunction verhoeffCheck(str) {\n  var d_table = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 2, 3, 4, 0, 6, 7, 8, 9, 5], [2, 3, 4, 0, 1, 7, 8, 9, 5, 6], [3, 4, 0, 1, 2, 8, 9, 5, 6, 7], [4, 0, 1, 2, 3, 9, 5, 6, 7, 8], [5, 9, 8, 7, 6, 0, 4, 3, 2, 1], [6, 5, 9, 8, 7, 1, 0, 4, 3, 2], [7, 6, 5, 9, 8, 2, 1, 0, 4, 3], [8, 7, 6, 5, 9, 3, 2, 1, 0, 4], [9, 8, 7, 6, 5, 4, 3, 2, 1, 0]];\n  var p_table = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 5, 7, 6, 2, 8, 3, 0, 9, 4], [5, 8, 0, 3, 7, 9, 6, 1, 4, 2], [8, 9, 1, 6, 0, 4, 3, 5, 2, 7], [9, 4, 5, 3, 1, 2, 6, 8, 7, 0], [4, 2, 8, 6, 5, 7, 3, 9, 0, 1], [2, 7, 9, 3, 8, 0, 6, 4, 1, 5], [7, 0, 4, 6, 9, 1, 3, 2, 5, 8]];\n\n  // Copy (to prevent replacement) and reverse\n  var str_copy = str.split('').reverse().join('');\n  var checksum = 0;\n  for (var i = 0; i < str_copy.length; i++) {\n    checksum = d_table[checksum][p_table[i % 8][parseInt(str_copy[i], 10)]];\n  }\n  return checksum === 0;\n}", "\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isTaxID;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar algorithms = _interopRequireWildcard(require(\"./util/algorithms\"));\nvar _isDate = _interopRequireDefault(require(\"./isDate\"));\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n/**\n * TIN Validation\n * Validates Tax Identification Numbers (TINs) from the US, EU member states and the United Kingdom.\n *\n * EU-UK:\n * National TIN validity is calculated using public algorithms as made available by DG TAXUD.\n *\n * See `https://ec.europa.eu/taxation_customs/tin/specs/FS-TIN%20Algorithms-Public.docx` for more information.\n *\n * US:\n * An Employer Identification Number (EIN), also known as a Federal Tax Identification Number,\n *  is used to identify a business entity.\n *\n * NOTES:\n *  - Prefix 47 is being reserved for future use\n *  - Prefixes 26, 27, 45, 46 and 47 were previously assigned by the Philadelphia campus.\n *\n * See `http://www.irs.gov/Businesses/Small-Businesses-&-Self-Employed/How-EINs-are-Assigned-and-Valid-EIN-Prefixes`\n * for more information.\n */\n\n// Locale functions\n\n/*\n * bg-BG validation function\n * (Edinen graždanski nomer (EGN/ЕГН), persons only)\n * Checks if birth date (first six digits) is valid and calculates check (last) digit\n */\nfunction bgBgCheck(tin) {\n  // Extract full year, normalize month and check birth date validity\n  var century_year = tin.slice(0, 2);\n  var month = parseInt(tin.slice(2, 4), 10);\n  if (month > 40) {\n    month -= 40;\n    century_year = \"20\".concat(century_year);\n  } else if (month > 20) {\n    month -= 20;\n    century_year = \"18\".concat(century_year);\n  } else {\n    century_year = \"19\".concat(century_year);\n  }\n  if (month < 10) {\n    month = \"0\".concat(month);\n  }\n  var date = \"\".concat(century_year, \"/\").concat(month, \"/\").concat(tin.slice(4, 6));\n  if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n    return false;\n  }\n\n  // split digits into an array for further processing\n  var digits = tin.split('').map(function (a) {\n    return parseInt(a, 10);\n  });\n\n  // Calculate checksum by multiplying digits with fixed values\n  var multip_lookup = [2, 4, 8, 5, 10, 9, 7, 3, 6];\n  var checksum = 0;\n  for (var i = 0; i < multip_lookup.length; i++) {\n    checksum += digits[i] * multip_lookup[i];\n  }\n  checksum = checksum % 11 === 10 ? 0 : checksum % 11;\n  return checksum === digits[9];\n}\n\n/**\n * Check if an input is a valid Canadian SIN (Social Insurance Number)\n *\n * The Social Insurance Number (SIN) is a 9 digit number that\n * you need to work in Canada or to have access to government programs and benefits.\n *\n * https://en.wikipedia.org/wiki/Social_Insurance_Number\n * https://www.canada.ca/en/employment-social-development/services/sin.html\n * https://www.codercrunch.com/challenge/819302488/sin-validator\n *\n * @param {string} input\n * @return {boolean}\n */\nfunction isCanadianSIN(input) {\n  var digitsArray = input.split('');\n  var even = digitsArray.filter(function (_, idx) {\n    return idx % 2;\n  }).map(function (i) {\n    return Number(i) * 2;\n  }).join('').split('');\n  var total = digitsArray.filter(function (_, idx) {\n    return !(idx % 2);\n  }).concat(even).map(function (i) {\n    return Number(i);\n  }).reduce(function (acc, cur) {\n    return acc + cur;\n  });\n  return total % 10 === 0;\n}\n\n/*\n * cs-CZ validation function\n * (Rodné číslo (RČ), persons only)\n * Checks if birth date (first six digits) is valid and divisibility by 11\n * Material not in DG TAXUD document sourced from:\n * -`https://lorenc.info/3MA381/overeni-spravnosti-rodneho-cisla.htm`\n * -`https://www.mvcr.cz/clanek/rady-a-sluzby-dokumenty-rodne-cislo.aspx`\n */\nfunction csCzCheck(tin) {\n  tin = tin.replace(/\\W/, '');\n\n  // Extract full year from TIN length\n  var full_year = parseInt(tin.slice(0, 2), 10);\n  if (tin.length === 10) {\n    if (full_year < 54) {\n      full_year = \"20\".concat(full_year);\n    } else {\n      full_year = \"19\".concat(full_year);\n    }\n  } else {\n    if (tin.slice(6) === '000') {\n      return false;\n    } // Three-zero serial not assigned before 1954\n    if (full_year < 54) {\n      full_year = \"19\".concat(full_year);\n    } else {\n      return false; // No 18XX years seen in any of the resources\n    }\n  }\n  // Add missing zero if needed\n  if (full_year.length === 3) {\n    full_year = [full_year.slice(0, 2), '0', full_year.slice(2)].join('');\n  }\n\n  // Extract month from TIN and normalize\n  var month = parseInt(tin.slice(2, 4), 10);\n  if (month > 50) {\n    month -= 50;\n  }\n  if (month > 20) {\n    // Month-plus-twenty was only introduced in 2004\n    if (parseInt(full_year, 10) < 2004) {\n      return false;\n    }\n    month -= 20;\n  }\n  if (month < 10) {\n    month = \"0\".concat(month);\n  }\n\n  // Check date validity\n  var date = \"\".concat(full_year, \"/\").concat(month, \"/\").concat(tin.slice(4, 6));\n  if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n    return false;\n  }\n\n  // Verify divisibility by 11\n  if (tin.length === 10) {\n    if (parseInt(tin, 10) % 11 !== 0) {\n      // Some numbers up to and including 1985 are still valid if\n      // check (last) digit equals 0 and modulo of first 9 digits equals 10\n      var checkdigit = parseInt(tin.slice(0, 9), 10) % 11;\n      if (parseInt(full_year, 10) < 1986 && checkdigit === 10) {\n        if (parseInt(tin.slice(9), 10) !== 0) {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/*\n * de-AT validation function\n * (Abgabenkontonummer, persons/entities)\n * Verify TIN validity by calling luhnCheck()\n */\nfunction deAtCheck(tin) {\n  return algorithms.luhnCheck(tin);\n}\n\n/*\n * de-DE validation function\n * (Steueridentifikationsnummer (Steuer-IdNr.), persons only)\n * Tests for single duplicate/triplicate value, then calculates ISO 7064 check (last) digit\n * Partial implementation of spec (same result with both algorithms always)\n */\nfunction deDeCheck(tin) {\n  // Split digits into an array for further processing\n  var digits = tin.split('').map(function (a) {\n    return parseInt(a, 10);\n  });\n\n  // Fill array with strings of number positions\n  var occurences = [];\n  for (var i = 0; i < digits.length - 1; i++) {\n    occurences.push('');\n    for (var j = 0; j < digits.length - 1; j++) {\n      if (digits[i] === digits[j]) {\n        occurences[i] += j;\n      }\n    }\n  }\n\n  // Remove digits with one occurence and test for only one duplicate/triplicate\n  occurences = occurences.filter(function (a) {\n    return a.length > 1;\n  });\n  if (occurences.length !== 2 && occurences.length !== 3) {\n    return false;\n  }\n\n  // In case of triplicate value only two digits are allowed next to each other\n  if (occurences[0].length === 3) {\n    var trip_locations = occurences[0].split('').map(function (a) {\n      return parseInt(a, 10);\n    });\n    var recurrent = 0; // Amount of neighbour occurences\n    for (var _i = 0; _i < trip_locations.length - 1; _i++) {\n      if (trip_locations[_i] + 1 === trip_locations[_i + 1]) {\n        recurrent += 1;\n      }\n    }\n    if (recurrent === 2) {\n      return false;\n    }\n  }\n  return algorithms.iso7064Check(tin);\n}\n\n/*\n * dk-DK validation function\n * (CPR-nummer (personnummer), persons only)\n * Checks if birth date (first six digits) is valid and assigned to century (seventh) digit,\n * and calculates check (last) digit\n */\nfunction dkDkCheck(tin) {\n  tin = tin.replace(/\\W/, '');\n\n  // Extract year, check if valid for given century digit and add century\n  var year = parseInt(tin.slice(4, 6), 10);\n  var century_digit = tin.slice(6, 7);\n  switch (century_digit) {\n    case '0':\n    case '1':\n    case '2':\n    case '3':\n      year = \"19\".concat(year);\n      break;\n    case '4':\n    case '9':\n      if (year < 37) {\n        year = \"20\".concat(year);\n      } else {\n        year = \"19\".concat(year);\n      }\n      break;\n    default:\n      if (year < 37) {\n        year = \"20\".concat(year);\n      } else if (year > 58) {\n        year = \"18\".concat(year);\n      } else {\n        return false;\n      }\n      break;\n  }\n  // Add missing zero if needed\n  if (year.length === 3) {\n    year = [year.slice(0, 2), '0', year.slice(2)].join('');\n  }\n  // Check date validity\n  var date = \"\".concat(year, \"/\").concat(tin.slice(2, 4), \"/\").concat(tin.slice(0, 2));\n  if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n    return false;\n  }\n\n  // Split digits into an array for further processing\n  var digits = tin.split('').map(function (a) {\n    return parseInt(a, 10);\n  });\n  var checksum = 0;\n  var weight = 4;\n  // Multiply by weight and add to checksum\n  for (var i = 0; i < 9; i++) {\n    checksum += digits[i] * weight;\n    weight -= 1;\n    if (weight === 1) {\n      weight = 7;\n    }\n  }\n  checksum %= 11;\n  if (checksum === 1) {\n    return false;\n  }\n  return checksum === 0 ? digits[9] === 0 : digits[9] === 11 - checksum;\n}\n\n/*\n * el-CY validation function\n * (Arithmos Forologikou Mitroou (AFM/ΑΦΜ), persons only)\n * Verify TIN validity by calculating ASCII value of check (last) character\n */\nfunction elCyCheck(tin) {\n  // split digits into an array for further processing\n  var digits = tin.slice(0, 8).split('').map(function (a) {\n    return parseInt(a, 10);\n  });\n  var checksum = 0;\n  // add digits in even places\n  for (var i = 1; i < digits.length; i += 2) {\n    checksum += digits[i];\n  }\n\n  // add digits in odd places\n  for (var _i2 = 0; _i2 < digits.length; _i2 += 2) {\n    if (digits[_i2] < 2) {\n      checksum += 1 - digits[_i2];\n    } else {\n      checksum += 2 * (digits[_i2] - 2) + 5;\n      if (digits[_i2] > 4) {\n        checksum += 2;\n      }\n    }\n  }\n  return String.fromCharCode(checksum % 26 + 65) === tin.charAt(8);\n}\n\n/*\n * el-GR validation function\n * (Arithmos Forologikou Mitroou (AFM/ΑΦΜ), persons/entities)\n * Verify TIN validity by calculating check (last) digit\n * Algorithm not in DG TAXUD document- sourced from:\n * - `http://epixeirisi.gr/%CE%9A%CE%A1%CE%99%CE%A3%CE%99%CE%9C%CE%91-%CE%98%CE%95%CE%9C%CE%91%CE%A4%CE%91-%CE%A6%CE%9F%CE%A1%CE%9F%CE%9B%CE%9F%CE%93%CE%99%CE%91%CE%A3-%CE%9A%CE%91%CE%99-%CE%9B%CE%9F%CE%93%CE%99%CE%A3%CE%A4%CE%99%CE%9A%CE%97%CE%A3/23791/%CE%91%CF%81%CE%B9%CE%B8%CE%BC%CF%8C%CF%82-%CE%A6%CE%BF%CF%81%CE%BF%CE%BB%CE%BF%CE%B3%CE%B9%CE%BA%CE%BF%CF%8D-%CE%9C%CE%B7%CF%84%CF%81%CF%8E%CE%BF%CF%85`\n */\nfunction elGrCheck(tin) {\n  // split digits into an array for further processing\n  var digits = tin.split('').map(function (a) {\n    return parseInt(a, 10);\n  });\n  var checksum = 0;\n  for (var i = 0; i < 8; i++) {\n    checksum += digits[i] * Math.pow(2, 8 - i);\n  }\n  return checksum % 11 % 10 === digits[8];\n}\n\n/*\n * en-GB validation function (should go here if needed)\n * (National Insurance Number (NINO) or Unique Taxpayer Reference (UTR),\n * persons/entities respectively)\n */\n\n/*\n * en-IE validation function\n * (Personal Public Service Number (PPS No), persons only)\n * Verify TIN validity by calculating check (second to last) character\n */\nfunction enIeCheck(tin) {\n  var checksum = algorithms.reverseMultiplyAndSum(tin.split('').slice(0, 7).map(function (a) {\n    return parseInt(a, 10);\n  }), 8);\n  if (tin.length === 9 && tin[8] !== 'W') {\n    checksum += (tin[8].charCodeAt(0) - 64) * 9;\n  }\n  checksum %= 23;\n  if (checksum === 0) {\n    return tin[7].toUpperCase() === 'W';\n  }\n  return tin[7].toUpperCase() === String.fromCharCode(64 + checksum);\n}\n\n// Valid US IRS campus prefixes\nvar enUsCampusPrefix = {\n  andover: ['10', '12'],\n  atlanta: ['60', '67'],\n  austin: ['50', '53'],\n  brookhaven: ['01', '02', '03', '04', '05', '06', '11', '13', '14', '16', '21', '22', '23', '25', '34', '51', '52', '54', '55', '56', '57', '58', '59', '65'],\n  cincinnati: ['30', '32', '35', '36', '37', '38', '61'],\n  fresno: ['15', '24'],\n  internet: ['20', '26', '27', '45', '46', '47'],\n  kansas: ['40', '44'],\n  memphis: ['94', '95'],\n  ogden: ['80', '90'],\n  philadelphia: ['33', '39', '41', '42', '43', '46', '48', '62', '63', '64', '66', '68', '71', '72', '73', '74', '75', '76', '77', '81', '82', '83', '84', '85', '86', '87', '88', '91', '92', '93', '98', '99'],\n  sba: ['31']\n};\n\n// Return an array of all US IRS campus prefixes\nfunction enUsGetPrefixes() {\n  var prefixes = [];\n  for (var location in enUsCampusPrefix) {\n    // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n    // istanbul ignore else\n    if (enUsCampusPrefix.hasOwnProperty(location)) {\n      prefixes.push.apply(prefixes, _toConsumableArray(enUsCampusPrefix[location]));\n    }\n  }\n  return prefixes;\n}\n\n/*\n * en-US validation function\n * Verify that the TIN starts with a valid IRS campus prefix\n */\nfunction enUsCheck(tin) {\n  return enUsGetPrefixes().indexOf(tin.slice(0, 2)) !== -1;\n}\n\n/*\n * es-AR validation function\n * Clave Única de Identificación Tributaria (CUIT/CUIL)\n * Sourced from:\n * - https://servicioscf.afip.gob.ar/publico/abc/ABCpaso2.aspx?id_nivel1=3036&id_nivel2=3040&p=Conceptos%20b%C3%A1sicos\n * - https://es.wikipedia.org/wiki/Clave_%C3%9Anica_de_Identificaci%C3%B3n_Tributaria\n */\n\nfunction esArCheck(tin) {\n  var accum = 0;\n  var digits = tin.split('');\n  var digit = parseInt(digits.pop(), 10);\n  for (var i = 0; i < digits.length; i++) {\n    accum += digits[9 - i] * (2 + i % 6);\n  }\n  var verif = 11 - accum % 11;\n  if (verif === 11) {\n    verif = 0;\n  } else if (verif === 10) {\n    verif = 9;\n  }\n  return digit === verif;\n}\n\n/*\n * es-ES validation function\n * (Documento Nacional de Identidad (DNI)\n * or Número de Identificación de Extranjero (NIE), persons only)\n * Verify TIN validity by calculating check (last) character\n */\nfunction esEsCheck(tin) {\n  // Split characters into an array for further processing\n  var chars = tin.toUpperCase().split('');\n\n  // Replace initial letter if needed\n  if (isNaN(parseInt(chars[0], 10)) && chars.length > 1) {\n    var lead_replace = 0;\n    switch (chars[0]) {\n      case 'Y':\n        lead_replace = 1;\n        break;\n      case 'Z':\n        lead_replace = 2;\n        break;\n      default:\n    }\n    chars.splice(0, 1, lead_replace);\n    // Fill with zeros if smaller than proper\n  } else {\n    while (chars.length < 9) {\n      chars.unshift(0);\n    }\n  }\n\n  // Calculate checksum and check according to lookup\n  var lookup = ['T', 'R', 'W', 'A', 'G', 'M', 'Y', 'F', 'P', 'D', 'X', 'B', 'N', 'J', 'Z', 'S', 'Q', 'V', 'H', 'L', 'C', 'K', 'E'];\n  chars = chars.join('');\n  var checksum = parseInt(chars.slice(0, 8), 10) % 23;\n  return chars[8] === lookup[checksum];\n}\n\n/*\n * et-EE validation function\n * (Isikukood (IK), persons only)\n * Checks if birth date (century digit and six following) is valid and calculates check (last) digit\n * Material not in DG TAXUD document sourced from:\n * - `https://www.oecd.org/tax/automatic-exchange/crs-implementation-and-assistance/tax-identification-numbers/Estonia-TIN.pdf`\n */\nfunction etEeCheck(tin) {\n  // Extract year and add century\n  var full_year = tin.slice(1, 3);\n  var century_digit = tin.slice(0, 1);\n  switch (century_digit) {\n    case '1':\n    case '2':\n      full_year = \"18\".concat(full_year);\n      break;\n    case '3':\n    case '4':\n      full_year = \"19\".concat(full_year);\n      break;\n    default:\n      full_year = \"20\".concat(full_year);\n      break;\n  }\n  // Check date validity\n  var date = \"\".concat(full_year, \"/\").concat(tin.slice(3, 5), \"/\").concat(tin.slice(5, 7));\n  if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n    return false;\n  }\n\n  // Split digits into an array for further processing\n  var digits = tin.split('').map(function (a) {\n    return parseInt(a, 10);\n  });\n  var checksum = 0;\n  var weight = 1;\n  // Multiply by weight and add to checksum\n  for (var i = 0; i < 10; i++) {\n    checksum += digits[i] * weight;\n    weight += 1;\n    if (weight === 10) {\n      weight = 1;\n    }\n  }\n  // Do again if modulo 11 of checksum is 10\n  if (checksum % 11 === 10) {\n    checksum = 0;\n    weight = 3;\n    for (var _i3 = 0; _i3 < 10; _i3++) {\n      checksum += digits[_i3] * weight;\n      weight += 1;\n      if (weight === 10) {\n        weight = 1;\n      }\n    }\n    if (checksum % 11 === 10) {\n      return digits[10] === 0;\n    }\n  }\n  return checksum % 11 === digits[10];\n}\n\n/*\n * fi-FI validation function\n * (Henkilötunnus (HETU), persons only)\n * Checks if birth date (first six digits plus century symbol) is valid\n * and calculates check (last) digit\n */\nfunction fiFiCheck(tin) {\n  // Extract year and add century\n  var full_year = tin.slice(4, 6);\n  var century_symbol = tin.slice(6, 7);\n  switch (century_symbol) {\n    case '+':\n      full_year = \"18\".concat(full_year);\n      break;\n    case '-':\n      full_year = \"19\".concat(full_year);\n      break;\n    default:\n      full_year = \"20\".concat(full_year);\n      break;\n  }\n  // Check date validity\n  var date = \"\".concat(full_year, \"/\").concat(tin.slice(2, 4), \"/\").concat(tin.slice(0, 2));\n  if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n    return false;\n  }\n\n  // Calculate check character\n  var checksum = parseInt(tin.slice(0, 6) + tin.slice(7, 10), 10) % 31;\n  if (checksum < 10) {\n    return checksum === parseInt(tin.slice(10), 10);\n  }\n  checksum -= 10;\n  var letters_lookup = ['A', 'B', 'C', 'D', 'E', 'F', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y'];\n  return letters_lookup[checksum] === tin.slice(10);\n}\n\n/*\n * fr/nl-BE validation function\n * (Numéro national (N.N.), persons only)\n * Checks if birth date (first six digits) is valid and calculates check (last two) digits\n */\nfunction frBeCheck(tin) {\n  // Zero month/day value is acceptable\n  if (tin.slice(2, 4) !== '00' || tin.slice(4, 6) !== '00') {\n    // Extract date from first six digits of TIN\n    var date = \"\".concat(tin.slice(0, 2), \"/\").concat(tin.slice(2, 4), \"/\").concat(tin.slice(4, 6));\n    if (!(0, _isDate.default)(date, 'YY/MM/DD')) {\n      return false;\n    }\n  }\n  var checksum = 97 - parseInt(tin.slice(0, 9), 10) % 97;\n  var checkdigits = parseInt(tin.slice(9, 11), 10);\n  if (checksum !== checkdigits) {\n    checksum = 97 - parseInt(\"2\".concat(tin.slice(0, 9)), 10) % 97;\n    if (checksum !== checkdigits) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/*\n * fr-FR validation function\n * (Numéro fiscal de référence (numéro SPI), persons only)\n * Verify TIN validity by calculating check (last three) digits\n */\nfunction frFrCheck(tin) {\n  tin = tin.replace(/\\s/g, '');\n  var checksum = parseInt(tin.slice(0, 10), 10) % 511;\n  var checkdigits = parseInt(tin.slice(10, 13), 10);\n  return checksum === checkdigits;\n}\n\n/*\n * fr/lb-LU validation function\n * (numéro d’identification personnelle, persons only)\n * Verify birth date validity and run Luhn and Verhoeff checks\n */\nfunction frLuCheck(tin) {\n  // Extract date and check validity\n  var date = \"\".concat(tin.slice(0, 4), \"/\").concat(tin.slice(4, 6), \"/\").concat(tin.slice(6, 8));\n  if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n    return false;\n  }\n\n  // Run Luhn check\n  if (!algorithms.luhnCheck(tin.slice(0, 12))) {\n    return false;\n  }\n  // Remove Luhn check digit and run Verhoeff check\n  return algorithms.verhoeffCheck(\"\".concat(tin.slice(0, 11)).concat(tin[12]));\n}\n\n/*\n * hr-HR validation function\n * (Osobni identifikacijski broj (OIB), persons/entities)\n * Verify TIN validity by calling iso7064Check(digits)\n */\nfunction hrHrCheck(tin) {\n  return algorithms.iso7064Check(tin);\n}\n\n/*\n * hu-HU validation function\n * (Adóazonosító jel, persons only)\n * Verify TIN validity by calculating check (last) digit\n */\nfunction huHuCheck(tin) {\n  // split digits into an array for further processing\n  var digits = tin.split('').map(function (a) {\n    return parseInt(a, 10);\n  });\n  var checksum = 8;\n  for (var i = 1; i < 9; i++) {\n    checksum += digits[i] * (i + 1);\n  }\n  return checksum % 11 === digits[9];\n}\n\n/*\n * lt-LT validation function (should go here if needed)\n * (Asmens kodas, persons/entities respectively)\n * Current validation check is alias of etEeCheck- same format applies\n */\n\n/*\n * it-IT first/last name validity check\n * Accepts it-IT TIN-encoded names as a three-element character array and checks their validity\n * Due to lack of clarity between resources (\"Are only Italian consonants used?\n * What happens if a person has X in their name?\" etc.) only two test conditions\n * have been implemented:\n * Vowels may only be followed by other vowels or an X character\n * and X characters after vowels may only be followed by other X characters.\n */\nfunction itItNameCheck(name) {\n  // true at the first occurence of a vowel\n  var vowelflag = false;\n\n  // true at the first occurence of an X AFTER vowel\n  // (to properly handle last names with X as consonant)\n  var xflag = false;\n  for (var i = 0; i < 3; i++) {\n    if (!vowelflag && /[AEIOU]/.test(name[i])) {\n      vowelflag = true;\n    } else if (!xflag && vowelflag && name[i] === 'X') {\n      xflag = true;\n    } else if (i > 0) {\n      if (vowelflag && !xflag) {\n        if (!/[AEIOU]/.test(name[i])) {\n          return false;\n        }\n      }\n      if (xflag) {\n        if (!/X/.test(name[i])) {\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n}\n\n/*\n * it-IT validation function\n * (Codice fiscale (TIN-IT), persons only)\n * Verify name, birth date and codice catastale validity\n * and calculate check character.\n * Material not in DG-TAXUD document sourced from:\n * `https://en.wikipedia.org/wiki/Italian_fiscal_code`\n */\nfunction itItCheck(tin) {\n  // Capitalize and split characters into an array for further processing\n  var chars = tin.toUpperCase().split('');\n\n  // Check first and last name validity calling itItNameCheck()\n  if (!itItNameCheck(chars.slice(0, 3))) {\n    return false;\n  }\n  if (!itItNameCheck(chars.slice(3, 6))) {\n    return false;\n  }\n\n  // Convert letters in number spaces back to numbers if any\n  var number_locations = [6, 7, 9, 10, 12, 13, 14];\n  var number_replace = {\n    L: '0',\n    M: '1',\n    N: '2',\n    P: '3',\n    Q: '4',\n    R: '5',\n    S: '6',\n    T: '7',\n    U: '8',\n    V: '9'\n  };\n  for (var _i4 = 0, _number_locations = number_locations; _i4 < _number_locations.length; _i4++) {\n    var i = _number_locations[_i4];\n    if (chars[i] in number_replace) {\n      chars.splice(i, 1, number_replace[chars[i]]);\n    }\n  }\n\n  // Extract month and day, and check date validity\n  var month_replace = {\n    A: '01',\n    B: '02',\n    C: '03',\n    D: '04',\n    E: '05',\n    H: '06',\n    L: '07',\n    M: '08',\n    P: '09',\n    R: '10',\n    S: '11',\n    T: '12'\n  };\n  var month = month_replace[chars[8]];\n  var day = parseInt(chars[9] + chars[10], 10);\n  if (day > 40) {\n    day -= 40;\n  }\n  if (day < 10) {\n    day = \"0\".concat(day);\n  }\n  var date = \"\".concat(chars[6]).concat(chars[7], \"/\").concat(month, \"/\").concat(day);\n  if (!(0, _isDate.default)(date, 'YY/MM/DD')) {\n    return false;\n  }\n\n  // Calculate check character by adding up even and odd characters as numbers\n  var checksum = 0;\n  for (var _i5 = 1; _i5 < chars.length - 1; _i5 += 2) {\n    var char_to_int = parseInt(chars[_i5], 10);\n    if (isNaN(char_to_int)) {\n      char_to_int = chars[_i5].charCodeAt(0) - 65;\n    }\n    checksum += char_to_int;\n  }\n  var odd_convert = {\n    // Maps of characters at odd places\n    A: 1,\n    B: 0,\n    C: 5,\n    D: 7,\n    E: 9,\n    F: 13,\n    G: 15,\n    H: 17,\n    I: 19,\n    J: 21,\n    K: 2,\n    L: 4,\n    M: 18,\n    N: 20,\n    O: 11,\n    P: 3,\n    Q: 6,\n    R: 8,\n    S: 12,\n    T: 14,\n    U: 16,\n    V: 10,\n    W: 22,\n    X: 25,\n    Y: 24,\n    Z: 23,\n    0: 1,\n    1: 0\n  };\n  for (var _i6 = 0; _i6 < chars.length - 1; _i6 += 2) {\n    var _char_to_int = 0;\n    if (chars[_i6] in odd_convert) {\n      _char_to_int = odd_convert[chars[_i6]];\n    } else {\n      var multiplier = parseInt(chars[_i6], 10);\n      _char_to_int = 2 * multiplier + 1;\n      if (multiplier > 4) {\n        _char_to_int += 2;\n      }\n    }\n    checksum += _char_to_int;\n  }\n  if (String.fromCharCode(65 + checksum % 26) !== chars[15]) {\n    return false;\n  }\n  return true;\n}\n\n/*\n * lv-LV validation function\n * (Personas kods (PK), persons only)\n * Check validity of birth date and calculate check (last) digit\n * Support only for old format numbers (not starting with '32', issued before 2017/07/01)\n * Material not in DG TAXUD document sourced from:\n * `https://boot.ritakafija.lv/forums/index.php?/topic/88314-personas-koda-algoritms-%C4%8Deksumma/`\n */\nfunction lvLvCheck(tin) {\n  tin = tin.replace(/\\W/, '');\n  // Extract date from TIN\n  var day = tin.slice(0, 2);\n  if (day !== '32') {\n    // No date/checksum check if new format\n    var month = tin.slice(2, 4);\n    if (month !== '00') {\n      // No date check if unknown month\n      var full_year = tin.slice(4, 6);\n      switch (tin[6]) {\n        case '0':\n          full_year = \"18\".concat(full_year);\n          break;\n        case '1':\n          full_year = \"19\".concat(full_year);\n          break;\n        default:\n          full_year = \"20\".concat(full_year);\n          break;\n      }\n      // Check date validity\n      var date = \"\".concat(full_year, \"/\").concat(tin.slice(2, 4), \"/\").concat(day);\n      if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n        return false;\n      }\n    }\n\n    // Calculate check digit\n    var checksum = 1101;\n    var multip_lookup = [1, 6, 3, 7, 9, 10, 5, 8, 4, 2];\n    for (var i = 0; i < tin.length - 1; i++) {\n      checksum -= parseInt(tin[i], 10) * multip_lookup[i];\n    }\n    return parseInt(tin[10], 10) === checksum % 11;\n  }\n  return true;\n}\n\n/*\n * mt-MT validation function\n * (Identity Card Number or Unique Taxpayer Reference, persons/entities)\n * Verify Identity Card Number structure (no other tests found)\n */\nfunction mtMtCheck(tin) {\n  if (tin.length !== 9) {\n    // No tests for UTR\n    var chars = tin.toUpperCase().split('');\n    // Fill with zeros if smaller than proper\n    while (chars.length < 8) {\n      chars.unshift(0);\n    }\n    // Validate format according to last character\n    switch (tin[7]) {\n      case 'A':\n      case 'P':\n        if (parseInt(chars[6], 10) === 0) {\n          return false;\n        }\n        break;\n      default:\n        {\n          var first_part = parseInt(chars.join('').slice(0, 5), 10);\n          if (first_part > 32000) {\n            return false;\n          }\n          var second_part = parseInt(chars.join('').slice(5, 7), 10);\n          if (first_part === second_part) {\n            return false;\n          }\n        }\n    }\n  }\n  return true;\n}\n\n/*\n * nl-NL validation function\n * (Burgerservicenummer (BSN) or Rechtspersonen Samenwerkingsverbanden Informatie Nummer (RSIN),\n * persons/entities respectively)\n * Verify TIN validity by calculating check (last) digit (variant of MOD 11)\n */\nfunction nlNlCheck(tin) {\n  return algorithms.reverseMultiplyAndSum(tin.split('').slice(0, 8).map(function (a) {\n    return parseInt(a, 10);\n  }), 9) % 11 === parseInt(tin[8], 10);\n}\n\n/*\n * pl-PL validation function\n * (Powszechny Elektroniczny System Ewidencji Ludności (PESEL)\n * or Numer identyfikacji podatkowej (NIP), persons/entities)\n * Verify TIN validity by validating birth date (PESEL) and calculating check (last) digit\n */\nfunction plPlCheck(tin) {\n  // NIP\n  if (tin.length === 10) {\n    // Calculate last digit by multiplying with lookup\n    var lookup = [6, 5, 7, 2, 3, 4, 5, 6, 7];\n    var _checksum = 0;\n    for (var i = 0; i < lookup.length; i++) {\n      _checksum += parseInt(tin[i], 10) * lookup[i];\n    }\n    _checksum %= 11;\n    if (_checksum === 10) {\n      return false;\n    }\n    return _checksum === parseInt(tin[9], 10);\n  }\n\n  // PESEL\n  // Extract full year using month\n  var full_year = tin.slice(0, 2);\n  var month = parseInt(tin.slice(2, 4), 10);\n  if (month > 80) {\n    full_year = \"18\".concat(full_year);\n    month -= 80;\n  } else if (month > 60) {\n    full_year = \"22\".concat(full_year);\n    month -= 60;\n  } else if (month > 40) {\n    full_year = \"21\".concat(full_year);\n    month -= 40;\n  } else if (month > 20) {\n    full_year = \"20\".concat(full_year);\n    month -= 20;\n  } else {\n    full_year = \"19\".concat(full_year);\n  }\n  // Add leading zero to month if needed\n  if (month < 10) {\n    month = \"0\".concat(month);\n  }\n  // Check date validity\n  var date = \"\".concat(full_year, \"/\").concat(month, \"/\").concat(tin.slice(4, 6));\n  if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n    return false;\n  }\n\n  // Calculate last digit by mulitplying with odd one-digit numbers except 5\n  var checksum = 0;\n  var multiplier = 1;\n  for (var _i7 = 0; _i7 < tin.length - 1; _i7++) {\n    checksum += parseInt(tin[_i7], 10) * multiplier % 10;\n    multiplier += 2;\n    if (multiplier > 10) {\n      multiplier = 1;\n    } else if (multiplier === 5) {\n      multiplier += 2;\n    }\n  }\n  checksum = 10 - checksum % 10;\n  return checksum === parseInt(tin[10], 10);\n}\n\n/*\n* pt-BR validation function\n* (Cadastro de Pessoas Físicas (CPF, persons)\n* Cadastro Nacional de Pessoas Jurídicas (CNPJ, entities)\n* Both inputs will be validated\n*/\n\nfunction ptBrCheck(tin) {\n  if (tin.length === 11) {\n    var _sum;\n    var remainder;\n    _sum = 0;\n    if (\n    // Reject known invalid CPFs\n    tin === '11111111111' || tin === '22222222222' || tin === '33333333333' || tin === '44444444444' || tin === '55555555555' || tin === '66666666666' || tin === '77777777777' || tin === '88888888888' || tin === '99999999999' || tin === '00000000000') return false;\n    for (var i = 1; i <= 9; i++) _sum += parseInt(tin.substring(i - 1, i), 10) * (11 - i);\n    remainder = _sum * 10 % 11;\n    if (remainder === 10) remainder = 0;\n    if (remainder !== parseInt(tin.substring(9, 10), 10)) return false;\n    _sum = 0;\n    for (var _i8 = 1; _i8 <= 10; _i8++) _sum += parseInt(tin.substring(_i8 - 1, _i8), 10) * (12 - _i8);\n    remainder = _sum * 10 % 11;\n    if (remainder === 10) remainder = 0;\n    if (remainder !== parseInt(tin.substring(10, 11), 10)) return false;\n    return true;\n  }\n  if (\n  // Reject know invalid CNPJs\n  tin === '00000000000000' || tin === '11111111111111' || tin === '22222222222222' || tin === '33333333333333' || tin === '44444444444444' || tin === '55555555555555' || tin === '66666666666666' || tin === '77777777777777' || tin === '88888888888888' || tin === '99999999999999') {\n    return false;\n  }\n  var length = tin.length - 2;\n  var identifiers = tin.substring(0, length);\n  var verificators = tin.substring(length);\n  var sum = 0;\n  var pos = length - 7;\n  for (var _i9 = length; _i9 >= 1; _i9--) {\n    sum += identifiers.charAt(length - _i9) * pos;\n    pos -= 1;\n    if (pos < 2) {\n      pos = 9;\n    }\n  }\n  var result = sum % 11 < 2 ? 0 : 11 - sum % 11;\n  if (result !== parseInt(verificators.charAt(0), 10)) {\n    return false;\n  }\n  length += 1;\n  identifiers = tin.substring(0, length);\n  sum = 0;\n  pos = length - 7;\n  for (var _i10 = length; _i10 >= 1; _i10--) {\n    sum += identifiers.charAt(length - _i10) * pos;\n    pos -= 1;\n    if (pos < 2) {\n      pos = 9;\n    }\n  }\n  result = sum % 11 < 2 ? 0 : 11 - sum % 11;\n  if (result !== parseInt(verificators.charAt(1), 10)) {\n    return false;\n  }\n  return true;\n}\n\n/*\n * pt-PT validation function\n * (Número de identificação fiscal (NIF), persons/entities)\n * Verify TIN validity by calculating check (last) digit (variant of MOD 11)\n */\nfunction ptPtCheck(tin) {\n  var checksum = 11 - algorithms.reverseMultiplyAndSum(tin.split('').slice(0, 8).map(function (a) {\n    return parseInt(a, 10);\n  }), 9) % 11;\n  if (checksum > 9) {\n    return parseInt(tin[8], 10) === 0;\n  }\n  return checksum === parseInt(tin[8], 10);\n}\n\n/*\n * ro-RO validation function\n * (Cod Numeric Personal (CNP) or Cod de înregistrare fiscală (CIF),\n * persons only)\n * Verify CNP validity by calculating check (last) digit (test not found for CIF)\n * Material not in DG TAXUD document sourced from:\n * `https://en.wikipedia.org/wiki/National_identification_number#Romania`\n */\nfunction roRoCheck(tin) {\n  if (tin.slice(0, 4) !== '9000') {\n    // No test found for this format\n    // Extract full year using century digit if possible\n    var full_year = tin.slice(1, 3);\n    switch (tin[0]) {\n      case '1':\n      case '2':\n        full_year = \"19\".concat(full_year);\n        break;\n      case '3':\n      case '4':\n        full_year = \"18\".concat(full_year);\n        break;\n      case '5':\n      case '6':\n        full_year = \"20\".concat(full_year);\n        break;\n      default:\n    }\n\n    // Check date validity\n    var date = \"\".concat(full_year, \"/\").concat(tin.slice(3, 5), \"/\").concat(tin.slice(5, 7));\n    if (date.length === 8) {\n      if (!(0, _isDate.default)(date, 'YY/MM/DD')) {\n        return false;\n      }\n    } else if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n      return false;\n    }\n\n    // Calculate check digit\n    var digits = tin.split('').map(function (a) {\n      return parseInt(a, 10);\n    });\n    var multipliers = [2, 7, 9, 1, 4, 6, 3, 5, 8, 2, 7, 9];\n    var checksum = 0;\n    for (var i = 0; i < multipliers.length; i++) {\n      checksum += digits[i] * multipliers[i];\n    }\n    if (checksum % 11 === 10) {\n      return digits[12] === 1;\n    }\n    return digits[12] === checksum % 11;\n  }\n  return true;\n}\n\n/*\n * sk-SK validation function\n * (Rodné číslo (RČ) or bezvýznamové identifikačné číslo (BIČ), persons only)\n * Checks validity of pre-1954 birth numbers (rodné číslo) only\n * Due to the introduction of the pseudo-random BIČ it is not possible to test\n * post-1954 birth numbers without knowing whether they are BIČ or RČ beforehand\n */\nfunction skSkCheck(tin) {\n  if (tin.length === 9) {\n    tin = tin.replace(/\\W/, '');\n    if (tin.slice(6) === '000') {\n      return false;\n    } // Three-zero serial not assigned before 1954\n\n    // Extract full year from TIN length\n    var full_year = parseInt(tin.slice(0, 2), 10);\n    if (full_year > 53) {\n      return false;\n    }\n    if (full_year < 10) {\n      full_year = \"190\".concat(full_year);\n    } else {\n      full_year = \"19\".concat(full_year);\n    }\n\n    // Extract month from TIN and normalize\n    var month = parseInt(tin.slice(2, 4), 10);\n    if (month > 50) {\n      month -= 50;\n    }\n    if (month < 10) {\n      month = \"0\".concat(month);\n    }\n\n    // Check date validity\n    var date = \"\".concat(full_year, \"/\").concat(month, \"/\").concat(tin.slice(4, 6));\n    if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/*\n * sl-SI validation function\n * (Davčna številka, persons/entities)\n * Verify TIN validity by calculating check (last) digit (variant of MOD 11)\n */\nfunction slSiCheck(tin) {\n  var checksum = 11 - algorithms.reverseMultiplyAndSum(tin.split('').slice(0, 7).map(function (a) {\n    return parseInt(a, 10);\n  }), 8) % 11;\n  if (checksum === 10) {\n    return parseInt(tin[7], 10) === 0;\n  }\n  return checksum === parseInt(tin[7], 10);\n}\n\n/*\n * sv-SE validation function\n * (Personnummer or samordningsnummer, persons only)\n * Checks validity of birth date and calls luhnCheck() to validate check (last) digit\n */\nfunction svSeCheck(tin) {\n  // Make copy of TIN and normalize to two-digit year form\n  var tin_copy = tin.slice(0);\n  if (tin.length > 11) {\n    tin_copy = tin_copy.slice(2);\n  }\n\n  // Extract date of birth\n  var full_year = '';\n  var month = tin_copy.slice(2, 4);\n  var day = parseInt(tin_copy.slice(4, 6), 10);\n  if (tin.length > 11) {\n    full_year = tin.slice(0, 4);\n  } else {\n    full_year = tin.slice(0, 2);\n    if (tin.length === 11 && day < 60) {\n      // Extract full year from centenarian symbol\n      // Should work just fine until year 10000 or so\n      var current_year = new Date().getFullYear().toString();\n      var current_century = parseInt(current_year.slice(0, 2), 10);\n      current_year = parseInt(current_year, 10);\n      if (tin[6] === '-') {\n        if (parseInt(\"\".concat(current_century).concat(full_year), 10) > current_year) {\n          full_year = \"\".concat(current_century - 1).concat(full_year);\n        } else {\n          full_year = \"\".concat(current_century).concat(full_year);\n        }\n      } else {\n        full_year = \"\".concat(current_century - 1).concat(full_year);\n        if (current_year - parseInt(full_year, 10) < 100) {\n          return false;\n        }\n      }\n    }\n  }\n\n  // Normalize day and check date validity\n  if (day > 60) {\n    day -= 60;\n  }\n  if (day < 10) {\n    day = \"0\".concat(day);\n  }\n  var date = \"\".concat(full_year, \"/\").concat(month, \"/\").concat(day);\n  if (date.length === 8) {\n    if (!(0, _isDate.default)(date, 'YY/MM/DD')) {\n      return false;\n    }\n  } else if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n    return false;\n  }\n  return algorithms.luhnCheck(tin.replace(/\\W/, ''));\n}\n\n/**\n * uk-UA validation function\n * Verify TIN validity by calculating check (last) digit (variant of MOD 11)\n */\nfunction ukUaCheck(tin) {\n  // Calculate check digit\n  var digits = tin.split('').map(function (a) {\n    return parseInt(a, 10);\n  });\n  var multipliers = [-1, 5, 7, 9, 4, 6, 10, 5, 7];\n  var checksum = 0;\n  for (var i = 0; i < multipliers.length; i++) {\n    checksum += digits[i] * multipliers[i];\n  }\n  return checksum % 11 === 10 ? digits[9] === 0 : digits[9] === checksum % 11;\n}\n\n// Locale lookup objects\n\n/*\n * Tax id regex formats for various locales\n *\n * Where not explicitly specified in DG-TAXUD document both\n * uppercase and lowercase letters are acceptable.\n */\nvar taxIdFormat = {\n  'bg-BG': /^\\d{10}$/,\n  'cs-CZ': /^\\d{6}\\/{0,1}\\d{3,4}$/,\n  'de-AT': /^\\d{9}$/,\n  'de-DE': /^[1-9]\\d{10}$/,\n  'dk-DK': /^\\d{6}-{0,1}\\d{4}$/,\n  'el-CY': /^[09]\\d{7}[A-Z]$/,\n  'el-GR': /^([0-4]|[7-9])\\d{8}$/,\n  'en-CA': /^\\d{9}$/,\n  'en-GB': /^\\d{10}$|^(?!GB|NK|TN|ZZ)(?![DFIQUV])[A-Z](?![DFIQUVO])[A-Z]\\d{6}[ABCD ]$/i,\n  'en-IE': /^\\d{7}[A-W][A-IW]{0,1}$/i,\n  'en-US': /^\\d{2}[- ]{0,1}\\d{7}$/,\n  'es-AR': /(20|23|24|27|30|33|34)[0-9]{8}[0-9]/,\n  'es-ES': /^(\\d{0,8}|[XYZKLM]\\d{7})[A-HJ-NP-TV-Z]$/i,\n  'et-EE': /^[1-6]\\d{6}(00[1-9]|0[1-9][0-9]|[1-6][0-9]{2}|70[0-9]|710)\\d$/,\n  'fi-FI': /^\\d{6}[-+A]\\d{3}[0-9A-FHJ-NPR-Y]$/i,\n  'fr-BE': /^\\d{11}$/,\n  'fr-FR': /^[0-3]\\d{12}$|^[0-3]\\d\\s\\d{2}(\\s\\d{3}){3}$/,\n  // Conforms both to official spec and provided example\n  'fr-LU': /^\\d{13}$/,\n  'hr-HR': /^\\d{11}$/,\n  'hu-HU': /^8\\d{9}$/,\n  'it-IT': /^[A-Z]{6}[L-NP-V0-9]{2}[A-EHLMPRST][L-NP-V0-9]{2}[A-ILMZ][L-NP-V0-9]{3}[A-Z]$/i,\n  'lv-LV': /^\\d{6}-{0,1}\\d{5}$/,\n  // Conforms both to DG TAXUD spec and original research\n  'mt-MT': /^\\d{3,7}[APMGLHBZ]$|^([1-8])\\1\\d{7}$/i,\n  'nl-NL': /^\\d{9}$/,\n  'pl-PL': /^\\d{10,11}$/,\n  'pt-BR': /(?:^\\d{11}$)|(?:^\\d{14}$)/,\n  'pt-PT': /^\\d{9}$/,\n  'ro-RO': /^\\d{13}$/,\n  'sk-SK': /^\\d{6}\\/{0,1}\\d{3,4}$/,\n  'sl-SI': /^[1-9]\\d{7}$/,\n  'sv-SE': /^(\\d{6}[-+]{0,1}\\d{4}|(18|19|20)\\d{6}[-+]{0,1}\\d{4})$/,\n  'uk-UA': /^\\d{10}$/\n};\n// taxIdFormat locale aliases\ntaxIdFormat['lb-LU'] = taxIdFormat['fr-LU'];\ntaxIdFormat['lt-LT'] = taxIdFormat['et-EE'];\ntaxIdFormat['nl-BE'] = taxIdFormat['fr-BE'];\ntaxIdFormat['fr-CA'] = taxIdFormat['en-CA'];\n\n// Algorithmic tax id check functions for various locales\nvar taxIdCheck = {\n  'bg-BG': bgBgCheck,\n  'cs-CZ': csCzCheck,\n  'de-AT': deAtCheck,\n  'de-DE': deDeCheck,\n  'dk-DK': dkDkCheck,\n  'el-CY': elCyCheck,\n  'el-GR': elGrCheck,\n  'en-CA': isCanadianSIN,\n  'en-IE': enIeCheck,\n  'en-US': enUsCheck,\n  'es-AR': esArCheck,\n  'es-ES': esEsCheck,\n  'et-EE': etEeCheck,\n  'fi-FI': fiFiCheck,\n  'fr-BE': frBeCheck,\n  'fr-FR': frFrCheck,\n  'fr-LU': frLuCheck,\n  'hr-HR': hrHrCheck,\n  'hu-HU': huHuCheck,\n  'it-IT': itItCheck,\n  'lv-LV': lvLvCheck,\n  'mt-MT': mtMtCheck,\n  'nl-NL': nlNlCheck,\n  'pl-PL': plPlCheck,\n  'pt-BR': ptBrCheck,\n  'pt-PT': ptPtCheck,\n  'ro-RO': roRoCheck,\n  'sk-SK': skSkCheck,\n  'sl-SI': slSiCheck,\n  'sv-SE': svSeCheck,\n  'uk-UA': ukUaCheck\n};\n// taxIdCheck locale aliases\ntaxIdCheck['lb-LU'] = taxIdCheck['fr-LU'];\ntaxIdCheck['lt-LT'] = taxIdCheck['et-EE'];\ntaxIdCheck['nl-BE'] = taxIdCheck['fr-BE'];\ntaxIdCheck['fr-CA'] = taxIdCheck['en-CA'];\n\n// Regexes for locales where characters should be omitted before checking format\nvar allsymbols = /[-\\\\\\/!@#$%\\^&\\*\\(\\)\\+\\=\\[\\]]+/g;\nvar sanitizeRegexes = {\n  'de-AT': allsymbols,\n  'de-DE': /[\\/\\\\]/g,\n  'fr-BE': allsymbols\n};\n// sanitizeRegexes locale aliases\nsanitizeRegexes['nl-BE'] = sanitizeRegexes['fr-BE'];\n\n/*\n * Validator function\n * Return true if the passed string is a valid tax identification number\n * for the specified locale.\n * Throw an error exception if the locale is not supported.\n */\nfunction isTaxID(str) {\n  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en-US';\n  (0, _assertString.default)(str);\n  // Copy TIN to avoid replacement if sanitized\n  var strcopy = str.slice(0);\n  if (locale in taxIdFormat) {\n    if (locale in sanitizeRegexes) {\n      strcopy = strcopy.replace(sanitizeRegexes[locale], '');\n    }\n    if (!taxIdFormat[locale].test(strcopy)) {\n      return false;\n    }\n    if (locale in taxIdCheck) {\n      return taxIdCheck[locale](strcopy);\n    }\n    // Fallthrough; not all locales have algorithmic checks\n    return true;\n  }\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMobilePhone;\nexports.locales = void 0;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/* eslint-disable max-len */\nvar phones = {\n  'am-AM': /^(\\+?374|0)(33|4[134]|55|77|88|9[13-689])\\d{6}$/,\n  'ar-AE': /^((\\+?971)|0)?5[024568]\\d{7}$/,\n  'ar-BH': /^(\\+?973)?(3|6)\\d{7}$/,\n  'ar-DZ': /^(\\+?213|0)(5|6|7)\\d{8}$/,\n  'ar-LB': /^(\\+?961)?((3|81)\\d{6}|7\\d{7})$/,\n  'ar-EG': /^((\\+?20)|0)?1[0125]\\d{8}$/,\n  'ar-IQ': /^(\\+?964|0)?7[0-9]\\d{8}$/,\n  'ar-JO': /^(\\+?962|0)?7[789]\\d{7}$/,\n  'ar-KW': /^(\\+?965)([569]\\d{7}|41\\d{6})$/,\n  'ar-LY': /^((\\+?218)|0)?(9[1-6]\\d{7}|[1-8]\\d{7,9})$/,\n  'ar-MA': /^(?:(?:\\+|00)212|0)[5-7]\\d{8}$/,\n  'ar-OM': /^((\\+|00)968)?(9[1-9])\\d{6}$/,\n  'ar-PS': /^(\\+?970|0)5[6|9](\\d{7})$/,\n  'ar-SA': /^(!?(\\+?966)|0)?5\\d{8}$/,\n  'ar-SD': /^((\\+?249)|0)?(9[012369]|1[012])\\d{7}$/,\n  'ar-SY': /^(!?(\\+?963)|0)?9\\d{8}$/,\n  'ar-TN': /^(\\+?216)?[2459]\\d{7}$/,\n  'az-AZ': /^(\\+994|0)(10|5[015]|7[07]|99)\\d{7}$/,\n  'bs-BA': /^((((\\+|00)3876)|06))((([0-3]|[5-6])\\d{6})|(4\\d{7}))$/,\n  'be-BY': /^(\\+?375)?(24|25|29|33|44)\\d{7}$/,\n  'bg-BG': /^(\\+?359|0)?8[789]\\d{7}$/,\n  'bn-BD': /^(\\+?880|0)1[13456789][0-9]{8}$/,\n  'ca-AD': /^(\\+376)?[346]\\d{5}$/,\n  'cs-CZ': /^(\\+?420)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,\n  'da-DK': /^(\\+?45)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\n  'de-DE': /^((\\+49|0)1)(5[0-25-9]\\d|6([23]|0\\d?)|7([0-57-9]|6\\d))\\d{7,9}$/,\n  'de-AT': /^(\\+43|0)\\d{1,4}\\d{3,12}$/,\n  'de-CH': /^(\\+41|0)([1-9])\\d{1,9}$/,\n  'de-LU': /^(\\+352)?((6\\d1)\\d{6})$/,\n  'dv-MV': /^(\\+?960)?(7[2-9]|9[1-9])\\d{5}$/,\n  'el-GR': /^(\\+?30|0)?6(8[5-9]|9(?![26])[0-9])\\d{7}$/,\n  'el-CY': /^(\\+?357?)?(9(9|6)\\d{6})$/,\n  'en-AI': /^(\\+?1|0)264(?:2(35|92)|4(?:6[1-2]|76|97)|5(?:3[6-9]|8[1-4])|7(?:2(4|9)|72))\\d{4}$/,\n  'en-AU': /^(\\+?61|0)4\\d{8}$/,\n  'en-AG': /^(?:\\+1|1)268(?:464|7(?:1[3-9]|[28]\\d|3[0246]|64|7[0-689]))\\d{4}$/,\n  'en-BM': /^(\\+?1)?441(((3|7)\\d{6}$)|(5[0-3][0-9]\\d{4}$)|(59\\d{5}$))/,\n  'en-BS': /^(\\+?1[-\\s]?|0)?\\(?242\\)?[-\\s]?\\d{3}[-\\s]?\\d{4}$/,\n  'en-GB': /^(\\+?44|0)7\\d{9}$/,\n  'en-GG': /^(\\+?44|0)1481\\d{6}$/,\n  'en-GH': /^(\\+233|0)(20|50|24|54|27|57|26|56|23|28|55|59)\\d{7}$/,\n  'en-GY': /^(\\+592|0)6\\d{6}$/,\n  'en-HK': /^(\\+?852[-\\s]?)?[456789]\\d{3}[-\\s]?\\d{4}$/,\n  'en-MO': /^(\\+?853[-\\s]?)?[6]\\d{3}[-\\s]?\\d{4}$/,\n  'en-IE': /^(\\+?353|0)8[356789]\\d{7}$/,\n  'en-IN': /^(\\+?91|0)?[6789]\\d{9}$/,\n  'en-JM': /^(\\+?876)?\\d{7}$/,\n  'en-KE': /^(\\+?254|0)(7|1)\\d{8}$/,\n  'fr-CF': /^(\\+?236| ?)(70|75|77|72|21|22)\\d{6}$/,\n  'en-SS': /^(\\+?211|0)(9[1257])\\d{7}$/,\n  'en-KI': /^((\\+686|686)?)?( )?((6|7)(2|3|8)[0-9]{6})$/,\n  'en-KN': /^(?:\\+1|1)869(?:46\\d|48[89]|55[6-8]|66\\d|76[02-7])\\d{4}$/,\n  'en-LS': /^(\\+?266)(22|28|57|58|59|27|52)\\d{6}$/,\n  'en-MT': /^(\\+?356|0)?(99|79|77|21|27|22|25)[0-9]{6}$/,\n  'en-MU': /^(\\+?230|0)?\\d{8}$/,\n  'en-MW': /^(\\+?265|0)(((77|88|31|99|98|21)\\d{7})|(((111)|1)\\d{6})|(32000\\d{4}))$/,\n  'en-NA': /^(\\+?264|0)(6|8)\\d{7}$/,\n  'en-NG': /^(\\+?234|0)?[789]\\d{9}$/,\n  'en-NZ': /^(\\+?64|0)[28]\\d{7,9}$/,\n  'en-PG': /^(\\+?675|0)?(7\\d|8[18])\\d{6}$/,\n  'en-PK': /^((00|\\+)?92|0)3[0-6]\\d{8}$/,\n  'en-PH': /^(09|\\+639)\\d{9}$/,\n  'en-RW': /^(\\+?250|0)?[7]\\d{8}$/,\n  'en-SG': /^(\\+65)?[3689]\\d{7}$/,\n  'en-SL': /^(\\+?232|0)\\d{8}$/,\n  'en-TZ': /^(\\+?255|0)?[67]\\d{8}$/,\n  'en-UG': /^(\\+?256|0)?[7]\\d{8}$/,\n  'en-US': /^((\\+1|1)?( |-)?)?(\\([2-9][0-9]{2}\\)|[2-9][0-9]{2})( |-)?([2-9][0-9]{2}( |-)?[0-9]{4})$/,\n  'en-ZA': /^(\\+?27|0)\\d{9}$/,\n  'en-ZM': /^(\\+?26)?09[567]\\d{7}$/,\n  'en-ZW': /^(\\+263)[0-9]{9}$/,\n  'en-BW': /^(\\+?267)?(7[1-8]{1})\\d{6}$/,\n  'es-AR': /^\\+?549(11|[2368]\\d)\\d{8}$/,\n  'es-BO': /^(\\+?591)?(6|7)\\d{7}$/,\n  'es-CO': /^(\\+?57)?3(0(0|1|2|4|5)|1\\d|2[0-4]|5(0|1))\\d{7}$/,\n  'es-CL': /^(\\+?56|0)[2-9]\\d{1}\\d{7}$/,\n  'es-CR': /^(\\+506)?[2-8]\\d{7}$/,\n  'es-CU': /^(\\+53|0053)?5\\d{7}$/,\n  'es-DO': /^(\\+?1)?8[024]9\\d{7}$/,\n  'es-HN': /^(\\+?504)?[9|8|3|2]\\d{7}$/,\n  'es-EC': /^(\\+?593|0)([2-7]|9[2-9])\\d{7}$/,\n  'es-ES': /^(\\+?34)?[6|7]\\d{8}$/,\n  'es-PE': /^(\\+?51)?9\\d{8}$/,\n  'es-MX': /^(\\+?52)?(1|01)?\\d{10,11}$/,\n  'es-NI': /^(\\+?505)\\d{7,8}$/,\n  'es-PA': /^(\\+?507)\\d{7,8}$/,\n  'es-PY': /^(\\+?595|0)9[9876]\\d{7}$/,\n  'es-SV': /^(\\+?503)?[67]\\d{7}$/,\n  'es-UY': /^(\\+598|0)9[1-9][\\d]{6}$/,\n  'es-VE': /^(\\+?58)?(2|4)\\d{9}$/,\n  'et-EE': /^(\\+?372)?\\s?(5|8[1-4])\\s?([0-9]\\s?){6,7}$/,\n  'fa-IR': /^(\\+?98[\\-\\s]?|0)9[0-39]\\d[\\-\\s]?\\d{3}[\\-\\s]?\\d{4}$/,\n  'fi-FI': /^(\\+?358|0)\\s?(4[0-6]|50)\\s?(\\d\\s?){4,8}$/,\n  'fj-FJ': /^(\\+?679)?\\s?\\d{3}\\s?\\d{4}$/,\n  'fo-FO': /^(\\+?298)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\n  'fr-BF': /^(\\+226|0)[67]\\d{7}$/,\n  'fr-BJ': /^(\\+229)\\d{8}$/,\n  'fr-CD': /^(\\+?243|0)?(8|9)\\d{8}$/,\n  'fr-CM': /^(\\+?237)6[0-9]{8}$/,\n  'fr-FR': /^(\\+?33|0)[67]\\d{8}$/,\n  'fr-GF': /^(\\+?594|0|00594)[67]\\d{8}$/,\n  'fr-GP': /^(\\+?590|0|00590)[67]\\d{8}$/,\n  'fr-MQ': /^(\\+?596|0|00596)[67]\\d{8}$/,\n  'fr-PF': /^(\\+?689)?8[789]\\d{6}$/,\n  'fr-RE': /^(\\+?262|0|00262)[67]\\d{8}$/,\n  'fr-WF': /^(\\+681)?\\d{6}$/,\n  'he-IL': /^(\\+972|0)([23489]|5[012345689]|77)[1-9]\\d{6}$/,\n  'hu-HU': /^(\\+?36|06)(20|30|31|50|70)\\d{7}$/,\n  'id-ID': /^(\\+?62|0)8(1[123456789]|2[1238]|3[1238]|5[12356789]|7[78]|9[56789]|8[123456789])([\\s?|\\d]{5,11})$/,\n  'ir-IR': /^(\\+98|0)?9\\d{9}$/,\n  'it-IT': /^(\\+?39)?\\s?3\\d{2} ?\\d{6,7}$/,\n  'it-SM': /^((\\+378)|(0549)|(\\+390549)|(\\+3780549))?6\\d{5,9}$/,\n  'ja-JP': /^(\\+81[ \\-]?(\\(0\\))?|0)[6789]0[ \\-]?\\d{4}[ \\-]?\\d{4}$/,\n  'ka-GE': /^(\\+?995)?(79\\d{7}|5\\d{8})$/,\n  'kk-KZ': /^(\\+?7|8)?7\\d{9}$/,\n  'kl-GL': /^(\\+?299)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\n  'ko-KR': /^((\\+?82)[ \\-]?)?0?1([0|1|6|7|8|9]{1})[ \\-]?\\d{3,4}[ \\-]?\\d{4}$/,\n  'ky-KG': /^(\\+?7\\s?\\+?7|0)\\s?\\d{2}\\s?\\d{3}\\s?\\d{4}$/,\n  'lt-LT': /^(\\+370|8)\\d{8}$/,\n  'lv-LV': /^(\\+?371)2\\d{7}$/,\n  'mg-MG': /^((\\+?261|0)(2|3)\\d)?\\d{7}$/,\n  'mn-MN': /^(\\+|00|011)?976(77|81|88|91|94|95|96|99)\\d{6}$/,\n  'my-MM': /^(\\+?959|09|9)(2[5-7]|3[1-2]|4[0-5]|6[6-9]|7[5-9]|9[6-9])[0-9]{7}$/,\n  'ms-MY': /^(\\+?60|0)1(([0145](-|\\s)?\\d{7,8})|([236-9](-|\\s)?\\d{7}))$/,\n  'mz-MZ': /^(\\+?258)?8[234567]\\d{7}$/,\n  'nb-NO': /^(\\+?47)?[49]\\d{7}$/,\n  'ne-NP': /^(\\+?977)?9[78]\\d{8}$/,\n  'nl-BE': /^(\\+?32|0)4\\d{8}$/,\n  'nl-NL': /^(((\\+|00)?31\\(0\\))|((\\+|00)?31)|0)6{1}\\d{8}$/,\n  'nl-AW': /^(\\+)?297(56|59|64|73|74|99)\\d{5}$/,\n  'nn-NO': /^(\\+?47)?[49]\\d{7}$/,\n  'pl-PL': /^(\\+?48)? ?([5-8]\\d|45) ?\\d{3} ?\\d{2} ?\\d{2}$/,\n  'pt-BR': /^((\\+?55\\ ?[1-9]{2}\\ ?)|(\\+?55\\ ?\\([1-9]{2}\\)\\ ?)|(0[1-9]{2}\\ ?)|(\\([1-9]{2}\\)\\ ?)|([1-9]{2}\\ ?))((\\d{4}\\-?\\d{4})|(9[1-9]{1}\\d{3}\\-?\\d{4}))$/,\n  'pt-PT': /^(\\+?351)?9[1236]\\d{7}$/,\n  'pt-AO': /^(\\+244)\\d{9}$/,\n  'ro-MD': /^(\\+?373|0)((6(0|1|2|6|7|8|9))|(7(6|7|8|9)))\\d{6}$/,\n  'ro-RO': /^(\\+?40|0)\\s?7\\d{2}(\\/|\\s|\\.|-)?\\d{3}(\\s|\\.|-)?\\d{3}$/,\n  'ru-RU': /^(\\+?7|8)?9\\d{9}$/,\n  'si-LK': /^(?:0|94|\\+94)?(7(0|1|2|4|5|6|7|8)( |-)?)\\d{7}$/,\n  'sl-SI': /^(\\+386\\s?|0)(\\d{1}\\s?\\d{3}\\s?\\d{2}\\s?\\d{2}|\\d{2}\\s?\\d{3}\\s?\\d{3})$/,\n  'sk-SK': /^(\\+?421)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,\n  'so-SO': /^(\\+?252|0)((6[0-9])\\d{7}|(7[1-9])\\d{7})$/,\n  'sq-AL': /^(\\+355|0)6[789]\\d{6}$/,\n  'sr-RS': /^(\\+3816|06)[- \\d]{5,9}$/,\n  'sv-SE': /^(\\+?46|0)[\\s\\-]?7[\\s\\-]?[02369]([\\s\\-]?\\d){7}$/,\n  'tg-TJ': /^(\\+?992)?[5][5]\\d{7}$/,\n  'th-TH': /^(\\+66|66|0)\\d{9}$/,\n  'tr-TR': /^(\\+?90|0)?5\\d{9}$/,\n  'tk-TM': /^(\\+993|993|8)\\d{8}$/,\n  'uk-UA': /^(\\+?38|8)?0\\d{9}$/,\n  'uz-UZ': /^(\\+?998)?(6[125-79]|7[1-69]|88|9\\d)\\d{7}$/,\n  'vi-VN': /^((\\+?84)|0)((3([2-9]))|(5([25689]))|(7([0|6-9]))|(8([1-9]))|(9([0-9])))([0-9]{7})$/,\n  'zh-CN': /^((\\+|00)86)?(1[3-9]|9[28])\\d{9}$/,\n  'zh-TW': /^(\\+?886\\-?|0)?9\\d{8}$/,\n  'dz-BT': /^(\\+?975|0)?(17|16|77|02)\\d{6}$/,\n  'ar-YE': /^(((\\+|00)9677|0?7)[0137]\\d{7}|((\\+|00)967|0)[1-7]\\d{6})$/,\n  'ar-EH': /^(\\+?212|0)[\\s\\-]?(5288|5289)[\\s\\-]?\\d{5}$/,\n  'fa-AF': /^(\\+93|0)?(2{1}[0-8]{1}|[3-5]{1}[0-4]{1})(\\d{7})$/\n};\n/* eslint-enable max-len */\n\n// aliases\nphones['en-CA'] = phones['en-US'];\nphones['fr-CA'] = phones['en-CA'];\nphones['fr-BE'] = phones['nl-BE'];\nphones['zh-HK'] = phones['en-HK'];\nphones['zh-MO'] = phones['en-MO'];\nphones['ga-IE'] = phones['en-IE'];\nphones['fr-CH'] = phones['de-CH'];\nphones['it-CH'] = phones['fr-CH'];\nfunction isMobilePhone(str, locale, options) {\n  (0, _assertString.default)(str);\n  if (options && options.strictMode && !str.startsWith('+')) {\n    return false;\n  }\n  if (Array.isArray(locale)) {\n    return locale.some(function (key) {\n      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n      // istanbul ignore else\n      if (phones.hasOwnProperty(key)) {\n        var phone = phones[key];\n        if (phone.test(str)) {\n          return true;\n        }\n      }\n      return false;\n    });\n  } else if (locale in phones) {\n    return phones[locale].test(str);\n    // alias falsey locale as 'any'\n  } else if (!locale || locale === 'any') {\n    for (var key in phones) {\n      // istanbul ignore else\n      if (phones.hasOwnProperty(key)) {\n        var phone = phones[key];\n        if (phone.test(str)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}\nvar locales = exports.locales = Object.keys(phones);", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEthereumAddress;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar eth = /^(0x)[0-9a-f]{40}$/i;\nfunction isEthereumAddress(str) {\n  (0, _assertString.default)(str);\n  return eth.test(str);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isCurrency;\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction currencyRegex(options) {\n  var decimal_digits = \"\\\\d{\".concat(options.digits_after_decimal[0], \"}\");\n  options.digits_after_decimal.forEach(function (digit, index) {\n    if (index !== 0) decimal_digits = \"\".concat(decimal_digits, \"|\\\\d{\").concat(digit, \"}\");\n  });\n  var symbol = \"(\".concat(options.symbol.replace(/\\W/, function (m) {\n      return \"\\\\\".concat(m);\n    }), \")\").concat(options.require_symbol ? '' : '?'),\n    negative = '-?',\n    whole_dollar_amount_without_sep = '[1-9]\\\\d*',\n    whole_dollar_amount_with_sep = \"[1-9]\\\\d{0,2}(\\\\\".concat(options.thousands_separator, \"\\\\d{3})*\"),\n    valid_whole_dollar_amounts = ['0', whole_dollar_amount_without_sep, whole_dollar_amount_with_sep],\n    whole_dollar_amount = \"(\".concat(valid_whole_dollar_amounts.join('|'), \")?\"),\n    decimal_amount = \"(\\\\\".concat(options.decimal_separator, \"(\").concat(decimal_digits, \"))\").concat(options.require_decimal ? '' : '?');\n  var pattern = whole_dollar_amount + (options.allow_decimal || options.require_decimal ? decimal_amount : '');\n\n  // default is negative sign before symbol, but there are two other options (besides parens)\n  if (options.allow_negatives && !options.parens_for_negatives) {\n    if (options.negative_sign_after_digits) {\n      pattern += negative;\n    } else if (options.negative_sign_before_digits) {\n      pattern = negative + pattern;\n    }\n  }\n\n  // South African Rand, for example, uses R 123 (space) and R-123 (no space)\n  if (options.allow_negative_sign_placeholder) {\n    pattern = \"( (?!\\\\-))?\".concat(pattern);\n  } else if (options.allow_space_after_symbol) {\n    pattern = \" ?\".concat(pattern);\n  } else if (options.allow_space_after_digits) {\n    pattern += '( (?!$))?';\n  }\n  if (options.symbol_after_digits) {\n    pattern += symbol;\n  } else {\n    pattern = symbol + pattern;\n  }\n  if (options.allow_negatives) {\n    if (options.parens_for_negatives) {\n      pattern = \"(\\\\(\".concat(pattern, \"\\\\)|\").concat(pattern, \")\");\n    } else if (!(options.negative_sign_before_digits || options.negative_sign_after_digits)) {\n      pattern = negative + pattern;\n    }\n  }\n\n  // ensure there's a dollar and/or decimal amount, and that\n  // it doesn't start with a space or a negative sign followed by a space\n  return new RegExp(\"^(?!-? )(?=.*\\\\d)\".concat(pattern, \"$\"));\n}\nvar default_currency_options = {\n  symbol: '$',\n  require_symbol: false,\n  allow_space_after_symbol: false,\n  symbol_after_digits: false,\n  allow_negatives: true,\n  parens_for_negatives: false,\n  negative_sign_before_digits: false,\n  negative_sign_after_digits: false,\n  allow_negative_sign_placeholder: false,\n  thousands_separator: ',',\n  decimal_separator: '.',\n  allow_decimal: true,\n  require_decimal: false,\n  digits_after_decimal: [2],\n  allow_space_after_digits: false\n};\nfunction isCurrency(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_currency_options);\n  return currencyRegex(options).test(str);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBtcAddress;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar bech32 = /^(bc1)[a-z0-9]{25,39}$/;\nvar base58 = /^(1|3)[A-HJ-NP-Za-km-z1-9]{25,39}$/;\nfunction isBtcAddress(str) {\n  (0, _assertString.default)(str);\n  return bech32.test(str) || base58.test(str);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isFreightContainerID = void 0;\nexports.isISO6346 = isISO6346;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n// https://en.wikipedia.org/wiki/ISO_6346\n// according to ISO6346 standard, checksum digit is mandatory for freight container but recommended\n// for other container types (J and Z)\nvar isISO6346Str = /^[A-Z]{3}(U[0-9]{7})|([J,Z][0-9]{6,7})$/;\nvar isDigit = /^[0-9]$/;\nfunction isISO6346(str) {\n  (0, _assertString.default)(str);\n  str = str.toUpperCase();\n  if (!isISO6346Str.test(str)) return false;\n  if (str.length === 11) {\n    var sum = 0;\n    for (var i = 0; i < str.length - 1; i++) {\n      if (!isDigit.test(str[i])) {\n        var convertedCode = void 0;\n        var letterCode = str.charCodeAt(i) - 55;\n        if (letterCode < 11) convertedCode = letterCode;else if (letterCode >= 11 && letterCode <= 20) convertedCode = 12 + letterCode % 11;else if (letterCode >= 21 && letterCode <= 30) convertedCode = 23 + letterCode % 21;else convertedCode = 34 + letterCode % 31;\n        sum += convertedCode * Math.pow(2, i);\n      } else sum += str[i] * Math.pow(2, i);\n    }\n    var checkSumDigit = sum % 11;\n    return Number(str[str.length - 1]) === checkSumDigit;\n  }\n  return true;\n}\nvar isFreightContainerID = exports.isFreightContainerID = isISO6346;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISO6391;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar isISO6391Set = new Set(['aa', 'ab', 'ae', 'af', 'ak', 'am', 'an', 'ar', 'as', 'av', 'ay', 'az', 'az', 'ba', 'be', 'bg', 'bh', 'bi', 'bm', 'bn', 'bo', 'br', 'bs', 'ca', 'ce', 'ch', 'co', 'cr', 'cs', 'cu', 'cv', 'cy', 'da', 'de', 'dv', 'dz', 'ee', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fa', 'ff', 'fi', 'fj', 'fo', 'fr', 'fy', 'ga', 'gd', 'gl', 'gn', 'gu', 'gv', 'ha', 'he', 'hi', 'ho', 'hr', 'ht', 'hu', 'hy', 'hz', 'ia', 'id', 'ie', 'ig', 'ii', 'ik', 'io', 'is', 'it', 'iu', 'ja', 'jv', 'ka', 'kg', 'ki', 'kj', 'kk', 'kl', 'km', 'kn', 'ko', 'kr', 'ks', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lg', 'li', 'ln', 'lo', 'lt', 'lu', 'lv', 'mg', 'mh', 'mi', 'mk', 'ml', 'mn', 'mr', 'ms', 'mt', 'my', 'na', 'nb', 'nd', 'ne', 'ng', 'nl', 'nn', 'no', 'nr', 'nv', 'ny', 'oc', 'oj', 'om', 'or', 'os', 'pa', 'pi', 'pl', 'ps', 'pt', 'qu', 'rm', 'rn', 'ro', 'ru', 'rw', 'sa', 'sc', 'sd', 'se', 'sg', 'si', 'sk', 'sl', 'sm', 'sn', 'so', 'sq', 'sr', 'ss', 'st', 'su', 'sv', 'sw', 'ta', 'te', 'tg', 'th', 'ti', 'tk', 'tl', 'tn', 'to', 'tr', 'ts', 'tt', 'tw', 'ty', 'ug', 'uk', 'ur', 'uz', 've', 'vi', 'vo', 'wa', 'wo', 'xh', 'yi', 'yo', 'za', 'zh', 'zu']);\nfunction isISO6391(str) {\n  (0, _assertString.default)(str);\n  return isISO6391Set.has(str);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISO8601;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/* eslint-disable max-len */\n// from http://goo.gl/0ejHHW\nvar iso8601 = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/;\n// same as above, except with a strict 'T' separator between date and time\nvar iso8601StrictSeparator = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/;\n/* eslint-enable max-len */\nvar isValidDate = function isValidDate(str) {\n  // str must have passed the ISO8601 check\n  // this check is meant to catch invalid dates\n  // like 2009-02-31\n  // first check for ordinal dates\n  var ordinalMatch = str.match(/^(\\d{4})-?(\\d{3})([ T]{1}\\.*|$)/);\n  if (ordinalMatch) {\n    var oYear = Number(ordinalMatch[1]);\n    var oDay = Number(ordinalMatch[2]);\n    // if is leap year\n    if (oYear % 4 === 0 && oYear % 100 !== 0 || oYear % 400 === 0) return oDay <= 366;\n    return oDay <= 365;\n  }\n  var match = str.match(/(\\d{4})-?(\\d{0,2})-?(\\d*)/).map(Number);\n  var year = match[1];\n  var month = match[2];\n  var day = match[3];\n  var monthString = month ? \"0\".concat(month).slice(-2) : month;\n  var dayString = day ? \"0\".concat(day).slice(-2) : day;\n\n  // create a date object and compare\n  var d = new Date(\"\".concat(year, \"-\").concat(monthString || '01', \"-\").concat(dayString || '01'));\n  if (month && day) {\n    return d.getUTCFullYear() === year && d.getUTCMonth() + 1 === month && d.getUTCDate() === day;\n  }\n  return true;\n};\nfunction isISO8601(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  (0, _assertString.default)(str);\n  var check = options.strictSeparator ? iso8601StrictSeparator.test(str) : iso8601.test(str);\n  if (check && options.strict) return isValidDate(str);\n  return check;\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isRFC3339;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/* Based on https://tools.ietf.org/html/rfc3339#section-5.6 */\n\nvar dateFullYear = /[0-9]{4}/;\nvar dateMonth = /(0[1-9]|1[0-2])/;\nvar dateMDay = /([12]\\d|0[1-9]|3[01])/;\nvar timeHour = /([01][0-9]|2[0-3])/;\nvar timeMinute = /[0-5][0-9]/;\nvar timeSecond = /([0-5][0-9]|60)/;\nvar timeSecFrac = /(\\.[0-9]+)?/;\nvar timeNumOffset = new RegExp(\"[-+]\".concat(timeHour.source, \":\").concat(timeMinute.source));\nvar timeOffset = new RegExp(\"([zZ]|\".concat(timeNumOffset.source, \")\"));\nvar partialTime = new RegExp(\"\".concat(timeHour.source, \":\").concat(timeMinute.source, \":\").concat(timeSecond.source).concat(timeSecFrac.source));\nvar fullDate = new RegExp(\"\".concat(dateFullYear.source, \"-\").concat(dateMonth.source, \"-\").concat(dateMDay.source));\nvar fullTime = new RegExp(\"\".concat(partialTime.source).concat(timeOffset.source));\nvar rfc3339 = new RegExp(\"^\".concat(fullDate.source, \"[ tT]\").concat(fullTime.source, \"$\"));\nfunction isRFC3339(str) {\n  (0, _assertString.default)(str);\n  return rfc3339.test(str);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISO31661Alpha3;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n// from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3\nvar validISO31661Alpha3CountriesCodes = new Set(['AFG', 'ALA', 'ALB', 'DZA', 'ASM', 'AND', 'AGO', 'AIA', 'ATA', 'ATG', 'ARG', 'ARM', 'ABW', 'AUS', 'AUT', 'AZE', 'BHS', 'BHR', 'BGD', 'BRB', 'BLR', 'BEL', 'BLZ', 'BEN', 'BMU', 'BTN', 'BOL', 'BES', 'BIH', 'BWA', 'BVT', 'BRA', 'IOT', 'BRN', 'BGR', 'BFA', 'BDI', 'KHM', 'CMR', 'CAN', 'CPV', 'CYM', 'CAF', 'TCD', 'CHL', 'CHN', 'CXR', 'CCK', 'COL', 'COM', 'COG', 'COD', 'COK', 'CRI', 'CIV', 'HRV', 'CUB', 'CUW', 'CYP', 'CZE', 'DNK', 'DJI', 'DMA', 'DOM', 'ECU', 'EGY', 'SLV', 'GNQ', 'ERI', 'EST', 'ETH', 'FLK', 'FRO', 'FJI', 'FIN', 'FRA', 'GUF', 'PYF', 'ATF', 'GAB', 'GMB', 'GEO', 'DEU', 'GHA', 'GIB', 'GRC', 'GRL', 'GRD', 'GLP', 'GUM', 'GTM', 'GGY', 'GIN', 'GNB', 'GUY', 'HTI', 'HMD', 'VAT', 'HND', 'HKG', 'HUN', 'ISL', 'IND', 'IDN', 'IRN', 'IRQ', 'IRL', 'IMN', 'ISR', 'ITA', 'JAM', 'JPN', 'JEY', 'JOR', 'KAZ', 'KEN', 'KIR', 'PRK', 'KOR', 'KWT', 'KGZ', 'LAO', 'LVA', 'LBN', 'LSO', 'LBR', 'LBY', 'LIE', 'LTU', 'LUX', 'MAC', 'MKD', 'MDG', 'MWI', 'MYS', 'MDV', 'MLI', 'MLT', 'MHL', 'MTQ', 'MRT', 'MUS', 'MYT', 'MEX', 'FSM', 'MDA', 'MCO', 'MNG', 'MNE', 'MSR', 'MAR', 'MOZ', 'MMR', 'NAM', 'NRU', 'NPL', 'NLD', 'NCL', 'NZL', 'NIC', 'NER', 'NGA', 'NIU', 'NFK', 'MNP', 'NOR', 'OMN', 'PAK', 'PLW', 'PSE', 'PAN', 'PNG', 'PRY', 'PER', 'PHL', 'PCN', 'POL', 'PRT', 'PRI', 'QAT', 'REU', 'ROU', 'RUS', 'RWA', 'BLM', 'SHN', 'KNA', 'LCA', 'MAF', 'SPM', 'VCT', 'WSM', 'SMR', 'STP', 'SAU', 'SEN', 'SRB', 'SYC', 'SLE', 'SGP', 'SXM', 'SVK', 'SVN', 'SLB', 'SOM', 'ZAF', 'SGS', 'SSD', 'ESP', 'LKA', 'SDN', 'SUR', 'SJM', 'SWZ', 'SWE', 'CHE', 'SYR', 'TWN', 'TJK', 'TZA', 'THA', 'TLS', 'TGO', 'TKL', 'TON', 'TTO', 'TUN', 'TUR', 'TKM', 'TCA', 'TUV', 'UGA', 'UKR', 'ARE', 'GBR', 'USA', 'UMI', 'URY', 'UZB', 'VUT', 'VEN', 'VNM', 'VGB', 'VIR', 'WLF', 'ESH', 'YEM', 'ZMB', 'ZWE']);\nfunction isISO31661Alpha3(str) {\n  (0, _assertString.default)(str);\n  return validISO31661Alpha3CountriesCodes.has(str.toUpperCase());\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CurrencyCodes = void 0;\nexports.default = isISO4217;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n// from https://en.wikipedia.org/wiki/ISO_4217\nvar validISO4217CurrencyCodes = new Set(['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BOV', 'BRL', 'BSD', 'BTN', 'BWP', 'BYN', 'BZD', 'CAD', 'CDF', 'CHE', 'CHF', 'CHW', 'CLF', 'CLP', 'CNY', 'COP', 'COU', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'INR', 'IQD', 'IRR', 'ISK', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRU', 'MUR', 'MVR', 'MWK', 'MXN', 'MXV', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLE', 'SLL', 'SOS', 'SRD', 'SSP', 'STN', 'SVC', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'USN', 'UYI', 'UYU', 'UYW', 'UZS', 'VES', 'VND', 'VUV', 'WST', 'XAF', 'XAG', 'XAU', 'XBA', 'XBB', 'XBC', 'XBD', 'XCD', 'XDR', 'XOF', 'XPD', 'XPF', 'XPT', 'XSU', 'XTS', 'XUA', 'XXX', 'YER', 'ZAR', 'ZMW', 'ZWL']);\nfunction isISO4217(str) {\n  (0, _assertString.default)(str);\n  return validISO4217CurrencyCodes.has(str.toUpperCase());\n}\nvar CurrencyCodes = exports.CurrencyCodes = validISO4217CurrencyCodes;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBase32;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar base32 = /^[A-Z2-7]+=*$/;\nvar crockfordBase32 = /^[A-HJKMNP-TV-Z0-9]+$/;\nvar defaultBase32Options = {\n  crockford: false\n};\nfunction isBase32(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, defaultBase32Options);\n  if (options.crockford) {\n    return crockfordBase32.test(str);\n  }\n  var len = str.length;\n  if (len % 8 === 0 && base32.test(str)) {\n    return true;\n  }\n  return false;\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBase58;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n// Accepted chars - 123456789ABCDEFGH JKLMN PQRSTUVWXYZabcdefghijk mnopqrstuvwxyz\nvar base58Reg = /^[A-HJ-NP-Za-km-z1-9]*$/;\nfunction isBase58(str) {\n  (0, _assertString.default)(str);\n  if (base58Reg.test(str)) {\n    return true;\n  }\n  return false;\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isDataURI;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar validMediaType = /^[a-z]+\\/[a-z0-9\\-\\+\\._]+$/i;\nvar validAttribute = /^[a-z\\-]+=[a-z0-9\\-]+$/i;\nvar validData = /^[a-z0-9!\\$&'\\(\\)\\*\\+,;=\\-\\._~:@\\/\\?%\\s]*$/i;\nfunction isDataURI(str) {\n  (0, _assertString.default)(str);\n  var data = str.split(',');\n  if (data.length < 2) {\n    return false;\n  }\n  var attributes = data.shift().trim().split(';');\n  var schemeAndMediaType = attributes.shift();\n  if (schemeAndMediaType.slice(0, 5) !== 'data:') {\n    return false;\n  }\n  var mediaType = schemeAndMediaType.slice(5);\n  if (mediaType !== '' && !validMediaType.test(mediaType)) {\n    return false;\n  }\n  for (var i = 0; i < attributes.length; i++) {\n    if (!(i === attributes.length - 1 && attributes[i].toLowerCase() === 'base64') && !validAttribute.test(attributes[i])) {\n      return false;\n    }\n  }\n  for (var _i = 0; _i < data.length; _i++) {\n    if (!validData.test(data[_i])) {\n      return false;\n    }\n  }\n  return true;\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMagnetURI;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar magnetURIComponent = /(?:^magnet:\\?|[^?&]&)xt(?:\\.1)?=urn:(?:(?:aich|bitprint|btih|ed2k|ed2khash|kzhash|md5|sha1|tree:tiger):[a-z0-9]{32}(?:[a-z0-9]{8})?|btmh:1220[a-z0-9]{64})(?:$|&)/i;\nfunction isMagnetURI(url) {\n  (0, _assertString.default)(url);\n  if (url.indexOf('magnet:?') !== 0) {\n    return false;\n  }\n  return magnetURIComponent.test(url);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rtrim;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction rtrim(str, chars) {\n  (0, _assertString.default)(str);\n  if (chars) {\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping\n    var pattern = new RegExp(\"[\".concat(chars.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), \"]+$\"), 'g');\n    return str.replace(pattern, '');\n  }\n  // Use a faster and more safe than regex trim method https://blog.stevenlevithan.com/archives/faster-trim-javascript\n  var strIndex = str.length - 1;\n  while (/\\s/.test(str.charAt(strIndex))) {\n    strIndex -= 1;\n  }\n  return str.slice(0, strIndex + 1);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ltrim;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction ltrim(str, chars) {\n  (0, _assertString.default)(str);\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping\n  var pattern = chars ? new RegExp(\"^[\".concat(chars.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), \"]+\"), 'g') : /^\\s+/g;\n  return str.replace(pattern, '');\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = trim;\nvar _rtrim = _interopRequireDefault(require(\"./rtrim\"));\nvar _ltrim = _interopRequireDefault(require(\"./ltrim\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction trim(str, chars) {\n  return (0, _rtrim.default)((0, _ltrim.default)(str, chars), chars);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMailtoURI;\nvar _trim = _interopRequireDefault(require(\"./trim\"));\nvar _isEmail = _interopRequireDefault(require(\"./isEmail\"));\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction parseMailtoQueryString(queryString) {\n  var allowedParams = new Set(['subject', 'body', 'cc', 'bcc']),\n    query = {\n      cc: '',\n      bcc: ''\n    };\n  var isParseFailed = false;\n  var queryParams = queryString.split('&');\n  if (queryParams.length > 4) {\n    return false;\n  }\n  var _iterator = _createForOfIteratorHelper(queryParams),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var q = _step.value;\n      var _q$split = q.split('='),\n        _q$split2 = _slicedToArray(_q$split, 2),\n        key = _q$split2[0],\n        value = _q$split2[1];\n\n      // checked for invalid and duplicated query params\n      if (key && !allowedParams.has(key)) {\n        isParseFailed = true;\n        break;\n      }\n      if (value && (key === 'cc' || key === 'bcc')) {\n        query[key] = value;\n      }\n      if (key) {\n        allowedParams.delete(key);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return isParseFailed ? false : query;\n}\nfunction isMailtoURI(url, options) {\n  (0, _assertString.default)(url);\n  if (url.indexOf('mailto:') !== 0) {\n    return false;\n  }\n  var _url$replace$split = url.replace('mailto:', '').split('?'),\n    _url$replace$split2 = _slicedToArray(_url$replace$split, 2),\n    to = _url$replace$split2[0],\n    _url$replace$split2$ = _url$replace$split2[1],\n    queryString = _url$replace$split2$ === void 0 ? '' : _url$replace$split2$;\n  if (!to && !queryString) {\n    return true;\n  }\n  var query = parseMailtoQueryString(queryString);\n  if (!query) {\n    return false;\n  }\n  return \"\".concat(to, \",\").concat(query.cc, \",\").concat(query.bcc).split(',').every(function (email) {\n    email = (0, _trim.default)(email, ' ');\n    if (email) {\n      return (0, _isEmail.default)(email, options);\n    }\n    return true;\n  });\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMimeType;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/*\n  Checks if the provided string matches to a correct Media type format (MIME type)\n\n  This function only checks is the string format follows the\n  etablished rules by the according RFC specifications.\n  This function supports 'charset' in textual media types\n  (https://tools.ietf.org/html/rfc6657).\n\n  This function does not check against all the media types listed\n  by the IANA (https://www.iana.org/assignments/media-types/media-types.xhtml)\n  because of lightness purposes : it would require to include\n  all these MIME types in this librairy, which would weigh it\n  significantly. This kind of effort maybe is not worth for the use that\n  this function has in this entire librairy.\n\n  More informations in the RFC specifications :\n  - https://tools.ietf.org/html/rfc2045\n  - https://tools.ietf.org/html/rfc2046\n  - https://tools.ietf.org/html/rfc7231#section-3.1.1.1\n  - https://tools.ietf.org/html/rfc7231#section-3.1.1.5\n*/\n\n// Match simple MIME types\n// NB :\n//   Subtype length must not exceed 100 characters.\n//   This rule does not comply to the RFC specs (what is the max length ?).\nvar mimeTypeSimple = /^(application|audio|font|image|message|model|multipart|text|video)\\/[a-zA-Z0-9\\.\\-\\+_]{1,100}$/i; // eslint-disable-line max-len\n\n// Handle \"charset\" in \"text/*\"\nvar mimeTypeText = /^text\\/[a-zA-Z0-9\\.\\-\\+]{1,100};\\s?charset=(\"[a-zA-Z0-9\\.\\-\\+\\s]{0,70}\"|[a-zA-Z0-9\\.\\-\\+]{0,70})(\\s?\\([a-zA-Z0-9\\.\\-\\+\\s]{1,20}\\))?$/i; // eslint-disable-line max-len\n\n// Handle \"boundary\" in \"multipart/*\"\nvar mimeTypeMultipart = /^multipart\\/[a-zA-Z0-9\\.\\-\\+]{1,100}(;\\s?(boundary|charset)=(\"[a-zA-Z0-9\\.\\-\\+\\s]{0,70}\"|[a-zA-Z0-9\\.\\-\\+]{0,70})(\\s?\\([a-zA-Z0-9\\.\\-\\+\\s]{1,20}\\))?){0,2}$/i; // eslint-disable-line max-len\n\nfunction isMimeType(str) {\n  (0, _assertString.default)(str);\n  return mimeTypeSimple.test(str) || mimeTypeText.test(str) || mimeTypeMultipart.test(str);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isLatLong;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar lat = /^\\(?[+-]?(90(\\.0+)?|[1-8]?\\d(\\.\\d+)?)$/;\nvar long = /^\\s?[+-]?(180(\\.0+)?|1[0-7]\\d(\\.\\d+)?|\\d{1,2}(\\.\\d+)?)\\)?$/;\nvar latDMS = /^(([1-8]?\\d)\\D+([1-5]?\\d|60)\\D+([1-5]?\\d|60)(\\.\\d+)?|90\\D+0\\D+0)\\D+[NSns]?$/i;\nvar longDMS = /^\\s*([1-7]?\\d{1,2}\\D+([1-5]?\\d|60)\\D+([1-5]?\\d|60)(\\.\\d+)?|180\\D+0\\D+0)\\D+[EWew]?$/i;\nvar defaultLatLongOptions = {\n  checkDMS: false\n};\nfunction isLatLong(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, defaultLatLongOptions);\n  if (!str.includes(',')) return false;\n  var pair = str.split(',');\n  if (pair[0].startsWith('(') && !pair[1].endsWith(')') || pair[1].endsWith(')') && !pair[0].startsWith('(')) return false;\n  if (options.checkDMS) {\n    return latDMS.test(pair[0]) && longDMS.test(pair[1]);\n  }\n  return lat.test(pair[0]) && long.test(pair[1]);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isPostalCode;\nexports.locales = void 0;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n// common patterns\nvar threeDigit = /^\\d{3}$/;\nvar fourDigit = /^\\d{4}$/;\nvar fiveDigit = /^\\d{5}$/;\nvar sixDigit = /^\\d{6}$/;\nvar patterns = {\n  AD: /^AD\\d{3}$/,\n  AT: fourDigit,\n  AU: fourDigit,\n  AZ: /^AZ\\d{4}$/,\n  BA: /^([7-8]\\d{4}$)/,\n  BE: fourDigit,\n  BG: fourDigit,\n  BR: /^\\d{5}-\\d{3}$/,\n  BY: /^2[1-4]\\d{4}$/,\n  CA: /^[ABCEGHJKLMNPRSTVXY]\\d[ABCEGHJ-NPRSTV-Z][\\s\\-]?\\d[ABCEGHJ-NPRSTV-Z]\\d$/i,\n  CH: fourDigit,\n  CN: /^(0[1-7]|1[012356]|2[0-7]|3[0-6]|4[0-7]|5[1-7]|6[1-7]|7[1-5]|8[1345]|9[09])\\d{4}$/,\n  CZ: /^\\d{3}\\s?\\d{2}$/,\n  DE: fiveDigit,\n  DK: fourDigit,\n  DO: fiveDigit,\n  DZ: fiveDigit,\n  EE: fiveDigit,\n  ES: /^(5[0-2]{1}|[0-4]{1}\\d{1})\\d{3}$/,\n  FI: fiveDigit,\n  FR: /^\\d{2}\\s?\\d{3}$/,\n  GB: /^(gir\\s?0aa|[a-z]{1,2}\\d[\\da-z]?\\s?(\\d[a-z]{2})?)$/i,\n  GR: /^\\d{3}\\s?\\d{2}$/,\n  HR: /^([1-5]\\d{4}$)/,\n  HT: /^HT\\d{4}$/,\n  HU: fourDigit,\n  ID: fiveDigit,\n  IE: /^(?!.*(?:o))[A-Za-z]\\d[\\dw]\\s\\w{4}$/i,\n  IL: /^(\\d{5}|\\d{7})$/,\n  IN: /^((?!10|29|35|54|55|65|66|86|87|88|89)[1-9][0-9]{5})$/,\n  IR: /^(?!(\\d)\\1{3})[13-9]{4}[1346-9][013-9]{5}$/,\n  IS: threeDigit,\n  IT: fiveDigit,\n  JP: /^\\d{3}\\-\\d{4}$/,\n  KE: fiveDigit,\n  KR: /^(\\d{5}|\\d{6})$/,\n  LI: /^(948[5-9]|949[0-7])$/,\n  LT: /^LT\\-\\d{5}$/,\n  LU: fourDigit,\n  LV: /^LV\\-\\d{4}$/,\n  LK: fiveDigit,\n  MG: threeDigit,\n  MX: fiveDigit,\n  MT: /^[A-Za-z]{3}\\s{0,1}\\d{4}$/,\n  MY: fiveDigit,\n  NL: /^[1-9]\\d{3}\\s?(?!sa|sd|ss)[a-z]{2}$/i,\n  NO: fourDigit,\n  NP: /^(10|21|22|32|33|34|44|45|56|57)\\d{3}$|^(977)$/i,\n  NZ: fourDigit,\n  PL: /^\\d{2}\\-\\d{3}$/,\n  PR: /^00[679]\\d{2}([ -]\\d{4})?$/,\n  PT: /^\\d{4}\\-\\d{3}?$/,\n  RO: sixDigit,\n  RU: sixDigit,\n  SA: fiveDigit,\n  SE: /^[1-9]\\d{2}\\s?\\d{2}$/,\n  SG: sixDigit,\n  SI: fourDigit,\n  SK: /^\\d{3}\\s?\\d{2}$/,\n  TH: fiveDigit,\n  TN: fourDigit,\n  TW: /^\\d{3}(\\d{2})?$/,\n  UA: fiveDigit,\n  US: /^\\d{5}(-\\d{4})?$/,\n  ZA: fourDigit,\n  ZM: fiveDigit\n};\nvar locales = exports.locales = Object.keys(patterns);\nfunction isPostalCode(str, locale) {\n  (0, _assertString.default)(str);\n  if (locale in patterns) {\n    return patterns[locale].test(str);\n  } else if (locale === 'any') {\n    for (var key in patterns) {\n      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n      // istanbul ignore else\n      if (patterns.hasOwnProperty(key)) {\n        var pattern = patterns[key];\n        if (pattern.test(str)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = escape;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction escape(str) {\n  (0, _assertString.default)(str);\n  return str.replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#x27;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\//g, '&#x2F;').replace(/\\\\/g, '&#x5C;').replace(/`/g, '&#96;');\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = unescape;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction unescape(str) {\n  (0, _assertString.default)(str);\n  return str.replace(/&quot;/g, '\"').replace(/&#x27;/g, \"'\").replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&#x2F;/g, '/').replace(/&#x5C;/g, '\\\\').replace(/&#96;/g, '`').replace(/&amp;/g, '&');\n  // &amp; replacement has to be the last one to prevent\n  // bugs with intermediate strings containing escape sequences\n  // See: https://github.com/validatorjs/validator.js/issues/1827\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = blacklist;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction blacklist(str, chars) {\n  (0, _assertString.default)(str);\n  return str.replace(new RegExp(\"[\".concat(chars, \"]+\"), 'g'), '');\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stripLow;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar _blacklist = _interopRequireDefault(require(\"./blacklist\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction stripLow(str, keep_new_lines) {\n  (0, _assertString.default)(str);\n  var chars = keep_new_lines ? '\\\\x00-\\\\x09\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F' : '\\\\x00-\\\\x1F\\\\x7F';\n  return (0, _blacklist.default)(str, chars);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = whitelist;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction whitelist(str, chars) {\n  (0, _assertString.default)(str);\n  return str.replace(new RegExp(\"[^\".concat(chars, \"]+\"), 'g'), '');\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isWhitelisted;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction isWhitelisted(str, chars) {\n  (0, _assertString.default)(str);\n  for (var i = str.length - 1; i >= 0; i--) {\n    if (chars.indexOf(str[i]) === -1) {\n      return false;\n    }\n  }\n  return true;\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = normalizeEmail;\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar default_normalize_email_options = {\n  // The following options apply to all email addresses\n  // Lowercases the local part of the email address.\n  // Please note this may violate RFC 5321 as per http://stackoverflow.com/a/9808332/192024).\n  // The domain is always lowercased, as per RFC 1035\n  all_lowercase: true,\n  // The following conversions are specific to GMail\n  // Lowercases the local part of the GMail address (known to be case-insensitive)\n  gmail_lowercase: true,\n  // Removes dots from the local part of the email address, as that's ignored by GMail\n  gmail_remove_dots: true,\n  // Removes the subaddress (e.g. \"+foo\") from the email address\n  gmail_remove_subaddress: true,\n  // Conversts the googlemail.com domain to gmail.com\n  gmail_convert_googlemaildotcom: true,\n  // The following conversions are specific to Outlook.com / Windows Live / Hotmail\n  // Lowercases the local part of the Outlook.com address (known to be case-insensitive)\n  outlookdotcom_lowercase: true,\n  // Removes the subaddress (e.g. \"+foo\") from the email address\n  outlookdotcom_remove_subaddress: true,\n  // The following conversions are specific to Yahoo\n  // Lowercases the local part of the Yahoo address (known to be case-insensitive)\n  yahoo_lowercase: true,\n  // Removes the subaddress (e.g. \"-foo\") from the email address\n  yahoo_remove_subaddress: true,\n  // The following conversions are specific to Yandex\n  // Lowercases the local part of the Yandex address (known to be case-insensitive)\n  yandex_lowercase: true,\n  // The following conversions are specific to iCloud\n  // Lowercases the local part of the iCloud address (known to be case-insensitive)\n  icloud_lowercase: true,\n  // Removes the subaddress (e.g. \"+foo\") from the email address\n  icloud_remove_subaddress: true\n};\n\n// List of domains used by iCloud\nvar icloud_domains = ['icloud.com', 'me.com'];\n\n// List of domains used by Outlook.com and its predecessors\n// This list is likely incomplete.\n// Partial reference:\n// https://blogs.office.com/2013/04/17/outlook-com-gets-two-step-verification-sign-in-by-alias-and-new-international-domains/\nvar outlookdotcom_domains = ['hotmail.at', 'hotmail.be', 'hotmail.ca', 'hotmail.cl', 'hotmail.co.il', 'hotmail.co.nz', 'hotmail.co.th', 'hotmail.co.uk', 'hotmail.com', 'hotmail.com.ar', 'hotmail.com.au', 'hotmail.com.br', 'hotmail.com.gr', 'hotmail.com.mx', 'hotmail.com.pe', 'hotmail.com.tr', 'hotmail.com.vn', 'hotmail.cz', 'hotmail.de', 'hotmail.dk', 'hotmail.es', 'hotmail.fr', 'hotmail.hu', 'hotmail.id', 'hotmail.ie', 'hotmail.in', 'hotmail.it', 'hotmail.jp', 'hotmail.kr', 'hotmail.lv', 'hotmail.my', 'hotmail.ph', 'hotmail.pt', 'hotmail.sa', 'hotmail.sg', 'hotmail.sk', 'live.be', 'live.co.uk', 'live.com', 'live.com.ar', 'live.com.mx', 'live.de', 'live.es', 'live.eu', 'live.fr', 'live.it', 'live.nl', 'msn.com', 'outlook.at', 'outlook.be', 'outlook.cl', 'outlook.co.il', 'outlook.co.nz', 'outlook.co.th', 'outlook.com', 'outlook.com.ar', 'outlook.com.au', 'outlook.com.br', 'outlook.com.gr', 'outlook.com.pe', 'outlook.com.tr', 'outlook.com.vn', 'outlook.cz', 'outlook.de', 'outlook.dk', 'outlook.es', 'outlook.fr', 'outlook.hu', 'outlook.id', 'outlook.ie', 'outlook.in', 'outlook.it', 'outlook.jp', 'outlook.kr', 'outlook.lv', 'outlook.my', 'outlook.ph', 'outlook.pt', 'outlook.sa', 'outlook.sg', 'outlook.sk', 'passport.com'];\n\n// List of domains used by Yahoo Mail\n// This list is likely incomplete\nvar yahoo_domains = ['rocketmail.com', 'yahoo.ca', 'yahoo.co.uk', 'yahoo.com', 'yahoo.de', 'yahoo.fr', 'yahoo.in', 'yahoo.it', 'ymail.com'];\n\n// List of domains used by yandex.ru\nvar yandex_domains = ['yandex.ru', 'yandex.ua', 'yandex.kz', 'yandex.com', 'yandex.by', 'ya.ru'];\n\n// replace single dots, but not multiple consecutive dots\nfunction dotsReplacer(match) {\n  if (match.length > 1) {\n    return match;\n  }\n  return '';\n}\nfunction normalizeEmail(email, options) {\n  options = (0, _merge.default)(options, default_normalize_email_options);\n  var raw_parts = email.split('@');\n  var domain = raw_parts.pop();\n  var user = raw_parts.join('@');\n  var parts = [user, domain];\n\n  // The domain is always lowercased, as it's case-insensitive per RFC 1035\n  parts[1] = parts[1].toLowerCase();\n  if (parts[1] === 'gmail.com' || parts[1] === 'googlemail.com') {\n    // Address is GMail\n    if (options.gmail_remove_subaddress) {\n      parts[0] = parts[0].split('+')[0];\n    }\n    if (options.gmail_remove_dots) {\n      // this does not replace consecutive dots like example..email@gmail.com\n      parts[0] = parts[0].replace(/\\.+/g, dotsReplacer);\n    }\n    if (!parts[0].length) {\n      return false;\n    }\n    if (options.all_lowercase || options.gmail_lowercase) {\n      parts[0] = parts[0].toLowerCase();\n    }\n    parts[1] = options.gmail_convert_googlemaildotcom ? 'gmail.com' : parts[1];\n  } else if (icloud_domains.indexOf(parts[1]) >= 0) {\n    // Address is iCloud\n    if (options.icloud_remove_subaddress) {\n      parts[0] = parts[0].split('+')[0];\n    }\n    if (!parts[0].length) {\n      return false;\n    }\n    if (options.all_lowercase || options.icloud_lowercase) {\n      parts[0] = parts[0].toLowerCase();\n    }\n  } else if (outlookdotcom_domains.indexOf(parts[1]) >= 0) {\n    // Address is Outlook.com\n    if (options.outlookdotcom_remove_subaddress) {\n      parts[0] = parts[0].split('+')[0];\n    }\n    if (!parts[0].length) {\n      return false;\n    }\n    if (options.all_lowercase || options.outlookdotcom_lowercase) {\n      parts[0] = parts[0].toLowerCase();\n    }\n  } else if (yahoo_domains.indexOf(parts[1]) >= 0) {\n    // Address is Yahoo\n    if (options.yahoo_remove_subaddress) {\n      var components = parts[0].split('-');\n      parts[0] = components.length > 1 ? components.slice(0, -1).join('-') : components[0];\n    }\n    if (!parts[0].length) {\n      return false;\n    }\n    if (options.all_lowercase || options.yahoo_lowercase) {\n      parts[0] = parts[0].toLowerCase();\n    }\n  } else if (yandex_domains.indexOf(parts[1]) >= 0) {\n    if (options.all_lowercase || options.yandex_lowercase) {\n      parts[0] = parts[0].toLowerCase();\n    }\n    parts[1] = 'yandex.ru'; // all yandex domains are equal, 1st preferred\n  } else if (options.all_lowercase) {\n    // Any other address\n    parts[0] = parts[0].toLowerCase();\n  }\n  return parts.join('@');\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isSlug;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar charsetRegex = /^[^\\s-_](?!.*?[-_]{2,})[a-z0-9-\\\\][^\\s]*[^-_\\s]$/;\nfunction isSlug(str) {\n  (0, _assertString.default)(str);\n  return charsetRegex.test(str);\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isLicensePlate;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar validators = {\n  'cs-CZ': function csCZ(str) {\n    return /^(([ABCDEFHIJKLMNPRSTUVXYZ]|[0-9])-?){5,8}$/.test(str);\n  },\n  'de-DE': function deDE(str) {\n    return /^((A|AA|AB|AC|AE|AH|AK|AM|AN|AÖ|AP|AS|AT|AU|AW|AZ|B|BA|BB|BC|BE|BF|BH|BI|BK|BL|BM|BN|BO|BÖ|BS|BT|BZ|C|CA|CB|CE|CO|CR|CW|D|DA|DD|DE|DH|DI|DL|DM|DN|DO|DU|DW|DZ|E|EA|EB|ED|EE|EF|EG|EH|EI|EL|EM|EN|ER|ES|EU|EW|F|FB|FD|FF|FG|FI|FL|FN|FO|FR|FS|FT|FÜ|FW|FZ|G|GA|GC|GD|GE|GF|GG|GI|GK|GL|GM|GN|GÖ|GP|GR|GS|GT|GÜ|GV|GW|GZ|H|HA|HB|HC|HD|HE|HF|HG|HH|HI|HK|HL|HM|HN|HO|HP|HR|HS|HU|HV|HX|HY|HZ|IK|IL|IN|IZ|J|JE|JL|K|KA|KB|KC|KE|KF|KG|KH|KI|KK|KL|KM|KN|KO|KR|KS|KT|KU|KW|KY|L|LA|LB|LC|LD|LF|LG|LH|LI|LL|LM|LN|LÖ|LP|LR|LU|M|MA|MB|MC|MD|ME|MG|MH|MI|MK|ML|MM|MN|MO|MQ|MR|MS|MÜ|MW|MY|MZ|N|NB|ND|NE|NF|NH|NI|NK|NM|NÖ|NP|NR|NT|NU|NW|NY|NZ|OA|OB|OC|OD|OE|OF|OG|OH|OK|OL|OP|OS|OZ|P|PA|PB|PE|PF|PI|PL|PM|PN|PR|PS|PW|PZ|R|RA|RC|RD|RE|RG|RH|RI|RL|RM|RN|RO|RP|RS|RT|RU|RV|RW|RZ|S|SB|SC|SE|SG|SI|SK|SL|SM|SN|SO|SP|SR|ST|SU|SW|SY|SZ|TE|TF|TG|TO|TP|TR|TS|TT|TÜ|ÜB|UE|UH|UL|UM|UN|V|VB|VG|VK|VR|VS|W|WA|WB|WE|WF|WI|WK|WL|WM|WN|WO|WR|WS|WT|WÜ|WW|WZ|Z|ZE|ZI|ZP|ZR|ZW|ZZ)[- ]?[A-Z]{1,2}[- ]?\\d{1,4}|(ABG|ABI|AIB|AIC|ALF|ALZ|ANA|ANG|ANK|APD|ARN|ART|ASL|ASZ|AUR|AZE|BAD|BAR|BBG|BCH|BED|BER|BGD|BGL|BID|BIN|BIR|BIT|BIW|BKS|BLB|BLK|BNA|BOG|BOH|BOR|BOT|BRA|BRB|BRG|BRK|BRL|BRV|BSB|BSK|BTF|BÜD|BUL|BÜR|BÜS|BÜZ|CAS|CHA|CLP|CLZ|COC|COE|CUX|DAH|DAN|DAU|DBR|DEG|DEL|DGF|DIL|DIN|DIZ|DKB|DLG|DON|DUD|DÜW|EBE|EBN|EBS|ECK|EIC|EIL|EIN|EIS|EMD|EMS|ERB|ERH|ERK|ERZ|ESB|ESW|FDB|FDS|FEU|FFB|FKB|FLÖ|FOR|FRG|FRI|FRW|FTL|FÜS|GAN|GAP|GDB|GEL|GEO|GER|GHA|GHC|GLA|GMN|GNT|GOA|GOH|GRA|GRH|GRI|GRM|GRZ|GTH|GUB|GUN|GVM|HAB|HAL|HAM|HAS|HBN|HBS|HCH|HDH|HDL|HEB|HEF|HEI|HER|HET|HGN|HGW|HHM|HIG|HIP|HMÜ|HOG|HOH|HOL|HOM|HOR|HÖS|HOT|HRO|HSK|HST|HVL|HWI|IGB|ILL|JÜL|KEH|KEL|KEM|KIB|KLE|KLZ|KÖN|KÖT|KÖZ|KRU|KÜN|KUS|KYF|LAN|LAU|LBS|LBZ|LDK|LDS|LEO|LER|LEV|LIB|LIF|LIP|LÖB|LOS|LRO|LSZ|LÜN|LUP|LWL|MAB|MAI|MAK|MAL|MED|MEG|MEI|MEK|MEL|MER|MET|MGH|MGN|MHL|MIL|MKK|MOD|MOL|MON|MOS|MSE|MSH|MSP|MST|MTK|MTL|MÜB|MÜR|MYK|MZG|NAB|NAI|NAU|NDH|NEA|NEB|NEC|NEN|NES|NEW|NMB|NMS|NOH|NOL|NOM|NOR|NVP|NWM|OAL|OBB|OBG|OCH|OHA|ÖHR|OHV|OHZ|OPR|OSL|OVI|OVL|OVP|PAF|PAN|PAR|PCH|PEG|PIR|PLÖ|PRÜ|QFT|QLB|RDG|REG|REH|REI|RID|RIE|ROD|ROF|ROK|ROL|ROS|ROT|ROW|RSL|RÜD|RÜG|SAB|SAD|SAN|SAW|SBG|SBK|SCZ|SDH|SDL|SDT|SEB|SEE|SEF|SEL|SFB|SFT|SGH|SHA|SHG|SHK|SHL|SIG|SIM|SLE|SLF|SLK|SLN|SLS|SLÜ|SLZ|SMÜ|SOB|SOG|SOK|SÖM|SON|SPB|SPN|SRB|SRO|STA|STB|STD|STE|STL|SUL|SÜW|SWA|SZB|TBB|TDO|TET|TIR|TÖL|TUT|UEM|UER|UFF|USI|VAI|VEC|VER|VIB|VIE|VIT|VOH|WAF|WAK|WAN|WAR|WAT|WBS|WDA|WEL|WEN|WER|WES|WHV|WIL|WIS|WIT|WIZ|WLG|WMS|WND|WOB|WOH|WOL|WOR|WOS|WRN|WSF|WST|WSW|WTL|WTM|WUG|WÜM|WUN|WUR|WZL|ZEL|ZIG)[- ]?(([A-Z][- ]?\\d{1,4})|([A-Z]{2}[- ]?\\d{1,3})))[- ]?(E|H)?$/.test(str);\n  },\n  'de-LI': function deLI(str) {\n    return /^FL[- ]?\\d{1,5}[UZ]?$/.test(str);\n  },\n  'en-IN': function enIN(str) {\n    return /^[A-Z]{2}[ -]?[0-9]{1,2}(?:[ -]?[A-Z])(?:[ -]?[A-Z]*)?[ -]?[0-9]{4}$/.test(str);\n  },\n  'es-AR': function esAR(str) {\n    return /^(([A-Z]{2} ?[0-9]{3} ?[A-Z]{2})|([A-Z]{3} ?[0-9]{3}))$/.test(str);\n  },\n  'fi-FI': function fiFI(str) {\n    return /^(?=.{4,7})(([A-Z]{1,3}|[0-9]{1,3})[\\s-]?([A-Z]{1,3}|[0-9]{1,5}))$/.test(str);\n  },\n  'hu-HU': function huHU(str) {\n    return /^((((?!AAA)(([A-NPRSTVZWXY]{1})([A-PR-Z]{1})([A-HJ-NPR-Z]))|(A[ABC]I)|A[ABC]O|A[A-W]Q|BPI|BPO|UCO|UDO|XAO)-(?!000)\\d{3})|(M\\d{6})|((CK|DT|CD|HC|H[ABEFIKLMNPRSTVX]|MA|OT|R[A-Z]) \\d{2}-\\d{2})|(CD \\d{3}-\\d{3})|(C-(C|X) \\d{4})|(X-(A|B|C) \\d{4})|(([EPVZ]-\\d{5}))|(S A[A-Z]{2} \\d{2})|(SP \\d{2}-\\d{2}))$/.test(str);\n  },\n  'pt-BR': function ptBR(str) {\n    return /^[A-Z]{3}[ -]?[0-9][A-Z][0-9]{2}|[A-Z]{3}[ -]?[0-9]{4}$/.test(str);\n  },\n  'pt-PT': function ptPT(str) {\n    return /^([A-Z]{2}|[0-9]{2})[ -·]?([A-Z]{2}|[0-9]{2})[ -·]?([A-Z]{2}|[0-9]{2})$/.test(str);\n  },\n  'sq-AL': function sqAL(str) {\n    return /^[A-Z]{2}[- ]?((\\d{3}[- ]?(([A-Z]{2})|T))|(R[- ]?\\d{3}))$/.test(str);\n  },\n  'sv-SE': function svSE(str) {\n    return /^[A-HJ-PR-UW-Z]{3} ?[\\d]{2}[A-HJ-PR-UW-Z1-9]$|(^[A-ZÅÄÖ ]{2,7}$)/.test(str.trim());\n  },\n  'en-PK': function enPK(str) {\n    return /(^[A-Z]{2}((\\s|-){0,1})[0-9]{3,4}((\\s|-)[0-9]{2}){0,1}$)|(^[A-Z]{3}((\\s|-){0,1})[0-9]{3,4}((\\s|-)[0-9]{2}){0,1}$)|(^[A-Z]{4}((\\s|-){0,1})[0-9]{3,4}((\\s|-)[0-9]{2}){0,1}$)|(^[A-Z]((\\s|-){0,1})[0-9]{4}((\\s|-)[0-9]{2}){0,1}$)/.test(str.trim());\n  }\n};\nfunction isLicensePlate(str, locale) {\n  (0, _assertString.default)(str);\n  if (locale in validators) {\n    return validators[locale](str);\n  } else if (locale === 'any') {\n    for (var key in validators) {\n      /* eslint guard-for-in: 0 */\n      var validator = validators[key];\n      if (validator(str)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isStrongPassword;\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar upperCaseRegex = /^[A-Z]$/;\nvar lowerCaseRegex = /^[a-z]$/;\nvar numberRegex = /^[0-9]$/;\nvar symbolRegex = /^[-#!$@£%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/\\\\ ]$/;\nvar defaultOptions = {\n  minLength: 8,\n  minLowercase: 1,\n  minUppercase: 1,\n  minNumbers: 1,\n  minSymbols: 1,\n  returnScore: false,\n  pointsPerUnique: 1,\n  pointsPerRepeat: 0.5,\n  pointsForContainingLower: 10,\n  pointsForContainingUpper: 10,\n  pointsForContainingNumber: 10,\n  pointsForContainingSymbol: 10\n};\n\n/* Counts number of occurrences of each char in a string\n * could be moved to util/ ?\n*/\nfunction countChars(str) {\n  var result = {};\n  Array.from(str).forEach(function (char) {\n    var curVal = result[char];\n    if (curVal) {\n      result[char] += 1;\n    } else {\n      result[char] = 1;\n    }\n  });\n  return result;\n}\n\n/* Return information about a password */\nfunction analyzePassword(password) {\n  var charMap = countChars(password);\n  var analysis = {\n    length: password.length,\n    uniqueChars: Object.keys(charMap).length,\n    uppercaseCount: 0,\n    lowercaseCount: 0,\n    numberCount: 0,\n    symbolCount: 0\n  };\n  Object.keys(charMap).forEach(function (char) {\n    /* istanbul ignore else */\n    if (upperCaseRegex.test(char)) {\n      analysis.uppercaseCount += charMap[char];\n    } else if (lowerCaseRegex.test(char)) {\n      analysis.lowercaseCount += charMap[char];\n    } else if (numberRegex.test(char)) {\n      analysis.numberCount += charMap[char];\n    } else if (symbolRegex.test(char)) {\n      analysis.symbolCount += charMap[char];\n    }\n  });\n  return analysis;\n}\nfunction scorePassword(analysis, scoringOptions) {\n  var points = 0;\n  points += analysis.uniqueChars * scoringOptions.pointsPerUnique;\n  points += (analysis.length - analysis.uniqueChars) * scoringOptions.pointsPerRepeat;\n  if (analysis.lowercaseCount > 0) {\n    points += scoringOptions.pointsForContainingLower;\n  }\n  if (analysis.uppercaseCount > 0) {\n    points += scoringOptions.pointsForContainingUpper;\n  }\n  if (analysis.numberCount > 0) {\n    points += scoringOptions.pointsForContainingNumber;\n  }\n  if (analysis.symbolCount > 0) {\n    points += scoringOptions.pointsForContainingSymbol;\n  }\n  return points;\n}\nfunction isStrongPassword(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  (0, _assertString.default)(str);\n  var analysis = analyzePassword(str);\n  options = (0, _merge.default)(options || {}, defaultOptions);\n  if (options.returnScore) {\n    return scorePassword(analysis, options);\n  }\n  return analysis.length >= options.minLength && analysis.lowercaseCount >= options.minLowercase && analysis.uppercaseCount >= options.minUppercase && analysis.numberCount >= options.minNumbers && analysis.symbolCount >= options.minSymbols;\n}\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isVAT;\nexports.vatMatchers = void 0;\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\nvar algorithms = _interopRequireWildcard(require(\"./util/algorithms\"));\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar AU = function AU(str) {\n  var match = str.match(/^(AU)?(\\d{11})$/);\n  if (!match) {\n    return false;\n  }\n  // @see {@link https://abr.business.gov.au/Help/AbnFormat}\n  var weights = [10, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19];\n  str = str.replace(/^AU/, '');\n  var ABN = (parseInt(str.slice(0, 1), 10) - 1).toString() + str.slice(1);\n  var total = 0;\n  for (var i = 0; i < 11; i++) {\n    total += weights[i] * ABN.charAt(i);\n  }\n  return total !== 0 && total % 89 === 0;\n};\nvar CH = function CH(str) {\n  // @see {@link https://www.ech.ch/de/ech/ech-0097/5.2.0}\n  var hasValidCheckNumber = function hasValidCheckNumber(digits) {\n    var lastDigit = digits.pop(); // used as check number\n    var weights = [5, 4, 3, 2, 7, 6, 5, 4];\n    var calculatedCheckNumber = (11 - digits.reduce(function (acc, el, idx) {\n      return acc + el * weights[idx];\n    }, 0) % 11) % 11;\n    return lastDigit === calculatedCheckNumber;\n  };\n\n  // @see {@link https://www.estv.admin.ch/estv/de/home/mehrwertsteuer/uid/mwst-uid-nummer.html}\n  return /^(CHE[- ]?)?(\\d{9}|(\\d{3}\\.\\d{3}\\.\\d{3})|(\\d{3} \\d{3} \\d{3})) ?(TVA|MWST|IVA)?$/.test(str) && hasValidCheckNumber(str.match(/\\d/g).map(function (el) {\n    return +el;\n  }));\n};\nvar PT = function PT(str) {\n  var match = str.match(/^(PT)?(\\d{9})$/);\n  if (!match) {\n    return false;\n  }\n  var tin = match[2];\n  var checksum = 11 - algorithms.reverseMultiplyAndSum(tin.split('').slice(0, 8).map(function (a) {\n    return parseInt(a, 10);\n  }), 9) % 11;\n  if (checksum > 9) {\n    return parseInt(tin[8], 10) === 0;\n  }\n  return checksum === parseInt(tin[8], 10);\n};\nvar vatMatchers = exports.vatMatchers = {\n  /**\r\n   * European Union VAT identification numbers\r\n   */\n  AT: function AT(str) {\n    return /^(AT)?U\\d{8}$/.test(str);\n  },\n  BE: function BE(str) {\n    return /^(BE)?\\d{10}$/.test(str);\n  },\n  BG: function BG(str) {\n    return /^(BG)?\\d{9,10}$/.test(str);\n  },\n  HR: function HR(str) {\n    return /^(HR)?\\d{11}$/.test(str);\n  },\n  CY: function CY(str) {\n    return /^(CY)?\\w{9}$/.test(str);\n  },\n  CZ: function CZ(str) {\n    return /^(CZ)?\\d{8,10}$/.test(str);\n  },\n  DK: function DK(str) {\n    return /^(DK)?\\d{8}$/.test(str);\n  },\n  EE: function EE(str) {\n    return /^(EE)?\\d{9}$/.test(str);\n  },\n  FI: function FI(str) {\n    return /^(FI)?\\d{8}$/.test(str);\n  },\n  FR: function FR(str) {\n    return /^(FR)?\\w{2}\\d{9}$/.test(str);\n  },\n  DE: function DE(str) {\n    return /^(DE)?\\d{9}$/.test(str);\n  },\n  EL: function EL(str) {\n    return /^(EL)?\\d{9}$/.test(str);\n  },\n  HU: function HU(str) {\n    return /^(HU)?\\d{8}$/.test(str);\n  },\n  IE: function IE(str) {\n    return /^(IE)?\\d{7}\\w{1}(W)?$/.test(str);\n  },\n  IT: function IT(str) {\n    return /^(IT)?\\d{11}$/.test(str);\n  },\n  LV: function LV(str) {\n    return /^(LV)?\\d{11}$/.test(str);\n  },\n  LT: function LT(str) {\n    return /^(LT)?\\d{9,12}$/.test(str);\n  },\n  LU: function LU(str) {\n    return /^(LU)?\\d{8}$/.test(str);\n  },\n  MT: function MT(str) {\n    return /^(MT)?\\d{8}$/.test(str);\n  },\n  NL: function NL(str) {\n    return /^(NL)?\\d{9}B\\d{2}$/.test(str);\n  },\n  PL: function PL(str) {\n    return /^(PL)?(\\d{10}|(\\d{3}-\\d{3}-\\d{2}-\\d{2})|(\\d{3}-\\d{2}-\\d{2}-\\d{3}))$/.test(str);\n  },\n  PT: PT,\n  RO: function RO(str) {\n    return /^(RO)?\\d{2,10}$/.test(str);\n  },\n  SK: function SK(str) {\n    return /^(SK)?\\d{10}$/.test(str);\n  },\n  SI: function SI(str) {\n    return /^(SI)?\\d{8}$/.test(str);\n  },\n  ES: function ES(str) {\n    return /^(ES)?\\w\\d{7}[A-Z]$/.test(str);\n  },\n  SE: function SE(str) {\n    return /^(SE)?\\d{12}$/.test(str);\n  },\n  /**\r\n   * VAT numbers of non-EU countries\r\n   */\n  AL: function AL(str) {\n    return /^(AL)?\\w{9}[A-Z]$/.test(str);\n  },\n  MK: function MK(str) {\n    return /^(MK)?\\d{13}$/.test(str);\n  },\n  AU: AU,\n  BY: function BY(str) {\n    return /^(УНП )?\\d{9}$/.test(str);\n  },\n  CA: function CA(str) {\n    return /^(CA)?\\d{9}$/.test(str);\n  },\n  IS: function IS(str) {\n    return /^(IS)?\\d{5,6}$/.test(str);\n  },\n  IN: function IN(str) {\n    return /^(IN)?\\d{15}$/.test(str);\n  },\n  ID: function ID(str) {\n    return /^(ID)?(\\d{15}|(\\d{2}.\\d{3}.\\d{3}.\\d{1}-\\d{3}.\\d{3}))$/.test(str);\n  },\n  IL: function IL(str) {\n    return /^(IL)?\\d{9}$/.test(str);\n  },\n  KZ: function KZ(str) {\n    return /^(KZ)?\\d{12}$/.test(str);\n  },\n  NZ: function NZ(str) {\n    return /^(NZ)?\\d{9}$/.test(str);\n  },\n  NG: function NG(str) {\n    return /^(NG)?(\\d{12}|(\\d{8}-\\d{4}))$/.test(str);\n  },\n  NO: function NO(str) {\n    return /^(NO)?\\d{9}MVA$/.test(str);\n  },\n  PH: function PH(str) {\n    return /^(PH)?(\\d{12}|\\d{3} \\d{3} \\d{3} \\d{3})$/.test(str);\n  },\n  RU: function RU(str) {\n    return /^(RU)?(\\d{10}|\\d{12})$/.test(str);\n  },\n  SM: function SM(str) {\n    return /^(SM)?\\d{5}$/.test(str);\n  },\n  SA: function SA(str) {\n    return /^(SA)?\\d{15}$/.test(str);\n  },\n  RS: function RS(str) {\n    return /^(RS)?\\d{9}$/.test(str);\n  },\n  CH: CH,\n  TR: function TR(str) {\n    return /^(TR)?\\d{10}$/.test(str);\n  },\n  UA: function UA(str) {\n    return /^(UA)?\\d{12}$/.test(str);\n  },\n  GB: function GB(str) {\n    return /^GB((\\d{3} \\d{4} ([0-8][0-9]|9[0-6]))|(\\d{9} \\d{3})|(((GD[0-4])|(HA[5-9]))[0-9]{2}))$/.test(str);\n  },\n  UZ: function UZ(str) {\n    return /^(UZ)?\\d{9}$/.test(str);\n  },\n  /**\r\n   * VAT numbers of Latin American countries\r\n   */\n  AR: function AR(str) {\n    return /^(AR)?\\d{11}$/.test(str);\n  },\n  BO: function BO(str) {\n    return /^(BO)?\\d{7}$/.test(str);\n  },\n  BR: function BR(str) {\n    return /^(BR)?((\\d{2}.\\d{3}.\\d{3}\\/\\d{4}-\\d{2})|(\\d{3}.\\d{3}.\\d{3}-\\d{2}))$/.test(str);\n  },\n  CL: function CL(str) {\n    return /^(CL)?\\d{8}-\\d{1}$/.test(str);\n  },\n  CO: function CO(str) {\n    return /^(CO)?\\d{10}$/.test(str);\n  },\n  CR: function CR(str) {\n    return /^(CR)?\\d{9,12}$/.test(str);\n  },\n  EC: function EC(str) {\n    return /^(EC)?\\d{13}$/.test(str);\n  },\n  SV: function SV(str) {\n    return /^(SV)?\\d{4}-\\d{6}-\\d{3}-\\d{1}$/.test(str);\n  },\n  GT: function GT(str) {\n    return /^(GT)?\\d{7}-\\d{1}$/.test(str);\n  },\n  HN: function HN(str) {\n    return /^(HN)?$/.test(str);\n  },\n  MX: function MX(str) {\n    return /^(MX)?\\w{3,4}\\d{6}\\w{3}$/.test(str);\n  },\n  NI: function NI(str) {\n    return /^(NI)?\\d{3}-\\d{6}-\\d{4}\\w{1}$/.test(str);\n  },\n  PA: function PA(str) {\n    return /^(PA)?$/.test(str);\n  },\n  PY: function PY(str) {\n    return /^(PY)?\\d{6,8}-\\d{1}$/.test(str);\n  },\n  PE: function PE(str) {\n    return /^(PE)?\\d{11}$/.test(str);\n  },\n  DO: function DO(str) {\n    return /^(DO)?(\\d{11}|(\\d{3}-\\d{7}-\\d{1})|[1,4,5]{1}\\d{8}|([1,4,5]{1})-\\d{2}-\\d{5}-\\d{1})$/.test(str);\n  },\n  UY: function UY(str) {\n    return /^(UY)?\\d{12}$/.test(str);\n  },\n  VE: function VE(str) {\n    return /^(VE)?[J,G,V,E]{1}-(\\d{9}|(\\d{8}-\\d{1}))$/.test(str);\n  }\n};\nfunction isVAT(str, countryCode) {\n  (0, _assertString.default)(str);\n  (0, _assertString.default)(countryCode);\n  if (countryCode in vatMatchers) {\n    return vatMatchers[countryCode](str);\n  }\n  throw new Error(\"Invalid country code: '\".concat(countryCode, \"'\"));\n}", "\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toDate = _interopRequireDefault(require(\"./lib/toDate\"));\nvar _toFloat = _interopRequireDefault(require(\"./lib/toFloat\"));\nvar _toInt = _interopRequireDefault(require(\"./lib/toInt\"));\nvar _toBoolean = _interopRequireDefault(require(\"./lib/toBoolean\"));\nvar _equals = _interopRequireDefault(require(\"./lib/equals\"));\nvar _contains = _interopRequireDefault(require(\"./lib/contains\"));\nvar _matches = _interopRequireDefault(require(\"./lib/matches\"));\nvar _isEmail = _interopRequireDefault(require(\"./lib/isEmail\"));\nvar _isURL = _interopRequireDefault(require(\"./lib/isURL\"));\nvar _isMACAddress = _interopRequireDefault(require(\"./lib/isMACAddress\"));\nvar _isIP = _interopRequireDefault(require(\"./lib/isIP\"));\nvar _isIPRange = _interopRequireDefault(require(\"./lib/isIPRange\"));\nvar _isFQDN = _interopRequireDefault(require(\"./lib/isFQDN\"));\nvar _isDate = _interopRequireDefault(require(\"./lib/isDate\"));\nvar _isTime = _interopRequireDefault(require(\"./lib/isTime\"));\nvar _isBoolean = _interopRequireDefault(require(\"./lib/isBoolean\"));\nvar _isLocale = _interopRequireDefault(require(\"./lib/isLocale\"));\nvar _isAbaRouting = _interopRequireDefault(require(\"./lib/isAbaRouting\"));\nvar _isAlpha = _interopRequireWildcard(require(\"./lib/isAlpha\"));\nvar _isAlphanumeric = _interopRequireWildcard(require(\"./lib/isAlphanumeric\"));\nvar _isNumeric = _interopRequireDefault(require(\"./lib/isNumeric\"));\nvar _isPassportNumber = _interopRequireDefault(require(\"./lib/isPassportNumber\"));\nvar _isPort = _interopRequireDefault(require(\"./lib/isPort\"));\nvar _isLowercase = _interopRequireDefault(require(\"./lib/isLowercase\"));\nvar _isUppercase = _interopRequireDefault(require(\"./lib/isUppercase\"));\nvar _isIMEI = _interopRequireDefault(require(\"./lib/isIMEI\"));\nvar _isAscii = _interopRequireDefault(require(\"./lib/isAscii\"));\nvar _isFullWidth = _interopRequireDefault(require(\"./lib/isFullWidth\"));\nvar _isHalfWidth = _interopRequireDefault(require(\"./lib/isHalfWidth\"));\nvar _isVariableWidth = _interopRequireDefault(require(\"./lib/isVariableWidth\"));\nvar _isMultibyte = _interopRequireDefault(require(\"./lib/isMultibyte\"));\nvar _isSemVer = _interopRequireDefault(require(\"./lib/isSemVer\"));\nvar _isSurrogatePair = _interopRequireDefault(require(\"./lib/isSurrogatePair\"));\nvar _isInt = _interopRequireDefault(require(\"./lib/isInt\"));\nvar _isFloat = _interopRequireWildcard(require(\"./lib/isFloat\"));\nvar _isDecimal = _interopRequireDefault(require(\"./lib/isDecimal\"));\nvar _isHexadecimal = _interopRequireDefault(require(\"./lib/isHexadecimal\"));\nvar _isOctal = _interopRequireDefault(require(\"./lib/isOctal\"));\nvar _isDivisibleBy = _interopRequireDefault(require(\"./lib/isDivisibleBy\"));\nvar _isHexColor = _interopRequireDefault(require(\"./lib/isHexColor\"));\nvar _isRgbColor = _interopRequireDefault(require(\"./lib/isRgbColor\"));\nvar _isHSL = _interopRequireDefault(require(\"./lib/isHSL\"));\nvar _isISRC = _interopRequireDefault(require(\"./lib/isISRC\"));\nvar _isIBAN = _interopRequireWildcard(require(\"./lib/isIBAN\"));\nvar _isBIC = _interopRequireDefault(require(\"./lib/isBIC\"));\nvar _isMD = _interopRequireDefault(require(\"./lib/isMD5\"));\nvar _isHash = _interopRequireDefault(require(\"./lib/isHash\"));\nvar _isJWT = _interopRequireDefault(require(\"./lib/isJWT\"));\nvar _isJSON = _interopRequireDefault(require(\"./lib/isJSON\"));\nvar _isEmpty = _interopRequireDefault(require(\"./lib/isEmpty\"));\nvar _isLength = _interopRequireDefault(require(\"./lib/isLength\"));\nvar _isByteLength = _interopRequireDefault(require(\"./lib/isByteLength\"));\nvar _isUUID = _interopRequireDefault(require(\"./lib/isUUID\"));\nvar _isMongoId = _interopRequireDefault(require(\"./lib/isMongoId\"));\nvar _isAfter = _interopRequireDefault(require(\"./lib/isAfter\"));\nvar _isBefore = _interopRequireDefault(require(\"./lib/isBefore\"));\nvar _isIn = _interopRequireDefault(require(\"./lib/isIn\"));\nvar _isLuhnNumber = _interopRequireDefault(require(\"./lib/isLuhnNumber\"));\nvar _isCreditCard = _interopRequireDefault(require(\"./lib/isCreditCard\"));\nvar _isIdentityCard = _interopRequireDefault(require(\"./lib/isIdentityCard\"));\nvar _isEAN = _interopRequireDefault(require(\"./lib/isEAN\"));\nvar _isISIN = _interopRequireDefault(require(\"./lib/isISIN\"));\nvar _isISBN = _interopRequireDefault(require(\"./lib/isISBN\"));\nvar _isISSN = _interopRequireDefault(require(\"./lib/isISSN\"));\nvar _isTaxID = _interopRequireDefault(require(\"./lib/isTaxID\"));\nvar _isMobilePhone = _interopRequireWildcard(require(\"./lib/isMobilePhone\"));\nvar _isEthereumAddress = _interopRequireDefault(require(\"./lib/isEthereumAddress\"));\nvar _isCurrency = _interopRequireDefault(require(\"./lib/isCurrency\"));\nvar _isBtcAddress = _interopRequireDefault(require(\"./lib/isBtcAddress\"));\nvar _isISO = require(\"./lib/isISO6346\");\nvar _isISO2 = _interopRequireDefault(require(\"./lib/isISO6391\"));\nvar _isISO3 = _interopRequireDefault(require(\"./lib/isISO8601\"));\nvar _isRFC = _interopRequireDefault(require(\"./lib/isRFC3339\"));\nvar _isISO31661Alpha = _interopRequireDefault(require(\"./lib/isISO31661Alpha2\"));\nvar _isISO31661Alpha2 = _interopRequireDefault(require(\"./lib/isISO31661Alpha3\"));\nvar _isISO4 = _interopRequireDefault(require(\"./lib/isISO4217\"));\nvar _isBase = _interopRequireDefault(require(\"./lib/isBase32\"));\nvar _isBase2 = _interopRequireDefault(require(\"./lib/isBase58\"));\nvar _isBase3 = _interopRequireDefault(require(\"./lib/isBase64\"));\nvar _isDataURI = _interopRequireDefault(require(\"./lib/isDataURI\"));\nvar _isMagnetURI = _interopRequireDefault(require(\"./lib/isMagnetURI\"));\nvar _isMailtoURI = _interopRequireDefault(require(\"./lib/isMailtoURI\"));\nvar _isMimeType = _interopRequireDefault(require(\"./lib/isMimeType\"));\nvar _isLatLong = _interopRequireDefault(require(\"./lib/isLatLong\"));\nvar _isPostalCode = _interopRequireWildcard(require(\"./lib/isPostalCode\"));\nvar _ltrim = _interopRequireDefault(require(\"./lib/ltrim\"));\nvar _rtrim = _interopRequireDefault(require(\"./lib/rtrim\"));\nvar _trim = _interopRequireDefault(require(\"./lib/trim\"));\nvar _escape = _interopRequireDefault(require(\"./lib/escape\"));\nvar _unescape = _interopRequireDefault(require(\"./lib/unescape\"));\nvar _stripLow = _interopRequireDefault(require(\"./lib/stripLow\"));\nvar _whitelist = _interopRequireDefault(require(\"./lib/whitelist\"));\nvar _blacklist = _interopRequireDefault(require(\"./lib/blacklist\"));\nvar _isWhitelisted = _interopRequireDefault(require(\"./lib/isWhitelisted\"));\nvar _normalizeEmail = _interopRequireDefault(require(\"./lib/normalizeEmail\"));\nvar _isSlug = _interopRequireDefault(require(\"./lib/isSlug\"));\nvar _isLicensePlate = _interopRequireDefault(require(\"./lib/isLicensePlate\"));\nvar _isStrongPassword = _interopRequireDefault(require(\"./lib/isStrongPassword\"));\nvar _isVAT = _interopRequireDefault(require(\"./lib/isVAT\"));\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar version = '13.12.0';\nvar validator = {\n  version: version,\n  toDate: _toDate.default,\n  toFloat: _toFloat.default,\n  toInt: _toInt.default,\n  toBoolean: _toBoolean.default,\n  equals: _equals.default,\n  contains: _contains.default,\n  matches: _matches.default,\n  isEmail: _isEmail.default,\n  isURL: _isURL.default,\n  isMACAddress: _isMACAddress.default,\n  isIP: _isIP.default,\n  isIPRange: _isIPRange.default,\n  isFQDN: _isFQDN.default,\n  isBoolean: _isBoolean.default,\n  isIBAN: _isIBAN.default,\n  isBIC: _isBIC.default,\n  isAbaRouting: _isAbaRouting.default,\n  isAlpha: _isAlpha.default,\n  isAlphaLocales: _isAlpha.locales,\n  isAlphanumeric: _isAlphanumeric.default,\n  isAlphanumericLocales: _isAlphanumeric.locales,\n  isNumeric: _isNumeric.default,\n  isPassportNumber: _isPassportNumber.default,\n  isPort: _isPort.default,\n  isLowercase: _isLowercase.default,\n  isUppercase: _isUppercase.default,\n  isAscii: _isAscii.default,\n  isFullWidth: _isFullWidth.default,\n  isHalfWidth: _isHalfWidth.default,\n  isVariableWidth: _isVariableWidth.default,\n  isMultibyte: _isMultibyte.default,\n  isSemVer: _isSemVer.default,\n  isSurrogatePair: _isSurrogatePair.default,\n  isInt: _isInt.default,\n  isIMEI: _isIMEI.default,\n  isFloat: _isFloat.default,\n  isFloatLocales: _isFloat.locales,\n  isDecimal: _isDecimal.default,\n  isHexadecimal: _isHexadecimal.default,\n  isOctal: _isOctal.default,\n  isDivisibleBy: _isDivisibleBy.default,\n  isHexColor: _isHexColor.default,\n  isRgbColor: _isRgbColor.default,\n  isHSL: _isHSL.default,\n  isISRC: _isISRC.default,\n  isMD5: _isMD.default,\n  isHash: _isHash.default,\n  isJWT: _isJWT.default,\n  isJSON: _isJSON.default,\n  isEmpty: _isEmpty.default,\n  isLength: _isLength.default,\n  isLocale: _isLocale.default,\n  isByteLength: _isByteLength.default,\n  isUUID: _isUUID.default,\n  isMongoId: _isMongoId.default,\n  isAfter: _isAfter.default,\n  isBefore: _isBefore.default,\n  isIn: _isIn.default,\n  isLuhnNumber: _isLuhnNumber.default,\n  isCreditCard: _isCreditCard.default,\n  isIdentityCard: _isIdentityCard.default,\n  isEAN: _isEAN.default,\n  isISIN: _isISIN.default,\n  isISBN: _isISBN.default,\n  isISSN: _isISSN.default,\n  isMobilePhone: _isMobilePhone.default,\n  isMobilePhoneLocales: _isMobilePhone.locales,\n  isPostalCode: _isPostalCode.default,\n  isPostalCodeLocales: _isPostalCode.locales,\n  isEthereumAddress: _isEthereumAddress.default,\n  isCurrency: _isCurrency.default,\n  isBtcAddress: _isBtcAddress.default,\n  isISO6346: _isISO.isISO6346,\n  isFreightContainerID: _isISO.isFreightContainerID,\n  isISO6391: _isISO2.default,\n  isISO8601: _isISO3.default,\n  isRFC3339: _isRFC.default,\n  isISO31661Alpha2: _isISO31661Alpha.default,\n  isISO31661Alpha3: _isISO31661Alpha2.default,\n  isISO4217: _isISO4.default,\n  isBase32: _isBase.default,\n  isBase58: _isBase2.default,\n  isBase64: _isBase3.default,\n  isDataURI: _isDataURI.default,\n  isMagnetURI: _isMagnetURI.default,\n  isMailtoURI: _isMailtoURI.default,\n  isMimeType: _isMimeType.default,\n  isLatLong: _isLatLong.default,\n  ltrim: _ltrim.default,\n  rtrim: _rtrim.default,\n  trim: _trim.default,\n  escape: _escape.default,\n  unescape: _unescape.default,\n  stripLow: _stripLow.default,\n  whitelist: _whitelist.default,\n  blacklist: _blacklist.default,\n  isWhitelisted: _isWhitelisted.default,\n  normalizeEmail: _normalizeEmail.default,\n  toString: toString,\n  isSlug: _isSlug.default,\n  isStrongPassword: _isStrongPassword.default,\n  isTaxID: _isTaxID.default,\n  isDate: _isDate.default,\n  isTime: _isTime.default,\n  isLicensePlate: _isLicensePlate.default,\n  isVAT: _isVAT.default,\n  ibanLocales: _isIBAN.locales\n};\nvar _default = exports.default = validator;\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n", "const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n", "const {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst safeSrc = exports.safeSrc = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  safeSrc[index] = safe\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCEPLAIN', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)\ncreateToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`)\ncreateToken('COERCEFULL', src[t.COERCEPLAIN] +\n              `(?:${src[t.PRERELEASE]})?` +\n              `(?:${src[t.BUILD]})?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\ncreateToken('COERCERTLFULL', src[t.COERCEFULL], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n", "// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n", "const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n", "const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, safeSrc: src, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n        version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('build compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    if (release.startsWith('pre')) {\n      if (!identifier && identifierBase === false) {\n        throw new Error('invalid increment argument: identifier is empty')\n      }\n      // Avoid an invalid semver results\n      if (identifier) {\n        const r = new RegExp(`^${this.options.loose ? src[t.PRERELEASELOOSE] : src[t.PRERELEASE]}$`)\n        const match = `-${identifier}`.match(r)\n        if (!match || match[1] !== identifier) {\n          throw new Error(`invalid identifier: ${identifier}`)\n        }\n      }\n    }\n\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'release':\n        if (this.prerelease.length === 0) {\n          throw new Error(`version ${this.raw} is not a prerelease`)\n        }\n        this.prerelease.length = 0\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n", "const SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n", "const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n", "const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n", "const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n", "const parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // If the main part has no difference\n    if (lowVersion.compareMain(highVersion) === 0) {\n      if (lowVersion.minor && !lowVersion.patch) {\n        return 'minor'\n      }\n      return 'patch'\n    }\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n", "const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n", "const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n", "const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n", "const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n", "const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n", "const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n", "const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n", "const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n", "const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n", "const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n", "const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n", "const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n", "const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n", "const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n", "const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n", "const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n", "const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n", "const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    // With includePrerelease option set, '1.2.3.4-rc' wants to coerce '2.3.4-rc', not '2.3.4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL]\n    let next\n    while ((next = coerceRtlRegex.exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    coerceRtlRegex.lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  const major = match[2]\n  const minor = match[3] || '0'\n  const patch = match[4] || '0'\n  const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : ''\n  const build = options.includePrerelease && match[6] ? `+${match[6]}` : ''\n\n  return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options)\n}\nmodule.exports = coerce\n", "class LRUCache {\n  constructor () {\n    this.max = 1000\n    this.map = new Map()\n  }\n\n  get (key) {\n    const value = this.map.get(key)\n    if (value === undefined) {\n      return undefined\n    } else {\n      // Remove the key from the map and add it to the end\n      this.map.delete(key)\n      this.map.set(key, value)\n      return value\n    }\n  }\n\n  delete (key) {\n    return this.map.delete(key)\n  }\n\n  set (key, value) {\n    const deleted = this.delete(key)\n\n    if (!deleted && value !== undefined) {\n      // If cache is full, delete the least recently used item\n      if (this.map.size >= this.max) {\n        const firstKey = this.map.keys().next().value\n        this.delete(firstKey)\n      }\n\n      this.map.set(key, value)\n    }\n\n    return this\n  }\n}\n\nmodule.exports = LRUCache\n", "const SPACE_CHARACTERS = /\\s+/g\n\n// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.formatted = undefined\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range.trim().replace(SPACE_CHARACTERS, ' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.formatted = undefined\n  }\n\n  get range () {\n    if (this.formatted === undefined) {\n      this.formatted = ''\n      for (let i = 0; i < this.set.length; i++) {\n        if (i > 0) {\n          this.formatted += '||'\n        }\n        const comps = this.set[i]\n        for (let k = 0; k < comps.length; k++) {\n          if (k > 0) {\n            this.formatted += ' '\n          }\n          this.formatted += comps[k].toString().trim()\n        }\n      }\n    }\n    return this.formatted\n  }\n\n  format () {\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('../internal/lrucache')\nconst cache = new LRU()\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\n// TODO build?\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n", "const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n", "const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n", "const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n", "const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n", "const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n", "const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n", "const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n", "const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n", "// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n", "const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n", "const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n", "// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n", "const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n", "// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n", "/*\n\n Copyright The Closure Library Authors.\n SPDX-License-Identifier: Apache-2.0\n*/\nvar aa=\"function\"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)},e=\"undefined\"!=typeof window&&window===this?this:\"undefined\"!=typeof global&&null!=global?global:this;function ba(a,b){if(b){var c=e;a=a.split(\".\");for(var d=0;d<a.length-1;d++){var f=a[d];f in c||(c[f]={});c=c[f]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&aa(c,a,{configurable:!0,writable:!0,value:b})}}\nfunction ca(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}}function da(){da=function(){};e.Symbol||(e.Symbol=ea)}function fa(a,b){this.a=a;aa(this,\"description\",{configurable:!0,writable:!0,value:b})}fa.prototype.toString=function(){return this.a};var ea=function(){function a(c){if(this instanceof a)throw new TypeError(\"Symbol is not a constructor\");return new fa(\"jscomp_symbol_\"+(c||\"\")+\"_\"+b++,c)}var b=0;return a}();\nfunction ha(){da();var a=e.Symbol.iterator;a||(a=e.Symbol.iterator=e.Symbol(\"Symbol.iterator\"));\"function\"!=typeof Array.prototype[a]&&aa(Array.prototype,a,{configurable:!0,writable:!0,value:function(){return ia(ca(this))}});ha=function(){}}function ia(a){ha();a={next:a};a[e.Symbol.iterator]=function(){return this};return a}\nfunction ja(a,b){ha();a instanceof String&&(a+=\"\");var c=0,d={next:function(){if(c<a.length){var f=c++;return{value:b(f,a[f]),done:!1}}d.next=function(){return{done:!0,value:void 0}};return d.next()}};d[Symbol.iterator]=function(){return d};return d}ba(\"Array.prototype.entries\",function(a){return a?a:function(){return ja(this,function(b,c){return[b,c]})}});var ka=this||self;\nfunction g(a,b,c){a=a.split(\".\");c=c||ka;a[0]in c||\"undefined\"==typeof c.execScript||c.execScript(\"var \"+a[0]);for(var d;a.length&&(d=a.shift());)a.length||void 0===b?c[d]&&c[d]!==Object.prototype[d]?c=c[d]:c=c[d]={}:c[d]=b}\nfunction k(a){var b=typeof a;if(\"object\"==b)if(a){if(a instanceof Array)return\"array\";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if(\"[object Window]\"==c)return\"object\";if(\"[object Array]\"==c||\"number\"==typeof a.length&&\"undefined\"!=typeof a.splice&&\"undefined\"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable(\"splice\"))return\"array\";if(\"[object Function]\"==c||\"undefined\"!=typeof a.call&&\"undefined\"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable(\"call\"))return\"function\"}else return\"null\";\nelse if(\"function\"==b&&\"undefined\"==typeof a.call)return\"object\";return b}function la(a){var b=typeof a;return\"object\"==b&&null!=a||\"function\"==b}function ma(a,b,c){g(a,b,c)}function na(a,b){function c(){}c.prototype=b.prototype;a.prototype=new c;a.prototype.constructor=a};var oa=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");function pa(a,b){for(var c,d,f=1;f<arguments.length;f++){d=arguments[f];for(c in d)a[c]=d[c];for(var h=0;h<oa.length;h++)c=oa[h],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}};var qa=Array.prototype.forEach?function(a,b){Array.prototype.forEach.call(a,b,void 0)}:function(a,b){for(var c=a.length,d=\"string\"===typeof a?a.split(\"\"):a,f=0;f<c;f++)f in d&&b.call(void 0,d[f],f,a)},l=Array.prototype.map?function(a,b){return Array.prototype.map.call(a,b,void 0)}:function(a,b){for(var c=a.length,d=Array(c),f=\"string\"===typeof a?a.split(\"\"):a,h=0;h<c;h++)h in f&&(d[h]=b.call(void 0,f[h],h,a));return d};\nfunction ra(a,b,c){return 2>=arguments.length?Array.prototype.slice.call(a,b):Array.prototype.slice.call(a,b,c)};function sa(a,b,c,d){var f=\"Assertion failed\";if(c){f+=\": \"+c;var h=d}else a&&(f+=\": \"+a,h=b);throw Error(f,h||[]);}function n(a,b,c){for(var d=[],f=2;f<arguments.length;++f)d[f-2]=arguments[f];a||sa(\"\",null,b,d);return a}function ta(a,b,c){for(var d=[],f=2;f<arguments.length;++f)d[f-2]=arguments[f];\"string\"!==typeof a&&sa(\"Expected string but got %s: %s.\",[k(a),a],b,d)}\nfunction ua(a,b,c){for(var d=[],f=2;f<arguments.length;++f)d[f-2]=arguments[f];Array.isArray(a)||sa(\"Expected array but got %s: %s.\",[k(a),a],b,d)}function p(a,b){for(var c=[],d=1;d<arguments.length;++d)c[d-1]=arguments[d];throw Error(\"Failure\"+(a?\": \"+a:\"\"),c);}function q(a,b,c,d){for(var f=[],h=3;h<arguments.length;++h)f[h-3]=arguments[h];a instanceof b||sa(\"Expected instanceof %s but got %s.\",[va(b),va(a)],c,f)}\nfunction va(a){return a instanceof Function?a.displayName||a.name||\"unknown type name\":a instanceof Object?a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a):null===a?\"null\":typeof a};function r(a,b){this.c=a;this.b=b;this.a={};this.arrClean=!0;if(0<this.c.length){for(a=0;a<this.c.length;a++){b=this.c[a];var c=b[0];this.a[c.toString()]=new wa(c,b[1])}this.arrClean=!0}}g(\"jspb.Map\",r,void 0);\nr.prototype.g=function(){if(this.arrClean){if(this.b){var a=this.a,b;for(b in a)if(Object.prototype.hasOwnProperty.call(a,b)){var c=a[b].a;c&&c.g()}}}else{this.c.length=0;a=u(this);a.sort();for(b=0;b<a.length;b++){var d=this.a[a[b]];(c=d.a)&&c.g();this.c.push([d.key,d.value])}this.arrClean=!0}return this.c};r.prototype.toArray=r.prototype.g;\nr.prototype.Mc=function(a,b){for(var c=this.g(),d=[],f=0;f<c.length;f++){var h=this.a[c[f][0].toString()];v(this,h);var m=h.a;m?(n(b),d.push([h.key,b(a,m)])):d.push([h.key,h.value])}return d};r.prototype.toObject=r.prototype.Mc;r.fromObject=function(a,b,c){b=new r([],b);for(var d=0;d<a.length;d++){var f=a[d][0],h=c(a[d][1]);b.set(f,h)}return b};function w(a){this.a=0;this.b=a}w.prototype.next=function(){return this.a<this.b.length?{done:!1,value:this.b[this.a++]}:{done:!0,value:void 0}};\n\"undefined\"!=typeof Symbol&&(w.prototype[Symbol.iterator]=function(){return this});r.prototype.Jb=function(){return u(this).length};r.prototype.getLength=r.prototype.Jb;r.prototype.clear=function(){this.a={};this.arrClean=!1};r.prototype.clear=r.prototype.clear;r.prototype.Cb=function(a){a=a.toString();var b=this.a.hasOwnProperty(a);delete this.a[a];this.arrClean=!1;return b};r.prototype.del=r.prototype.Cb;\nr.prototype.Eb=function(){var a=[],b=u(this);b.sort();for(var c=0;c<b.length;c++){var d=this.a[b[c]];a.push([d.key,d.value])}return a};r.prototype.getEntryList=r.prototype.Eb;r.prototype.entries=function(){var a=[],b=u(this);b.sort();for(var c=0;c<b.length;c++){var d=this.a[b[c]];a.push([d.key,v(this,d)])}return new w(a)};r.prototype.entries=r.prototype.entries;r.prototype.keys=function(){var a=[],b=u(this);b.sort();for(var c=0;c<b.length;c++)a.push(this.a[b[c]].key);return new w(a)};\nr.prototype.keys=r.prototype.keys;r.prototype.values=function(){var a=[],b=u(this);b.sort();for(var c=0;c<b.length;c++)a.push(v(this,this.a[b[c]]));return new w(a)};r.prototype.values=r.prototype.values;r.prototype.forEach=function(a,b){var c=u(this);c.sort();for(var d=0;d<c.length;d++){var f=this.a[c[d]];a.call(b,v(this,f),f.key,this)}};r.prototype.forEach=r.prototype.forEach;\nr.prototype.set=function(a,b){var c=new wa(a);this.b?(c.a=b,c.value=b.g()):c.value=b;this.a[a.toString()]=c;this.arrClean=!1;return this};r.prototype.set=r.prototype.set;function v(a,b){return a.b?(b.a||(b.a=new a.b(b.value)),b.a):b.value}r.prototype.get=function(a){if(a=this.a[a.toString()])return v(this,a)};r.prototype.get=r.prototype.get;r.prototype.has=function(a){return a.toString()in this.a};r.prototype.has=r.prototype.has;\nr.prototype.Jc=function(a,b,c,d,f){var h=u(this);h.sort();for(var m=0;m<h.length;m++){var t=this.a[h[m]];b.Va(a);c.call(b,1,t.key);this.b?d.call(b,2,v(this,t),f):d.call(b,2,t.value);b.Ya()}};r.prototype.serializeBinary=r.prototype.Jc;r.deserializeBinary=function(a,b,c,d,f,h,m){for(;b.oa()&&!b.bb();){var t=b.c;1==t?h=c.call(b):2==t&&(a.b?(n(f),m||(m=new a.b),d.call(b,m,f)):m=d.call(b))}n(void 0!=h);n(void 0!=m);a.set(h,m)};\nfunction u(a){a=a.a;var b=[],c;for(c in a)Object.prototype.hasOwnProperty.call(a,c)&&b.push(c);return b}function wa(a,b){this.key=a;this.value=b;this.a=void 0};function xa(a){if(8192>=a.length)return String.fromCharCode.apply(null,a);for(var b=\"\",c=0;c<a.length;c+=8192)b+=String.fromCharCode.apply(null,ra(a,c,c+8192));return b};var ya={\"\\x00\":\"\\\\0\",\"\\b\":\"\\\\b\",\"\\f\":\"\\\\f\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",\"\\t\":\"\\\\t\",\"\\x0B\":\"\\\\x0B\",'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\",\"<\":\"\\\\u003C\"},za={\"'\":\"\\\\'\"};var Aa={},x=null;function Ba(a,b){void 0===b&&(b=0);Ca();b=Aa[b];for(var c=[],d=0;d<a.length;d+=3){var f=a[d],h=d+1<a.length,m=h?a[d+1]:0,t=d+2<a.length,B=t?a[d+2]:0,M=f>>2;f=(f&3)<<4|m>>4;m=(m&15)<<2|B>>6;B&=63;t||(B=64,h||(m=64));c.push(b[M],b[f],b[m]||\"\",b[B]||\"\")}return c.join(\"\")}function Da(a){var b=a.length,c=3*b/4;c%3?c=Math.floor(c):-1!=\"=.\".indexOf(a[b-1])&&(c=-1!=\"=.\".indexOf(a[b-2])?c-2:c-1);var d=new Uint8Array(c),f=0;Ea(a,function(h){d[f++]=h});return d.subarray(0,f)}\nfunction Ea(a,b){function c(B){for(;d<a.length;){var M=a.charAt(d++),La=x[M];if(null!=La)return La;if(!/^[\\s\\xa0]*$/.test(M))throw Error(\"Unknown base64 encoding at char: \"+M);}return B}Ca();for(var d=0;;){var f=c(-1),h=c(0),m=c(64),t=c(64);if(64===t&&-1===f)break;b(f<<2|h>>4);64!=m&&(b(h<<4&240|m>>2),64!=t&&b(m<<6&192|t))}}\nfunction Ca(){if(!x){x={};for(var a=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\".split(\"\"),b=[\"+/=\",\"+/\",\"-_=\",\"-_.\",\"-_\"],c=0;5>c;c++){var d=a.concat(b[c].split(\"\"));Aa[c]=d;for(var f=0;f<d.length;f++){var h=d[f];void 0===x[h]&&(x[h]=f)}}}};g(\"jspb.ConstBinaryMessage\",function(){},void 0);g(\"jspb.BinaryMessage\",function(){},void 0);g(\"jspb.BinaryConstants.FieldType\",{yb:-1,ee:1,FLOAT:2,ke:3,te:4,je:5,xb:6,wb:7,BOOL:8,re:9,ie:10,le:11,ce:12,se:13,ge:14,me:15,ne:16,oe:17,pe:18,he:30,ve:31},void 0);g(\"jspb.BinaryConstants.WireType\",{yb:-1,ue:0,xb:1,de:2,qe:3,fe:4,wb:5},void 0);\ng(\"jspb.BinaryConstants.FieldTypeToWireType\",function(a){switch(a){case 5:case 3:case 13:case 4:case 17:case 18:case 8:case 14:case 31:return 0;case 1:case 6:case 16:case 30:return 1;case 9:case 11:case 12:return 2;case 2:case 7:case 15:return 5;default:return-1}},void 0);g(\"jspb.BinaryConstants.INVALID_FIELD_NUMBER\",-1,void 0);g(\"jspb.BinaryConstants.FLOAT32_EPS\",1.401298464324817E-45,void 0);g(\"jspb.BinaryConstants.FLOAT32_MIN\",1.1754943508222875E-38,void 0);\ng(\"jspb.BinaryConstants.FLOAT32_MAX\",3.4028234663852886E38,void 0);g(\"jspb.BinaryConstants.FLOAT64_EPS\",4.9E-324,void 0);g(\"jspb.BinaryConstants.FLOAT64_MIN\",2.2250738585072014E-308,void 0);g(\"jspb.BinaryConstants.FLOAT64_MAX\",1.7976931348623157E308,void 0);g(\"jspb.BinaryConstants.TWO_TO_20\",1048576,void 0);g(\"jspb.BinaryConstants.TWO_TO_23\",8388608,void 0);g(\"jspb.BinaryConstants.TWO_TO_31\",2147483648,void 0);g(\"jspb.BinaryConstants.TWO_TO_32\",4294967296,void 0);\ng(\"jspb.BinaryConstants.TWO_TO_52\",4503599627370496,void 0);g(\"jspb.BinaryConstants.TWO_TO_63\",0x7fffffffffffffff,void 0);g(\"jspb.BinaryConstants.TWO_TO_64\",1.8446744073709552E19,void 0);g(\"jspb.BinaryConstants.ZERO_HASH\",\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\",void 0);var y=0,z=0;g(\"jspb.utils.getSplit64Low\",function(){return y},void 0);g(\"jspb.utils.getSplit64High\",function(){return z},void 0);function Fa(a){var b=a>>>0;a=Math.floor((a-b)/4294967296)>>>0;y=b;z=a}g(\"jspb.utils.splitUint64\",Fa,void 0);function A(a){var b=0>a;a=Math.abs(a);var c=a>>>0;a=Math.floor((a-c)/4294967296);a>>>=0;b&&(a=~a>>>0,c=(~c>>>0)+1,4294967295<c&&(c=0,a++,4294967295<a&&(a=0)));y=c;z=a}g(\"jspb.utils.splitInt64\",A,void 0);\nfunction Ga(a){var b=0>a;a=2*Math.abs(a);Fa(a);a=y;var c=z;b&&(0==a?0==c?c=a=4294967295:(c--,a=4294967295):a--);y=a;z=c}g(\"jspb.utils.splitZigzag64\",Ga,void 0);\nfunction Ha(a){var b=0>a?1:0;a=b?-a:a;if(0===a)0<1/a?y=z=0:(z=0,y=2147483648);else if(isNaN(a))z=0,y=2147483647;else if(3.4028234663852886E38<a)z=0,y=(b<<31|2139095040)>>>0;else if(1.1754943508222875E-38>a)a=Math.round(a/Math.pow(2,-149)),z=0,y=(b<<31|a)>>>0;else{var c=Math.floor(Math.log(a)/Math.LN2);a*=Math.pow(2,-c);a=Math.round(8388608*a);16777216<=a&&++c;z=0;y=(b<<31|c+127<<23|a&8388607)>>>0}}g(\"jspb.utils.splitFloat32\",Ha,void 0);\nfunction Ia(a){var b=0>a?1:0;a=b?-a:a;if(0===a)z=0<1/a?0:2147483648,y=0;else if(isNaN(a))z=2147483647,y=4294967295;else if(1.7976931348623157E308<a)z=(b<<31|2146435072)>>>0,y=0;else if(2.2250738585072014E-308>a)a/=Math.pow(2,-1074),z=(b<<31|a/4294967296)>>>0,y=a>>>0;else{var c=a,d=0;if(2<=c)for(;2<=c&&1023>d;)d++,c/=2;else for(;1>c&&-1022<d;)c*=2,d--;a*=Math.pow(2,-d);z=(b<<31|d+1023<<20|1048576*a&1048575)>>>0;y=4503599627370496*a>>>0}}g(\"jspb.utils.splitFloat64\",Ia,void 0);\nfunction C(a){var b=a.charCodeAt(4),c=a.charCodeAt(5),d=a.charCodeAt(6),f=a.charCodeAt(7);y=a.charCodeAt(0)+(a.charCodeAt(1)<<8)+(a.charCodeAt(2)<<16)+(a.charCodeAt(3)<<24)>>>0;z=b+(c<<8)+(d<<16)+(f<<24)>>>0}g(\"jspb.utils.splitHash64\",C,void 0);function D(a,b){return 4294967296*b+(a>>>0)}g(\"jspb.utils.joinUint64\",D,void 0);function E(a,b){var c=b&2147483648;c&&(a=~a+1>>>0,b=~b>>>0,0==a&&(b=b+1>>>0));a=D(a,b);return c?-a:a}g(\"jspb.utils.joinInt64\",E,void 0);\nfunction Ja(a,b,c){var d=b>>31;return c(a<<1^d,(b<<1|a>>>31)^d)}g(\"jspb.utils.toZigzag64\",Ja,void 0);function Ka(a,b){return Ma(a,b,E)}g(\"jspb.utils.joinZigzag64\",Ka,void 0);function Ma(a,b,c){var d=-(a&1);return c((a>>>1|b<<31)^d,b>>>1^d)}g(\"jspb.utils.fromZigzag64\",Ma,void 0);function Na(a){var b=2*(a>>31)+1,c=a>>>23&255;a&=8388607;return 255==c?a?NaN:Infinity*b:0==c?b*Math.pow(2,-149)*a:b*Math.pow(2,c-150)*(a+Math.pow(2,23))}g(\"jspb.utils.joinFloat32\",Na,void 0);\nfunction Oa(a,b){var c=2*(b>>31)+1,d=b>>>20&2047;a=4294967296*(b&1048575)+a;return 2047==d?a?NaN:Infinity*c:0==d?c*Math.pow(2,-1074)*a:c*Math.pow(2,d-1075)*(a+4503599627370496)}g(\"jspb.utils.joinFloat64\",Oa,void 0);function Pa(a,b){return String.fromCharCode(a>>>0&255,a>>>8&255,a>>>16&255,a>>>24&255,b>>>0&255,b>>>8&255,b>>>16&255,b>>>24&255)}g(\"jspb.utils.joinHash64\",Pa,void 0);g(\"jspb.utils.DIGITS\",\"0123456789abcdef\".split(\"\"),void 0);\nfunction F(a,b){function c(f,h){f=f?String(f):\"\";return h?\"0000000\".slice(f.length)+f:f}if(2097151>=b)return\"\"+D(a,b);var d=(a>>>24|b<<8)>>>0&16777215;b=b>>16&65535;a=(a&16777215)+6777216*d+6710656*b;d+=8147497*b;b*=2;1E7<=a&&(d+=Math.floor(a/1E7),a%=1E7);1E7<=d&&(b+=Math.floor(d/1E7),d%=1E7);return c(b,0)+c(d,b)+c(a,1)}g(\"jspb.utils.joinUnsignedDecimalString\",F,void 0);function G(a,b){var c=b&2147483648;c&&(a=~a+1>>>0,b=~b+(0==a?1:0)>>>0);a=F(a,b);return c?\"-\"+a:a}\ng(\"jspb.utils.joinSignedDecimalString\",G,void 0);function Qa(a,b){C(a);a=y;var c=z;return b?G(a,c):F(a,c)}g(\"jspb.utils.hash64ToDecimalString\",Qa,void 0);g(\"jspb.utils.hash64ArrayToDecimalStrings\",function(a,b){for(var c=Array(a.length),d=0;d<a.length;d++)c[d]=Qa(a[d],b);return c},void 0);\nfunction H(a){function b(m,t){for(var B=0;8>B&&(1!==m||0<t);B++)t=m*f[B]+t,f[B]=t&255,t>>>=8}function c(){for(var m=0;8>m;m++)f[m]=~f[m]&255}n(0<a.length);var d=!1;\"-\"===a[0]&&(d=!0,a=a.slice(1));for(var f=[0,0,0,0,0,0,0,0],h=0;h<a.length;h++)b(10,a.charCodeAt(h)-48);d&&(c(),b(1,1));return xa(f)}g(\"jspb.utils.decimalStringToHash64\",H,void 0);g(\"jspb.utils.splitDecimalString\",function(a){C(H(a))},void 0);function Ra(a){return String.fromCharCode(10>a?48+a:87+a)}\nfunction Sa(a){return 97<=a?a-97+10:a-48}g(\"jspb.utils.hash64ToHexString\",function(a){var b=Array(18);b[0]=\"0\";b[1]=\"x\";for(var c=0;8>c;c++){var d=a.charCodeAt(7-c);b[2*c+2]=Ra(d>>4);b[2*c+3]=Ra(d&15)}return b.join(\"\")},void 0);g(\"jspb.utils.hexStringToHash64\",function(a){a=a.toLowerCase();n(18==a.length);n(\"0\"==a[0]);n(\"x\"==a[1]);for(var b=\"\",c=0;8>c;c++)b=String.fromCharCode(16*Sa(a.charCodeAt(2*c+2))+Sa(a.charCodeAt(2*c+3)))+b;return b},void 0);\ng(\"jspb.utils.hash64ToNumber\",function(a,b){C(a);a=y;var c=z;return b?E(a,c):D(a,c)},void 0);g(\"jspb.utils.numberToHash64\",function(a){A(a);return Pa(y,z)},void 0);g(\"jspb.utils.countVarints\",function(a,b,c){for(var d=0,f=b;f<c;f++)d+=a[f]>>7;return c-b-d},void 0);\ng(\"jspb.utils.countVarintFields\",function(a,b,c,d){var f=0;d*=8;if(128>d)for(;b<c&&a[b++]==d;)for(f++;;){var h=a[b++];if(0==(h&128))break}else for(;b<c;){for(h=d;128<h;){if(a[b]!=(h&127|128))return f;b++;h>>=7}if(a[b++]!=h)break;for(f++;h=a[b++],0!=(h&128););}return f},void 0);function Ta(a,b,c,d,f){var h=0;if(128>d)for(;b<c&&a[b++]==d;)h++,b+=f;else for(;b<c;){for(var m=d;128<m;){if(a[b++]!=(m&127|128))return h;m>>=7}if(a[b++]!=m)break;h++;b+=f}return h}\ng(\"jspb.utils.countFixed32Fields\",function(a,b,c,d){return Ta(a,b,c,8*d+5,4)},void 0);g(\"jspb.utils.countFixed64Fields\",function(a,b,c,d){return Ta(a,b,c,8*d+1,8)},void 0);g(\"jspb.utils.countDelimitedFields\",function(a,b,c,d){var f=0;for(d=8*d+2;b<c;){for(var h=d;128<h;){if(a[b++]!=(h&127|128))return f;h>>=7}if(a[b++]!=h)break;f++;for(var m=0,t=1;h=a[b++],m+=(h&127)*t,t*=128,0!=(h&128););b+=m}return f},void 0);\ng(\"jspb.utils.debugBytesToTextFormat\",function(a){var b='\"';if(a){a=Ua(a);for(var c=0;c<a.length;c++)b+=\"\\\\x\",16>a[c]&&(b+=\"0\"),b+=a[c].toString(16)}return b+'\"'},void 0);\ng(\"jspb.utils.debugScalarToTextFormat\",function(a){if(\"string\"===typeof a){a=String(a);for(var b=['\"'],c=0;c<a.length;c++){var d=a.charAt(c),f=d.charCodeAt(0),h=c+1,m;if(!(m=ya[d])){if(!(31<f&&127>f))if(f=d,f in za)d=za[f];else if(f in ya)d=za[f]=ya[f];else{m=f.charCodeAt(0);if(31<m&&127>m)d=f;else{if(256>m){if(d=\"\\\\x\",16>m||256<m)d+=\"0\"}else d=\"\\\\u\",4096>m&&(d+=\"0\");d+=m.toString(16).toUpperCase()}d=za[f]=d}m=d}b[h]=m}b.push('\"');a=b.join(\"\")}else a=a.toString();return a},void 0);\ng(\"jspb.utils.stringToByteArray\",function(a){for(var b=new Uint8Array(a.length),c=0;c<a.length;c++){var d=a.charCodeAt(c);if(255<d)throw Error(\"Conversion error: string contains codepoint outside of byte range\");b[c]=d}return b},void 0);\nfunction Ua(a){if(a.constructor===Uint8Array)return a;if(a.constructor===ArrayBuffer)return new Uint8Array(a);if(a.constructor===Array)return new Uint8Array(a);if(a.constructor===String)return Da(a);if(a instanceof Uint8Array)return new Uint8Array(a.buffer,a.byteOffset,a.byteLength);p(\"Type not convertible to Uint8Array.\");return new Uint8Array(0)}g(\"jspb.utils.byteSourceToUint8Array\",Ua,void 0);function I(a,b,c){this.b=null;this.a=this.c=this.h=0;this.v=!1;a&&this.H(a,b,c)}g(\"jspb.BinaryDecoder\",I,void 0);var Va=[];I.getInstanceCacheLength=function(){return Va.length};function Wa(a,b,c){if(Va.length){var d=Va.pop();a&&d.H(a,b,c);return d}return new I(a,b,c)}I.alloc=Wa;I.prototype.Ca=function(){this.clear();100>Va.length&&Va.push(this)};I.prototype.free=I.prototype.Ca;I.prototype.clone=function(){return Wa(this.b,this.h,this.c-this.h)};I.prototype.clone=I.prototype.clone;\nI.prototype.clear=function(){this.b=null;this.a=this.c=this.h=0;this.v=!1};I.prototype.clear=I.prototype.clear;I.prototype.Y=function(){return this.b};I.prototype.getBuffer=I.prototype.Y;I.prototype.H=function(a,b,c){this.b=Ua(a);this.h=void 0!==b?b:0;this.c=void 0!==c?this.h+c:this.b.length;this.a=this.h};I.prototype.setBlock=I.prototype.H;I.prototype.Db=function(){return this.c};I.prototype.getEnd=I.prototype.Db;I.prototype.setEnd=function(a){this.c=a};I.prototype.setEnd=I.prototype.setEnd;\nI.prototype.reset=function(){this.a=this.h};I.prototype.reset=I.prototype.reset;I.prototype.B=function(){return this.a};I.prototype.getCursor=I.prototype.B;I.prototype.Ma=function(a){this.a=a};I.prototype.setCursor=I.prototype.Ma;I.prototype.advance=function(a){this.a+=a;n(this.a<=this.c)};I.prototype.advance=I.prototype.advance;I.prototype.ya=function(){return this.a==this.c};I.prototype.atEnd=I.prototype.ya;I.prototype.Qb=function(){return this.a>this.c};I.prototype.pastEnd=I.prototype.Qb;\nI.prototype.getError=function(){return this.v||0>this.a||this.a>this.c};I.prototype.getError=I.prototype.getError;I.prototype.w=function(a){for(var b=128,c=0,d=0,f=0;4>f&&128<=b;f++)b=this.b[this.a++],c|=(b&127)<<7*f;128<=b&&(b=this.b[this.a++],c|=(b&127)<<28,d|=(b&127)>>4);if(128<=b)for(f=0;5>f&&128<=b;f++)b=this.b[this.a++],d|=(b&127)<<7*f+3;if(128>b)return a(c>>>0,d>>>0);p(\"Failed to read varint, encoding is invalid.\");this.v=!0};I.prototype.readSplitVarint64=I.prototype.w;\nI.prototype.ea=function(a){return this.w(function(b,c){return Ma(b,c,a)})};I.prototype.readSplitZigzagVarint64=I.prototype.ea;I.prototype.ta=function(a){var b=this.b,c=this.a;this.a+=8;for(var d=0,f=0,h=c+7;h>=c;h--)d=d<<8|b[h],f=f<<8|b[h+4];return a(d,f)};I.prototype.readSplitFixed64=I.prototype.ta;I.prototype.kb=function(){for(;this.b[this.a]&128;)this.a++;this.a++};I.prototype.skipVarint=I.prototype.kb;I.prototype.mb=function(a){for(;128<a;)this.a--,a>>>=7;this.a--};I.prototype.unskipVarint=I.prototype.mb;\nI.prototype.o=function(){var a=this.b;var b=a[this.a];var c=b&127;if(128>b)return this.a+=1,n(this.a<=this.c),c;b=a[this.a+1];c|=(b&127)<<7;if(128>b)return this.a+=2,n(this.a<=this.c),c;b=a[this.a+2];c|=(b&127)<<14;if(128>b)return this.a+=3,n(this.a<=this.c),c;b=a[this.a+3];c|=(b&127)<<21;if(128>b)return this.a+=4,n(this.a<=this.c),c;b=a[this.a+4];c|=(b&15)<<28;if(128>b)return this.a+=5,n(this.a<=this.c),c>>>0;this.a+=5;128<=a[this.a++]&&128<=a[this.a++]&&128<=a[this.a++]&&128<=a[this.a++]&&128<=\na[this.a++]&&n(!1);n(this.a<=this.c);return c};I.prototype.readUnsignedVarint32=I.prototype.o;I.prototype.da=function(){return~~this.o()};I.prototype.readSignedVarint32=I.prototype.da;I.prototype.O=function(){return this.o().toString()};I.prototype.Ea=function(){return this.da().toString()};I.prototype.readSignedVarint32String=I.prototype.Ea;I.prototype.Ia=function(){var a=this.o();return a>>>1^-(a&1)};I.prototype.readZigzagVarint32=I.prototype.Ia;I.prototype.Ga=function(){return this.w(D)};\nI.prototype.readUnsignedVarint64=I.prototype.Ga;I.prototype.Ha=function(){return this.w(F)};I.prototype.readUnsignedVarint64String=I.prototype.Ha;I.prototype.sa=function(){return this.w(E)};I.prototype.readSignedVarint64=I.prototype.sa;I.prototype.Fa=function(){return this.w(G)};I.prototype.readSignedVarint64String=I.prototype.Fa;I.prototype.Ja=function(){return this.w(Ka)};I.prototype.readZigzagVarint64=I.prototype.Ja;I.prototype.fb=function(){return this.ea(Pa)};\nI.prototype.readZigzagVarintHash64=I.prototype.fb;I.prototype.Ka=function(){return this.ea(G)};I.prototype.readZigzagVarint64String=I.prototype.Ka;I.prototype.Gc=function(){var a=this.b[this.a];this.a+=1;n(this.a<=this.c);return a};I.prototype.readUint8=I.prototype.Gc;I.prototype.Ec=function(){var a=this.b[this.a],b=this.b[this.a+1];this.a+=2;n(this.a<=this.c);return a<<0|b<<8};I.prototype.readUint16=I.prototype.Ec;\nI.prototype.m=function(){var a=this.b[this.a],b=this.b[this.a+1],c=this.b[this.a+2],d=this.b[this.a+3];this.a+=4;n(this.a<=this.c);return(a<<0|b<<8|c<<16|d<<24)>>>0};I.prototype.readUint32=I.prototype.m;I.prototype.ga=function(){var a=this.m(),b=this.m();return D(a,b)};I.prototype.readUint64=I.prototype.ga;I.prototype.ha=function(){var a=this.m(),b=this.m();return F(a,b)};I.prototype.readUint64String=I.prototype.ha;\nI.prototype.Xb=function(){var a=this.b[this.a];this.a+=1;n(this.a<=this.c);return a<<24>>24};I.prototype.readInt8=I.prototype.Xb;I.prototype.Vb=function(){var a=this.b[this.a],b=this.b[this.a+1];this.a+=2;n(this.a<=this.c);return(a<<0|b<<8)<<16>>16};I.prototype.readInt16=I.prototype.Vb;I.prototype.P=function(){var a=this.b[this.a],b=this.b[this.a+1],c=this.b[this.a+2],d=this.b[this.a+3];this.a+=4;n(this.a<=this.c);return a<<0|b<<8|c<<16|d<<24};I.prototype.readInt32=I.prototype.P;\nI.prototype.ba=function(){var a=this.m(),b=this.m();return E(a,b)};I.prototype.readInt64=I.prototype.ba;I.prototype.ca=function(){var a=this.m(),b=this.m();return G(a,b)};I.prototype.readInt64String=I.prototype.ca;I.prototype.aa=function(){var a=this.m();return Na(a,0)};I.prototype.readFloat=I.prototype.aa;I.prototype.Z=function(){var a=this.m(),b=this.m();return Oa(a,b)};I.prototype.readDouble=I.prototype.Z;I.prototype.pa=function(){return!!this.b[this.a++]};I.prototype.readBool=I.prototype.pa;\nI.prototype.ra=function(){return this.da()};I.prototype.readEnum=I.prototype.ra;\nI.prototype.fa=function(a){var b=this.b,c=this.a;a=c+a;for(var d=[],f=\"\";c<a;){var h=b[c++];if(128>h)d.push(h);else if(192>h)continue;else if(224>h){var m=b[c++];d.push((h&31)<<6|m&63)}else if(240>h){m=b[c++];var t=b[c++];d.push((h&15)<<12|(m&63)<<6|t&63)}else if(248>h){m=b[c++];t=b[c++];var B=b[c++];h=(h&7)<<18|(m&63)<<12|(t&63)<<6|B&63;h-=65536;d.push((h>>10&1023)+55296,(h&1023)+56320)}8192<=d.length&&(f+=String.fromCharCode.apply(null,d),d.length=0)}f+=xa(d);this.a=c;return f};\nI.prototype.readString=I.prototype.fa;I.prototype.Dc=function(){var a=this.o();return this.fa(a)};I.prototype.readStringWithLength=I.prototype.Dc;I.prototype.qa=function(a){if(0>a||this.a+a>this.b.length)return this.v=!0,p(\"Invalid byte length!\"),new Uint8Array(0);var b=this.b.subarray(this.a,this.a+a);this.a+=a;n(this.a<=this.c);return b};I.prototype.readBytes=I.prototype.qa;I.prototype.ia=function(){return this.w(Pa)};I.prototype.readVarintHash64=I.prototype.ia;\nI.prototype.$=function(){var a=this.b,b=this.a,c=a[b],d=a[b+1],f=a[b+2],h=a[b+3],m=a[b+4],t=a[b+5],B=a[b+6];a=a[b+7];this.a+=8;return String.fromCharCode(c,d,f,h,m,t,B,a)};I.prototype.readFixedHash64=I.prototype.$;function J(a,b,c){this.a=Wa(a,b,c);this.O=this.a.B();this.b=this.c=-1;this.h=!1;this.v=null}g(\"jspb.BinaryReader\",J,void 0);var K=[];J.clearInstanceCache=function(){K=[]};J.getInstanceCacheLength=function(){return K.length};function Xa(a,b,c){if(K.length){var d=K.pop();a&&d.a.H(a,b,c);return d}return new J(a,b,c)}J.alloc=Xa;J.prototype.zb=Xa;J.prototype.alloc=J.prototype.zb;J.prototype.Ca=function(){this.a.clear();this.b=this.c=-1;this.h=!1;this.v=null;100>K.length&&K.push(this)};\nJ.prototype.free=J.prototype.Ca;J.prototype.Fb=function(){return this.O};J.prototype.getFieldCursor=J.prototype.Fb;J.prototype.B=function(){return this.a.B()};J.prototype.getCursor=J.prototype.B;J.prototype.Y=function(){return this.a.Y()};J.prototype.getBuffer=J.prototype.Y;J.prototype.Hb=function(){return this.c};J.prototype.getFieldNumber=J.prototype.Hb;J.prototype.Lb=function(){return this.b};J.prototype.getWireType=J.prototype.Lb;J.prototype.Mb=function(){return 2==this.b};\nJ.prototype.isDelimited=J.prototype.Mb;J.prototype.bb=function(){return 4==this.b};J.prototype.isEndGroup=J.prototype.bb;J.prototype.getError=function(){return this.h||this.a.getError()};J.prototype.getError=J.prototype.getError;J.prototype.H=function(a,b,c){this.a.H(a,b,c);this.b=this.c=-1};J.prototype.setBlock=J.prototype.H;J.prototype.reset=function(){this.a.reset();this.b=this.c=-1};J.prototype.reset=J.prototype.reset;J.prototype.advance=function(a){this.a.advance(a)};J.prototype.advance=J.prototype.advance;\nJ.prototype.oa=function(){if(this.a.ya())return!1;if(this.getError())return p(\"Decoder hit an error\"),!1;this.O=this.a.B();var a=this.a.o(),b=a>>>3;a&=7;if(0!=a&&5!=a&&1!=a&&2!=a&&3!=a&&4!=a)return p(\"Invalid wire type: %s (at position %s)\",a,this.O),this.h=!0,!1;this.c=b;this.b=a;return!0};J.prototype.nextField=J.prototype.oa;J.prototype.Oa=function(){this.a.mb(this.c<<3|this.b)};J.prototype.unskipHeader=J.prototype.Oa;\nJ.prototype.Lc=function(){var a=this.c;for(this.Oa();this.oa()&&this.c==a;)this.C();this.a.ya()||this.Oa()};J.prototype.skipMatchingFields=J.prototype.Lc;J.prototype.lb=function(){0!=this.b?(p(\"Invalid wire type for skipVarintField\"),this.C()):this.a.kb()};J.prototype.skipVarintField=J.prototype.lb;J.prototype.gb=function(){if(2!=this.b)p(\"Invalid wire type for skipDelimitedField\"),this.C();else{var a=this.a.o();this.a.advance(a)}};J.prototype.skipDelimitedField=J.prototype.gb;\nJ.prototype.hb=function(){5!=this.b?(p(\"Invalid wire type for skipFixed32Field\"),this.C()):this.a.advance(4)};J.prototype.skipFixed32Field=J.prototype.hb;J.prototype.ib=function(){1!=this.b?(p(\"Invalid wire type for skipFixed64Field\"),this.C()):this.a.advance(8)};J.prototype.skipFixed64Field=J.prototype.ib;J.prototype.jb=function(){var a=this.c;do{if(!this.oa()){p(\"Unmatched start-group tag: stream EOF\");this.h=!0;break}if(4==this.b){this.c!=a&&(p(\"Unmatched end-group tag\"),this.h=!0);break}this.C()}while(1)};\nJ.prototype.skipGroup=J.prototype.jb;J.prototype.C=function(){switch(this.b){case 0:this.lb();break;case 1:this.ib();break;case 2:this.gb();break;case 5:this.hb();break;case 3:this.jb();break;default:p(\"Invalid wire encoding for field.\")}};J.prototype.skipField=J.prototype.C;J.prototype.Hc=function(a,b){null===this.v&&(this.v={});n(!this.v[a]);this.v[a]=b};J.prototype.registerReadCallback=J.prototype.Hc;J.prototype.Ic=function(a){n(null!==this.v);a=this.v[a];n(a);return a(this)};\nJ.prototype.runReadCallback=J.prototype.Ic;J.prototype.Yb=function(a,b){n(2==this.b);var c=this.a.c,d=this.a.o();d=this.a.B()+d;this.a.setEnd(d);b(a,this);this.a.Ma(d);this.a.setEnd(c)};J.prototype.readMessage=J.prototype.Yb;J.prototype.Ub=function(a,b,c){n(3==this.b);n(this.c==a);c(b,this);this.h||4==this.b||(p(\"Group submessage did not end with an END_GROUP tag\"),this.h=!0)};J.prototype.readGroup=J.prototype.Ub;\nJ.prototype.Gb=function(){n(2==this.b);var a=this.a.o(),b=this.a.B(),c=b+a;a=Wa(this.a.Y(),b,a);this.a.Ma(c);return a};J.prototype.getFieldDecoder=J.prototype.Gb;J.prototype.P=function(){n(0==this.b);return this.a.da()};J.prototype.readInt32=J.prototype.P;J.prototype.Wb=function(){n(0==this.b);return this.a.Ea()};J.prototype.readInt32String=J.prototype.Wb;J.prototype.ba=function(){n(0==this.b);return this.a.sa()};J.prototype.readInt64=J.prototype.ba;J.prototype.ca=function(){n(0==this.b);return this.a.Fa()};\nJ.prototype.readInt64String=J.prototype.ca;J.prototype.m=function(){n(0==this.b);return this.a.o()};J.prototype.readUint32=J.prototype.m;J.prototype.Fc=function(){n(0==this.b);return this.a.O()};J.prototype.readUint32String=J.prototype.Fc;J.prototype.ga=function(){n(0==this.b);return this.a.Ga()};J.prototype.readUint64=J.prototype.ga;J.prototype.ha=function(){n(0==this.b);return this.a.Ha()};J.prototype.readUint64String=J.prototype.ha;J.prototype.zc=function(){n(0==this.b);return this.a.Ia()};\nJ.prototype.readSint32=J.prototype.zc;J.prototype.Ac=function(){n(0==this.b);return this.a.Ja()};J.prototype.readSint64=J.prototype.Ac;J.prototype.Bc=function(){n(0==this.b);return this.a.Ka()};J.prototype.readSint64String=J.prototype.Bc;J.prototype.Rb=function(){n(5==this.b);return this.a.m()};J.prototype.readFixed32=J.prototype.Rb;J.prototype.Sb=function(){n(1==this.b);return this.a.ga()};J.prototype.readFixed64=J.prototype.Sb;J.prototype.Tb=function(){n(1==this.b);return this.a.ha()};\nJ.prototype.readFixed64String=J.prototype.Tb;J.prototype.vc=function(){n(5==this.b);return this.a.P()};J.prototype.readSfixed32=J.prototype.vc;J.prototype.wc=function(){n(5==this.b);return this.a.P().toString()};J.prototype.readSfixed32String=J.prototype.wc;J.prototype.xc=function(){n(1==this.b);return this.a.ba()};J.prototype.readSfixed64=J.prototype.xc;J.prototype.yc=function(){n(1==this.b);return this.a.ca()};J.prototype.readSfixed64String=J.prototype.yc;\nJ.prototype.aa=function(){n(5==this.b);return this.a.aa()};J.prototype.readFloat=J.prototype.aa;J.prototype.Z=function(){n(1==this.b);return this.a.Z()};J.prototype.readDouble=J.prototype.Z;J.prototype.pa=function(){n(0==this.b);return!!this.a.o()};J.prototype.readBool=J.prototype.pa;J.prototype.ra=function(){n(0==this.b);return this.a.sa()};J.prototype.readEnum=J.prototype.ra;J.prototype.fa=function(){n(2==this.b);var a=this.a.o();return this.a.fa(a)};J.prototype.readString=J.prototype.fa;\nJ.prototype.qa=function(){n(2==this.b);var a=this.a.o();return this.a.qa(a)};J.prototype.readBytes=J.prototype.qa;J.prototype.ia=function(){n(0==this.b);return this.a.ia()};J.prototype.readVarintHash64=J.prototype.ia;J.prototype.Cc=function(){n(0==this.b);return this.a.fb()};J.prototype.readSintHash64=J.prototype.Cc;J.prototype.w=function(a){n(0==this.b);return this.a.w(a)};J.prototype.readSplitVarint64=J.prototype.w;\nJ.prototype.ea=function(a){n(0==this.b);return this.a.w(function(b,c){return Ma(b,c,a)})};J.prototype.readSplitZigzagVarint64=J.prototype.ea;J.prototype.$=function(){n(1==this.b);return this.a.$()};J.prototype.readFixedHash64=J.prototype.$;J.prototype.ta=function(a){n(1==this.b);return this.a.ta(a)};J.prototype.readSplitFixed64=J.prototype.ta;function L(a,b){n(2==a.b);var c=a.a.o();c=a.a.B()+c;for(var d=[];a.a.B()<c;)d.push(b.call(a.a));return d}J.prototype.gc=function(){return L(this,this.a.da)};\nJ.prototype.readPackedInt32=J.prototype.gc;J.prototype.hc=function(){return L(this,this.a.Ea)};J.prototype.readPackedInt32String=J.prototype.hc;J.prototype.ic=function(){return L(this,this.a.sa)};J.prototype.readPackedInt64=J.prototype.ic;J.prototype.jc=function(){return L(this,this.a.Fa)};J.prototype.readPackedInt64String=J.prototype.jc;J.prototype.qc=function(){return L(this,this.a.o)};J.prototype.readPackedUint32=J.prototype.qc;J.prototype.rc=function(){return L(this,this.a.O)};\nJ.prototype.readPackedUint32String=J.prototype.rc;J.prototype.sc=function(){return L(this,this.a.Ga)};J.prototype.readPackedUint64=J.prototype.sc;J.prototype.tc=function(){return L(this,this.a.Ha)};J.prototype.readPackedUint64String=J.prototype.tc;J.prototype.nc=function(){return L(this,this.a.Ia)};J.prototype.readPackedSint32=J.prototype.nc;J.prototype.oc=function(){return L(this,this.a.Ja)};J.prototype.readPackedSint64=J.prototype.oc;J.prototype.pc=function(){return L(this,this.a.Ka)};\nJ.prototype.readPackedSint64String=J.prototype.pc;J.prototype.bc=function(){return L(this,this.a.m)};J.prototype.readPackedFixed32=J.prototype.bc;J.prototype.cc=function(){return L(this,this.a.ga)};J.prototype.readPackedFixed64=J.prototype.cc;J.prototype.dc=function(){return L(this,this.a.ha)};J.prototype.readPackedFixed64String=J.prototype.dc;J.prototype.kc=function(){return L(this,this.a.P)};J.prototype.readPackedSfixed32=J.prototype.kc;J.prototype.lc=function(){return L(this,this.a.ba)};\nJ.prototype.readPackedSfixed64=J.prototype.lc;J.prototype.mc=function(){return L(this,this.a.ca)};J.prototype.readPackedSfixed64String=J.prototype.mc;J.prototype.fc=function(){return L(this,this.a.aa)};J.prototype.readPackedFloat=J.prototype.fc;J.prototype.$b=function(){return L(this,this.a.Z)};J.prototype.readPackedDouble=J.prototype.$b;J.prototype.Zb=function(){return L(this,this.a.pa)};J.prototype.readPackedBool=J.prototype.Zb;J.prototype.ac=function(){return L(this,this.a.ra)};\nJ.prototype.readPackedEnum=J.prototype.ac;J.prototype.uc=function(){return L(this,this.a.ia)};J.prototype.readPackedVarintHash64=J.prototype.uc;J.prototype.ec=function(){return L(this,this.a.$)};J.prototype.readPackedFixedHash64=J.prototype.ec;function Ya(a,b,c,d,f){this.ma=a;this.Ba=b;this.la=c;this.Na=d;this.na=f}g(\"jspb.ExtensionFieldInfo\",Ya,void 0);function Za(a,b,c,d,f,h){this.Za=a;this.za=b;this.Aa=c;this.Wa=d;this.Ab=f;this.Nb=h}g(\"jspb.ExtensionFieldBinaryInfo\",Za,void 0);Ya.prototype.F=function(){return!!this.la};Ya.prototype.isMessageType=Ya.prototype.F;function N(){}g(\"jspb.Message\",N,void 0);N.GENERATE_TO_OBJECT=!0;N.GENERATE_FROM_OBJECT=!0;var $a=\"function\"==typeof Uint8Array;N.prototype.Ib=function(){return this.b};\nN.prototype.getJsPbMessageId=N.prototype.Ib;\nN.initialize=function(a,b,c,d,f,h){a.f=null;b||(b=c?[c]:[]);a.b=c?String(c):void 0;a.D=0===c?-1:0;a.u=b;a:{c=a.u.length;b=-1;if(c&&(b=c-1,c=a.u[b],!(null===c||\"object\"!=typeof c||Array.isArray(c)||$a&&c instanceof Uint8Array))){a.G=b-a.D;a.i=c;break a}-1<d?(a.G=Math.max(d,b+1-a.D),a.i=null):a.G=Number.MAX_VALUE}a.a={};if(f)for(d=0;d<f.length;d++)b=f[d],b<a.G?(b+=a.D,a.u[b]=a.u[b]||ab):(bb(a),a.i[b]=a.i[b]||ab);if(h&&h.length)for(d=0;d<h.length;d++)cb(a,h[d])};\nvar ab=Object.freeze?Object.freeze([]):[];function bb(a){var b=a.G+a.D;a.u[b]||(a.i=a.u[b]={})}function db(a,b,c){for(var d=[],f=0;f<a.length;f++)d[f]=b.call(a[f],c,a[f]);return d}N.toObjectList=db;N.toObjectExtension=function(a,b,c,d,f){for(var h in c){var m=c[h],t=d.call(a,m);if(null!=t){for(var B in m.Ba)if(m.Ba.hasOwnProperty(B))break;b[B]=m.Na?m.na?db(t,m.Na,f):m.Na(f,t):t}}};\nN.serializeBinaryExtensions=function(a,b,c,d){for(var f in c){var h=c[f],m=h.Za;if(!h.Aa)throw Error(\"Message extension present that was generated without binary serialization support\");var t=d.call(a,m);if(null!=t)if(m.F())if(h.Wa)h.Aa.call(b,m.ma,t,h.Wa);else throw Error(\"Message extension present holding submessage without binary support enabled, and message is being serialized to binary format\");else h.Aa.call(b,m.ma,t)}};\nN.readBinaryExtension=function(a,b,c,d,f){var h=c[b.c];if(h){c=h.Za;if(!h.za)throw Error(\"Deserializing extension whose generated code does not support binary format\");if(c.F()){var m=new c.la;h.za.call(b,m,h.Ab)}else m=h.za.call(b);c.na&&!h.Nb?(b=d.call(a,c))?b.push(m):f.call(a,c,[m]):f.call(a,c,m)}else b.C()};function O(a,b){if(b<a.G){b+=a.D;var c=a.u[b];return c===ab?a.u[b]=[]:c}if(a.i)return c=a.i[b],c===ab?a.i[b]=[]:c}N.getField=O;N.getRepeatedField=function(a,b){return O(a,b)};\nfunction eb(a,b){a=O(a,b);return null==a?a:+a}N.getOptionalFloatingPointField=eb;function fb(a,b){a=O(a,b);return null==a?a:!!a}N.getBooleanField=fb;N.getRepeatedFloatingPointField=function(a,b){var c=O(a,b);a.a||(a.a={});if(!a.a[b]){for(var d=0;d<c.length;d++)c[d]=+c[d];a.a[b]=!0}return c};N.getRepeatedBooleanField=function(a,b){var c=O(a,b);a.a||(a.a={});if(!a.a[b]){for(var d=0;d<c.length;d++)c[d]=!!c[d];a.a[b]=!0}return c};\nfunction gb(a){if(null==a||\"string\"===typeof a)return a;if($a&&a instanceof Uint8Array)return Ba(a);p(\"Cannot coerce to b64 string: \"+k(a));return null}N.bytesAsB64=gb;function hb(a){if(null==a||a instanceof Uint8Array)return a;if(\"string\"===typeof a)return Da(a);p(\"Cannot coerce to Uint8Array: \"+k(a));return null}N.bytesAsU8=hb;N.bytesListAsB64=function(a){ib(a);return a.length&&\"string\"!==typeof a[0]?l(a,gb):a};N.bytesListAsU8=function(a){ib(a);return!a.length||a[0]instanceof Uint8Array?a:l(a,hb)};\nfunction ib(a){if(a&&1<a.length){var b=k(a[0]);qa(a,function(c){k(c)!=b&&p(\"Inconsistent type in JSPB repeated field array. Got \"+k(c)+\" expected \"+b)})}}function jb(a,b,c){a=O(a,b);return null==a?c:a}N.getFieldWithDefault=jb;N.getBooleanFieldWithDefault=function(a,b,c){a=fb(a,b);return null==a?c:a};N.getFloatingPointFieldWithDefault=function(a,b,c){a=eb(a,b);return null==a?c:a};N.getFieldProto3=jb;\nN.getMapField=function(a,b,c,d){a.f||(a.f={});if(b in a.f)return a.f[b];var f=O(a,b);if(!f){if(c)return;f=[];P(a,b,f)}return a.f[b]=new r(f,d)};function P(a,b,c){q(a,N);b<a.G?a.u[b+a.D]=c:(bb(a),a.i[b]=c);return a}N.setField=P;N.setProto3IntField=function(a,b,c){return Q(a,b,c,0)};N.setProto3FloatField=function(a,b,c){return Q(a,b,c,0)};N.setProto3BooleanField=function(a,b,c){return Q(a,b,c,!1)};N.setProto3StringField=function(a,b,c){return Q(a,b,c,\"\")};\nN.setProto3BytesField=function(a,b,c){return Q(a,b,c,\"\")};N.setProto3EnumField=function(a,b,c){return Q(a,b,c,0)};N.setProto3StringIntField=function(a,b,c){return Q(a,b,c,\"0\")};function Q(a,b,c,d){q(a,N);c!==d?P(a,b,c):b<a.G?a.u[b+a.D]=null:(bb(a),delete a.i[b]);return a}N.addToRepeatedField=function(a,b,c,d){q(a,N);b=O(a,b);void 0!=d?b.splice(d,0,c):b.push(c);return a};function kb(a,b,c,d){q(a,N);(c=cb(a,c))&&c!==b&&void 0!==d&&(a.f&&c in a.f&&(a.f[c]=void 0),P(a,c,void 0));return P(a,b,d)}\nN.setOneofField=kb;function cb(a,b){for(var c,d,f=0;f<b.length;f++){var h=b[f],m=O(a,h);null!=m&&(c=h,d=m,P(a,h,void 0))}return c?(P(a,c,d),c):0}N.computeOneofCase=cb;N.getWrapperField=function(a,b,c,d){a.f||(a.f={});if(!a.f[c]){var f=O(a,c);if(d||f)a.f[c]=new b(f)}return a.f[c]};N.getRepeatedWrapperField=function(a,b,c){lb(a,b,c);b=a.f[c];b==ab&&(b=a.f[c]=[]);return b};function lb(a,b,c){a.f||(a.f={});if(!a.f[c]){for(var d=O(a,c),f=[],h=0;h<d.length;h++)f[h]=new b(d[h]);a.f[c]=f}}\nN.setWrapperField=function(a,b,c){q(a,N);a.f||(a.f={});var d=c?c.g():c;a.f[b]=c;return P(a,b,d)};N.setOneofWrapperField=function(a,b,c,d){q(a,N);a.f||(a.f={});var f=d?d.g():d;a.f[b]=d;return kb(a,b,c,f)};N.setRepeatedWrapperField=function(a,b,c){q(a,N);a.f||(a.f={});c=c||[];for(var d=[],f=0;f<c.length;f++)d[f]=c[f].g();a.f[b]=c;return P(a,b,d)};\nN.addToRepeatedWrapperField=function(a,b,c,d,f){lb(a,d,b);var h=a.f[b];h||(h=a.f[b]=[]);c=c?c:new d;a=O(a,b);void 0!=f?(h.splice(f,0,c),a.splice(f,0,c.g())):(h.push(c),a.push(c.g()));return c};N.toMap=function(a,b,c,d){for(var f={},h=0;h<a.length;h++)f[b.call(a[h])]=c?c.call(a[h],d,a[h]):a[h];return f};function mb(a){if(a.f)for(var b in a.f){var c=a.f[b];if(Array.isArray(c))for(var d=0;d<c.length;d++)c[d]&&c[d].g();else c&&c.g()}}N.prototype.g=function(){mb(this);return this.u};\nN.prototype.toArray=N.prototype.g;N.prototype.toString=function(){mb(this);return this.u.toString()};N.prototype.getExtension=function(a){if(this.i){this.f||(this.f={});var b=a.ma;if(a.na){if(a.F())return this.f[b]||(this.f[b]=l(this.i[b]||[],function(c){return new a.la(c)})),this.f[b]}else if(a.F())return!this.f[b]&&this.i[b]&&(this.f[b]=new a.la(this.i[b])),this.f[b];return this.i[b]}};N.prototype.getExtension=N.prototype.getExtension;\nN.prototype.Kc=function(a,b){this.f||(this.f={});bb(this);var c=a.ma;a.na?(b=b||[],a.F()?(this.f[c]=b,this.i[c]=l(b,function(d){return d.g()})):this.i[c]=b):a.F()?(this.f[c]=b,this.i[c]=b?b.g():b):this.i[c]=b;return this};N.prototype.setExtension=N.prototype.Kc;N.difference=function(a,b){if(!(a instanceof b.constructor))throw Error(\"Messages have different types.\");var c=a.g();b=b.g();var d=[],f=0,h=c.length>b.length?c.length:b.length;a.b&&(d[0]=a.b,f=1);for(;f<h;f++)nb(c[f],b[f])||(d[f]=b[f]);return new a.constructor(d)};\nN.equals=function(a,b){return a==b||!(!a||!b)&&a instanceof b.constructor&&nb(a.g(),b.g())};function ob(a,b){a=a||{};b=b||{};var c={},d;for(d in a)c[d]=0;for(d in b)c[d]=0;for(d in c)if(!nb(a[d],b[d]))return!1;return!0}N.compareExtensions=ob;\nfunction nb(a,b){if(a==b)return!0;if(!la(a)||!la(b))return\"number\"===typeof a&&isNaN(a)||\"number\"===typeof b&&isNaN(b)?String(a)==String(b):!1;if(a.constructor!=b.constructor)return!1;if($a&&a.constructor===Uint8Array){if(a.length!=b.length)return!1;for(var c=0;c<a.length;c++)if(a[c]!=b[c])return!1;return!0}if(a.constructor===Array){var d=void 0,f=void 0,h=Math.max(a.length,b.length);for(c=0;c<h;c++){var m=a[c],t=b[c];m&&m.constructor==Object&&(n(void 0===d),n(c===a.length-1),d=m,m=void 0);t&&t.constructor==\nObject&&(n(void 0===f),n(c===b.length-1),f=t,t=void 0);if(!nb(m,t))return!1}return d||f?(d=d||{},f=f||{},ob(d,f)):!0}if(a.constructor===Object)return ob(a,b);throw Error(\"Invalid type in JSPB array\");}N.compareFields=nb;N.prototype.Bb=function(){return pb(this)};N.prototype.cloneMessage=N.prototype.Bb;N.prototype.clone=function(){return pb(this)};N.prototype.clone=N.prototype.clone;N.clone=function(a){return pb(a)};function pb(a){return new a.constructor(qb(a.g()))}\nN.copyInto=function(a,b){q(a,N);q(b,N);n(a.constructor==b.constructor,\"Copy source and target message should have the same type.\");a=pb(a);for(var c=b.g(),d=a.g(),f=c.length=0;f<d.length;f++)c[f]=d[f];b.f=a.f;b.i=a.i};function qb(a){if(Array.isArray(a)){for(var b=Array(a.length),c=0;c<a.length;c++){var d=a[c];null!=d&&(b[c]=\"object\"==typeof d?qb(n(d)):d)}return b}if($a&&a instanceof Uint8Array)return new Uint8Array(a);b={};for(c in a)d=a[c],null!=d&&(b[c]=\"object\"==typeof d?qb(n(d)):d);return b}\nN.registerMessageType=function(a,b){b.we=a};var R={dump:function(a){q(a,N,\"jspb.Message instance expected\");n(a.getExtension,\"Only unobfuscated and unoptimized compilation modes supported.\");return R.X(a)}};g(\"jspb.debug.dump\",R.dump,void 0);\nR.X=function(a){var b=k(a);if(\"number\"==b||\"string\"==b||\"boolean\"==b||\"null\"==b||\"undefined\"==b||\"undefined\"!==typeof Uint8Array&&a instanceof Uint8Array)return a;if(\"array\"==b)return ua(a),l(a,R.X);if(a instanceof r){var c={};a=a.entries();for(var d=a.next();!d.done;d=a.next())c[d.value[0]]=R.X(d.value[1]);return c}q(a,N,\"Only messages expected: \"+a);b=a.constructor;var f={$name:b.name||b.displayName};for(t in b.prototype){var h=/^get([A-Z]\\w*)/.exec(t);if(h&&\"getExtension\"!=t&&\"getJsPbMessageId\"!=\nt){var m=\"has\"+h[1];if(!a[m]||a[m]())m=a[t](),f[R.$a(h[1])]=R.X(m)}}if(a.extensionObject_)return f.$extensions=\"Recursive dumping of extensions not supported in compiled code. Switch to uncompiled or dump extension object directly\",f;for(d in b.extensions)if(/^\\d+$/.test(d)){m=b.extensions[d];var t=a.getExtension(m);h=void 0;m=m.Ba;var B=[],M=0;for(h in m)B[M++]=h;h=B[0];null!=t&&(c||(c=f.$extensions={}),c[R.$a(h)]=R.X(t))}return f};R.$a=function(a){return a.replace(/^[A-Z]/,function(b){return b.toLowerCase()})};function S(){this.a=[]}g(\"jspb.BinaryEncoder\",S,void 0);S.prototype.length=function(){return this.a.length};S.prototype.length=S.prototype.length;S.prototype.end=function(){var a=this.a;this.a=[];return a};S.prototype.end=S.prototype.end;S.prototype.l=function(a,b){n(a==Math.floor(a));n(b==Math.floor(b));n(0<=a&&4294967296>a);for(n(0<=b&&4294967296>b);0<b||127<a;)this.a.push(a&127|128),a=(a>>>7|b<<25)>>>0,b>>>=7;this.a.push(a)};S.prototype.writeSplitVarint64=S.prototype.l;\nS.prototype.A=function(a,b){n(a==Math.floor(a));n(b==Math.floor(b));n(0<=a&&4294967296>a);n(0<=b&&4294967296>b);this.s(a);this.s(b)};S.prototype.writeSplitFixed64=S.prototype.A;S.prototype.j=function(a){n(a==Math.floor(a));for(n(0<=a&&4294967296>a);127<a;)this.a.push(a&127|128),a>>>=7;this.a.push(a)};S.prototype.writeUnsignedVarint32=S.prototype.j;S.prototype.M=function(a){n(a==Math.floor(a));n(-2147483648<=a&&2147483648>a);if(0<=a)this.j(a);else{for(var b=0;9>b;b++)this.a.push(a&127|128),a>>=7;this.a.push(1)}};\nS.prototype.writeSignedVarint32=S.prototype.M;S.prototype.va=function(a){n(a==Math.floor(a));n(0<=a&&1.8446744073709552E19>a);A(a);this.l(y,z)};S.prototype.writeUnsignedVarint64=S.prototype.va;S.prototype.ua=function(a){n(a==Math.floor(a));n(-9223372036854775808<=a&&0x7fffffffffffffff>a);A(a);this.l(y,z)};S.prototype.writeSignedVarint64=S.prototype.ua;S.prototype.wa=function(a){n(a==Math.floor(a));n(-2147483648<=a&&2147483648>a);this.j((a<<1^a>>31)>>>0)};S.prototype.writeZigzagVarint32=S.prototype.wa;\nS.prototype.xa=function(a){n(a==Math.floor(a));n(-9223372036854775808<=a&&0x7fffffffffffffff>a);Ga(a);this.l(y,z)};S.prototype.writeZigzagVarint64=S.prototype.xa;S.prototype.Ta=function(a){this.W(H(a))};S.prototype.writeZigzagVarint64String=S.prototype.Ta;S.prototype.W=function(a){var b=this;C(a);Ja(y,z,function(c,d){b.l(c>>>0,d>>>0)})};S.prototype.writeZigzagVarintHash64=S.prototype.W;S.prototype.be=function(a){n(a==Math.floor(a));n(0<=a&&256>a);this.a.push(a>>>0&255)};S.prototype.writeUint8=S.prototype.be;\nS.prototype.ae=function(a){n(a==Math.floor(a));n(0<=a&&65536>a);this.a.push(a>>>0&255);this.a.push(a>>>8&255)};S.prototype.writeUint16=S.prototype.ae;S.prototype.s=function(a){n(a==Math.floor(a));n(0<=a&&4294967296>a);this.a.push(a>>>0&255);this.a.push(a>>>8&255);this.a.push(a>>>16&255);this.a.push(a>>>24&255)};S.prototype.writeUint32=S.prototype.s;S.prototype.V=function(a){n(a==Math.floor(a));n(0<=a&&1.8446744073709552E19>a);Fa(a);this.s(y);this.s(z)};S.prototype.writeUint64=S.prototype.V;\nS.prototype.Qc=function(a){n(a==Math.floor(a));n(-128<=a&&128>a);this.a.push(a>>>0&255)};S.prototype.writeInt8=S.prototype.Qc;S.prototype.Pc=function(a){n(a==Math.floor(a));n(-32768<=a&&32768>a);this.a.push(a>>>0&255);this.a.push(a>>>8&255)};S.prototype.writeInt16=S.prototype.Pc;S.prototype.S=function(a){n(a==Math.floor(a));n(-2147483648<=a&&2147483648>a);this.a.push(a>>>0&255);this.a.push(a>>>8&255);this.a.push(a>>>16&255);this.a.push(a>>>24&255)};S.prototype.writeInt32=S.prototype.S;\nS.prototype.T=function(a){n(a==Math.floor(a));n(-9223372036854775808<=a&&0x7fffffffffffffff>a);A(a);this.A(y,z)};S.prototype.writeInt64=S.prototype.T;S.prototype.ka=function(a){n(a==Math.floor(a));n(-9223372036854775808<=+a&&0x7fffffffffffffff>+a);C(H(a));this.A(y,z)};S.prototype.writeInt64String=S.prototype.ka;S.prototype.L=function(a){n(Infinity===a||-Infinity===a||isNaN(a)||-3.4028234663852886E38<=a&&3.4028234663852886E38>=a);Ha(a);this.s(y)};S.prototype.writeFloat=S.prototype.L;\nS.prototype.J=function(a){n(Infinity===a||-Infinity===a||isNaN(a)||-1.7976931348623157E308<=a&&1.7976931348623157E308>=a);Ia(a);this.s(y);this.s(z)};S.prototype.writeDouble=S.prototype.J;S.prototype.I=function(a){n(\"boolean\"===typeof a||\"number\"===typeof a);this.a.push(a?1:0)};S.prototype.writeBool=S.prototype.I;S.prototype.R=function(a){n(a==Math.floor(a));n(-2147483648<=a&&2147483648>a);this.M(a)};S.prototype.writeEnum=S.prototype.R;S.prototype.ja=function(a){this.a.push.apply(this.a,a)};\nS.prototype.writeBytes=S.prototype.ja;S.prototype.N=function(a){C(a);this.l(y,z)};S.prototype.writeVarintHash64=S.prototype.N;S.prototype.K=function(a){C(a);this.s(y);this.s(z)};S.prototype.writeFixedHash64=S.prototype.K;\nS.prototype.U=function(a){var b=this.a.length;ta(a);for(var c=0;c<a.length;c++){var d=a.charCodeAt(c);if(128>d)this.a.push(d);else if(2048>d)this.a.push(d>>6|192),this.a.push(d&63|128);else if(65536>d)if(55296<=d&&56319>=d&&c+1<a.length){var f=a.charCodeAt(c+1);56320<=f&&57343>=f&&(d=1024*(d-55296)+f-56320+65536,this.a.push(d>>18|240),this.a.push(d>>12&63|128),this.a.push(d>>6&63|128),this.a.push(d&63|128),c++)}else this.a.push(d>>12|224),this.a.push(d>>6&63|128),this.a.push(d&63|128)}return this.a.length-\nb};S.prototype.writeString=S.prototype.U;function T(a,b){this.lo=a;this.hi=b}g(\"jspb.arith.UInt64\",T,void 0);T.prototype.cmp=function(a){return this.hi<a.hi||this.hi==a.hi&&this.lo<a.lo?-1:this.hi==a.hi&&this.lo==a.lo?0:1};T.prototype.cmp=T.prototype.cmp;T.prototype.La=function(){return new T((this.lo>>>1|(this.hi&1)<<31)>>>0,this.hi>>>1>>>0)};T.prototype.rightShift=T.prototype.La;T.prototype.Da=function(){return new T(this.lo<<1>>>0,(this.hi<<1|this.lo>>>31)>>>0)};T.prototype.leftShift=T.prototype.Da;\nT.prototype.cb=function(){return!!(this.hi&2147483648)};T.prototype.msb=T.prototype.cb;T.prototype.Ob=function(){return!!(this.lo&1)};T.prototype.lsb=T.prototype.Ob;T.prototype.Ua=function(){return 0==this.lo&&0==this.hi};T.prototype.zero=T.prototype.Ua;T.prototype.add=function(a){return new T((this.lo+a.lo&4294967295)>>>0>>>0,((this.hi+a.hi&4294967295)>>>0)+(4294967296<=this.lo+a.lo?1:0)>>>0)};T.prototype.add=T.prototype.add;\nT.prototype.sub=function(a){return new T((this.lo-a.lo&4294967295)>>>0>>>0,((this.hi-a.hi&4294967295)>>>0)-(0>this.lo-a.lo?1:0)>>>0)};T.prototype.sub=T.prototype.sub;function rb(a,b){var c=a&65535;a>>>=16;var d=b&65535,f=b>>>16;b=c*d+65536*(c*f&65535)+65536*(a*d&65535);for(c=a*f+(c*f>>>16)+(a*d>>>16);4294967296<=b;)b-=4294967296,c+=1;return new T(b>>>0,c>>>0)}T.mul32x32=rb;T.prototype.eb=function(a){var b=rb(this.lo,a);a=rb(this.hi,a);a.hi=a.lo;a.lo=0;return b.add(a)};T.prototype.mul=T.prototype.eb;\nT.prototype.Xa=function(a){if(0==a)return[];var b=new T(0,0),c=new T(this.lo,this.hi);a=new T(a,0);for(var d=new T(1,0);!a.cb();)a=a.Da(),d=d.Da();for(;!d.Ua();)0>=a.cmp(c)&&(b=b.add(d),c=c.sub(a)),a=a.La(),d=d.La();return[b,c]};T.prototype.div=T.prototype.Xa;T.prototype.toString=function(){for(var a=\"\",b=this;!b.Ua();){b=b.Xa(10);var c=b[0];a=b[1].lo+a;b=c}\"\"==a&&(a=\"0\");return a};T.prototype.toString=T.prototype.toString;\nfunction U(a){for(var b=new T(0,0),c=new T(0,0),d=0;d<a.length;d++){if(\"0\">a[d]||\"9\"<a[d])return null;c.lo=parseInt(a[d],10);b=b.eb(10).add(c)}return b}T.fromString=U;T.prototype.clone=function(){return new T(this.lo,this.hi)};T.prototype.clone=T.prototype.clone;function V(a,b){this.lo=a;this.hi=b}g(\"jspb.arith.Int64\",V,void 0);V.prototype.add=function(a){return new V((this.lo+a.lo&4294967295)>>>0>>>0,((this.hi+a.hi&4294967295)>>>0)+(4294967296<=this.lo+a.lo?1:0)>>>0)};V.prototype.add=V.prototype.add;\nV.prototype.sub=function(a){return new V((this.lo-a.lo&4294967295)>>>0>>>0,((this.hi-a.hi&4294967295)>>>0)-(0>this.lo-a.lo?1:0)>>>0)};V.prototype.sub=V.prototype.sub;V.prototype.clone=function(){return new V(this.lo,this.hi)};V.prototype.clone=V.prototype.clone;V.prototype.toString=function(){var a=0!=(this.hi&2147483648),b=new T(this.lo,this.hi);a&&(b=(new T(0,0)).sub(b));return(a?\"-\":\"\")+b.toString()};V.prototype.toString=V.prototype.toString;\nfunction sb(a){var b=0<a.length&&\"-\"==a[0];b&&(a=a.substring(1));a=U(a);if(null===a)return null;b&&(a=(new T(0,0)).sub(a));return new V(a.lo,a.hi)}V.fromString=sb;function W(){this.c=[];this.b=0;this.a=new S;this.h=[]}g(\"jspb.BinaryWriter\",W,void 0);function tb(a,b){var c=a.a.end();a.c.push(c);a.c.push(b);a.b+=c.length+b.length}function X(a,b){Y(a,b,2);b=a.a.end();a.c.push(b);a.b+=b.length;b.push(a.b);return b}function Z(a,b){var c=b.pop();c=a.b+a.a.length()-c;for(n(0<=c);127<c;)b.push(c&127|128),c>>>=7,a.b++;b.push(c);a.b++}W.prototype.pb=function(a,b,c){tb(this,a.subarray(b,c))};W.prototype.writeSerializedMessage=W.prototype.pb;\nW.prototype.Pb=function(a,b,c){null!=a&&null!=b&&null!=c&&this.pb(a,b,c)};W.prototype.maybeWriteSerializedMessage=W.prototype.Pb;W.prototype.reset=function(){this.c=[];this.a.end();this.b=0;this.h=[]};W.prototype.reset=W.prototype.reset;W.prototype.ab=function(){n(0==this.h.length);for(var a=new Uint8Array(this.b+this.a.length()),b=this.c,c=b.length,d=0,f=0;f<c;f++){var h=b[f];a.set(h,d);d+=h.length}b=this.a.end();a.set(b,d);d+=b.length;n(d==a.length);this.c=[a];return a};\nW.prototype.getResultBuffer=W.prototype.ab;W.prototype.Kb=function(a){return Ba(this.ab(),a)};W.prototype.getResultBase64String=W.prototype.Kb;W.prototype.Va=function(a){this.h.push(X(this,a))};W.prototype.beginSubMessage=W.prototype.Va;W.prototype.Ya=function(){n(0<=this.h.length);Z(this,this.h.pop())};W.prototype.endSubMessage=W.prototype.Ya;function Y(a,b,c){n(1<=b&&b==Math.floor(b));a.a.j(8*b+c)}\nW.prototype.Nc=function(a,b,c){switch(a){case 1:this.J(b,c);break;case 2:this.L(b,c);break;case 3:this.T(b,c);break;case 4:this.V(b,c);break;case 5:this.S(b,c);break;case 6:this.Qa(b,c);break;case 7:this.Pa(b,c);break;case 8:this.I(b,c);break;case 9:this.U(b,c);break;case 10:p(\"Group field type not supported in writeAny()\");break;case 11:p(\"Message field type not supported in writeAny()\");break;case 12:this.ja(b,c);break;case 13:this.s(b,c);break;case 14:this.R(b,c);break;case 15:this.Ra(b,c);break;\ncase 16:this.Sa(b,c);break;case 17:this.rb(b,c);break;case 18:this.sb(b,c);break;case 30:this.K(b,c);break;case 31:this.N(b,c);break;default:p(\"Invalid field type in writeAny()\")}};W.prototype.writeAny=W.prototype.Nc;function ub(a,b,c){null!=c&&(Y(a,b,0),a.a.j(c))}function vb(a,b,c){null!=c&&(Y(a,b,0),a.a.M(c))}W.prototype.S=function(a,b){null!=b&&(n(-2147483648<=b&&2147483648>b),vb(this,a,b))};W.prototype.writeInt32=W.prototype.S;\nW.prototype.ob=function(a,b){null!=b&&(b=parseInt(b,10),n(-2147483648<=b&&2147483648>b),vb(this,a,b))};W.prototype.writeInt32String=W.prototype.ob;W.prototype.T=function(a,b){null!=b&&(n(-9223372036854775808<=b&&0x7fffffffffffffff>b),null!=b&&(Y(this,a,0),this.a.ua(b)))};W.prototype.writeInt64=W.prototype.T;W.prototype.ka=function(a,b){null!=b&&(b=sb(b),Y(this,a,0),this.a.l(b.lo,b.hi))};W.prototype.writeInt64String=W.prototype.ka;\nW.prototype.s=function(a,b){null!=b&&(n(0<=b&&4294967296>b),ub(this,a,b))};W.prototype.writeUint32=W.prototype.s;W.prototype.ub=function(a,b){null!=b&&(b=parseInt(b,10),n(0<=b&&4294967296>b),ub(this,a,b))};W.prototype.writeUint32String=W.prototype.ub;W.prototype.V=function(a,b){null!=b&&(n(0<=b&&1.8446744073709552E19>b),null!=b&&(Y(this,a,0),this.a.va(b)))};W.prototype.writeUint64=W.prototype.V;W.prototype.vb=function(a,b){null!=b&&(b=U(b),Y(this,a,0),this.a.l(b.lo,b.hi))};\nW.prototype.writeUint64String=W.prototype.vb;W.prototype.rb=function(a,b){null!=b&&(n(-2147483648<=b&&2147483648>b),null!=b&&(Y(this,a,0),this.a.wa(b)))};W.prototype.writeSint32=W.prototype.rb;W.prototype.sb=function(a,b){null!=b&&(n(-9223372036854775808<=b&&0x7fffffffffffffff>b),null!=b&&(Y(this,a,0),this.a.xa(b)))};W.prototype.writeSint64=W.prototype.sb;W.prototype.$d=function(a,b){null!=b&&null!=b&&(Y(this,a,0),this.a.W(b))};W.prototype.writeSintHash64=W.prototype.$d;\nW.prototype.Zd=function(a,b){null!=b&&null!=b&&(Y(this,a,0),this.a.Ta(b))};W.prototype.writeSint64String=W.prototype.Zd;W.prototype.Pa=function(a,b){null!=b&&(n(0<=b&&4294967296>b),Y(this,a,5),this.a.s(b))};W.prototype.writeFixed32=W.prototype.Pa;W.prototype.Qa=function(a,b){null!=b&&(n(0<=b&&1.8446744073709552E19>b),Y(this,a,1),this.a.V(b))};W.prototype.writeFixed64=W.prototype.Qa;W.prototype.nb=function(a,b){null!=b&&(b=U(b),Y(this,a,1),this.a.A(b.lo,b.hi))};W.prototype.writeFixed64String=W.prototype.nb;\nW.prototype.Ra=function(a,b){null!=b&&(n(-2147483648<=b&&2147483648>b),Y(this,a,5),this.a.S(b))};W.prototype.writeSfixed32=W.prototype.Ra;W.prototype.Sa=function(a,b){null!=b&&(n(-9223372036854775808<=b&&0x7fffffffffffffff>b),Y(this,a,1),this.a.T(b))};W.prototype.writeSfixed64=W.prototype.Sa;W.prototype.qb=function(a,b){null!=b&&(b=sb(b),Y(this,a,1),this.a.A(b.lo,b.hi))};W.prototype.writeSfixed64String=W.prototype.qb;W.prototype.L=function(a,b){null!=b&&(Y(this,a,5),this.a.L(b))};\nW.prototype.writeFloat=W.prototype.L;W.prototype.J=function(a,b){null!=b&&(Y(this,a,1),this.a.J(b))};W.prototype.writeDouble=W.prototype.J;W.prototype.I=function(a,b){null!=b&&(n(\"boolean\"===typeof b||\"number\"===typeof b),Y(this,a,0),this.a.I(b))};W.prototype.writeBool=W.prototype.I;W.prototype.R=function(a,b){null!=b&&(n(-2147483648<=b&&2147483648>b),Y(this,a,0),this.a.M(b))};W.prototype.writeEnum=W.prototype.R;W.prototype.U=function(a,b){null!=b&&(a=X(this,a),this.a.U(b),Z(this,a))};\nW.prototype.writeString=W.prototype.U;W.prototype.ja=function(a,b){null!=b&&(b=Ua(b),Y(this,a,2),this.a.j(b.length),tb(this,b))};W.prototype.writeBytes=W.prototype.ja;W.prototype.Rc=function(a,b,c){null!=b&&(a=X(this,a),c(b,this),Z(this,a))};W.prototype.writeMessage=W.prototype.Rc;W.prototype.Sc=function(a,b,c){null!=b&&(Y(this,1,3),Y(this,2,0),this.a.M(a),a=X(this,3),c(b,this),Z(this,a),Y(this,1,4))};W.prototype.writeMessageSet=W.prototype.Sc;\nW.prototype.Oc=function(a,b,c){null!=b&&(Y(this,a,3),c(b,this),Y(this,a,4))};W.prototype.writeGroup=W.prototype.Oc;W.prototype.K=function(a,b){null!=b&&(n(8==b.length),Y(this,a,1),this.a.K(b))};W.prototype.writeFixedHash64=W.prototype.K;W.prototype.N=function(a,b){null!=b&&(n(8==b.length),Y(this,a,0),this.a.N(b))};W.prototype.writeVarintHash64=W.prototype.N;W.prototype.A=function(a,b,c){Y(this,a,1);this.a.A(b,c)};W.prototype.writeSplitFixed64=W.prototype.A;\nW.prototype.l=function(a,b,c){Y(this,a,0);this.a.l(b,c)};W.prototype.writeSplitVarint64=W.prototype.l;W.prototype.tb=function(a,b,c){Y(this,a,0);var d=this.a;Ja(b,c,function(f,h){d.l(f>>>0,h>>>0)})};W.prototype.writeSplitZigzagVarint64=W.prototype.tb;W.prototype.Ed=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)vb(this,a,b[c])};W.prototype.writeRepeatedInt32=W.prototype.Ed;W.prototype.Fd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.ob(a,b[c])};\nW.prototype.writeRepeatedInt32String=W.prototype.Fd;W.prototype.Gd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++){var d=b[c];null!=d&&(Y(this,a,0),this.a.ua(d))}};W.prototype.writeRepeatedInt64=W.prototype.Gd;W.prototype.Qd=function(a,b,c,d){if(null!=b)for(var f=0;f<b.length;f++)this.A(a,c(b[f]),d(b[f]))};W.prototype.writeRepeatedSplitFixed64=W.prototype.Qd;W.prototype.Rd=function(a,b,c,d){if(null!=b)for(var f=0;f<b.length;f++)this.l(a,c(b[f]),d(b[f]))};\nW.prototype.writeRepeatedSplitVarint64=W.prototype.Rd;W.prototype.Sd=function(a,b,c,d){if(null!=b)for(var f=0;f<b.length;f++)this.tb(a,c(b[f]),d(b[f]))};W.prototype.writeRepeatedSplitZigzagVarint64=W.prototype.Sd;W.prototype.Hd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.ka(a,b[c])};W.prototype.writeRepeatedInt64String=W.prototype.Hd;W.prototype.Ud=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)ub(this,a,b[c])};W.prototype.writeRepeatedUint32=W.prototype.Ud;\nW.prototype.Vd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.ub(a,b[c])};W.prototype.writeRepeatedUint32String=W.prototype.Vd;W.prototype.Wd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++){var d=b[c];null!=d&&(Y(this,a,0),this.a.va(d))}};W.prototype.writeRepeatedUint64=W.prototype.Wd;W.prototype.Xd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.vb(a,b[c])};W.prototype.writeRepeatedUint64String=W.prototype.Xd;\nW.prototype.Md=function(a,b){if(null!=b)for(var c=0;c<b.length;c++){var d=b[c];null!=d&&(Y(this,a,0),this.a.wa(d))}};W.prototype.writeRepeatedSint32=W.prototype.Md;W.prototype.Nd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++){var d=b[c];null!=d&&(Y(this,a,0),this.a.xa(d))}};W.prototype.writeRepeatedSint64=W.prototype.Nd;W.prototype.Od=function(a,b){if(null!=b)for(var c=0;c<b.length;c++){var d=b[c];null!=d&&(Y(this,a,0),this.a.Ta(d))}};W.prototype.writeRepeatedSint64String=W.prototype.Od;\nW.prototype.Pd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++){var d=b[c];null!=d&&(Y(this,a,0),this.a.W(d))}};W.prototype.writeRepeatedSintHash64=W.prototype.Pd;W.prototype.yd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.Pa(a,b[c])};W.prototype.writeRepeatedFixed32=W.prototype.yd;W.prototype.zd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.Qa(a,b[c])};W.prototype.writeRepeatedFixed64=W.prototype.zd;\nW.prototype.Ad=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.nb(a,b[c])};W.prototype.writeRepeatedFixed64String=W.prototype.Ad;W.prototype.Jd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.Ra(a,b[c])};W.prototype.writeRepeatedSfixed32=W.prototype.Jd;W.prototype.Kd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.Sa(a,b[c])};W.prototype.writeRepeatedSfixed64=W.prototype.Kd;W.prototype.Ld=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.qb(a,b[c])};\nW.prototype.writeRepeatedSfixed64String=W.prototype.Ld;W.prototype.Cd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.L(a,b[c])};W.prototype.writeRepeatedFloat=W.prototype.Cd;W.prototype.wd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.J(a,b[c])};W.prototype.writeRepeatedDouble=W.prototype.wd;W.prototype.ud=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.I(a,b[c])};W.prototype.writeRepeatedBool=W.prototype.ud;\nW.prototype.xd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.R(a,b[c])};W.prototype.writeRepeatedEnum=W.prototype.xd;W.prototype.Td=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.U(a,b[c])};W.prototype.writeRepeatedString=W.prototype.Td;W.prototype.vd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.ja(a,b[c])};W.prototype.writeRepeatedBytes=W.prototype.vd;W.prototype.Id=function(a,b,c){if(null!=b)for(var d=0;d<b.length;d++){var f=X(this,a);c(b[d],this);Z(this,f)}};\nW.prototype.writeRepeatedMessage=W.prototype.Id;W.prototype.Dd=function(a,b,c){if(null!=b)for(var d=0;d<b.length;d++)Y(this,a,3),c(b[d],this),Y(this,a,4)};W.prototype.writeRepeatedGroup=W.prototype.Dd;W.prototype.Bd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.K(a,b[c])};W.prototype.writeRepeatedFixedHash64=W.prototype.Bd;W.prototype.Yd=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.N(a,b[c])};W.prototype.writeRepeatedVarintHash64=W.prototype.Yd;\nW.prototype.ad=function(a,b){if(null!=b&&b.length){a=X(this,a);for(var c=0;c<b.length;c++)this.a.M(b[c]);Z(this,a)}};W.prototype.writePackedInt32=W.prototype.ad;W.prototype.bd=function(a,b){if(null!=b&&b.length){a=X(this,a);for(var c=0;c<b.length;c++)this.a.M(parseInt(b[c],10));Z(this,a)}};W.prototype.writePackedInt32String=W.prototype.bd;W.prototype.cd=function(a,b){if(null!=b&&b.length){a=X(this,a);for(var c=0;c<b.length;c++)this.a.ua(b[c]);Z(this,a)}};W.prototype.writePackedInt64=W.prototype.cd;\nW.prototype.md=function(a,b,c,d){if(null!=b){a=X(this,a);for(var f=0;f<b.length;f++)this.a.A(c(b[f]),d(b[f]));Z(this,a)}};W.prototype.writePackedSplitFixed64=W.prototype.md;W.prototype.nd=function(a,b,c,d){if(null!=b){a=X(this,a);for(var f=0;f<b.length;f++)this.a.l(c(b[f]),d(b[f]));Z(this,a)}};W.prototype.writePackedSplitVarint64=W.prototype.nd;W.prototype.od=function(a,b,c,d){if(null!=b){a=X(this,a);for(var f=this.a,h=0;h<b.length;h++)Ja(c(b[h]),d(b[h]),function(m,t){f.l(m>>>0,t>>>0)});Z(this,a)}};\nW.prototype.writePackedSplitZigzagVarint64=W.prototype.od;W.prototype.dd=function(a,b){if(null!=b&&b.length){a=X(this,a);for(var c=0;c<b.length;c++){var d=sb(b[c]);this.a.l(d.lo,d.hi)}Z(this,a)}};W.prototype.writePackedInt64String=W.prototype.dd;W.prototype.pd=function(a,b){if(null!=b&&b.length){a=X(this,a);for(var c=0;c<b.length;c++)this.a.j(b[c]);Z(this,a)}};W.prototype.writePackedUint32=W.prototype.pd;\nW.prototype.qd=function(a,b){if(null!=b&&b.length){a=X(this,a);for(var c=0;c<b.length;c++)this.a.j(parseInt(b[c],10));Z(this,a)}};W.prototype.writePackedUint32String=W.prototype.qd;W.prototype.rd=function(a,b){if(null!=b&&b.length){a=X(this,a);for(var c=0;c<b.length;c++)this.a.va(b[c]);Z(this,a)}};W.prototype.writePackedUint64=W.prototype.rd;W.prototype.sd=function(a,b){if(null!=b&&b.length){a=X(this,a);for(var c=0;c<b.length;c++){var d=U(b[c]);this.a.l(d.lo,d.hi)}Z(this,a)}};\nW.prototype.writePackedUint64String=W.prototype.sd;W.prototype.hd=function(a,b){if(null!=b&&b.length){a=X(this,a);for(var c=0;c<b.length;c++)this.a.wa(b[c]);Z(this,a)}};W.prototype.writePackedSint32=W.prototype.hd;W.prototype.jd=function(a,b){if(null!=b&&b.length){a=X(this,a);for(var c=0;c<b.length;c++)this.a.xa(b[c]);Z(this,a)}};W.prototype.writePackedSint64=W.prototype.jd;W.prototype.kd=function(a,b){if(null!=b&&b.length){a=X(this,a);for(var c=0;c<b.length;c++)this.a.W(H(b[c]));Z(this,a)}};\nW.prototype.writePackedSint64String=W.prototype.kd;W.prototype.ld=function(a,b){if(null!=b&&b.length){a=X(this,a);for(var c=0;c<b.length;c++)this.a.W(b[c]);Z(this,a)}};W.prototype.writePackedSintHash64=W.prototype.ld;W.prototype.Wc=function(a,b){if(null!=b&&b.length)for(Y(this,a,2),this.a.j(4*b.length),a=0;a<b.length;a++)this.a.s(b[a])};W.prototype.writePackedFixed32=W.prototype.Wc;W.prototype.Xc=function(a,b){if(null!=b&&b.length)for(Y(this,a,2),this.a.j(8*b.length),a=0;a<b.length;a++)this.a.V(b[a])};\nW.prototype.writePackedFixed64=W.prototype.Xc;W.prototype.Yc=function(a,b){if(null!=b&&b.length)for(Y(this,a,2),this.a.j(8*b.length),a=0;a<b.length;a++){var c=U(b[a]);this.a.A(c.lo,c.hi)}};W.prototype.writePackedFixed64String=W.prototype.Yc;W.prototype.ed=function(a,b){if(null!=b&&b.length)for(Y(this,a,2),this.a.j(4*b.length),a=0;a<b.length;a++)this.a.S(b[a])};W.prototype.writePackedSfixed32=W.prototype.ed;\nW.prototype.fd=function(a,b){if(null!=b&&b.length)for(Y(this,a,2),this.a.j(8*b.length),a=0;a<b.length;a++)this.a.T(b[a])};W.prototype.writePackedSfixed64=W.prototype.fd;W.prototype.gd=function(a,b){if(null!=b&&b.length)for(Y(this,a,2),this.a.j(8*b.length),a=0;a<b.length;a++)this.a.ka(b[a])};W.prototype.writePackedSfixed64String=W.prototype.gd;W.prototype.$c=function(a,b){if(null!=b&&b.length)for(Y(this,a,2),this.a.j(4*b.length),a=0;a<b.length;a++)this.a.L(b[a])};W.prototype.writePackedFloat=W.prototype.$c;\nW.prototype.Uc=function(a,b){if(null!=b&&b.length)for(Y(this,a,2),this.a.j(8*b.length),a=0;a<b.length;a++)this.a.J(b[a])};W.prototype.writePackedDouble=W.prototype.Uc;W.prototype.Tc=function(a,b){if(null!=b&&b.length)for(Y(this,a,2),this.a.j(b.length),a=0;a<b.length;a++)this.a.I(b[a])};W.prototype.writePackedBool=W.prototype.Tc;W.prototype.Vc=function(a,b){if(null!=b&&b.length){a=X(this,a);for(var c=0;c<b.length;c++)this.a.R(b[c]);Z(this,a)}};W.prototype.writePackedEnum=W.prototype.Vc;\nW.prototype.Zc=function(a,b){if(null!=b&&b.length)for(Y(this,a,2),this.a.j(8*b.length),a=0;a<b.length;a++)this.a.K(b[a])};W.prototype.writePackedFixedHash64=W.prototype.Zc;W.prototype.td=function(a,b){if(null!=b&&b.length){a=X(this,a);for(var c=0;c<b.length;c++)this.a.N(b[c]);Z(this,a)}};W.prototype.writePackedVarintHash64=W.prototype.td;\"object\"===typeof exports&&(exports.debug=R,exports.Map=r,exports.Message=N,exports.BinaryReader=J,exports.BinaryWriter=W,exports.ExtensionFieldInfo=Ya,exports.ExtensionFieldBinaryInfo=Za,exports.exportSymbol=ma,exports.inherits=na,exports.object={extend:pa},exports.typeOf=k);\n", "// source: google/protobuf/any.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global =\n    (typeof globalThis !== 'undefined' && globalThis) ||\n    (typeof window !== 'undefined' && window) ||\n    (typeof global !== 'undefined' && global) ||\n    (typeof self !== 'undefined' && self) ||\n    (function () { return this; }).call(null) ||\n    Function('return this')();\n\ngoog.exportSymbol('proto.google.protobuf.Any', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.Any = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.google.protobuf.Any, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.google.protobuf.Any.displayName = 'proto.google.protobuf.Any';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.Any.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.Any.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.Any} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.Any.toObject = function(includeInstance, msg) {\n  var f, obj = {\ntypeUrl: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\nvalue: msg.getValue_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.Any}\n */\nproto.google.protobuf.Any.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.Any;\n  return proto.google.protobuf.Any.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.Any} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.Any}\n */\nproto.google.protobuf.Any.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTypeUrl(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.Any.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.Any.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.Any} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.Any.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTypeUrl();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getValue_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string type_url = 1;\n * @return {string}\n */\nproto.google.protobuf.Any.prototype.getTypeUrl = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.google.protobuf.Any} returns this\n */\nproto.google.protobuf.Any.prototype.setTypeUrl = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional bytes value = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.google.protobuf.Any.prototype.getValue = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes value = 2;\n * This is a type-conversion wrapper around `getValue()`\n * @return {string}\n */\nproto.google.protobuf.Any.prototype.getValue_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getValue()));\n};\n\n\n/**\n * optional bytes value = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getValue()`\n * @return {!Uint8Array}\n */\nproto.google.protobuf.Any.prototype.getValue_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getValue()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.google.protobuf.Any} returns this\n */\nproto.google.protobuf.Any.prototype.setValue = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\ngoog.object.extend(exports, proto.google.protobuf);\n/* This code will be inserted into generated code for\n * google/protobuf/any.proto. */\n\n/**\n * Returns the type name contained in this instance, if any.\n * @return {string|undefined}\n */\nproto.google.protobuf.Any.prototype.getTypeName = function() {\n  return this.getTypeUrl().split('/').pop();\n};\n\n\n/**\n * Packs the given message instance into this Any.\n * For binary format usage only.\n * @param {!Uint8Array} serialized The serialized data to pack.\n * @param {string} name The type name of this message object.\n * @param {string=} opt_typeUrlPrefix the type URL prefix.\n */\nproto.google.protobuf.Any.prototype.pack = function(serialized, name,\n                                                    opt_typeUrlPrefix) {\n  if (!opt_typeUrlPrefix) {\n    opt_typeUrlPrefix = 'type.googleapis.com/';\n  }\n\n  if (opt_typeUrlPrefix.substr(-1) != '/') {\n    this.setTypeUrl(opt_typeUrlPrefix + '/' + name);\n  } else {\n    this.setTypeUrl(opt_typeUrlPrefix + name);\n  }\n\n  this.setValue(serialized);\n};\n\n\n/**\n * @template T\n * Unpacks this Any into the given message object.\n * @param {function(Uint8Array):T} deserialize Function that will deserialize\n *     the binary data properly.\n * @param {string} name The expected type name of this message object.\n * @return {?T} If the name matched the expected name, returns the deserialized\n *     object, otherwise returns null.\n */\nproto.google.protobuf.Any.prototype.unpack = function(deserialize, name) {\n  if (this.getTypeName() == name) {\n    return deserialize(this.getValue_asU8());\n  } else {\n    return null;\n  }\n};\n", "// source: core/Tron.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof window !== 'undefined' && window) ||\n  (typeof global !== 'undefined' && global) ||\n  (typeof self !== 'undefined' && self) ||\n  (function () { return this; }).call(null) ||\n  Function('return this')();\n\nvar google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');\ngoog.object.extend(proto, google_protobuf_any_pb);\ngoog.exportSymbol('TronWebProto.Account', null, global);\ngoog.exportSymbol('TronWebProto.Account.AccountResource', null, global);\ngoog.exportSymbol('TronWebProto.Account.Frozen', null, global);\ngoog.exportSymbol('TronWebProto.AccountId', null, global);\ngoog.exportSymbol('TronWebProto.AccountType', null, global);\ngoog.exportSymbol('TronWebProto.DelegatedResource', null, global);\ngoog.exportSymbol('TronWebProto.Exchange', null, global);\ngoog.exportSymbol('TronWebProto.Key', null, global);\ngoog.exportSymbol('TronWebProto.MarketOrderDetail', null, global);\ngoog.exportSymbol('TronWebProto.Permission', null, global);\ngoog.exportSymbol('TronWebProto.Permission.PermissionType', null, global);\ngoog.exportSymbol('TronWebProto.Proposal', null, global);\ngoog.exportSymbol('TronWebProto.Proposal.State', null, global);\ngoog.exportSymbol('TronWebProto.Transaction', null, global);\ngoog.exportSymbol('TronWebProto.Transaction.Contract', null, global);\ngoog.exportSymbol('TronWebProto.Transaction.Contract.ContractType', null, global);\ngoog.exportSymbol('TronWebProto.Transaction.Result', null, global);\ngoog.exportSymbol('TronWebProto.Transaction.Result.code', null, global);\ngoog.exportSymbol('TronWebProto.Transaction.Result.contractResult', null, global);\ngoog.exportSymbol('TronWebProto.Transaction.raw', null, global);\ngoog.exportSymbol('TronWebProto.Vote', null, global);\ngoog.exportSymbol('TronWebProto.Votes', null, global);\ngoog.exportSymbol('TronWebProto.Witness', null, global);\ngoog.exportSymbol('TronWebProto.authority', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AccountId = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.AccountId, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.AccountId.displayName = 'TronWebProto.AccountId';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Vote = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.Vote, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Vote.displayName = 'TronWebProto.Vote';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Proposal = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.Proposal.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.Proposal, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Proposal.displayName = 'TronWebProto.Proposal';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Exchange = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.Exchange, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Exchange.displayName = 'TronWebProto.Exchange';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Account = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.Account.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.Account, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Account.displayName = 'TronWebProto.Account';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Account.Frozen = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.Account.Frozen, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Account.Frozen.displayName = 'TronWebProto.Account.Frozen';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Account.AccountResource = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.Account.AccountResource, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Account.AccountResource.displayName = 'TronWebProto.Account.AccountResource';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Key = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.Key, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Key.displayName = 'TronWebProto.Key';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.DelegatedResource = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.DelegatedResource, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.DelegatedResource.displayName = 'TronWebProto.DelegatedResource';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.authority = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.authority, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.authority.displayName = 'TronWebProto.authority';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Permission = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.Permission.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.Permission, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Permission.displayName = 'TronWebProto.Permission';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Witness = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.Witness, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Witness.displayName = 'TronWebProto.Witness';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Votes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.Votes.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.Votes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Votes.displayName = 'TronWebProto.Votes';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.MarketOrderDetail = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.MarketOrderDetail, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.MarketOrderDetail.displayName = 'TronWebProto.MarketOrderDetail';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Transaction = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.Transaction.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.Transaction, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Transaction.displayName = 'TronWebProto.Transaction';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Transaction.Contract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.Transaction.Contract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Transaction.Contract.displayName = 'TronWebProto.Transaction.Contract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Transaction.Result = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.Transaction.Result.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.Transaction.Result, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Transaction.Result.displayName = 'TronWebProto.Transaction.Result';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Transaction.raw = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.Transaction.raw.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.Transaction.raw, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Transaction.raw.displayName = 'TronWebProto.Transaction.raw';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.AccountId.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.AccountId.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.AccountId} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountId.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: msg.getName_asB64(),\n    address: msg.getAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AccountId}\n */\nTronWebProto.AccountId.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.AccountId;\n  return TronWebProto.AccountId.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AccountId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AccountId}\n */\nTronWebProto.AccountId.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AccountId.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.AccountId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AccountId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountId.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes name = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AccountId.prototype.getName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes name = 1;\n * This is a type-conversion wrapper around `getName()`\n * @return {string}\n */\nTronWebProto.AccountId.prototype.getName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getName()));\n};\n\n\n/**\n * optional bytes name = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getName()`\n * @return {!Uint8Array}\n */\nTronWebProto.AccountId.prototype.getName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getName()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AccountId} returns this\n */\nTronWebProto.AccountId.prototype.setName = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AccountId.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes address = 2;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nTronWebProto.AccountId.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.AccountId.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AccountId} returns this\n */\nTronWebProto.AccountId.prototype.setAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Vote.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Vote.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Vote} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Vote.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    voteAddress: msg.getVoteAddress_asB64(),\n    voteCount: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Vote}\n */\nTronWebProto.Vote.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Vote;\n  return TronWebProto.Vote.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Vote} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Vote}\n */\nTronWebProto.Vote.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setVoteAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setVoteCount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Vote.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Vote.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Vote} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Vote.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getVoteAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getVoteCount();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes vote_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Vote.prototype.getVoteAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes vote_address = 1;\n * This is a type-conversion wrapper around `getVoteAddress()`\n * @return {string}\n */\nTronWebProto.Vote.prototype.getVoteAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getVoteAddress()));\n};\n\n\n/**\n * optional bytes vote_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getVoteAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.Vote.prototype.getVoteAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getVoteAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Vote} returns this\n */\nTronWebProto.Vote.prototype.setVoteAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 vote_count = 2;\n * @return {number}\n */\nTronWebProto.Vote.prototype.getVoteCount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Vote} returns this\n */\nTronWebProto.Vote.prototype.setVoteCount = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.Proposal.repeatedFields_ = [6];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Proposal.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Proposal.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Proposal} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Proposal.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    proposalId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    proposerAddress: msg.getProposerAddress_asB64(),\n    parametersMap: (f = msg.getParametersMap()) ? f.toObject(includeInstance, undefined) : [],\n    expirationTime: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    createTime: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    approvalsList: msg.getApprovalsList_asB64(),\n    state: jspb.Message.getFieldWithDefault(msg, 7, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Proposal}\n */\nTronWebProto.Proposal.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Proposal;\n  return TronWebProto.Proposal.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Proposal} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Proposal}\n */\nTronWebProto.Proposal.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setProposalId(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setProposerAddress(value);\n      break;\n    case 3:\n      var value = msg.getParametersMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt64, jspb.BinaryReader.prototype.readInt64, null, 0, 0);\n         });\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpirationTime(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCreateTime(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addApprovals(value);\n      break;\n    case 7:\n      var value = /** @type {!TronWebProto.Proposal.State} */ (reader.readEnum());\n      msg.setState(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Proposal.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Proposal.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Proposal} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Proposal.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProposalId();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getProposerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getParametersMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeInt64, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getExpirationTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getCreateTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getApprovalsList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      6,\n      f\n    );\n  }\n  f = message.getState();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nTronWebProto.Proposal.State = {\n  PENDING: 0,\n  DISAPPROVED: 1,\n  APPROVED: 2,\n  CANCELED: 3\n};\n\n/**\n * optional int64 proposal_id = 1;\n * @return {number}\n */\nTronWebProto.Proposal.prototype.getProposalId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Proposal} returns this\n */\nTronWebProto.Proposal.prototype.setProposalId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional bytes proposer_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Proposal.prototype.getProposerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes proposer_address = 2;\n * This is a type-conversion wrapper around `getProposerAddress()`\n * @return {string}\n */\nTronWebProto.Proposal.prototype.getProposerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getProposerAddress()));\n};\n\n\n/**\n * optional bytes proposer_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getProposerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.Proposal.prototype.getProposerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getProposerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Proposal} returns this\n */\nTronWebProto.Proposal.prototype.setProposerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * map<int64, int64> parameters = 3;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,number>}\n */\nTronWebProto.Proposal.prototype.getParametersMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,number>} */ (\n      jspb.Message.getMapField(this, 3, opt_noLazyCreate,\n      null));\n};\n\n\n/**\n * Clears values from the map. The map will be non-null.\n * @return {!TronWebProto.Proposal} returns this\n */\nTronWebProto.Proposal.prototype.clearParametersMap = function() {\n  this.getParametersMap().clear();\n  return this;};\n\n\n/**\n * optional int64 expiration_time = 4;\n * @return {number}\n */\nTronWebProto.Proposal.prototype.getExpirationTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Proposal} returns this\n */\nTronWebProto.Proposal.prototype.setExpirationTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional int64 create_time = 5;\n * @return {number}\n */\nTronWebProto.Proposal.prototype.getCreateTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Proposal} returns this\n */\nTronWebProto.Proposal.prototype.setCreateTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * repeated bytes approvals = 6;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\nTronWebProto.Proposal.prototype.getApprovalsList = function() {\n  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 6));\n};\n\n\n/**\n * repeated bytes approvals = 6;\n * This is a type-conversion wrapper around `getApprovalsList()`\n * @return {!Array<string>}\n */\nTronWebProto.Proposal.prototype.getApprovalsList_asB64 = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(\n      this.getApprovalsList()));\n};\n\n\n/**\n * repeated bytes approvals = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getApprovalsList()`\n * @return {!Array<!Uint8Array>}\n */\nTronWebProto.Proposal.prototype.getApprovalsList_asU8 = function() {\n  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getApprovalsList()));\n};\n\n\n/**\n * @param {!(Array<!Uint8Array>|Array<string>)} value\n * @return {!TronWebProto.Proposal} returns this\n */\nTronWebProto.Proposal.prototype.setApprovalsList = function(value) {\n  return jspb.Message.setField(this, 6, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n * @return {!TronWebProto.Proposal} returns this\n */\nTronWebProto.Proposal.prototype.addApprovals = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Proposal} returns this\n */\nTronWebProto.Proposal.prototype.clearApprovalsList = function() {\n  return this.setApprovalsList([]);\n};\n\n\n/**\n * optional State state = 7;\n * @return {!TronWebProto.Proposal.State}\n */\nTronWebProto.Proposal.prototype.getState = function() {\n  return /** @type {!TronWebProto.Proposal.State} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/**\n * @param {!TronWebProto.Proposal.State} value\n * @return {!TronWebProto.Proposal} returns this\n */\nTronWebProto.Proposal.prototype.setState = function(value) {\n  return jspb.Message.setProto3EnumField(this, 7, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Exchange.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Exchange.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Exchange} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Exchange.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    exchangeId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    creatorAddress: msg.getCreatorAddress_asB64(),\n    createTime: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    firstTokenId: msg.getFirstTokenId_asB64(),\n    firstTokenBalance: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    secondTokenId: msg.getSecondTokenId_asB64(),\n    secondTokenBalance: jspb.Message.getFieldWithDefault(msg, 9, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Exchange}\n */\nTronWebProto.Exchange.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Exchange;\n  return TronWebProto.Exchange.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Exchange} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Exchange}\n */\nTronWebProto.Exchange.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExchangeId(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setCreatorAddress(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCreateTime(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setFirstTokenId(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFirstTokenBalance(value);\n      break;\n    case 8:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSecondTokenId(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSecondTokenBalance(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Exchange.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Exchange.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Exchange} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Exchange.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getExchangeId();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getCreatorAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getCreateTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getFirstTokenId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      6,\n      f\n    );\n  }\n  f = message.getFirstTokenBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getSecondTokenId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      8,\n      f\n    );\n  }\n  f = message.getSecondTokenBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 exchange_id = 1;\n * @return {number}\n */\nTronWebProto.Exchange.prototype.getExchangeId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Exchange} returns this\n */\nTronWebProto.Exchange.prototype.setExchangeId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional bytes creator_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Exchange.prototype.getCreatorAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes creator_address = 2;\n * This is a type-conversion wrapper around `getCreatorAddress()`\n * @return {string}\n */\nTronWebProto.Exchange.prototype.getCreatorAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getCreatorAddress()));\n};\n\n\n/**\n * optional bytes creator_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCreatorAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.Exchange.prototype.getCreatorAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getCreatorAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Exchange} returns this\n */\nTronWebProto.Exchange.prototype.setCreatorAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional int64 create_time = 3;\n * @return {number}\n */\nTronWebProto.Exchange.prototype.getCreateTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Exchange} returns this\n */\nTronWebProto.Exchange.prototype.setCreateTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional bytes first_token_id = 6;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Exchange.prototype.getFirstTokenId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * optional bytes first_token_id = 6;\n * This is a type-conversion wrapper around `getFirstTokenId()`\n * @return {string}\n */\nTronWebProto.Exchange.prototype.getFirstTokenId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getFirstTokenId()));\n};\n\n\n/**\n * optional bytes first_token_id = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFirstTokenId()`\n * @return {!Uint8Array}\n */\nTronWebProto.Exchange.prototype.getFirstTokenId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getFirstTokenId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Exchange} returns this\n */\nTronWebProto.Exchange.prototype.setFirstTokenId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 6, value);\n};\n\n\n/**\n * optional int64 first_token_balance = 7;\n * @return {number}\n */\nTronWebProto.Exchange.prototype.getFirstTokenBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Exchange} returns this\n */\nTronWebProto.Exchange.prototype.setFirstTokenBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * optional bytes second_token_id = 8;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Exchange.prototype.getSecondTokenId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/**\n * optional bytes second_token_id = 8;\n * This is a type-conversion wrapper around `getSecondTokenId()`\n * @return {string}\n */\nTronWebProto.Exchange.prototype.getSecondTokenId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSecondTokenId()));\n};\n\n\n/**\n * optional bytes second_token_id = 8;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSecondTokenId()`\n * @return {!Uint8Array}\n */\nTronWebProto.Exchange.prototype.getSecondTokenId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSecondTokenId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Exchange} returns this\n */\nTronWebProto.Exchange.prototype.setSecondTokenId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 8, value);\n};\n\n\n/**\n * optional int64 second_token_balance = 9;\n * @return {number}\n */\nTronWebProto.Exchange.prototype.getSecondTokenBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Exchange} returns this\n */\nTronWebProto.Exchange.prototype.setSecondTokenBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 9, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.Account.repeatedFields_ = [5,7,16,33];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Account.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Account.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Account} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Account.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    accountName: msg.getAccountName_asB64(),\n    type: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    address: msg.getAddress_asB64(),\n    balance: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    votesList: jspb.Message.toObjectList(msg.getVotesList(),\n    TronWebProto.Vote.toObject, includeInstance),\n    assetMap: (f = msg.getAssetMap()) ? f.toObject(includeInstance, undefined) : [],\n    assetv2Map: (f = msg.getAssetv2Map()) ? f.toObject(includeInstance, undefined) : [],\n    frozenList: jspb.Message.toObjectList(msg.getFrozenList(),\n    TronWebProto.Account.Frozen.toObject, includeInstance),\n    netUsage: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    acquiredDelegatedFrozenBalanceForBandwidth: jspb.Message.getFieldWithDefault(msg, 41, 0),\n    delegatedFrozenBalanceForBandwidth: jspb.Message.getFieldWithDefault(msg, 42, 0),\n    oldTronPower: jspb.Message.getFieldWithDefault(msg, 46, 0),\n    tronPower: (f = msg.getTronPower()) && TronWebProto.Account.Frozen.toObject(includeInstance, f),\n    assetOptimized: jspb.Message.getBooleanFieldWithDefault(msg, 60, false),\n    createTime: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    latestOprationTime: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    allowance: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    latestWithdrawTime: jspb.Message.getFieldWithDefault(msg, 12, 0),\n    code: msg.getCode_asB64(),\n    isWitness: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),\n    isCommittee: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),\n    frozenSupplyList: jspb.Message.toObjectList(msg.getFrozenSupplyList(),\n    TronWebProto.Account.Frozen.toObject, includeInstance),\n    assetIssuedName: msg.getAssetIssuedName_asB64(),\n    assetIssuedId: msg.getAssetIssuedId_asB64(),\n    latestAssetOperationTimeMap: (f = msg.getLatestAssetOperationTimeMap()) ? f.toObject(includeInstance, undefined) : [],\n    latestAssetOperationTimev2Map: (f = msg.getLatestAssetOperationTimev2Map()) ? f.toObject(includeInstance, undefined) : [],\n    freeNetUsage: jspb.Message.getFieldWithDefault(msg, 19, 0),\n    freeAssetNetUsageMap: (f = msg.getFreeAssetNetUsageMap()) ? f.toObject(includeInstance, undefined) : [],\n    freeAssetNetUsagev2Map: (f = msg.getFreeAssetNetUsagev2Map()) ? f.toObject(includeInstance, undefined) : [],\n    latestConsumeTime: jspb.Message.getFieldWithDefault(msg, 21, 0),\n    latestConsumeFreeTime: jspb.Message.getFieldWithDefault(msg, 22, 0),\n    accountId: msg.getAccountId_asB64(),\n    accountResource: (f = msg.getAccountResource()) && TronWebProto.Account.AccountResource.toObject(includeInstance, f),\n    codehash: msg.getCodehash_asB64(),\n    ownerPermission: (f = msg.getOwnerPermission()) && TronWebProto.Permission.toObject(includeInstance, f),\n    witnessPermission: (f = msg.getWitnessPermission()) && TronWebProto.Permission.toObject(includeInstance, f),\n    activePermissionList: jspb.Message.toObjectList(msg.getActivePermissionList(),\n    TronWebProto.Permission.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Account}\n */\nTronWebProto.Account.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Account;\n  return TronWebProto.Account.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Account} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Account}\n */\nTronWebProto.Account.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAccountName(value);\n      break;\n    case 2:\n      var value = /** @type {!TronWebProto.AccountType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBalance(value);\n      break;\n    case 5:\n      var value = new TronWebProto.Vote;\n      reader.readMessage(value,TronWebProto.Vote.deserializeBinaryFromReader);\n      msg.addVotes(value);\n      break;\n    case 6:\n      var value = msg.getAssetMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64, null, \"\", 0);\n         });\n      break;\n    case 56:\n      var value = msg.getAssetv2Map();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64, null, \"\", 0);\n         });\n      break;\n    case 7:\n      var value = new TronWebProto.Account.Frozen;\n      reader.readMessage(value,TronWebProto.Account.Frozen.deserializeBinaryFromReader);\n      msg.addFrozen(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNetUsage(value);\n      break;\n    case 41:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAcquiredDelegatedFrozenBalanceForBandwidth(value);\n      break;\n    case 42:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setDelegatedFrozenBalanceForBandwidth(value);\n      break;\n    case 46:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setOldTronPower(value);\n      break;\n    case 47:\n      var value = new TronWebProto.Account.Frozen;\n      reader.readMessage(value,TronWebProto.Account.Frozen.deserializeBinaryFromReader);\n      msg.setTronPower(value);\n      break;\n    case 60:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAssetOptimized(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCreateTime(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestOprationTime(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAllowance(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestWithdrawTime(value);\n      break;\n    case 13:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setCode(value);\n      break;\n    case 14:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsWitness(value);\n      break;\n    case 15:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsCommittee(value);\n      break;\n    case 16:\n      var value = new TronWebProto.Account.Frozen;\n      reader.readMessage(value,TronWebProto.Account.Frozen.deserializeBinaryFromReader);\n      msg.addFrozenSupply(value);\n      break;\n    case 17:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAssetIssuedName(value);\n      break;\n    case 57:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAssetIssuedId(value);\n      break;\n    case 18:\n      var value = msg.getLatestAssetOperationTimeMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64, null, \"\", 0);\n         });\n      break;\n    case 58:\n      var value = msg.getLatestAssetOperationTimev2Map();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64, null, \"\", 0);\n         });\n      break;\n    case 19:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFreeNetUsage(value);\n      break;\n    case 20:\n      var value = msg.getFreeAssetNetUsageMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64, null, \"\", 0);\n         });\n      break;\n    case 59:\n      var value = msg.getFreeAssetNetUsagev2Map();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64, null, \"\", 0);\n         });\n      break;\n    case 21:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestConsumeTime(value);\n      break;\n    case 22:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestConsumeFreeTime(value);\n      break;\n    case 23:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAccountId(value);\n      break;\n    case 26:\n      var value = new TronWebProto.Account.AccountResource;\n      reader.readMessage(value,TronWebProto.Account.AccountResource.deserializeBinaryFromReader);\n      msg.setAccountResource(value);\n      break;\n    case 30:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setCodehash(value);\n      break;\n    case 31:\n      var value = new TronWebProto.Permission;\n      reader.readMessage(value,TronWebProto.Permission.deserializeBinaryFromReader);\n      msg.setOwnerPermission(value);\n      break;\n    case 32:\n      var value = new TronWebProto.Permission;\n      reader.readMessage(value,TronWebProto.Permission.deserializeBinaryFromReader);\n      msg.setWitnessPermission(value);\n      break;\n    case 33:\n      var value = new TronWebProto.Permission;\n      reader.readMessage(value,TronWebProto.Permission.deserializeBinaryFromReader);\n      msg.addActivePermission(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Account.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Account.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Account} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Account.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAccountName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      2,\n      f\n    );\n  }\n  f = message.getAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getVotesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      5,\n      f,\n      TronWebProto.Vote.serializeBinaryToWriter\n    );\n  }\n  f = message.getAssetMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getAssetv2Map(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(56, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getFrozenList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      7,\n      f,\n      TronWebProto.Account.Frozen.serializeBinaryToWriter\n    );\n  }\n  f = message.getNetUsage();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getAcquiredDelegatedFrozenBalanceForBandwidth();\n  if (f !== 0) {\n    writer.writeInt64(\n      41,\n      f\n    );\n  }\n  f = message.getDelegatedFrozenBalanceForBandwidth();\n  if (f !== 0) {\n    writer.writeInt64(\n      42,\n      f\n    );\n  }\n  f = message.getOldTronPower();\n  if (f !== 0) {\n    writer.writeInt64(\n      46,\n      f\n    );\n  }\n  f = message.getTronPower();\n  if (f != null) {\n    writer.writeMessage(\n      47,\n      f,\n      TronWebProto.Account.Frozen.serializeBinaryToWriter\n    );\n  }\n  f = message.getAssetOptimized();\n  if (f) {\n    writer.writeBool(\n      60,\n      f\n    );\n  }\n  f = message.getCreateTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getLatestOprationTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      10,\n      f\n    );\n  }\n  f = message.getAllowance();\n  if (f !== 0) {\n    writer.writeInt64(\n      11,\n      f\n    );\n  }\n  f = message.getLatestWithdrawTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      12,\n      f\n    );\n  }\n  f = message.getCode_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      13,\n      f\n    );\n  }\n  f = message.getIsWitness();\n  if (f) {\n    writer.writeBool(\n      14,\n      f\n    );\n  }\n  f = message.getIsCommittee();\n  if (f) {\n    writer.writeBool(\n      15,\n      f\n    );\n  }\n  f = message.getFrozenSupplyList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      16,\n      f,\n      TronWebProto.Account.Frozen.serializeBinaryToWriter\n    );\n  }\n  f = message.getAssetIssuedName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      17,\n      f\n    );\n  }\n  f = message.getAssetIssuedId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      57,\n      f\n    );\n  }\n  f = message.getLatestAssetOperationTimeMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(18, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getLatestAssetOperationTimev2Map(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(58, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getFreeNetUsage();\n  if (f !== 0) {\n    writer.writeInt64(\n      19,\n      f\n    );\n  }\n  f = message.getFreeAssetNetUsageMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(20, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getFreeAssetNetUsagev2Map(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(59, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getLatestConsumeTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      21,\n      f\n    );\n  }\n  f = message.getLatestConsumeFreeTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      22,\n      f\n    );\n  }\n  f = message.getAccountId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      23,\n      f\n    );\n  }\n  f = message.getAccountResource();\n  if (f != null) {\n    writer.writeMessage(\n      26,\n      f,\n      TronWebProto.Account.AccountResource.serializeBinaryToWriter\n    );\n  }\n  f = message.getCodehash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      30,\n      f\n    );\n  }\n  f = message.getOwnerPermission();\n  if (f != null) {\n    writer.writeMessage(\n      31,\n      f,\n      TronWebProto.Permission.serializeBinaryToWriter\n    );\n  }\n  f = message.getWitnessPermission();\n  if (f != null) {\n    writer.writeMessage(\n      32,\n      f,\n      TronWebProto.Permission.serializeBinaryToWriter\n    );\n  }\n  f = message.getActivePermissionList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      33,\n      f,\n      TronWebProto.Permission.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Account.Frozen.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Account.Frozen.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Account.Frozen} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Account.Frozen.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    frozenBalance: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    expireTime: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Account.Frozen}\n */\nTronWebProto.Account.Frozen.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Account.Frozen;\n  return TronWebProto.Account.Frozen.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Account.Frozen} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Account.Frozen}\n */\nTronWebProto.Account.Frozen.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFrozenBalance(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpireTime(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Account.Frozen.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Account.Frozen.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Account.Frozen} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Account.Frozen.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFrozenBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getExpireTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 frozen_balance = 1;\n * @return {number}\n */\nTronWebProto.Account.Frozen.prototype.getFrozenBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account.Frozen} returns this\n */\nTronWebProto.Account.Frozen.prototype.setFrozenBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int64 expire_time = 2;\n * @return {number}\n */\nTronWebProto.Account.Frozen.prototype.getExpireTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account.Frozen} returns this\n */\nTronWebProto.Account.Frozen.prototype.setExpireTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Account.AccountResource.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Account.AccountResource.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Account.AccountResource} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Account.AccountResource.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    energyUsage: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    frozenBalanceForEnergy: (f = msg.getFrozenBalanceForEnergy()) && TronWebProto.Account.Frozen.toObject(includeInstance, f),\n    latestConsumeTimeForEnergy: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    acquiredDelegatedFrozenBalanceForEnergy: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    delegatedFrozenBalanceForEnergy: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    storageLimit: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    storageUsage: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    latestExchangeStorageTime: jspb.Message.getFieldWithDefault(msg, 8, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Account.AccountResource}\n */\nTronWebProto.Account.AccountResource.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Account.AccountResource;\n  return TronWebProto.Account.AccountResource.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Account.AccountResource} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Account.AccountResource}\n */\nTronWebProto.Account.AccountResource.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setEnergyUsage(value);\n      break;\n    case 2:\n      var value = new TronWebProto.Account.Frozen;\n      reader.readMessage(value,TronWebProto.Account.Frozen.deserializeBinaryFromReader);\n      msg.setFrozenBalanceForEnergy(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestConsumeTimeForEnergy(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAcquiredDelegatedFrozenBalanceForEnergy(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setDelegatedFrozenBalanceForEnergy(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setStorageLimit(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setStorageUsage(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestExchangeStorageTime(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Account.AccountResource.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Account.AccountResource.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Account.AccountResource} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Account.AccountResource.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEnergyUsage();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getFrozenBalanceForEnergy();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      TronWebProto.Account.Frozen.serializeBinaryToWriter\n    );\n  }\n  f = message.getLatestConsumeTimeForEnergy();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getAcquiredDelegatedFrozenBalanceForEnergy();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getDelegatedFrozenBalanceForEnergy();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getStorageLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getStorageUsage();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getLatestExchangeStorageTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 energy_usage = 1;\n * @return {number}\n */\nTronWebProto.Account.AccountResource.prototype.getEnergyUsage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account.AccountResource} returns this\n */\nTronWebProto.Account.AccountResource.prototype.setEnergyUsage = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional Frozen frozen_balance_for_energy = 2;\n * @return {?TronWebProto.Account.Frozen}\n */\nTronWebProto.Account.AccountResource.prototype.getFrozenBalanceForEnergy = function() {\n  return /** @type{?TronWebProto.Account.Frozen} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.Account.Frozen, 2));\n};\n\n\n/**\n * @param {?TronWebProto.Account.Frozen|undefined} value\n * @return {!TronWebProto.Account.AccountResource} returns this\n*/\nTronWebProto.Account.AccountResource.prototype.setFrozenBalanceForEnergy = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.Account.AccountResource} returns this\n */\nTronWebProto.Account.AccountResource.prototype.clearFrozenBalanceForEnergy = function() {\n  return this.setFrozenBalanceForEnergy(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.Account.AccountResource.prototype.hasFrozenBalanceForEnergy = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional int64 latest_consume_time_for_energy = 3;\n * @return {number}\n */\nTronWebProto.Account.AccountResource.prototype.getLatestConsumeTimeForEnergy = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account.AccountResource} returns this\n */\nTronWebProto.Account.AccountResource.prototype.setLatestConsumeTimeForEnergy = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int64 acquired_delegated_frozen_balance_for_energy = 4;\n * @return {number}\n */\nTronWebProto.Account.AccountResource.prototype.getAcquiredDelegatedFrozenBalanceForEnergy = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account.AccountResource} returns this\n */\nTronWebProto.Account.AccountResource.prototype.setAcquiredDelegatedFrozenBalanceForEnergy = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional int64 delegated_frozen_balance_for_energy = 5;\n * @return {number}\n */\nTronWebProto.Account.AccountResource.prototype.getDelegatedFrozenBalanceForEnergy = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account.AccountResource} returns this\n */\nTronWebProto.Account.AccountResource.prototype.setDelegatedFrozenBalanceForEnergy = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional int64 storage_limit = 6;\n * @return {number}\n */\nTronWebProto.Account.AccountResource.prototype.getStorageLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account.AccountResource} returns this\n */\nTronWebProto.Account.AccountResource.prototype.setStorageLimit = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional int64 storage_usage = 7;\n * @return {number}\n */\nTronWebProto.Account.AccountResource.prototype.getStorageUsage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account.AccountResource} returns this\n */\nTronWebProto.Account.AccountResource.prototype.setStorageUsage = function(value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * optional int64 latest_exchange_storage_time = 8;\n * @return {number}\n */\nTronWebProto.Account.AccountResource.prototype.getLatestExchangeStorageTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account.AccountResource} returns this\n */\nTronWebProto.Account.AccountResource.prototype.setLatestExchangeStorageTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * optional bytes account_name = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Account.prototype.getAccountName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes account_name = 1;\n * This is a type-conversion wrapper around `getAccountName()`\n * @return {string}\n */\nTronWebProto.Account.prototype.getAccountName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAccountName()));\n};\n\n\n/**\n * optional bytes account_name = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAccountName()`\n * @return {!Uint8Array}\n */\nTronWebProto.Account.prototype.getAccountName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAccountName()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setAccountName = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional AccountType type = 2;\n * @return {!TronWebProto.AccountType}\n */\nTronWebProto.Account.prototype.getType = function() {\n  return /** @type {!TronWebProto.AccountType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {!TronWebProto.AccountType} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setType = function(value) {\n  return jspb.Message.setProto3EnumField(this, 2, value);\n};\n\n\n/**\n * optional bytes address = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Account.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes address = 3;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nTronWebProto.Account.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.Account.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 balance = 4;\n * @return {number}\n */\nTronWebProto.Account.prototype.getBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * repeated Vote votes = 5;\n * @return {!Array<!TronWebProto.Vote>}\n */\nTronWebProto.Account.prototype.getVotesList = function() {\n  return /** @type{!Array<!TronWebProto.Vote>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.Vote, 5));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.Vote>} value\n * @return {!TronWebProto.Account} returns this\n*/\nTronWebProto.Account.prototype.setVotesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n\n\n/**\n * @param {!TronWebProto.Vote=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Vote}\n */\nTronWebProto.Account.prototype.addVotes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, TronWebProto.Vote, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearVotesList = function() {\n  return this.setVotesList([]);\n};\n\n\n/**\n * map<string, int64> asset = 6;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,number>}\n */\nTronWebProto.Account.prototype.getAssetMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,number>} */ (\n      jspb.Message.getMapField(this, 6, opt_noLazyCreate,\n      null));\n};\n\n\n/**\n * Clears values from the map. The map will be non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearAssetMap = function() {\n  this.getAssetMap().clear();\n  return this;};\n\n\n/**\n * map<string, int64> assetV2 = 56;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,number>}\n */\nTronWebProto.Account.prototype.getAssetv2Map = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,number>} */ (\n      jspb.Message.getMapField(this, 56, opt_noLazyCreate,\n      null));\n};\n\n\n/**\n * Clears values from the map. The map will be non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearAssetv2Map = function() {\n  this.getAssetv2Map().clear();\n  return this;};\n\n\n/**\n * repeated Frozen frozen = 7;\n * @return {!Array<!TronWebProto.Account.Frozen>}\n */\nTronWebProto.Account.prototype.getFrozenList = function() {\n  return /** @type{!Array<!TronWebProto.Account.Frozen>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.Account.Frozen, 7));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.Account.Frozen>} value\n * @return {!TronWebProto.Account} returns this\n*/\nTronWebProto.Account.prototype.setFrozenList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 7, value);\n};\n\n\n/**\n * @param {!TronWebProto.Account.Frozen=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Account.Frozen}\n */\nTronWebProto.Account.prototype.addFrozen = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, TronWebProto.Account.Frozen, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearFrozenList = function() {\n  return this.setFrozenList([]);\n};\n\n\n/**\n * optional int64 net_usage = 8;\n * @return {number}\n */\nTronWebProto.Account.prototype.getNetUsage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setNetUsage = function(value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * optional int64 acquired_delegated_frozen_balance_for_bandwidth = 41;\n * @return {number}\n */\nTronWebProto.Account.prototype.getAcquiredDelegatedFrozenBalanceForBandwidth = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 41, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setAcquiredDelegatedFrozenBalanceForBandwidth = function(value) {\n  return jspb.Message.setProto3IntField(this, 41, value);\n};\n\n\n/**\n * optional int64 delegated_frozen_balance_for_bandwidth = 42;\n * @return {number}\n */\nTronWebProto.Account.prototype.getDelegatedFrozenBalanceForBandwidth = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 42, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setDelegatedFrozenBalanceForBandwidth = function(value) {\n  return jspb.Message.setProto3IntField(this, 42, value);\n};\n\n\n/**\n * optional int64 old_tron_power = 46;\n * @return {number}\n */\nTronWebProto.Account.prototype.getOldTronPower = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 46, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setOldTronPower = function(value) {\n  return jspb.Message.setProto3IntField(this, 46, value);\n};\n\n\n/**\n * optional Frozen tron_power = 47;\n * @return {?TronWebProto.Account.Frozen}\n */\nTronWebProto.Account.prototype.getTronPower = function() {\n  return /** @type{?TronWebProto.Account.Frozen} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.Account.Frozen, 47));\n};\n\n\n/**\n * @param {?TronWebProto.Account.Frozen|undefined} value\n * @return {!TronWebProto.Account} returns this\n*/\nTronWebProto.Account.prototype.setTronPower = function(value) {\n  return jspb.Message.setWrapperField(this, 47, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearTronPower = function() {\n  return this.setTronPower(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.Account.prototype.hasTronPower = function() {\n  return jspb.Message.getField(this, 47) != null;\n};\n\n\n/**\n * optional bool asset_optimized = 60;\n * @return {boolean}\n */\nTronWebProto.Account.prototype.getAssetOptimized = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 60, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setAssetOptimized = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 60, value);\n};\n\n\n/**\n * optional int64 create_time = 9;\n * @return {number}\n */\nTronWebProto.Account.prototype.getCreateTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setCreateTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 9, value);\n};\n\n\n/**\n * optional int64 latest_opration_time = 10;\n * @return {number}\n */\nTronWebProto.Account.prototype.getLatestOprationTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setLatestOprationTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 10, value);\n};\n\n\n/**\n * optional int64 allowance = 11;\n * @return {number}\n */\nTronWebProto.Account.prototype.getAllowance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setAllowance = function(value) {\n  return jspb.Message.setProto3IntField(this, 11, value);\n};\n\n\n/**\n * optional int64 latest_withdraw_time = 12;\n * @return {number}\n */\nTronWebProto.Account.prototype.getLatestWithdrawTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setLatestWithdrawTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 12, value);\n};\n\n\n/**\n * optional bytes code = 13;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Account.prototype.getCode = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, \"\"));\n};\n\n\n/**\n * optional bytes code = 13;\n * This is a type-conversion wrapper around `getCode()`\n * @return {string}\n */\nTronWebProto.Account.prototype.getCode_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getCode()));\n};\n\n\n/**\n * optional bytes code = 13;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCode()`\n * @return {!Uint8Array}\n */\nTronWebProto.Account.prototype.getCode_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getCode()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setCode = function(value) {\n  return jspb.Message.setProto3BytesField(this, 13, value);\n};\n\n\n/**\n * optional bool is_witness = 14;\n * @return {boolean}\n */\nTronWebProto.Account.prototype.getIsWitness = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setIsWitness = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 14, value);\n};\n\n\n/**\n * optional bool is_committee = 15;\n * @return {boolean}\n */\nTronWebProto.Account.prototype.getIsCommittee = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setIsCommittee = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 15, value);\n};\n\n\n/**\n * repeated Frozen frozen_supply = 16;\n * @return {!Array<!TronWebProto.Account.Frozen>}\n */\nTronWebProto.Account.prototype.getFrozenSupplyList = function() {\n  return /** @type{!Array<!TronWebProto.Account.Frozen>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.Account.Frozen, 16));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.Account.Frozen>} value\n * @return {!TronWebProto.Account} returns this\n*/\nTronWebProto.Account.prototype.setFrozenSupplyList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 16, value);\n};\n\n\n/**\n * @param {!TronWebProto.Account.Frozen=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Account.Frozen}\n */\nTronWebProto.Account.prototype.addFrozenSupply = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, TronWebProto.Account.Frozen, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearFrozenSupplyList = function() {\n  return this.setFrozenSupplyList([]);\n};\n\n\n/**\n * optional bytes asset_issued_name = 17;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Account.prototype.getAssetIssuedName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 17, \"\"));\n};\n\n\n/**\n * optional bytes asset_issued_name = 17;\n * This is a type-conversion wrapper around `getAssetIssuedName()`\n * @return {string}\n */\nTronWebProto.Account.prototype.getAssetIssuedName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAssetIssuedName()));\n};\n\n\n/**\n * optional bytes asset_issued_name = 17;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAssetIssuedName()`\n * @return {!Uint8Array}\n */\nTronWebProto.Account.prototype.getAssetIssuedName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAssetIssuedName()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setAssetIssuedName = function(value) {\n  return jspb.Message.setProto3BytesField(this, 17, value);\n};\n\n\n/**\n * optional bytes asset_issued_ID = 57;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Account.prototype.getAssetIssuedId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 57, \"\"));\n};\n\n\n/**\n * optional bytes asset_issued_ID = 57;\n * This is a type-conversion wrapper around `getAssetIssuedId()`\n * @return {string}\n */\nTronWebProto.Account.prototype.getAssetIssuedId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAssetIssuedId()));\n};\n\n\n/**\n * optional bytes asset_issued_ID = 57;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAssetIssuedId()`\n * @return {!Uint8Array}\n */\nTronWebProto.Account.prototype.getAssetIssuedId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAssetIssuedId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setAssetIssuedId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 57, value);\n};\n\n\n/**\n * map<string, int64> latest_asset_operation_time = 18;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,number>}\n */\nTronWebProto.Account.prototype.getLatestAssetOperationTimeMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,number>} */ (\n      jspb.Message.getMapField(this, 18, opt_noLazyCreate,\n      null));\n};\n\n\n/**\n * Clears values from the map. The map will be non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearLatestAssetOperationTimeMap = function() {\n  this.getLatestAssetOperationTimeMap().clear();\n  return this;};\n\n\n/**\n * map<string, int64> latest_asset_operation_timeV2 = 58;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,number>}\n */\nTronWebProto.Account.prototype.getLatestAssetOperationTimev2Map = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,number>} */ (\n      jspb.Message.getMapField(this, 58, opt_noLazyCreate,\n      null));\n};\n\n\n/**\n * Clears values from the map. The map will be non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearLatestAssetOperationTimev2Map = function() {\n  this.getLatestAssetOperationTimev2Map().clear();\n  return this;};\n\n\n/**\n * optional int64 free_net_usage = 19;\n * @return {number}\n */\nTronWebProto.Account.prototype.getFreeNetUsage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setFreeNetUsage = function(value) {\n  return jspb.Message.setProto3IntField(this, 19, value);\n};\n\n\n/**\n * map<string, int64> free_asset_net_usage = 20;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,number>}\n */\nTronWebProto.Account.prototype.getFreeAssetNetUsageMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,number>} */ (\n      jspb.Message.getMapField(this, 20, opt_noLazyCreate,\n      null));\n};\n\n\n/**\n * Clears values from the map. The map will be non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearFreeAssetNetUsageMap = function() {\n  this.getFreeAssetNetUsageMap().clear();\n  return this;};\n\n\n/**\n * map<string, int64> free_asset_net_usageV2 = 59;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,number>}\n */\nTronWebProto.Account.prototype.getFreeAssetNetUsagev2Map = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,number>} */ (\n      jspb.Message.getMapField(this, 59, opt_noLazyCreate,\n      null));\n};\n\n\n/**\n * Clears values from the map. The map will be non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearFreeAssetNetUsagev2Map = function() {\n  this.getFreeAssetNetUsagev2Map().clear();\n  return this;};\n\n\n/**\n * optional int64 latest_consume_time = 21;\n * @return {number}\n */\nTronWebProto.Account.prototype.getLatestConsumeTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setLatestConsumeTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 21, value);\n};\n\n\n/**\n * optional int64 latest_consume_free_time = 22;\n * @return {number}\n */\nTronWebProto.Account.prototype.getLatestConsumeFreeTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setLatestConsumeFreeTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 22, value);\n};\n\n\n/**\n * optional bytes account_id = 23;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Account.prototype.getAccountId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 23, \"\"));\n};\n\n\n/**\n * optional bytes account_id = 23;\n * This is a type-conversion wrapper around `getAccountId()`\n * @return {string}\n */\nTronWebProto.Account.prototype.getAccountId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAccountId()));\n};\n\n\n/**\n * optional bytes account_id = 23;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAccountId()`\n * @return {!Uint8Array}\n */\nTronWebProto.Account.prototype.getAccountId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAccountId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setAccountId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 23, value);\n};\n\n\n/**\n * optional AccountResource account_resource = 26;\n * @return {?TronWebProto.Account.AccountResource}\n */\nTronWebProto.Account.prototype.getAccountResource = function() {\n  return /** @type{?TronWebProto.Account.AccountResource} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.Account.AccountResource, 26));\n};\n\n\n/**\n * @param {?TronWebProto.Account.AccountResource|undefined} value\n * @return {!TronWebProto.Account} returns this\n*/\nTronWebProto.Account.prototype.setAccountResource = function(value) {\n  return jspb.Message.setWrapperField(this, 26, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearAccountResource = function() {\n  return this.setAccountResource(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.Account.prototype.hasAccountResource = function() {\n  return jspb.Message.getField(this, 26) != null;\n};\n\n\n/**\n * optional bytes codeHash = 30;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Account.prototype.getCodehash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 30, \"\"));\n};\n\n\n/**\n * optional bytes codeHash = 30;\n * This is a type-conversion wrapper around `getCodehash()`\n * @return {string}\n */\nTronWebProto.Account.prototype.getCodehash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getCodehash()));\n};\n\n\n/**\n * optional bytes codeHash = 30;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCodehash()`\n * @return {!Uint8Array}\n */\nTronWebProto.Account.prototype.getCodehash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getCodehash()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setCodehash = function(value) {\n  return jspb.Message.setProto3BytesField(this, 30, value);\n};\n\n\n/**\n * optional Permission owner_permission = 31;\n * @return {?TronWebProto.Permission}\n */\nTronWebProto.Account.prototype.getOwnerPermission = function() {\n  return /** @type{?TronWebProto.Permission} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.Permission, 31));\n};\n\n\n/**\n * @param {?TronWebProto.Permission|undefined} value\n * @return {!TronWebProto.Account} returns this\n*/\nTronWebProto.Account.prototype.setOwnerPermission = function(value) {\n  return jspb.Message.setWrapperField(this, 31, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearOwnerPermission = function() {\n  return this.setOwnerPermission(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.Account.prototype.hasOwnerPermission = function() {\n  return jspb.Message.getField(this, 31) != null;\n};\n\n\n/**\n * optional Permission witness_permission = 32;\n * @return {?TronWebProto.Permission}\n */\nTronWebProto.Account.prototype.getWitnessPermission = function() {\n  return /** @type{?TronWebProto.Permission} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.Permission, 32));\n};\n\n\n/**\n * @param {?TronWebProto.Permission|undefined} value\n * @return {!TronWebProto.Account} returns this\n*/\nTronWebProto.Account.prototype.setWitnessPermission = function(value) {\n  return jspb.Message.setWrapperField(this, 32, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearWitnessPermission = function() {\n  return this.setWitnessPermission(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.Account.prototype.hasWitnessPermission = function() {\n  return jspb.Message.getField(this, 32) != null;\n};\n\n\n/**\n * repeated Permission active_permission = 33;\n * @return {!Array<!TronWebProto.Permission>}\n */\nTronWebProto.Account.prototype.getActivePermissionList = function() {\n  return /** @type{!Array<!TronWebProto.Permission>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.Permission, 33));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.Permission>} value\n * @return {!TronWebProto.Account} returns this\n*/\nTronWebProto.Account.prototype.setActivePermissionList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 33, value);\n};\n\n\n/**\n * @param {!TronWebProto.Permission=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Permission}\n */\nTronWebProto.Account.prototype.addActivePermission = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 33, opt_value, TronWebProto.Permission, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearActivePermissionList = function() {\n  return this.setActivePermissionList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Key.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Key.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Key} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Key.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: msg.getAddress_asB64(),\n    weight: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Key}\n */\nTronWebProto.Key.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Key;\n  return TronWebProto.Key.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Key} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Key}\n */\nTronWebProto.Key.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setWeight(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Key.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Key.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Key} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Key.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getWeight();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Key.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes address = 1;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nTronWebProto.Key.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.Key.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Key} returns this\n */\nTronWebProto.Key.prototype.setAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 weight = 2;\n * @return {number}\n */\nTronWebProto.Key.prototype.getWeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Key} returns this\n */\nTronWebProto.Key.prototype.setWeight = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.DelegatedResource.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.DelegatedResource.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.DelegatedResource} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.DelegatedResource.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    from: msg.getFrom_asB64(),\n    to: msg.getTo_asB64(),\n    frozenBalanceForBandwidth: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    frozenBalanceForEnergy: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    expireTimeForBandwidth: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    expireTimeForEnergy: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.DelegatedResource}\n */\nTronWebProto.DelegatedResource.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.DelegatedResource;\n  return TronWebProto.DelegatedResource.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.DelegatedResource} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.DelegatedResource}\n */\nTronWebProto.DelegatedResource.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setFrom(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTo(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFrozenBalanceForBandwidth(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFrozenBalanceForEnergy(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpireTimeForBandwidth(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpireTimeForEnergy(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.DelegatedResource.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.DelegatedResource.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.DelegatedResource} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.DelegatedResource.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFrom_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getTo_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getFrozenBalanceForBandwidth();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getFrozenBalanceForEnergy();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getExpireTimeForBandwidth();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getExpireTimeForEnergy();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes from = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.DelegatedResource.prototype.getFrom = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes from = 1;\n * This is a type-conversion wrapper around `getFrom()`\n * @return {string}\n */\nTronWebProto.DelegatedResource.prototype.getFrom_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getFrom()));\n};\n\n\n/**\n * optional bytes from = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFrom()`\n * @return {!Uint8Array}\n */\nTronWebProto.DelegatedResource.prototype.getFrom_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getFrom()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.DelegatedResource} returns this\n */\nTronWebProto.DelegatedResource.prototype.setFrom = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes to = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.DelegatedResource.prototype.getTo = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes to = 2;\n * This is a type-conversion wrapper around `getTo()`\n * @return {string}\n */\nTronWebProto.DelegatedResource.prototype.getTo_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTo()));\n};\n\n\n/**\n * optional bytes to = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTo()`\n * @return {!Uint8Array}\n */\nTronWebProto.DelegatedResource.prototype.getTo_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTo()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.DelegatedResource} returns this\n */\nTronWebProto.DelegatedResource.prototype.setTo = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional int64 frozen_balance_for_bandwidth = 3;\n * @return {number}\n */\nTronWebProto.DelegatedResource.prototype.getFrozenBalanceForBandwidth = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.DelegatedResource} returns this\n */\nTronWebProto.DelegatedResource.prototype.setFrozenBalanceForBandwidth = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int64 frozen_balance_for_energy = 4;\n * @return {number}\n */\nTronWebProto.DelegatedResource.prototype.getFrozenBalanceForEnergy = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.DelegatedResource} returns this\n */\nTronWebProto.DelegatedResource.prototype.setFrozenBalanceForEnergy = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional int64 expire_time_for_bandwidth = 5;\n * @return {number}\n */\nTronWebProto.DelegatedResource.prototype.getExpireTimeForBandwidth = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.DelegatedResource} returns this\n */\nTronWebProto.DelegatedResource.prototype.setExpireTimeForBandwidth = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional int64 expire_time_for_energy = 6;\n * @return {number}\n */\nTronWebProto.DelegatedResource.prototype.getExpireTimeForEnergy = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.DelegatedResource} returns this\n */\nTronWebProto.DelegatedResource.prototype.setExpireTimeForEnergy = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.authority.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.authority.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.authority} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.authority.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    account: (f = msg.getAccount()) && TronWebProto.AccountId.toObject(includeInstance, f),\n    permissionName: msg.getPermissionName_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.authority}\n */\nTronWebProto.authority.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.authority;\n  return TronWebProto.authority.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.authority} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.authority}\n */\nTronWebProto.authority.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new TronWebProto.AccountId;\n      reader.readMessage(value,TronWebProto.AccountId.deserializeBinaryFromReader);\n      msg.setAccount(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPermissionName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.authority.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.authority.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.authority} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.authority.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAccount();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      TronWebProto.AccountId.serializeBinaryToWriter\n    );\n  }\n  f = message.getPermissionName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional AccountId account = 1;\n * @return {?TronWebProto.AccountId}\n */\nTronWebProto.authority.prototype.getAccount = function() {\n  return /** @type{?TronWebProto.AccountId} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.AccountId, 1));\n};\n\n\n/**\n * @param {?TronWebProto.AccountId|undefined} value\n * @return {!TronWebProto.authority} returns this\n*/\nTronWebProto.authority.prototype.setAccount = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.authority} returns this\n */\nTronWebProto.authority.prototype.clearAccount = function() {\n  return this.setAccount(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.authority.prototype.hasAccount = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes permission_name = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.authority.prototype.getPermissionName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes permission_name = 2;\n * This is a type-conversion wrapper around `getPermissionName()`\n * @return {string}\n */\nTronWebProto.authority.prototype.getPermissionName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPermissionName()));\n};\n\n\n/**\n * optional bytes permission_name = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPermissionName()`\n * @return {!Uint8Array}\n */\nTronWebProto.authority.prototype.getPermissionName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPermissionName()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.authority} returns this\n */\nTronWebProto.authority.prototype.setPermissionName = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.Permission.repeatedFields_ = [7];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Permission.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Permission.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Permission} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Permission.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    id: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    permissionName: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    threshold: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    parentId: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    operations: msg.getOperations_asB64(),\n    keysList: jspb.Message.toObjectList(msg.getKeysList(),\n    TronWebProto.Key.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Permission}\n */\nTronWebProto.Permission.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Permission;\n  return TronWebProto.Permission.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Permission} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Permission}\n */\nTronWebProto.Permission.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!TronWebProto.Permission.PermissionType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPermissionName(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setThreshold(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setParentId(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOperations(value);\n      break;\n    case 7:\n      var value = new TronWebProto.Key;\n      reader.readMessage(value,TronWebProto.Key.deserializeBinaryFromReader);\n      msg.addKeys(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Permission.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Permission.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Permission} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Permission.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getPermissionName();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getThreshold();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getParentId();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n  f = message.getOperations_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      6,\n      f\n    );\n  }\n  f = message.getKeysList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      7,\n      f,\n      TronWebProto.Key.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nTronWebProto.Permission.PermissionType = {\n  OWNER: 0,\n  WITNESS: 1,\n  ACTIVE: 2\n};\n\n/**\n * optional PermissionType type = 1;\n * @return {!TronWebProto.Permission.PermissionType}\n */\nTronWebProto.Permission.prototype.getType = function() {\n  return /** @type {!TronWebProto.Permission.PermissionType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {!TronWebProto.Permission.PermissionType} value\n * @return {!TronWebProto.Permission} returns this\n */\nTronWebProto.Permission.prototype.setType = function(value) {\n  return jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * optional int32 id = 2;\n * @return {number}\n */\nTronWebProto.Permission.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Permission} returns this\n */\nTronWebProto.Permission.prototype.setId = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional string permission_name = 3;\n * @return {string}\n */\nTronWebProto.Permission.prototype.getPermissionName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!TronWebProto.Permission} returns this\n */\nTronWebProto.Permission.prototype.setPermissionName = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional int64 threshold = 4;\n * @return {number}\n */\nTronWebProto.Permission.prototype.getThreshold = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Permission} returns this\n */\nTronWebProto.Permission.prototype.setThreshold = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional int32 parent_id = 5;\n * @return {number}\n */\nTronWebProto.Permission.prototype.getParentId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Permission} returns this\n */\nTronWebProto.Permission.prototype.setParentId = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional bytes operations = 6;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Permission.prototype.getOperations = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * optional bytes operations = 6;\n * This is a type-conversion wrapper around `getOperations()`\n * @return {string}\n */\nTronWebProto.Permission.prototype.getOperations_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOperations()));\n};\n\n\n/**\n * optional bytes operations = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOperations()`\n * @return {!Uint8Array}\n */\nTronWebProto.Permission.prototype.getOperations_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOperations()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Permission} returns this\n */\nTronWebProto.Permission.prototype.setOperations = function(value) {\n  return jspb.Message.setProto3BytesField(this, 6, value);\n};\n\n\n/**\n * repeated Key keys = 7;\n * @return {!Array<!TronWebProto.Key>}\n */\nTronWebProto.Permission.prototype.getKeysList = function() {\n  return /** @type{!Array<!TronWebProto.Key>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.Key, 7));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.Key>} value\n * @return {!TronWebProto.Permission} returns this\n*/\nTronWebProto.Permission.prototype.setKeysList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 7, value);\n};\n\n\n/**\n * @param {!TronWebProto.Key=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Key}\n */\nTronWebProto.Permission.prototype.addKeys = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, TronWebProto.Key, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Permission} returns this\n */\nTronWebProto.Permission.prototype.clearKeysList = function() {\n  return this.setKeysList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Witness.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Witness.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Witness} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Witness.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: msg.getAddress_asB64(),\n    votecount: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    pubkey: msg.getPubkey_asB64(),\n    url: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    totalproduced: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    totalmissed: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    latestblocknum: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    latestslotnum: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    isjobs: jspb.Message.getBooleanFieldWithDefault(msg, 9, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Witness}\n */\nTronWebProto.Witness.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Witness;\n  return TronWebProto.Witness.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Witness} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Witness}\n */\nTronWebProto.Witness.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setVotecount(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPubkey(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUrl(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalproduced(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalmissed(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestblocknum(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestslotnum(value);\n      break;\n    case 9:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsjobs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Witness.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Witness.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Witness} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Witness.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getVotecount();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getPubkey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getUrl();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getTotalproduced();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getTotalmissed();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getLatestblocknum();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getLatestslotnum();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getIsjobs();\n  if (f) {\n    writer.writeBool(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Witness.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes address = 1;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nTronWebProto.Witness.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.Witness.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Witness} returns this\n */\nTronWebProto.Witness.prototype.setAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 voteCount = 2;\n * @return {number}\n */\nTronWebProto.Witness.prototype.getVotecount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Witness} returns this\n */\nTronWebProto.Witness.prototype.setVotecount = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bytes pubKey = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Witness.prototype.getPubkey = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes pubKey = 3;\n * This is a type-conversion wrapper around `getPubkey()`\n * @return {string}\n */\nTronWebProto.Witness.prototype.getPubkey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPubkey()));\n};\n\n\n/**\n * optional bytes pubKey = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPubkey()`\n * @return {!Uint8Array}\n */\nTronWebProto.Witness.prototype.getPubkey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPubkey()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Witness} returns this\n */\nTronWebProto.Witness.prototype.setPubkey = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional string url = 4;\n * @return {string}\n */\nTronWebProto.Witness.prototype.getUrl = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!TronWebProto.Witness} returns this\n */\nTronWebProto.Witness.prototype.setUrl = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional int64 totalProduced = 5;\n * @return {number}\n */\nTronWebProto.Witness.prototype.getTotalproduced = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Witness} returns this\n */\nTronWebProto.Witness.prototype.setTotalproduced = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional int64 totalMissed = 6;\n * @return {number}\n */\nTronWebProto.Witness.prototype.getTotalmissed = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Witness} returns this\n */\nTronWebProto.Witness.prototype.setTotalmissed = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional int64 latestBlockNum = 7;\n * @return {number}\n */\nTronWebProto.Witness.prototype.getLatestblocknum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Witness} returns this\n */\nTronWebProto.Witness.prototype.setLatestblocknum = function(value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * optional int64 latestSlotNum = 8;\n * @return {number}\n */\nTronWebProto.Witness.prototype.getLatestslotnum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Witness} returns this\n */\nTronWebProto.Witness.prototype.setLatestslotnum = function(value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * optional bool isJobs = 9;\n * @return {boolean}\n */\nTronWebProto.Witness.prototype.getIsjobs = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.Witness} returns this\n */\nTronWebProto.Witness.prototype.setIsjobs = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 9, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.Votes.repeatedFields_ = [2,3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Votes.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Votes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Votes} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Votes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: msg.getAddress_asB64(),\n    oldVotesList: jspb.Message.toObjectList(msg.getOldVotesList(),\n    TronWebProto.Vote.toObject, includeInstance),\n    newVotesList: jspb.Message.toObjectList(msg.getNewVotesList(),\n    TronWebProto.Vote.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Votes}\n */\nTronWebProto.Votes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Votes;\n  return TronWebProto.Votes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Votes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Votes}\n */\nTronWebProto.Votes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = new TronWebProto.Vote;\n      reader.readMessage(value,TronWebProto.Vote.deserializeBinaryFromReader);\n      msg.addOldVotes(value);\n      break;\n    case 3:\n      var value = new TronWebProto.Vote;\n      reader.readMessage(value,TronWebProto.Vote.deserializeBinaryFromReader);\n      msg.addNewVotes(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Votes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Votes.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Votes} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Votes.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getOldVotesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      TronWebProto.Vote.serializeBinaryToWriter\n    );\n  }\n  f = message.getNewVotesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      TronWebProto.Vote.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bytes address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Votes.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes address = 1;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nTronWebProto.Votes.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.Votes.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Votes} returns this\n */\nTronWebProto.Votes.prototype.setAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * repeated Vote old_votes = 2;\n * @return {!Array<!TronWebProto.Vote>}\n */\nTronWebProto.Votes.prototype.getOldVotesList = function() {\n  return /** @type{!Array<!TronWebProto.Vote>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.Vote, 2));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.Vote>} value\n * @return {!TronWebProto.Votes} returns this\n*/\nTronWebProto.Votes.prototype.setOldVotesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!TronWebProto.Vote=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Vote}\n */\nTronWebProto.Votes.prototype.addOldVotes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, TronWebProto.Vote, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Votes} returns this\n */\nTronWebProto.Votes.prototype.clearOldVotesList = function() {\n  return this.setOldVotesList([]);\n};\n\n\n/**\n * repeated Vote new_votes = 3;\n * @return {!Array<!TronWebProto.Vote>}\n */\nTronWebProto.Votes.prototype.getNewVotesList = function() {\n  return /** @type{!Array<!TronWebProto.Vote>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.Vote, 3));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.Vote>} value\n * @return {!TronWebProto.Votes} returns this\n*/\nTronWebProto.Votes.prototype.setNewVotesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!TronWebProto.Vote=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Vote}\n */\nTronWebProto.Votes.prototype.addNewVotes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, TronWebProto.Vote, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Votes} returns this\n */\nTronWebProto.Votes.prototype.clearNewVotesList = function() {\n  return this.setNewVotesList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.MarketOrderDetail.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.MarketOrderDetail.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.MarketOrderDetail} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.MarketOrderDetail.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    makerorderid: msg.getMakerorderid_asB64(),\n    takerorderid: msg.getTakerorderid_asB64(),\n    fillsellquantity: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    fillbuyquantity: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.MarketOrderDetail}\n */\nTronWebProto.MarketOrderDetail.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.MarketOrderDetail;\n  return TronWebProto.MarketOrderDetail.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.MarketOrderDetail} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.MarketOrderDetail}\n */\nTronWebProto.MarketOrderDetail.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMakerorderid(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTakerorderid(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFillsellquantity(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFillbuyquantity(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.MarketOrderDetail.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.MarketOrderDetail.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.MarketOrderDetail} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.MarketOrderDetail.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMakerorderid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getTakerorderid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getFillsellquantity();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getFillbuyquantity();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes makerOrderId = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.MarketOrderDetail.prototype.getMakerorderid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes makerOrderId = 1;\n * This is a type-conversion wrapper around `getMakerorderid()`\n * @return {string}\n */\nTronWebProto.MarketOrderDetail.prototype.getMakerorderid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMakerorderid()));\n};\n\n\n/**\n * optional bytes makerOrderId = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMakerorderid()`\n * @return {!Uint8Array}\n */\nTronWebProto.MarketOrderDetail.prototype.getMakerorderid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMakerorderid()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.MarketOrderDetail} returns this\n */\nTronWebProto.MarketOrderDetail.prototype.setMakerorderid = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes takerOrderId = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.MarketOrderDetail.prototype.getTakerorderid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes takerOrderId = 2;\n * This is a type-conversion wrapper around `getTakerorderid()`\n * @return {string}\n */\nTronWebProto.MarketOrderDetail.prototype.getTakerorderid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTakerorderid()));\n};\n\n\n/**\n * optional bytes takerOrderId = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTakerorderid()`\n * @return {!Uint8Array}\n */\nTronWebProto.MarketOrderDetail.prototype.getTakerorderid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTakerorderid()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.MarketOrderDetail} returns this\n */\nTronWebProto.MarketOrderDetail.prototype.setTakerorderid = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional int64 fillSellQuantity = 3;\n * @return {number}\n */\nTronWebProto.MarketOrderDetail.prototype.getFillsellquantity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.MarketOrderDetail} returns this\n */\nTronWebProto.MarketOrderDetail.prototype.setFillsellquantity = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int64 fillBuyQuantity = 4;\n * @return {number}\n */\nTronWebProto.MarketOrderDetail.prototype.getFillbuyquantity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.MarketOrderDetail} returns this\n */\nTronWebProto.MarketOrderDetail.prototype.setFillbuyquantity = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.Transaction.repeatedFields_ = [2,5];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Transaction.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Transaction.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Transaction} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Transaction.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    rawData: (f = msg.getRawData()) && TronWebProto.Transaction.raw.toObject(includeInstance, f),\n    signatureList: msg.getSignatureList_asB64(),\n    retList: jspb.Message.toObjectList(msg.getRetList(),\n    TronWebProto.Transaction.Result.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Transaction}\n */\nTronWebProto.Transaction.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Transaction;\n  return TronWebProto.Transaction.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Transaction} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Transaction}\n */\nTronWebProto.Transaction.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new TronWebProto.Transaction.raw;\n      reader.readMessage(value,TronWebProto.Transaction.raw.deserializeBinaryFromReader);\n      msg.setRawData(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addSignature(value);\n      break;\n    case 5:\n      var value = new TronWebProto.Transaction.Result;\n      reader.readMessage(value,TronWebProto.Transaction.Result.deserializeBinaryFromReader);\n      msg.addRet(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Transaction.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Transaction} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Transaction.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRawData();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      TronWebProto.Transaction.raw.serializeBinaryToWriter\n    );\n  }\n  f = message.getSignatureList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      2,\n      f\n    );\n  }\n  f = message.getRetList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      5,\n      f,\n      TronWebProto.Transaction.Result.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Transaction.Contract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Transaction.Contract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Transaction.Contract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Transaction.Contract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    parameter: (f = msg.getParameter()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),\n    provider: msg.getProvider_asB64(),\n    contractname: msg.getContractname_asB64(),\n    permissionId: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Transaction.Contract}\n */\nTronWebProto.Transaction.Contract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Transaction.Contract;\n  return TronWebProto.Transaction.Contract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Transaction.Contract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Transaction.Contract}\n */\nTronWebProto.Transaction.Contract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!TronWebProto.Transaction.Contract.ContractType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    case 2:\n      var value = new google_protobuf_any_pb.Any;\n      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);\n      msg.setParameter(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setProvider(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setContractname(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPermissionId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.Contract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Transaction.Contract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Transaction.Contract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Transaction.Contract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getParameter();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      google_protobuf_any_pb.Any.serializeBinaryToWriter\n    );\n  }\n  f = message.getProvider_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getContractname_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getPermissionId();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nTronWebProto.Transaction.Contract.ContractType = {\n  ACCOUNTCREATECONTRACT: 0,\n  TRANSFERCONTRACT: 1,\n  TRANSFERASSETCONTRACT: 2,\n  VOTEASSETCONTRACT: 3,\n  VOTEWITNESSCONTRACT: 4,\n  WITNESSCREATECONTRACT: 5,\n  ASSETISSUECONTRACT: 6,\n  WITNESSUPDATECONTRACT: 8,\n  PARTICIPATEASSETISSUECONTRACT: 9,\n  ACCOUNTUPDATECONTRACT: 10,\n  FREEZEBALANCECONTRACT: 11,\n  UNFREEZEBALANCECONTRACT: 12,\n  WITHDRAWBALANCECONTRACT: 13,\n  UNFREEZEASSETCONTRACT: 14,\n  UPDATEASSETCONTRACT: 15,\n  PROPOSALCREATECONTRACT: 16,\n  PROPOSALAPPROVECONTRACT: 17,\n  PROPOSALDELETECONTRACT: 18,\n  SETACCOUNTIDCONTRACT: 19,\n  CUSTOMCONTRACT: 20,\n  CREATESMARTCONTRACT: 30,\n  TRIGGERSMARTCONTRACT: 31,\n  GETCONTRACT: 32,\n  UPDATESETTINGCONTRACT: 33,\n  EXCHANGECREATECONTRACT: 41,\n  EXCHANGEINJECTCONTRACT: 42,\n  EXCHANGEWITHDRAWCONTRACT: 43,\n  EXCHANGETRANSACTIONCONTRACT: 44,\n  UPDATEENERGYLIMITCONTRACT: 45,\n  ACCOUNTPERMISSIONUPDATECONTRACT: 46,\n  CLEARABICONTRACT: 48,\n  UPDATEBROKERAGECONTRACT: 49,\n  SHIELDEDTRANSFERCONTRACT: 51,\n  MARKETSELLASSETCONTRACT: 52,\n  MARKETCANCELORDERCONTRACT: 53,\n  FREEZEBALANCEV2CONTRACT: 54,\n  UNFREEZEBALANCEV2CONTRACT: 55,\n  WITHDRAWEXPIREUNFREEZECONTRACT: 56,\n  DELEGATERESOURCECONTRACT: 57,\n  UNDELEGATERESOURCECONTRACT: 58,\n  CANCELALLUNFREEZEV2CONTRACT: 59\n};\n\n/**\n * optional ContractType type = 1;\n * @return {!TronWebProto.Transaction.Contract.ContractType}\n */\nTronWebProto.Transaction.Contract.prototype.getType = function() {\n  return /** @type {!TronWebProto.Transaction.Contract.ContractType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {!TronWebProto.Transaction.Contract.ContractType} value\n * @return {!TronWebProto.Transaction.Contract} returns this\n */\nTronWebProto.Transaction.Contract.prototype.setType = function(value) {\n  return jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * optional google.protobuf.Any parameter = 2;\n * @return {?TronWebProto.Any}\n */\nTronWebProto.Transaction.Contract.prototype.getParameter = function() {\n  return /** @type{?TronWebProto.Any} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 2));\n};\n\n\n/**\n * @param {?TronWebProto.Any|undefined} value\n * @return {!TronWebProto.Transaction.Contract} returns this\n*/\nTronWebProto.Transaction.Contract.prototype.setParameter = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.Transaction.Contract} returns this\n */\nTronWebProto.Transaction.Contract.prototype.clearParameter = function() {\n  return this.setParameter(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.Transaction.Contract.prototype.hasParameter = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bytes provider = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Transaction.Contract.prototype.getProvider = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes provider = 3;\n * This is a type-conversion wrapper around `getProvider()`\n * @return {string}\n */\nTronWebProto.Transaction.Contract.prototype.getProvider_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getProvider()));\n};\n\n\n/**\n * optional bytes provider = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getProvider()`\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.Contract.prototype.getProvider_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getProvider()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Transaction.Contract} returns this\n */\nTronWebProto.Transaction.Contract.prototype.setProvider = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional bytes ContractName = 4;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Transaction.Contract.prototype.getContractname = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes ContractName = 4;\n * This is a type-conversion wrapper around `getContractname()`\n * @return {string}\n */\nTronWebProto.Transaction.Contract.prototype.getContractname_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getContractname()));\n};\n\n\n/**\n * optional bytes ContractName = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getContractname()`\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.Contract.prototype.getContractname_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getContractname()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Transaction.Contract} returns this\n */\nTronWebProto.Transaction.Contract.prototype.setContractname = function(value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional int32 Permission_id = 5;\n * @return {number}\n */\nTronWebProto.Transaction.Contract.prototype.getPermissionId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.Contract} returns this\n */\nTronWebProto.Transaction.Contract.prototype.setPermissionId = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.Transaction.Result.repeatedFields_ = [26];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Transaction.Result.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Transaction.Result.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Transaction.Result} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Transaction.Result.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    fee: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    ret: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    contractret: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    assetissueid: jspb.Message.getFieldWithDefault(msg, 14, \"\"),\n    withdrawAmount: jspb.Message.getFieldWithDefault(msg, 15, 0),\n    unfreezeAmount: jspb.Message.getFieldWithDefault(msg, 16, 0),\n    exchangeReceivedAmount: jspb.Message.getFieldWithDefault(msg, 18, 0),\n    exchangeInjectAnotherAmount: jspb.Message.getFieldWithDefault(msg, 19, 0),\n    exchangeWithdrawAnotherAmount: jspb.Message.getFieldWithDefault(msg, 20, 0),\n    exchangeId: jspb.Message.getFieldWithDefault(msg, 21, 0),\n    shieldedTransactionFee: jspb.Message.getFieldWithDefault(msg, 22, 0),\n    orderid: msg.getOrderid_asB64(),\n    orderdetailsList: jspb.Message.toObjectList(msg.getOrderdetailsList(),\n    TronWebProto.MarketOrderDetail.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Transaction.Result}\n */\nTronWebProto.Transaction.Result.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Transaction.Result;\n  return TronWebProto.Transaction.Result.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Transaction.Result} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Transaction.Result}\n */\nTronWebProto.Transaction.Result.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFee(value);\n      break;\n    case 2:\n      var value = /** @type {!TronWebProto.Transaction.Result.code} */ (reader.readEnum());\n      msg.setRet(value);\n      break;\n    case 3:\n      var value = /** @type {!TronWebProto.Transaction.Result.contractResult} */ (reader.readEnum());\n      msg.setContractret(value);\n      break;\n    case 14:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAssetissueid(value);\n      break;\n    case 15:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setWithdrawAmount(value);\n      break;\n    case 16:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setUnfreezeAmount(value);\n      break;\n    case 18:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExchangeReceivedAmount(value);\n      break;\n    case 19:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExchangeInjectAnotherAmount(value);\n      break;\n    case 20:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExchangeWithdrawAnotherAmount(value);\n      break;\n    case 21:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExchangeId(value);\n      break;\n    case 22:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setShieldedTransactionFee(value);\n      break;\n    case 25:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOrderid(value);\n      break;\n    case 26:\n      var value = new TronWebProto.MarketOrderDetail;\n      reader.readMessage(value,TronWebProto.MarketOrderDetail.deserializeBinaryFromReader);\n      msg.addOrderdetails(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.Result.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Transaction.Result.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Transaction.Result} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Transaction.Result.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFee();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getRet();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      2,\n      f\n    );\n  }\n  f = message.getContractret();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      3,\n      f\n    );\n  }\n  f = message.getAssetissueid();\n  if (f.length > 0) {\n    writer.writeString(\n      14,\n      f\n    );\n  }\n  f = message.getWithdrawAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      15,\n      f\n    );\n  }\n  f = message.getUnfreezeAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      16,\n      f\n    );\n  }\n  f = message.getExchangeReceivedAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      18,\n      f\n    );\n  }\n  f = message.getExchangeInjectAnotherAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      19,\n      f\n    );\n  }\n  f = message.getExchangeWithdrawAnotherAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      20,\n      f\n    );\n  }\n  f = message.getExchangeId();\n  if (f !== 0) {\n    writer.writeInt64(\n      21,\n      f\n    );\n  }\n  f = message.getShieldedTransactionFee();\n  if (f !== 0) {\n    writer.writeInt64(\n      22,\n      f\n    );\n  }\n  f = message.getOrderid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      25,\n      f\n    );\n  }\n  f = message.getOrderdetailsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      26,\n      f,\n      TronWebProto.MarketOrderDetail.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nTronWebProto.Transaction.Result.code = {\n  SUCESS: 0,\n  FAILED: 1\n};\n\n/**\n * @enum {number}\n */\nTronWebProto.Transaction.Result.contractResult = {\n  DEFAULT: 0,\n  SUCCESS: 1,\n  REVERT: 2,\n  BAD_JUMP_DESTINATION: 3,\n  OUT_OF_MEMORY: 4,\n  PRECOMPILED_CONTRACT: 5,\n  STACK_TOO_SMALL: 6,\n  STACK_TOO_LARGE: 7,\n  ILLEGAL_OPERATION: 8,\n  STACK_OVERFLOW: 9,\n  OUT_OF_ENERGY: 10,\n  OUT_OF_TIME: 11,\n  JVM_STACK_OVER_FLOW: 12,\n  UNKNOWN: 13,\n  TRANSFER_FAILED: 14,\n  INVALID_CODE: 15\n};\n\n/**\n * optional int64 fee = 1;\n * @return {number}\n */\nTronWebProto.Transaction.Result.prototype.getFee = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setFee = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional code ret = 2;\n * @return {!TronWebProto.Transaction.Result.code}\n */\nTronWebProto.Transaction.Result.prototype.getRet = function() {\n  return /** @type {!TronWebProto.Transaction.Result.code} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {!TronWebProto.Transaction.Result.code} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setRet = function(value) {\n  return jspb.Message.setProto3EnumField(this, 2, value);\n};\n\n\n/**\n * optional contractResult contractRet = 3;\n * @return {!TronWebProto.Transaction.Result.contractResult}\n */\nTronWebProto.Transaction.Result.prototype.getContractret = function() {\n  return /** @type {!TronWebProto.Transaction.Result.contractResult} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {!TronWebProto.Transaction.Result.contractResult} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setContractret = function(value) {\n  return jspb.Message.setProto3EnumField(this, 3, value);\n};\n\n\n/**\n * optional string assetIssueID = 14;\n * @return {string}\n */\nTronWebProto.Transaction.Result.prototype.getAssetissueid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setAssetissueid = function(value) {\n  return jspb.Message.setProto3StringField(this, 14, value);\n};\n\n\n/**\n * optional int64 withdraw_amount = 15;\n * @return {number}\n */\nTronWebProto.Transaction.Result.prototype.getWithdrawAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setWithdrawAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 15, value);\n};\n\n\n/**\n * optional int64 unfreeze_amount = 16;\n * @return {number}\n */\nTronWebProto.Transaction.Result.prototype.getUnfreezeAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setUnfreezeAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 16, value);\n};\n\n\n/**\n * optional int64 exchange_received_amount = 18;\n * @return {number}\n */\nTronWebProto.Transaction.Result.prototype.getExchangeReceivedAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setExchangeReceivedAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 18, value);\n};\n\n\n/**\n * optional int64 exchange_inject_another_amount = 19;\n * @return {number}\n */\nTronWebProto.Transaction.Result.prototype.getExchangeInjectAnotherAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setExchangeInjectAnotherAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 19, value);\n};\n\n\n/**\n * optional int64 exchange_withdraw_another_amount = 20;\n * @return {number}\n */\nTronWebProto.Transaction.Result.prototype.getExchangeWithdrawAnotherAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setExchangeWithdrawAnotherAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 20, value);\n};\n\n\n/**\n * optional int64 exchange_id = 21;\n * @return {number}\n */\nTronWebProto.Transaction.Result.prototype.getExchangeId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setExchangeId = function(value) {\n  return jspb.Message.setProto3IntField(this, 21, value);\n};\n\n\n/**\n * optional int64 shielded_transaction_fee = 22;\n * @return {number}\n */\nTronWebProto.Transaction.Result.prototype.getShieldedTransactionFee = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setShieldedTransactionFee = function(value) {\n  return jspb.Message.setProto3IntField(this, 22, value);\n};\n\n\n/**\n * optional bytes orderId = 25;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Transaction.Result.prototype.getOrderid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 25, \"\"));\n};\n\n\n/**\n * optional bytes orderId = 25;\n * This is a type-conversion wrapper around `getOrderid()`\n * @return {string}\n */\nTronWebProto.Transaction.Result.prototype.getOrderid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOrderid()));\n};\n\n\n/**\n * optional bytes orderId = 25;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOrderid()`\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.Result.prototype.getOrderid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOrderid()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setOrderid = function(value) {\n  return jspb.Message.setProto3BytesField(this, 25, value);\n};\n\n\n/**\n * repeated MarketOrderDetail orderDetails = 26;\n * @return {!Array<!TronWebProto.MarketOrderDetail>}\n */\nTronWebProto.Transaction.Result.prototype.getOrderdetailsList = function() {\n  return /** @type{!Array<!TronWebProto.MarketOrderDetail>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.MarketOrderDetail, 26));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.MarketOrderDetail>} value\n * @return {!TronWebProto.Transaction.Result} returns this\n*/\nTronWebProto.Transaction.Result.prototype.setOrderdetailsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 26, value);\n};\n\n\n/**\n * @param {!TronWebProto.MarketOrderDetail=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.MarketOrderDetail}\n */\nTronWebProto.Transaction.Result.prototype.addOrderdetails = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 26, opt_value, TronWebProto.MarketOrderDetail, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.clearOrderdetailsList = function() {\n  return this.setOrderdetailsList([]);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.Transaction.raw.repeatedFields_ = [9,11];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Transaction.raw.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Transaction.raw.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Transaction.raw} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Transaction.raw.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    refBlockBytes: msg.getRefBlockBytes_asB64(),\n    refBlockNum: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    refBlockHash: msg.getRefBlockHash_asB64(),\n    expiration: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    authsList: jspb.Message.toObjectList(msg.getAuthsList(),\n    TronWebProto.authority.toObject, includeInstance),\n    data: msg.getData_asB64(),\n    contractList: jspb.Message.toObjectList(msg.getContractList(),\n    TronWebProto.Transaction.Contract.toObject, includeInstance),\n    scripts: msg.getScripts_asB64(),\n    timestamp: jspb.Message.getFieldWithDefault(msg, 14, 0),\n    feeLimit: jspb.Message.getFieldWithDefault(msg, 18, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Transaction.raw}\n */\nTronWebProto.Transaction.raw.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Transaction.raw;\n  return TronWebProto.Transaction.raw.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Transaction.raw} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Transaction.raw}\n */\nTronWebProto.Transaction.raw.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRefBlockBytes(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRefBlockNum(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRefBlockHash(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpiration(value);\n      break;\n    case 9:\n      var value = new TronWebProto.authority;\n      reader.readMessage(value,TronWebProto.authority.deserializeBinaryFromReader);\n      msg.addAuths(value);\n      break;\n    case 10:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setData(value);\n      break;\n    case 11:\n      var value = new TronWebProto.Transaction.Contract;\n      reader.readMessage(value,TronWebProto.Transaction.Contract.deserializeBinaryFromReader);\n      msg.addContract(value);\n      break;\n    case 12:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setScripts(value);\n      break;\n    case 14:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimestamp(value);\n      break;\n    case 18:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeLimit(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.raw.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Transaction.raw.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Transaction.raw} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Transaction.raw.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRefBlockBytes_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getRefBlockNum();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getRefBlockHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getExpiration();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getAuthsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      9,\n      f,\n      TronWebProto.authority.serializeBinaryToWriter\n    );\n  }\n  f = message.getData_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      10,\n      f\n    );\n  }\n  f = message.getContractList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      11,\n      f,\n      TronWebProto.Transaction.Contract.serializeBinaryToWriter\n    );\n  }\n  f = message.getScripts_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      12,\n      f\n    );\n  }\n  f = message.getTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      14,\n      f\n    );\n  }\n  f = message.getFeeLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      18,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes ref_block_bytes = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Transaction.raw.prototype.getRefBlockBytes = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes ref_block_bytes = 1;\n * This is a type-conversion wrapper around `getRefBlockBytes()`\n * @return {string}\n */\nTronWebProto.Transaction.raw.prototype.getRefBlockBytes_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRefBlockBytes()));\n};\n\n\n/**\n * optional bytes ref_block_bytes = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRefBlockBytes()`\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.raw.prototype.getRefBlockBytes_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRefBlockBytes()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.setRefBlockBytes = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 ref_block_num = 3;\n * @return {number}\n */\nTronWebProto.Transaction.raw.prototype.getRefBlockNum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.setRefBlockNum = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional bytes ref_block_hash = 4;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Transaction.raw.prototype.getRefBlockHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes ref_block_hash = 4;\n * This is a type-conversion wrapper around `getRefBlockHash()`\n * @return {string}\n */\nTronWebProto.Transaction.raw.prototype.getRefBlockHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRefBlockHash()));\n};\n\n\n/**\n * optional bytes ref_block_hash = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRefBlockHash()`\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.raw.prototype.getRefBlockHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRefBlockHash()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.setRefBlockHash = function(value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional int64 expiration = 8;\n * @return {number}\n */\nTronWebProto.Transaction.raw.prototype.getExpiration = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.setExpiration = function(value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * repeated authority auths = 9;\n * @return {!Array<!TronWebProto.authority>}\n */\nTronWebProto.Transaction.raw.prototype.getAuthsList = function() {\n  return /** @type{!Array<!TronWebProto.authority>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.authority, 9));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.authority>} value\n * @return {!TronWebProto.Transaction.raw} returns this\n*/\nTronWebProto.Transaction.raw.prototype.setAuthsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 9, value);\n};\n\n\n/**\n * @param {!TronWebProto.authority=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.authority}\n */\nTronWebProto.Transaction.raw.prototype.addAuths = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, TronWebProto.authority, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.clearAuthsList = function() {\n  return this.setAuthsList([]);\n};\n\n\n/**\n * optional bytes data = 10;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Transaction.raw.prototype.getData = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 10, \"\"));\n};\n\n\n/**\n * optional bytes data = 10;\n * This is a type-conversion wrapper around `getData()`\n * @return {string}\n */\nTronWebProto.Transaction.raw.prototype.getData_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getData()));\n};\n\n\n/**\n * optional bytes data = 10;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getData()`\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.raw.prototype.getData_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getData()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.setData = function(value) {\n  return jspb.Message.setProto3BytesField(this, 10, value);\n};\n\n\n/**\n * repeated Contract contract = 11;\n * @return {!Array<!TronWebProto.Transaction.Contract>}\n */\nTronWebProto.Transaction.raw.prototype.getContractList = function() {\n  return /** @type{!Array<!TronWebProto.Transaction.Contract>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.Transaction.Contract, 11));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.Transaction.Contract>} value\n * @return {!TronWebProto.Transaction.raw} returns this\n*/\nTronWebProto.Transaction.raw.prototype.setContractList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 11, value);\n};\n\n\n/**\n * @param {!TronWebProto.Transaction.Contract=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Transaction.Contract}\n */\nTronWebProto.Transaction.raw.prototype.addContract = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, TronWebProto.Transaction.Contract, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.clearContractList = function() {\n  return this.setContractList([]);\n};\n\n\n/**\n * optional bytes scripts = 12;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Transaction.raw.prototype.getScripts = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, \"\"));\n};\n\n\n/**\n * optional bytes scripts = 12;\n * This is a type-conversion wrapper around `getScripts()`\n * @return {string}\n */\nTronWebProto.Transaction.raw.prototype.getScripts_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getScripts()));\n};\n\n\n/**\n * optional bytes scripts = 12;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getScripts()`\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.raw.prototype.getScripts_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getScripts()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.setScripts = function(value) {\n  return jspb.Message.setProto3BytesField(this, 12, value);\n};\n\n\n/**\n * optional int64 timestamp = 14;\n * @return {number}\n */\nTronWebProto.Transaction.raw.prototype.getTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.setTimestamp = function(value) {\n  return jspb.Message.setProto3IntField(this, 14, value);\n};\n\n\n/**\n * optional int64 fee_limit = 18;\n * @return {number}\n */\nTronWebProto.Transaction.raw.prototype.getFeeLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.setFeeLimit = function(value) {\n  return jspb.Message.setProto3IntField(this, 18, value);\n};\n\n\n/**\n * optional raw raw_data = 1;\n * @return {?TronWebProto.Transaction.raw}\n */\nTronWebProto.Transaction.prototype.getRawData = function() {\n  return /** @type{?TronWebProto.Transaction.raw} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.Transaction.raw, 1));\n};\n\n\n/**\n * @param {?TronWebProto.Transaction.raw|undefined} value\n * @return {!TronWebProto.Transaction} returns this\n*/\nTronWebProto.Transaction.prototype.setRawData = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.Transaction} returns this\n */\nTronWebProto.Transaction.prototype.clearRawData = function() {\n  return this.setRawData(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.Transaction.prototype.hasRawData = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * repeated bytes signature = 2;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\nTronWebProto.Transaction.prototype.getSignatureList = function() {\n  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));\n};\n\n\n/**\n * repeated bytes signature = 2;\n * This is a type-conversion wrapper around `getSignatureList()`\n * @return {!Array<string>}\n */\nTronWebProto.Transaction.prototype.getSignatureList_asB64 = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(\n      this.getSignatureList()));\n};\n\n\n/**\n * repeated bytes signature = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignatureList()`\n * @return {!Array<!Uint8Array>}\n */\nTronWebProto.Transaction.prototype.getSignatureList_asU8 = function() {\n  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getSignatureList()));\n};\n\n\n/**\n * @param {!(Array<!Uint8Array>|Array<string>)} value\n * @return {!TronWebProto.Transaction} returns this\n */\nTronWebProto.Transaction.prototype.setSignatureList = function(value) {\n  return jspb.Message.setField(this, 2, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n * @return {!TronWebProto.Transaction} returns this\n */\nTronWebProto.Transaction.prototype.addSignature = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Transaction} returns this\n */\nTronWebProto.Transaction.prototype.clearSignatureList = function() {\n  return this.setSignatureList([]);\n};\n\n\n/**\n * repeated Result ret = 5;\n * @return {!Array<!TronWebProto.Transaction.Result>}\n */\nTronWebProto.Transaction.prototype.getRetList = function() {\n  return /** @type{!Array<!TronWebProto.Transaction.Result>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.Transaction.Result, 5));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.Transaction.Result>} value\n * @return {!TronWebProto.Transaction} returns this\n*/\nTronWebProto.Transaction.prototype.setRetList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n\n\n/**\n * @param {!TronWebProto.Transaction.Result=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Transaction.Result}\n */\nTronWebProto.Transaction.prototype.addRet = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, TronWebProto.Transaction.Result, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Transaction} returns this\n */\nTronWebProto.Transaction.prototype.clearRetList = function() {\n  return this.setRetList([]);\n};\n\n\n/**\n * @enum {number}\n */\nTronWebProto.AccountType = {\n  NORMAL: 0,\n  ASSETISSUE: 1,\n  CONTRACT: 2\n};\n\ngoog.object.extend(exports, TronWebProto);\n", "// source: core/contract/common.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof window !== 'undefined' && window) ||\n  (typeof global !== 'undefined' && global) ||\n  (typeof self !== 'undefined' && self) ||\n  (function () { return this; }).call(null) ||\n  Function('return this')();\n\ngoog.exportSymbol('TronWebProto.ResourceCode', null, global);\n/**\n * @enum {number}\n */\nTronWebProto.ResourceCode = {\n  BANDWIDTH: 0,\n  ENERGY: 1,\n  TRON_POWER: 2\n};\n\ngoog.object.extend(exports, TronWebProto);\n", "// source: core/contract/balance_contract.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global =\n    (typeof globalThis !== 'undefined' && globalThis) ||\n    (typeof window !== 'undefined' && window) ||\n    (typeof global !== 'undefined' && global) ||\n    (typeof self !== 'undefined' && self) ||\n    function () {\n        return this;\n    }.call(null) ||\n    Function('return this')();\n\nvar core_contract_common_pb = require('../../core/contract/common_pb.cjs');\ngoog.object.extend(proto, core_contract_common_pb);\ngoog.exportSymbol('TronWebProto.AccountBalanceRequest', null, global);\ngoog.exportSymbol('TronWebProto.AccountBalanceResponse', null, global);\ngoog.exportSymbol('TronWebProto.AccountIdentifier', null, global);\ngoog.exportSymbol('TronWebProto.AccountTrace', null, global);\ngoog.exportSymbol('TronWebProto.BlockBalanceTrace', null, global);\ngoog.exportSymbol('TronWebProto.BlockBalanceTrace.BlockIdentifier', null, global);\ngoog.exportSymbol('TronWebProto.CancelAllUnfreezeV2Contract', null, global);\ngoog.exportSymbol('TronWebProto.DelegateResourceContract', null, global);\ngoog.exportSymbol('TronWebProto.FreezeBalanceContract', null, global);\ngoog.exportSymbol('TronWebProto.FreezeBalanceV2Contract', null, global);\ngoog.exportSymbol('TronWebProto.TransactionBalanceTrace', null, global);\ngoog.exportSymbol('TronWebProto.TransactionBalanceTrace.Operation', null, global);\ngoog.exportSymbol('TronWebProto.TransferContract', null, global);\ngoog.exportSymbol('TronWebProto.UnDelegateResourceContract', null, global);\ngoog.exportSymbol('TronWebProto.UnfreezeBalanceContract', null, global);\ngoog.exportSymbol('TronWebProto.UnfreezeBalanceV2Contract', null, global);\ngoog.exportSymbol('TronWebProto.WithdrawBalanceContract', null, global);\ngoog.exportSymbol('TronWebProto.WithdrawExpireUnfreezeContract', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.FreezeBalanceContract = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.FreezeBalanceContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.FreezeBalanceContract.displayName = 'TronWebProto.FreezeBalanceContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.UnfreezeBalanceContract = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.UnfreezeBalanceContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.UnfreezeBalanceContract.displayName = 'TronWebProto.UnfreezeBalanceContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.WithdrawBalanceContract = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.WithdrawBalanceContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.WithdrawBalanceContract.displayName = 'TronWebProto.WithdrawBalanceContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.TransferContract = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.TransferContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.TransferContract.displayName = 'TronWebProto.TransferContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.TransactionBalanceTrace = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.TransactionBalanceTrace.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.TransactionBalanceTrace, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.TransactionBalanceTrace.displayName = 'TronWebProto.TransactionBalanceTrace';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.TransactionBalanceTrace.Operation = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.TransactionBalanceTrace.Operation, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.TransactionBalanceTrace.Operation.displayName = 'TronWebProto.TransactionBalanceTrace.Operation';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.BlockBalanceTrace = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.BlockBalanceTrace.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.BlockBalanceTrace, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.BlockBalanceTrace.displayName = 'TronWebProto.BlockBalanceTrace';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.BlockBalanceTrace.BlockIdentifier, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.BlockBalanceTrace.BlockIdentifier.displayName = 'TronWebProto.BlockBalanceTrace.BlockIdentifier';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AccountTrace = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.AccountTrace, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.AccountTrace.displayName = 'TronWebProto.AccountTrace';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AccountIdentifier = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.AccountIdentifier, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.AccountIdentifier.displayName = 'TronWebProto.AccountIdentifier';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AccountBalanceRequest = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.AccountBalanceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.AccountBalanceRequest.displayName = 'TronWebProto.AccountBalanceRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AccountBalanceResponse = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.AccountBalanceResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.AccountBalanceResponse.displayName = 'TronWebProto.AccountBalanceResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.FreezeBalanceV2Contract = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.FreezeBalanceV2Contract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.FreezeBalanceV2Contract.displayName = 'TronWebProto.FreezeBalanceV2Contract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.UnfreezeBalanceV2Contract = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.UnfreezeBalanceV2Contract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.UnfreezeBalanceV2Contract.displayName = 'TronWebProto.UnfreezeBalanceV2Contract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.WithdrawExpireUnfreezeContract = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.WithdrawExpireUnfreezeContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.WithdrawExpireUnfreezeContract.displayName = 'TronWebProto.WithdrawExpireUnfreezeContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.DelegateResourceContract = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.DelegateResourceContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.DelegateResourceContract.displayName = 'TronWebProto.DelegateResourceContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.UnDelegateResourceContract = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.UnDelegateResourceContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.UnDelegateResourceContract.displayName = 'TronWebProto.UnDelegateResourceContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.CancelAllUnfreezeV2Contract = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.CancelAllUnfreezeV2Contract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.CancelAllUnfreezeV2Contract.displayName = 'TronWebProto.CancelAllUnfreezeV2Contract';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.FreezeBalanceContract.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.FreezeBalanceContract.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.FreezeBalanceContract} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.FreezeBalanceContract.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                ownerAddress: msg.getOwnerAddress_asB64(),\n                frozenBalance: jspb.Message.getFieldWithDefault(msg, 2, 0),\n                frozenDuration: jspb.Message.getFieldWithDefault(msg, 3, 0),\n                resource: jspb.Message.getFieldWithDefault(msg, 10, 0),\n                receiverAddress: msg.getReceiverAddress_asB64(),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.FreezeBalanceContract}\n */\nTronWebProto.FreezeBalanceContract.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.FreezeBalanceContract();\n    return TronWebProto.FreezeBalanceContract.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.FreezeBalanceContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.FreezeBalanceContract}\n */\nTronWebProto.FreezeBalanceContract.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setOwnerAddress(value);\n                break;\n            case 2:\n                var value = /** @type {number} */ (reader.readInt64());\n                msg.setFrozenBalance(value);\n                break;\n            case 3:\n                var value = /** @type {number} */ (reader.readInt64());\n                msg.setFrozenDuration(value);\n                break;\n            case 10:\n                var value = /** @type {!TronWebProto.ResourceCode} */ (reader.readEnum());\n                msg.setResource(value);\n                break;\n            case 15:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setReceiverAddress(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.FreezeBalanceContract.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.FreezeBalanceContract.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.FreezeBalanceContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.FreezeBalanceContract.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getOwnerAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(1, f);\n    }\n    f = message.getFrozenBalance();\n    if (f !== 0) {\n        writer.writeInt64(2, f);\n    }\n    f = message.getFrozenDuration();\n    if (f !== 0) {\n        writer.writeInt64(3, f);\n    }\n    f = message.getResource();\n    if (f !== 0.0) {\n        writer.writeEnum(10, f);\n    }\n    f = message.getReceiverAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(15, f);\n    }\n};\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.FreezeBalanceContract.prototype.getOwnerAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ''));\n};\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.FreezeBalanceContract.prototype.getOwnerAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getOwnerAddress()));\n};\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.FreezeBalanceContract.prototype.getOwnerAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getOwnerAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.FreezeBalanceContract} returns this\n */\nTronWebProto.FreezeBalanceContract.prototype.setOwnerAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n/**\n * optional int64 frozen_balance = 2;\n * @return {number}\n */\nTronWebProto.FreezeBalanceContract.prototype.getFrozenBalance = function () {\n    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n/**\n * @param {number} value\n * @return {!TronWebProto.FreezeBalanceContract} returns this\n */\nTronWebProto.FreezeBalanceContract.prototype.setFrozenBalance = function (value) {\n    return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n/**\n * optional int64 frozen_duration = 3;\n * @return {number}\n */\nTronWebProto.FreezeBalanceContract.prototype.getFrozenDuration = function () {\n    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n/**\n * @param {number} value\n * @return {!TronWebProto.FreezeBalanceContract} returns this\n */\nTronWebProto.FreezeBalanceContract.prototype.setFrozenDuration = function (value) {\n    return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n/**\n * optional ResourceCode resource = 10;\n * @return {!TronWebProto.ResourceCode}\n */\nTronWebProto.FreezeBalanceContract.prototype.getResource = function () {\n    return /** @type {!TronWebProto.ResourceCode} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n/**\n * @param {!TronWebProto.ResourceCode} value\n * @return {!TronWebProto.FreezeBalanceContract} returns this\n */\nTronWebProto.FreezeBalanceContract.prototype.setResource = function (value) {\n    return jspb.Message.setProto3EnumField(this, 10, value);\n};\n\n/**\n * optional bytes receiver_address = 15;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.FreezeBalanceContract.prototype.getReceiverAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 15, ''));\n};\n\n/**\n * optional bytes receiver_address = 15;\n * This is a type-conversion wrapper around `getReceiverAddress()`\n * @return {string}\n */\nTronWebProto.FreezeBalanceContract.prototype.getReceiverAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getReceiverAddress()));\n};\n\n/**\n * optional bytes receiver_address = 15;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getReceiverAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.FreezeBalanceContract.prototype.getReceiverAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getReceiverAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.FreezeBalanceContract} returns this\n */\nTronWebProto.FreezeBalanceContract.prototype.setReceiverAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 15, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.UnfreezeBalanceContract.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.UnfreezeBalanceContract.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.UnfreezeBalanceContract} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.UnfreezeBalanceContract.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                ownerAddress: msg.getOwnerAddress_asB64(),\n                resource: jspb.Message.getFieldWithDefault(msg, 10, 0),\n                receiverAddress: msg.getReceiverAddress_asB64(),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.UnfreezeBalanceContract}\n */\nTronWebProto.UnfreezeBalanceContract.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.UnfreezeBalanceContract();\n    return TronWebProto.UnfreezeBalanceContract.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.UnfreezeBalanceContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.UnfreezeBalanceContract}\n */\nTronWebProto.UnfreezeBalanceContract.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setOwnerAddress(value);\n                break;\n            case 10:\n                var value = /** @type {!TronWebProto.ResourceCode} */ (reader.readEnum());\n                msg.setResource(value);\n                break;\n            case 15:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setReceiverAddress(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.UnfreezeBalanceContract.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.UnfreezeBalanceContract.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.UnfreezeBalanceContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UnfreezeBalanceContract.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getOwnerAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(1, f);\n    }\n    f = message.getResource();\n    if (f !== 0.0) {\n        writer.writeEnum(10, f);\n    }\n    f = message.getReceiverAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(15, f);\n    }\n};\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UnfreezeBalanceContract.prototype.getOwnerAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ''));\n};\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.UnfreezeBalanceContract.prototype.getOwnerAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getOwnerAddress()));\n};\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UnfreezeBalanceContract.prototype.getOwnerAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getOwnerAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UnfreezeBalanceContract} returns this\n */\nTronWebProto.UnfreezeBalanceContract.prototype.setOwnerAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n/**\n * optional ResourceCode resource = 10;\n * @return {!TronWebProto.ResourceCode}\n */\nTronWebProto.UnfreezeBalanceContract.prototype.getResource = function () {\n    return /** @type {!TronWebProto.ResourceCode} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n/**\n * @param {!TronWebProto.ResourceCode} value\n * @return {!TronWebProto.UnfreezeBalanceContract} returns this\n */\nTronWebProto.UnfreezeBalanceContract.prototype.setResource = function (value) {\n    return jspb.Message.setProto3EnumField(this, 10, value);\n};\n\n/**\n * optional bytes receiver_address = 15;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UnfreezeBalanceContract.prototype.getReceiverAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 15, ''));\n};\n\n/**\n * optional bytes receiver_address = 15;\n * This is a type-conversion wrapper around `getReceiverAddress()`\n * @return {string}\n */\nTronWebProto.UnfreezeBalanceContract.prototype.getReceiverAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getReceiverAddress()));\n};\n\n/**\n * optional bytes receiver_address = 15;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getReceiverAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UnfreezeBalanceContract.prototype.getReceiverAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getReceiverAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UnfreezeBalanceContract} returns this\n */\nTronWebProto.UnfreezeBalanceContract.prototype.setReceiverAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 15, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.WithdrawBalanceContract.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.WithdrawBalanceContract.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.WithdrawBalanceContract} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.WithdrawBalanceContract.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                ownerAddress: msg.getOwnerAddress_asB64(),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.WithdrawBalanceContract}\n */\nTronWebProto.WithdrawBalanceContract.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.WithdrawBalanceContract();\n    return TronWebProto.WithdrawBalanceContract.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.WithdrawBalanceContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.WithdrawBalanceContract}\n */\nTronWebProto.WithdrawBalanceContract.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setOwnerAddress(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.WithdrawBalanceContract.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.WithdrawBalanceContract.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.WithdrawBalanceContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.WithdrawBalanceContract.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getOwnerAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(1, f);\n    }\n};\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.WithdrawBalanceContract.prototype.getOwnerAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ''));\n};\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.WithdrawBalanceContract.prototype.getOwnerAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getOwnerAddress()));\n};\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.WithdrawBalanceContract.prototype.getOwnerAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getOwnerAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.WithdrawBalanceContract} returns this\n */\nTronWebProto.WithdrawBalanceContract.prototype.setOwnerAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.TransferContract.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.TransferContract.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.TransferContract} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.TransferContract.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                ownerAddress: msg.getOwnerAddress_asB64(),\n                toAddress: msg.getToAddress_asB64(),\n                amount: jspb.Message.getFieldWithDefault(msg, 3, 0),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.TransferContract}\n */\nTronWebProto.TransferContract.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.TransferContract();\n    return TronWebProto.TransferContract.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.TransferContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.TransferContract}\n */\nTronWebProto.TransferContract.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setOwnerAddress(value);\n                break;\n            case 2:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setToAddress(value);\n                break;\n            case 3:\n                var value = /** @type {number} */ (reader.readInt64());\n                msg.setAmount(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.TransferContract.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.TransferContract.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.TransferContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.TransferContract.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getOwnerAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(1, f);\n    }\n    f = message.getToAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(2, f);\n    }\n    f = message.getAmount();\n    if (f !== 0) {\n        writer.writeInt64(3, f);\n    }\n};\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TransferContract.prototype.getOwnerAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ''));\n};\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.TransferContract.prototype.getOwnerAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getOwnerAddress()));\n};\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.TransferContract.prototype.getOwnerAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getOwnerAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TransferContract} returns this\n */\nTronWebProto.TransferContract.prototype.setOwnerAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n/**\n * optional bytes to_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TransferContract.prototype.getToAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ''));\n};\n\n/**\n * optional bytes to_address = 2;\n * This is a type-conversion wrapper around `getToAddress()`\n * @return {string}\n */\nTronWebProto.TransferContract.prototype.getToAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getToAddress()));\n};\n\n/**\n * optional bytes to_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getToAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.TransferContract.prototype.getToAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getToAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TransferContract} returns this\n */\nTronWebProto.TransferContract.prototype.setToAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n/**\n * optional int64 amount = 3;\n * @return {number}\n */\nTronWebProto.TransferContract.prototype.getAmount = function () {\n    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n/**\n * @param {number} value\n * @return {!TronWebProto.TransferContract} returns this\n */\nTronWebProto.TransferContract.prototype.setAmount = function (value) {\n    return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.TransactionBalanceTrace.repeatedFields_ = [2];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.TransactionBalanceTrace.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.TransactionBalanceTrace.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.TransactionBalanceTrace} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.TransactionBalanceTrace.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                transactionIdentifier: msg.getTransactionIdentifier_asB64(),\n                operationList: jspb.Message.toObjectList(\n                    msg.getOperationList(),\n                    TronWebProto.TransactionBalanceTrace.Operation.toObject,\n                    includeInstance\n                ),\n                type: jspb.Message.getFieldWithDefault(msg, 3, ''),\n                status: jspb.Message.getFieldWithDefault(msg, 4, ''),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.TransactionBalanceTrace}\n */\nTronWebProto.TransactionBalanceTrace.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.TransactionBalanceTrace();\n    return TronWebProto.TransactionBalanceTrace.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.TransactionBalanceTrace} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.TransactionBalanceTrace}\n */\nTronWebProto.TransactionBalanceTrace.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setTransactionIdentifier(value);\n                break;\n            case 2:\n                var value = new TronWebProto.TransactionBalanceTrace.Operation();\n                reader.readMessage(value, TronWebProto.TransactionBalanceTrace.Operation.deserializeBinaryFromReader);\n                msg.addOperation(value);\n                break;\n            case 3:\n                var value = /** @type {string} */ (reader.readString());\n                msg.setType(value);\n                break;\n            case 4:\n                var value = /** @type {string} */ (reader.readString());\n                msg.setStatus(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.TransactionBalanceTrace.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.TransactionBalanceTrace.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.TransactionBalanceTrace} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.TransactionBalanceTrace.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getTransactionIdentifier_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(1, f);\n    }\n    f = message.getOperationList();\n    if (f.length > 0) {\n        writer.writeRepeatedMessage(2, f, TronWebProto.TransactionBalanceTrace.Operation.serializeBinaryToWriter);\n    }\n    f = message.getType();\n    if (f.length > 0) {\n        writer.writeString(3, f);\n    }\n    f = message.getStatus();\n    if (f.length > 0) {\n        writer.writeString(4, f);\n    }\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.TransactionBalanceTrace.Operation.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.TransactionBalanceTrace.Operation.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.TransactionBalanceTrace.Operation} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.TransactionBalanceTrace.Operation.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                operationIdentifier: jspb.Message.getFieldWithDefault(msg, 1, 0),\n                address: msg.getAddress_asB64(),\n                amount: jspb.Message.getFieldWithDefault(msg, 3, 0),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.TransactionBalanceTrace.Operation}\n */\nTronWebProto.TransactionBalanceTrace.Operation.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.TransactionBalanceTrace.Operation();\n    return TronWebProto.TransactionBalanceTrace.Operation.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.TransactionBalanceTrace.Operation} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.TransactionBalanceTrace.Operation}\n */\nTronWebProto.TransactionBalanceTrace.Operation.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = /** @type {number} */ (reader.readInt64());\n                msg.setOperationIdentifier(value);\n                break;\n            case 2:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setAddress(value);\n                break;\n            case 3:\n                var value = /** @type {number} */ (reader.readInt64());\n                msg.setAmount(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.TransactionBalanceTrace.Operation.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.TransactionBalanceTrace.Operation.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.TransactionBalanceTrace.Operation} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.TransactionBalanceTrace.Operation.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getOperationIdentifier();\n    if (f !== 0) {\n        writer.writeInt64(1, f);\n    }\n    f = message.getAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(2, f);\n    }\n    f = message.getAmount();\n    if (f !== 0) {\n        writer.writeInt64(3, f);\n    }\n};\n\n/**\n * optional int64 operation_identifier = 1;\n * @return {number}\n */\nTronWebProto.TransactionBalanceTrace.Operation.prototype.getOperationIdentifier = function () {\n    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n/**\n * @param {number} value\n * @return {!TronWebProto.TransactionBalanceTrace.Operation} returns this\n */\nTronWebProto.TransactionBalanceTrace.Operation.prototype.setOperationIdentifier = function (value) {\n    return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n/**\n * optional bytes address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TransactionBalanceTrace.Operation.prototype.getAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ''));\n};\n\n/**\n * optional bytes address = 2;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nTronWebProto.TransactionBalanceTrace.Operation.prototype.getAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getAddress()));\n};\n\n/**\n * optional bytes address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.TransactionBalanceTrace.Operation.prototype.getAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TransactionBalanceTrace.Operation} returns this\n */\nTronWebProto.TransactionBalanceTrace.Operation.prototype.setAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n/**\n * optional int64 amount = 3;\n * @return {number}\n */\nTronWebProto.TransactionBalanceTrace.Operation.prototype.getAmount = function () {\n    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n/**\n * @param {number} value\n * @return {!TronWebProto.TransactionBalanceTrace.Operation} returns this\n */\nTronWebProto.TransactionBalanceTrace.Operation.prototype.setAmount = function (value) {\n    return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n/**\n * optional bytes transaction_identifier = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TransactionBalanceTrace.prototype.getTransactionIdentifier = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ''));\n};\n\n/**\n * optional bytes transaction_identifier = 1;\n * This is a type-conversion wrapper around `getTransactionIdentifier()`\n * @return {string}\n */\nTronWebProto.TransactionBalanceTrace.prototype.getTransactionIdentifier_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getTransactionIdentifier()));\n};\n\n/**\n * optional bytes transaction_identifier = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTransactionIdentifier()`\n * @return {!Uint8Array}\n */\nTronWebProto.TransactionBalanceTrace.prototype.getTransactionIdentifier_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getTransactionIdentifier()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TransactionBalanceTrace} returns this\n */\nTronWebProto.TransactionBalanceTrace.prototype.setTransactionIdentifier = function (value) {\n    return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n/**\n * repeated Operation operation = 2;\n * @return {!Array<!TronWebProto.TransactionBalanceTrace.Operation>}\n */\nTronWebProto.TransactionBalanceTrace.prototype.getOperationList = function () {\n    return /** @type{!Array<!TronWebProto.TransactionBalanceTrace.Operation>} */ (\n        jspb.Message.getRepeatedWrapperField(this, TronWebProto.TransactionBalanceTrace.Operation, 2)\n    );\n};\n\n/**\n * @param {!Array<!TronWebProto.TransactionBalanceTrace.Operation>} value\n * @return {!TronWebProto.TransactionBalanceTrace} returns this\n */\nTronWebProto.TransactionBalanceTrace.prototype.setOperationList = function (value) {\n    return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n/**\n * @param {!TronWebProto.TransactionBalanceTrace.Operation=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.TransactionBalanceTrace.Operation}\n */\nTronWebProto.TransactionBalanceTrace.prototype.addOperation = function (opt_value, opt_index) {\n    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, TronWebProto.TransactionBalanceTrace.Operation, opt_index);\n};\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.TransactionBalanceTrace} returns this\n */\nTronWebProto.TransactionBalanceTrace.prototype.clearOperationList = function () {\n    return this.setOperationList([]);\n};\n\n/**\n * optional string type = 3;\n * @return {string}\n */\nTronWebProto.TransactionBalanceTrace.prototype.getType = function () {\n    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));\n};\n\n/**\n * @param {string} value\n * @return {!TronWebProto.TransactionBalanceTrace} returns this\n */\nTronWebProto.TransactionBalanceTrace.prototype.setType = function (value) {\n    return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n/**\n * optional string status = 4;\n * @return {string}\n */\nTronWebProto.TransactionBalanceTrace.prototype.getStatus = function () {\n    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));\n};\n\n/**\n * @param {string} value\n * @return {!TronWebProto.TransactionBalanceTrace} returns this\n */\nTronWebProto.TransactionBalanceTrace.prototype.setStatus = function (value) {\n    return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.BlockBalanceTrace.repeatedFields_ = [3];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.BlockBalanceTrace.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.BlockBalanceTrace.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.BlockBalanceTrace} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.BlockBalanceTrace.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                blockIdentifier:\n                    (f = msg.getBlockIdentifier()) && TronWebProto.BlockBalanceTrace.BlockIdentifier.toObject(includeInstance, f),\n                timestamp: jspb.Message.getFieldWithDefault(msg, 2, 0),\n                transactionBalanceTraceList: jspb.Message.toObjectList(\n                    msg.getTransactionBalanceTraceList(),\n                    TronWebProto.TransactionBalanceTrace.toObject,\n                    includeInstance\n                ),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.BlockBalanceTrace}\n */\nTronWebProto.BlockBalanceTrace.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.BlockBalanceTrace();\n    return TronWebProto.BlockBalanceTrace.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.BlockBalanceTrace} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.BlockBalanceTrace}\n */\nTronWebProto.BlockBalanceTrace.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = new TronWebProto.BlockBalanceTrace.BlockIdentifier();\n                reader.readMessage(value, TronWebProto.BlockBalanceTrace.BlockIdentifier.deserializeBinaryFromReader);\n                msg.setBlockIdentifier(value);\n                break;\n            case 2:\n                var value = /** @type {number} */ (reader.readInt64());\n                msg.setTimestamp(value);\n                break;\n            case 3:\n                var value = new TronWebProto.TransactionBalanceTrace();\n                reader.readMessage(value, TronWebProto.TransactionBalanceTrace.deserializeBinaryFromReader);\n                msg.addTransactionBalanceTrace(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.BlockBalanceTrace.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.BlockBalanceTrace.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.BlockBalanceTrace} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.BlockBalanceTrace.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getBlockIdentifier();\n    if (f != null) {\n        writer.writeMessage(1, f, TronWebProto.BlockBalanceTrace.BlockIdentifier.serializeBinaryToWriter);\n    }\n    f = message.getTimestamp();\n    if (f !== 0) {\n        writer.writeInt64(2, f);\n    }\n    f = message.getTransactionBalanceTraceList();\n    if (f.length > 0) {\n        writer.writeRepeatedMessage(3, f, TronWebProto.TransactionBalanceTrace.serializeBinaryToWriter);\n    }\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.BlockBalanceTrace.BlockIdentifier.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.BlockBalanceTrace.BlockIdentifier.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.BlockBalanceTrace.BlockIdentifier} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.BlockBalanceTrace.BlockIdentifier.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                hash: msg.getHash_asB64(),\n                number: jspb.Message.getFieldWithDefault(msg, 2, 0),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.BlockBalanceTrace.BlockIdentifier}\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.BlockBalanceTrace.BlockIdentifier();\n    return TronWebProto.BlockBalanceTrace.BlockIdentifier.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.BlockBalanceTrace.BlockIdentifier} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.BlockBalanceTrace.BlockIdentifier}\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setHash(value);\n                break;\n            case 2:\n                var value = /** @type {number} */ (reader.readInt64());\n                msg.setNumber(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.BlockBalanceTrace.BlockIdentifier.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.BlockBalanceTrace.BlockIdentifier} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getHash_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(1, f);\n    }\n    f = message.getNumber();\n    if (f !== 0) {\n        writer.writeInt64(2, f);\n    }\n};\n\n/**\n * optional bytes hash = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.prototype.getHash = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ''));\n};\n\n/**\n * optional bytes hash = 1;\n * This is a type-conversion wrapper around `getHash()`\n * @return {string}\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.prototype.getHash_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getHash()));\n};\n\n/**\n * optional bytes hash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHash()`\n * @return {!Uint8Array}\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.prototype.getHash_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getHash()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.BlockBalanceTrace.BlockIdentifier} returns this\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.prototype.setHash = function (value) {\n    return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n/**\n * optional int64 number = 2;\n * @return {number}\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.prototype.getNumber = function () {\n    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n/**\n * @param {number} value\n * @return {!TronWebProto.BlockBalanceTrace.BlockIdentifier} returns this\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.prototype.setNumber = function (value) {\n    return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n/**\n * optional BlockIdentifier block_identifier = 1;\n * @return {?TronWebProto.BlockBalanceTrace.BlockIdentifier}\n */\nTronWebProto.BlockBalanceTrace.prototype.getBlockIdentifier = function () {\n    return /** @type{?TronWebProto.BlockBalanceTrace.BlockIdentifier} */ (\n        jspb.Message.getWrapperField(this, TronWebProto.BlockBalanceTrace.BlockIdentifier, 1)\n    );\n};\n\n/**\n * @param {?TronWebProto.BlockBalanceTrace.BlockIdentifier|undefined} value\n * @return {!TronWebProto.BlockBalanceTrace} returns this\n */\nTronWebProto.BlockBalanceTrace.prototype.setBlockIdentifier = function (value) {\n    return jspb.Message.setWrapperField(this, 1, value);\n};\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.BlockBalanceTrace} returns this\n */\nTronWebProto.BlockBalanceTrace.prototype.clearBlockIdentifier = function () {\n    return this.setBlockIdentifier(undefined);\n};\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.BlockBalanceTrace.prototype.hasBlockIdentifier = function () {\n    return jspb.Message.getField(this, 1) != null;\n};\n\n/**\n * optional int64 timestamp = 2;\n * @return {number}\n */\nTronWebProto.BlockBalanceTrace.prototype.getTimestamp = function () {\n    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n/**\n * @param {number} value\n * @return {!TronWebProto.BlockBalanceTrace} returns this\n */\nTronWebProto.BlockBalanceTrace.prototype.setTimestamp = function (value) {\n    return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n/**\n * repeated TransactionBalanceTrace transaction_balance_trace = 3;\n * @return {!Array<!TronWebProto.TransactionBalanceTrace>}\n */\nTronWebProto.BlockBalanceTrace.prototype.getTransactionBalanceTraceList = function () {\n    return /** @type{!Array<!TronWebProto.TransactionBalanceTrace>} */ (\n        jspb.Message.getRepeatedWrapperField(this, TronWebProto.TransactionBalanceTrace, 3)\n    );\n};\n\n/**\n * @param {!Array<!TronWebProto.TransactionBalanceTrace>} value\n * @return {!TronWebProto.BlockBalanceTrace} returns this\n */\nTronWebProto.BlockBalanceTrace.prototype.setTransactionBalanceTraceList = function (value) {\n    return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n/**\n * @param {!TronWebProto.TransactionBalanceTrace=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.TransactionBalanceTrace}\n */\nTronWebProto.BlockBalanceTrace.prototype.addTransactionBalanceTrace = function (opt_value, opt_index) {\n    return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, TronWebProto.TransactionBalanceTrace, opt_index);\n};\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.BlockBalanceTrace} returns this\n */\nTronWebProto.BlockBalanceTrace.prototype.clearTransactionBalanceTraceList = function () {\n    return this.setTransactionBalanceTraceList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.AccountTrace.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.AccountTrace.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.AccountTrace} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.AccountTrace.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                balance: jspb.Message.getFieldWithDefault(msg, 1, 0),\n                placeholder: jspb.Message.getFieldWithDefault(msg, 99, 0),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AccountTrace}\n */\nTronWebProto.AccountTrace.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.AccountTrace();\n    return TronWebProto.AccountTrace.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AccountTrace} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AccountTrace}\n */\nTronWebProto.AccountTrace.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = /** @type {number} */ (reader.readInt64());\n                msg.setBalance(value);\n                break;\n            case 99:\n                var value = /** @type {number} */ (reader.readInt64());\n                msg.setPlaceholder(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AccountTrace.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.AccountTrace.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AccountTrace} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountTrace.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getBalance();\n    if (f !== 0) {\n        writer.writeInt64(1, f);\n    }\n    f = message.getPlaceholder();\n    if (f !== 0) {\n        writer.writeInt64(99, f);\n    }\n};\n\n/**\n * optional int64 balance = 1;\n * @return {number}\n */\nTronWebProto.AccountTrace.prototype.getBalance = function () {\n    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AccountTrace} returns this\n */\nTronWebProto.AccountTrace.prototype.setBalance = function (value) {\n    return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n/**\n * optional int64 placeholder = 99;\n * @return {number}\n */\nTronWebProto.AccountTrace.prototype.getPlaceholder = function () {\n    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 99, 0));\n};\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AccountTrace} returns this\n */\nTronWebProto.AccountTrace.prototype.setPlaceholder = function (value) {\n    return jspb.Message.setProto3IntField(this, 99, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.AccountIdentifier.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.AccountIdentifier.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.AccountIdentifier} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.AccountIdentifier.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                address: msg.getAddress_asB64(),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AccountIdentifier}\n */\nTronWebProto.AccountIdentifier.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.AccountIdentifier();\n    return TronWebProto.AccountIdentifier.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AccountIdentifier} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AccountIdentifier}\n */\nTronWebProto.AccountIdentifier.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setAddress(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AccountIdentifier.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.AccountIdentifier.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AccountIdentifier} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountIdentifier.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(1, f);\n    }\n};\n\n/**\n * optional bytes address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AccountIdentifier.prototype.getAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ''));\n};\n\n/**\n * optional bytes address = 1;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nTronWebProto.AccountIdentifier.prototype.getAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getAddress()));\n};\n\n/**\n * optional bytes address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.AccountIdentifier.prototype.getAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AccountIdentifier} returns this\n */\nTronWebProto.AccountIdentifier.prototype.setAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.AccountBalanceRequest.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.AccountBalanceRequest.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.AccountBalanceRequest} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.AccountBalanceRequest.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                accountIdentifier:\n                    (f = msg.getAccountIdentifier()) && TronWebProto.AccountIdentifier.toObject(includeInstance, f),\n                blockIdentifier:\n                    (f = msg.getBlockIdentifier()) && TronWebProto.BlockBalanceTrace.BlockIdentifier.toObject(includeInstance, f),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AccountBalanceRequest}\n */\nTronWebProto.AccountBalanceRequest.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.AccountBalanceRequest();\n    return TronWebProto.AccountBalanceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AccountBalanceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AccountBalanceRequest}\n */\nTronWebProto.AccountBalanceRequest.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = new TronWebProto.AccountIdentifier();\n                reader.readMessage(value, TronWebProto.AccountIdentifier.deserializeBinaryFromReader);\n                msg.setAccountIdentifier(value);\n                break;\n            case 2:\n                var value = new TronWebProto.BlockBalanceTrace.BlockIdentifier();\n                reader.readMessage(value, TronWebProto.BlockBalanceTrace.BlockIdentifier.deserializeBinaryFromReader);\n                msg.setBlockIdentifier(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AccountBalanceRequest.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.AccountBalanceRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AccountBalanceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountBalanceRequest.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getAccountIdentifier();\n    if (f != null) {\n        writer.writeMessage(1, f, TronWebProto.AccountIdentifier.serializeBinaryToWriter);\n    }\n    f = message.getBlockIdentifier();\n    if (f != null) {\n        writer.writeMessage(2, f, TronWebProto.BlockBalanceTrace.BlockIdentifier.serializeBinaryToWriter);\n    }\n};\n\n/**\n * optional AccountIdentifier account_identifier = 1;\n * @return {?TronWebProto.AccountIdentifier}\n */\nTronWebProto.AccountBalanceRequest.prototype.getAccountIdentifier = function () {\n    return /** @type{?TronWebProto.AccountIdentifier} */ (jspb.Message.getWrapperField(this, TronWebProto.AccountIdentifier, 1));\n};\n\n/**\n * @param {?TronWebProto.AccountIdentifier|undefined} value\n * @return {!TronWebProto.AccountBalanceRequest} returns this\n */\nTronWebProto.AccountBalanceRequest.prototype.setAccountIdentifier = function (value) {\n    return jspb.Message.setWrapperField(this, 1, value);\n};\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.AccountBalanceRequest} returns this\n */\nTronWebProto.AccountBalanceRequest.prototype.clearAccountIdentifier = function () {\n    return this.setAccountIdentifier(undefined);\n};\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.AccountBalanceRequest.prototype.hasAccountIdentifier = function () {\n    return jspb.Message.getField(this, 1) != null;\n};\n\n/**\n * optional BlockBalanceTrace.BlockIdentifier block_identifier = 2;\n * @return {?TronWebProto.BlockBalanceTrace.BlockIdentifier}\n */\nTronWebProto.AccountBalanceRequest.prototype.getBlockIdentifier = function () {\n    return /** @type{?TronWebProto.BlockBalanceTrace.BlockIdentifier} */ (\n        jspb.Message.getWrapperField(this, TronWebProto.BlockBalanceTrace.BlockIdentifier, 2)\n    );\n};\n\n/**\n * @param {?TronWebProto.BlockBalanceTrace.BlockIdentifier|undefined} value\n * @return {!TronWebProto.AccountBalanceRequest} returns this\n */\nTronWebProto.AccountBalanceRequest.prototype.setBlockIdentifier = function (value) {\n    return jspb.Message.setWrapperField(this, 2, value);\n};\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.AccountBalanceRequest} returns this\n */\nTronWebProto.AccountBalanceRequest.prototype.clearBlockIdentifier = function () {\n    return this.setBlockIdentifier(undefined);\n};\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.AccountBalanceRequest.prototype.hasBlockIdentifier = function () {\n    return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.AccountBalanceResponse.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.AccountBalanceResponse.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.AccountBalanceResponse} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.AccountBalanceResponse.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                balance: jspb.Message.getFieldWithDefault(msg, 1, 0),\n                blockIdentifier:\n                    (f = msg.getBlockIdentifier()) && TronWebProto.BlockBalanceTrace.BlockIdentifier.toObject(includeInstance, f),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AccountBalanceResponse}\n */\nTronWebProto.AccountBalanceResponse.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.AccountBalanceResponse();\n    return TronWebProto.AccountBalanceResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AccountBalanceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AccountBalanceResponse}\n */\nTronWebProto.AccountBalanceResponse.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = /** @type {number} */ (reader.readInt64());\n                msg.setBalance(value);\n                break;\n            case 2:\n                var value = new TronWebProto.BlockBalanceTrace.BlockIdentifier();\n                reader.readMessage(value, TronWebProto.BlockBalanceTrace.BlockIdentifier.deserializeBinaryFromReader);\n                msg.setBlockIdentifier(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AccountBalanceResponse.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.AccountBalanceResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AccountBalanceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountBalanceResponse.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getBalance();\n    if (f !== 0) {\n        writer.writeInt64(1, f);\n    }\n    f = message.getBlockIdentifier();\n    if (f != null) {\n        writer.writeMessage(2, f, TronWebProto.BlockBalanceTrace.BlockIdentifier.serializeBinaryToWriter);\n    }\n};\n\n/**\n * optional int64 balance = 1;\n * @return {number}\n */\nTronWebProto.AccountBalanceResponse.prototype.getBalance = function () {\n    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AccountBalanceResponse} returns this\n */\nTronWebProto.AccountBalanceResponse.prototype.setBalance = function (value) {\n    return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n/**\n * optional BlockBalanceTrace.BlockIdentifier block_identifier = 2;\n * @return {?TronWebProto.BlockBalanceTrace.BlockIdentifier}\n */\nTronWebProto.AccountBalanceResponse.prototype.getBlockIdentifier = function () {\n    return /** @type{?TronWebProto.BlockBalanceTrace.BlockIdentifier} */ (\n        jspb.Message.getWrapperField(this, TronWebProto.BlockBalanceTrace.BlockIdentifier, 2)\n    );\n};\n\n/**\n * @param {?TronWebProto.BlockBalanceTrace.BlockIdentifier|undefined} value\n * @return {!TronWebProto.AccountBalanceResponse} returns this\n */\nTronWebProto.AccountBalanceResponse.prototype.setBlockIdentifier = function (value) {\n    return jspb.Message.setWrapperField(this, 2, value);\n};\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.AccountBalanceResponse} returns this\n */\nTronWebProto.AccountBalanceResponse.prototype.clearBlockIdentifier = function () {\n    return this.setBlockIdentifier(undefined);\n};\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.AccountBalanceResponse.prototype.hasBlockIdentifier = function () {\n    return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.FreezeBalanceV2Contract.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.FreezeBalanceV2Contract.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.FreezeBalanceV2Contract} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.FreezeBalanceV2Contract.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                ownerAddress: msg.getOwnerAddress_asB64(),\n                frozenBalance: jspb.Message.getFieldWithDefault(msg, 2, 0),\n                resource: jspb.Message.getFieldWithDefault(msg, 3, 0),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.FreezeBalanceV2Contract}\n */\nTronWebProto.FreezeBalanceV2Contract.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.FreezeBalanceV2Contract();\n    return TronWebProto.FreezeBalanceV2Contract.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.FreezeBalanceV2Contract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.FreezeBalanceV2Contract}\n */\nTronWebProto.FreezeBalanceV2Contract.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setOwnerAddress(value);\n                break;\n            case 2:\n                var value = /** @type {number} */ (reader.readInt64());\n                msg.setFrozenBalance(value);\n                break;\n            case 3:\n                var value = /** @type {!TronWebProto.ResourceCode} */ (reader.readEnum());\n                msg.setResource(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.FreezeBalanceV2Contract.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.FreezeBalanceV2Contract.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.FreezeBalanceV2Contract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.FreezeBalanceV2Contract.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getOwnerAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(1, f);\n    }\n    f = message.getFrozenBalance();\n    if (f !== 0) {\n        writer.writeInt64(2, f);\n    }\n    f = message.getResource();\n    if (f !== 0.0) {\n        writer.writeEnum(3, f);\n    }\n};\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.FreezeBalanceV2Contract.prototype.getOwnerAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ''));\n};\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.FreezeBalanceV2Contract.prototype.getOwnerAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getOwnerAddress()));\n};\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.FreezeBalanceV2Contract.prototype.getOwnerAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getOwnerAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.FreezeBalanceV2Contract} returns this\n */\nTronWebProto.FreezeBalanceV2Contract.prototype.setOwnerAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n/**\n * optional int64 frozen_balance = 2;\n * @return {number}\n */\nTronWebProto.FreezeBalanceV2Contract.prototype.getFrozenBalance = function () {\n    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n/**\n * @param {number} value\n * @return {!TronWebProto.FreezeBalanceV2Contract} returns this\n */\nTronWebProto.FreezeBalanceV2Contract.prototype.setFrozenBalance = function (value) {\n    return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n/**\n * optional ResourceCode resource = 3;\n * @return {!TronWebProto.ResourceCode}\n */\nTronWebProto.FreezeBalanceV2Contract.prototype.getResource = function () {\n    return /** @type {!TronWebProto.ResourceCode} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n/**\n * @param {!TronWebProto.ResourceCode} value\n * @return {!TronWebProto.FreezeBalanceV2Contract} returns this\n */\nTronWebProto.FreezeBalanceV2Contract.prototype.setResource = function (value) {\n    return jspb.Message.setProto3EnumField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.UnfreezeBalanceV2Contract.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.UnfreezeBalanceV2Contract.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.UnfreezeBalanceV2Contract} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.UnfreezeBalanceV2Contract.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                ownerAddress: msg.getOwnerAddress_asB64(),\n                unfreezeBalance: jspb.Message.getFieldWithDefault(msg, 2, 0),\n                resource: jspb.Message.getFieldWithDefault(msg, 3, 0),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.UnfreezeBalanceV2Contract}\n */\nTronWebProto.UnfreezeBalanceV2Contract.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.UnfreezeBalanceV2Contract();\n    return TronWebProto.UnfreezeBalanceV2Contract.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.UnfreezeBalanceV2Contract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.UnfreezeBalanceV2Contract}\n */\nTronWebProto.UnfreezeBalanceV2Contract.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setOwnerAddress(value);\n                break;\n            case 2:\n                var value = /** @type {number} */ (reader.readInt64());\n                msg.setUnfreezeBalance(value);\n                break;\n            case 3:\n                var value = /** @type {!TronWebProto.ResourceCode} */ (reader.readEnum());\n                msg.setResource(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.UnfreezeBalanceV2Contract.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.UnfreezeBalanceV2Contract.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.UnfreezeBalanceV2Contract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UnfreezeBalanceV2Contract.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getOwnerAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(1, f);\n    }\n    f = message.getUnfreezeBalance();\n    if (f !== 0) {\n        writer.writeInt64(2, f);\n    }\n    f = message.getResource();\n    if (f !== 0.0) {\n        writer.writeEnum(3, f);\n    }\n};\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UnfreezeBalanceV2Contract.prototype.getOwnerAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ''));\n};\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.UnfreezeBalanceV2Contract.prototype.getOwnerAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getOwnerAddress()));\n};\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UnfreezeBalanceV2Contract.prototype.getOwnerAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getOwnerAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UnfreezeBalanceV2Contract} returns this\n */\nTronWebProto.UnfreezeBalanceV2Contract.prototype.setOwnerAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n/**\n * optional int64 unfreeze_balance = 2;\n * @return {number}\n */\nTronWebProto.UnfreezeBalanceV2Contract.prototype.getUnfreezeBalance = function () {\n    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n/**\n * @param {number} value\n * @return {!TronWebProto.UnfreezeBalanceV2Contract} returns this\n */\nTronWebProto.UnfreezeBalanceV2Contract.prototype.setUnfreezeBalance = function (value) {\n    return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n/**\n * optional ResourceCode resource = 3;\n * @return {!TronWebProto.ResourceCode}\n */\nTronWebProto.UnfreezeBalanceV2Contract.prototype.getResource = function () {\n    return /** @type {!TronWebProto.ResourceCode} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n/**\n * @param {!TronWebProto.ResourceCode} value\n * @return {!TronWebProto.UnfreezeBalanceV2Contract} returns this\n */\nTronWebProto.UnfreezeBalanceV2Contract.prototype.setResource = function (value) {\n    return jspb.Message.setProto3EnumField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.WithdrawExpireUnfreezeContract.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.WithdrawExpireUnfreezeContract.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.WithdrawExpireUnfreezeContract} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.WithdrawExpireUnfreezeContract.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                ownerAddress: msg.getOwnerAddress_asB64(),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.WithdrawExpireUnfreezeContract}\n */\nTronWebProto.WithdrawExpireUnfreezeContract.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.WithdrawExpireUnfreezeContract();\n    return TronWebProto.WithdrawExpireUnfreezeContract.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.WithdrawExpireUnfreezeContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.WithdrawExpireUnfreezeContract}\n */\nTronWebProto.WithdrawExpireUnfreezeContract.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setOwnerAddress(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.WithdrawExpireUnfreezeContract.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.WithdrawExpireUnfreezeContract.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.WithdrawExpireUnfreezeContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.WithdrawExpireUnfreezeContract.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getOwnerAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(1, f);\n    }\n};\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.WithdrawExpireUnfreezeContract.prototype.getOwnerAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ''));\n};\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.WithdrawExpireUnfreezeContract.prototype.getOwnerAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getOwnerAddress()));\n};\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.WithdrawExpireUnfreezeContract.prototype.getOwnerAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getOwnerAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.WithdrawExpireUnfreezeContract} returns this\n */\nTronWebProto.WithdrawExpireUnfreezeContract.prototype.setOwnerAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.DelegateResourceContract.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.DelegateResourceContract.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.DelegateResourceContract} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.DelegateResourceContract.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                ownerAddress: msg.getOwnerAddress_asB64(),\n                resource: jspb.Message.getFieldWithDefault(msg, 2, 0),\n                balance: jspb.Message.getFieldWithDefault(msg, 3, 0),\n                receiverAddress: msg.getReceiverAddress_asB64(),\n                lock: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),\n                lockPeriod: jspb.Message.getFieldWithDefault(msg, 6, 0),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.DelegateResourceContract}\n */\nTronWebProto.DelegateResourceContract.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.DelegateResourceContract();\n    return TronWebProto.DelegateResourceContract.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.DelegateResourceContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.DelegateResourceContract}\n */\nTronWebProto.DelegateResourceContract.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setOwnerAddress(value);\n                break;\n            case 2:\n                var value = /** @type {!TronWebProto.ResourceCode} */ (reader.readEnum());\n                msg.setResource(value);\n                break;\n            case 3:\n                var value = /** @type {number} */ (reader.readInt64());\n                msg.setBalance(value);\n                break;\n            case 4:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setReceiverAddress(value);\n                break;\n            case 5:\n                var value = /** @type {boolean} */ (reader.readBool());\n                msg.setLock(value);\n                break;\n            case 6:\n                var value = /** @type {number} */ (reader.readInt64());\n                msg.setLockPeriod(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.DelegateResourceContract.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.DelegateResourceContract.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.DelegateResourceContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.DelegateResourceContract.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getOwnerAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(1, f);\n    }\n    f = message.getResource();\n    if (f !== 0.0) {\n        writer.writeEnum(2, f);\n    }\n    f = message.getBalance();\n    if (f !== 0) {\n        writer.writeInt64(3, f);\n    }\n    f = message.getReceiverAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(4, f);\n    }\n    f = message.getLock();\n    if (f) {\n        writer.writeBool(5, f);\n    }\n    f = message.getLockPeriod();\n    if (f !== 0) {\n        writer.writeInt64(6, f);\n    }\n};\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.DelegateResourceContract.prototype.getOwnerAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ''));\n};\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.DelegateResourceContract.prototype.getOwnerAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getOwnerAddress()));\n};\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.DelegateResourceContract.prototype.getOwnerAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getOwnerAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.DelegateResourceContract} returns this\n */\nTronWebProto.DelegateResourceContract.prototype.setOwnerAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n/**\n * optional ResourceCode resource = 2;\n * @return {!TronWebProto.ResourceCode}\n */\nTronWebProto.DelegateResourceContract.prototype.getResource = function () {\n    return /** @type {!TronWebProto.ResourceCode} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n/**\n * @param {!TronWebProto.ResourceCode} value\n * @return {!TronWebProto.DelegateResourceContract} returns this\n */\nTronWebProto.DelegateResourceContract.prototype.setResource = function (value) {\n    return jspb.Message.setProto3EnumField(this, 2, value);\n};\n\n/**\n * optional int64 balance = 3;\n * @return {number}\n */\nTronWebProto.DelegateResourceContract.prototype.getBalance = function () {\n    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n/**\n * @param {number} value\n * @return {!TronWebProto.DelegateResourceContract} returns this\n */\nTronWebProto.DelegateResourceContract.prototype.setBalance = function (value) {\n    return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n/**\n * optional bytes receiver_address = 4;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.DelegateResourceContract.prototype.getReceiverAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ''));\n};\n\n/**\n * optional bytes receiver_address = 4;\n * This is a type-conversion wrapper around `getReceiverAddress()`\n * @return {string}\n */\nTronWebProto.DelegateResourceContract.prototype.getReceiverAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getReceiverAddress()));\n};\n\n/**\n * optional bytes receiver_address = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getReceiverAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.DelegateResourceContract.prototype.getReceiverAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getReceiverAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.DelegateResourceContract} returns this\n */\nTronWebProto.DelegateResourceContract.prototype.setReceiverAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n/**\n * optional bool lock = 5;\n * @return {boolean}\n */\nTronWebProto.DelegateResourceContract.prototype.getLock = function () {\n    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));\n};\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.DelegateResourceContract} returns this\n */\nTronWebProto.DelegateResourceContract.prototype.setLock = function (value) {\n    return jspb.Message.setProto3BooleanField(this, 5, value);\n};\n\n/**\n * optional int64 lock_period = 6;\n * @return {number}\n */\nTronWebProto.DelegateResourceContract.prototype.getLockPeriod = function () {\n    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n/**\n * @param {number} value\n * @return {!TronWebProto.DelegateResourceContract} returns this\n */\nTronWebProto.DelegateResourceContract.prototype.setLockPeriod = function (value) {\n    return jspb.Message.setProto3IntField(this, 6, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.UnDelegateResourceContract.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.UnDelegateResourceContract.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.UnDelegateResourceContract} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.UnDelegateResourceContract.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                ownerAddress: msg.getOwnerAddress_asB64(),\n                resource: jspb.Message.getFieldWithDefault(msg, 2, 0),\n                balance: jspb.Message.getFieldWithDefault(msg, 3, 0),\n                receiverAddress: msg.getReceiverAddress_asB64(),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.UnDelegateResourceContract}\n */\nTronWebProto.UnDelegateResourceContract.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.UnDelegateResourceContract();\n    return TronWebProto.UnDelegateResourceContract.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.UnDelegateResourceContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.UnDelegateResourceContract}\n */\nTronWebProto.UnDelegateResourceContract.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setOwnerAddress(value);\n                break;\n            case 2:\n                var value = /** @type {!TronWebProto.ResourceCode} */ (reader.readEnum());\n                msg.setResource(value);\n                break;\n            case 3:\n                var value = /** @type {number} */ (reader.readInt64());\n                msg.setBalance(value);\n                break;\n            case 4:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setReceiverAddress(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.UnDelegateResourceContract.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.UnDelegateResourceContract.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.UnDelegateResourceContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UnDelegateResourceContract.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getOwnerAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(1, f);\n    }\n    f = message.getResource();\n    if (f !== 0.0) {\n        writer.writeEnum(2, f);\n    }\n    f = message.getBalance();\n    if (f !== 0) {\n        writer.writeInt64(3, f);\n    }\n    f = message.getReceiverAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(4, f);\n    }\n};\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UnDelegateResourceContract.prototype.getOwnerAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ''));\n};\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.UnDelegateResourceContract.prototype.getOwnerAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getOwnerAddress()));\n};\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UnDelegateResourceContract.prototype.getOwnerAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getOwnerAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UnDelegateResourceContract} returns this\n */\nTronWebProto.UnDelegateResourceContract.prototype.setOwnerAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n/**\n * optional ResourceCode resource = 2;\n * @return {!TronWebProto.ResourceCode}\n */\nTronWebProto.UnDelegateResourceContract.prototype.getResource = function () {\n    return /** @type {!TronWebProto.ResourceCode} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n/**\n * @param {!TronWebProto.ResourceCode} value\n * @return {!TronWebProto.UnDelegateResourceContract} returns this\n */\nTronWebProto.UnDelegateResourceContract.prototype.setResource = function (value) {\n    return jspb.Message.setProto3EnumField(this, 2, value);\n};\n\n/**\n * optional int64 balance = 3;\n * @return {number}\n */\nTronWebProto.UnDelegateResourceContract.prototype.getBalance = function () {\n    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n/**\n * @param {number} value\n * @return {!TronWebProto.UnDelegateResourceContract} returns this\n */\nTronWebProto.UnDelegateResourceContract.prototype.setBalance = function (value) {\n    return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n/**\n * optional bytes receiver_address = 4;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UnDelegateResourceContract.prototype.getReceiverAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ''));\n};\n\n/**\n * optional bytes receiver_address = 4;\n * This is a type-conversion wrapper around `getReceiverAddress()`\n * @return {string}\n */\nTronWebProto.UnDelegateResourceContract.prototype.getReceiverAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getReceiverAddress()));\n};\n\n/**\n * optional bytes receiver_address = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getReceiverAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UnDelegateResourceContract.prototype.getReceiverAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getReceiverAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UnDelegateResourceContract} returns this\n */\nTronWebProto.UnDelegateResourceContract.prototype.setReceiverAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.CancelAllUnfreezeV2Contract.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.CancelAllUnfreezeV2Contract.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.CancelAllUnfreezeV2Contract} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.CancelAllUnfreezeV2Contract.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                ownerAddress: msg.getOwnerAddress_asB64(),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.CancelAllUnfreezeV2Contract}\n */\nTronWebProto.CancelAllUnfreezeV2Contract.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.CancelAllUnfreezeV2Contract();\n    return TronWebProto.CancelAllUnfreezeV2Contract.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.CancelAllUnfreezeV2Contract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.CancelAllUnfreezeV2Contract}\n */\nTronWebProto.CancelAllUnfreezeV2Contract.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setOwnerAddress(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.CancelAllUnfreezeV2Contract.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.CancelAllUnfreezeV2Contract.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.CancelAllUnfreezeV2Contract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.CancelAllUnfreezeV2Contract.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getOwnerAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(1, f);\n    }\n};\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.CancelAllUnfreezeV2Contract.prototype.getOwnerAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ''));\n};\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.CancelAllUnfreezeV2Contract.prototype.getOwnerAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getOwnerAddress()));\n};\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.CancelAllUnfreezeV2Contract.prototype.getOwnerAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getOwnerAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.CancelAllUnfreezeV2Contract} returns this\n */\nTronWebProto.CancelAllUnfreezeV2Contract.prototype.setOwnerAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\ngoog.object.extend(exports, TronWebProto);\n", "// source: core/contract/asset_issue_contract.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof window !== 'undefined' && window) ||\n  (typeof global !== 'undefined' && global) ||\n  (typeof self !== 'undefined' && self) ||\n  (function () { return this; }).call(null) ||\n  Function('return this')();\n\ngoog.exportSymbol('TronWebProto.AssetIssueContract', null, global);\ngoog.exportSymbol('TronWebProto.AssetIssueContract.FrozenSupply', null, global);\ngoog.exportSymbol('TronWebProto.ParticipateAssetIssueContract', null, global);\ngoog.exportSymbol('TronWebProto.TransferAssetContract', null, global);\ngoog.exportSymbol('TronWebProto.UnfreezeAssetContract', null, global);\ngoog.exportSymbol('TronWebProto.UpdateAssetContract', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AssetIssueContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.AssetIssueContract.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.AssetIssueContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.AssetIssueContract.displayName = 'TronWebProto.AssetIssueContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AssetIssueContract.FrozenSupply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.AssetIssueContract.FrozenSupply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.AssetIssueContract.FrozenSupply.displayName = 'TronWebProto.AssetIssueContract.FrozenSupply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.TransferAssetContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.TransferAssetContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.TransferAssetContract.displayName = 'TronWebProto.TransferAssetContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.UnfreezeAssetContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.UnfreezeAssetContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.UnfreezeAssetContract.displayName = 'TronWebProto.UnfreezeAssetContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.UpdateAssetContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.UpdateAssetContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.UpdateAssetContract.displayName = 'TronWebProto.UpdateAssetContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ParticipateAssetIssueContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ParticipateAssetIssueContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.ParticipateAssetIssueContract.displayName = 'TronWebProto.ParticipateAssetIssueContract';\n}\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.AssetIssueContract.repeatedFields_ = [5];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.AssetIssueContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.AssetIssueContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.AssetIssueContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AssetIssueContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 41, \"\"),\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    name: msg.getName_asB64(),\n    abbr: msg.getAbbr_asB64(),\n    totalSupply: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    frozenSupplyList: jspb.Message.toObjectList(msg.getFrozenSupplyList(),\n    TronWebProto.AssetIssueContract.FrozenSupply.toObject, includeInstance),\n    trxNum: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    precision: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    num: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    startTime: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    endTime: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    order: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    voteScore: jspb.Message.getFieldWithDefault(msg, 16, 0),\n    description: msg.getDescription_asB64(),\n    url: msg.getUrl_asB64(),\n    freeAssetNetLimit: jspb.Message.getFieldWithDefault(msg, 22, 0),\n    publicFreeAssetNetLimit: jspb.Message.getFieldWithDefault(msg, 23, 0),\n    publicFreeAssetNetUsage: jspb.Message.getFieldWithDefault(msg, 24, 0),\n    publicLatestFreeNetTime: jspb.Message.getFieldWithDefault(msg, 25, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AssetIssueContract}\n */\nTronWebProto.AssetIssueContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.AssetIssueContract;\n  return TronWebProto.AssetIssueContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AssetIssueContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AssetIssueContract}\n */\nTronWebProto.AssetIssueContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 41:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAbbr(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalSupply(value);\n      break;\n    case 5:\n      var value = new TronWebProto.AssetIssueContract.FrozenSupply;\n      reader.readMessage(value,TronWebProto.AssetIssueContract.FrozenSupply.deserializeBinaryFromReader);\n      msg.addFrozenSupply(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTrxNum(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPrecision(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setNum(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setStartTime(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setEndTime(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setOrder(value);\n      break;\n    case 16:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setVoteScore(value);\n      break;\n    case 20:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDescription(value);\n      break;\n    case 21:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setUrl(value);\n      break;\n    case 22:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFreeAssetNetLimit(value);\n      break;\n    case 23:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPublicFreeAssetNetLimit(value);\n      break;\n    case 24:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPublicFreeAssetNetUsage(value);\n      break;\n    case 25:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPublicLatestFreeNetTime(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AssetIssueContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.AssetIssueContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AssetIssueContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AssetIssueContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      41,\n      f\n    );\n  }\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getAbbr_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getTotalSupply();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getFrozenSupplyList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      5,\n      f,\n      TronWebProto.AssetIssueContract.FrozenSupply.serializeBinaryToWriter\n    );\n  }\n  f = message.getTrxNum();\n  if (f !== 0) {\n    writer.writeInt32(\n      6,\n      f\n    );\n  }\n  f = message.getPrecision();\n  if (f !== 0) {\n    writer.writeInt32(\n      7,\n      f\n    );\n  }\n  f = message.getNum();\n  if (f !== 0) {\n    writer.writeInt32(\n      8,\n      f\n    );\n  }\n  f = message.getStartTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getEndTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      10,\n      f\n    );\n  }\n  f = message.getOrder();\n  if (f !== 0) {\n    writer.writeInt64(\n      11,\n      f\n    );\n  }\n  f = message.getVoteScore();\n  if (f !== 0) {\n    writer.writeInt32(\n      16,\n      f\n    );\n  }\n  f = message.getDescription_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      20,\n      f\n    );\n  }\n  f = message.getUrl_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      21,\n      f\n    );\n  }\n  f = message.getFreeAssetNetLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      22,\n      f\n    );\n  }\n  f = message.getPublicFreeAssetNetLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      23,\n      f\n    );\n  }\n  f = message.getPublicFreeAssetNetUsage();\n  if (f !== 0) {\n    writer.writeInt64(\n      24,\n      f\n    );\n  }\n  f = message.getPublicLatestFreeNetTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      25,\n      f\n    );\n  }\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.AssetIssueContract.FrozenSupply.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.AssetIssueContract.FrozenSupply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.AssetIssueContract.FrozenSupply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AssetIssueContract.FrozenSupply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    frozenAmount: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    frozenDays: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AssetIssueContract.FrozenSupply}\n */\nTronWebProto.AssetIssueContract.FrozenSupply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.AssetIssueContract.FrozenSupply;\n  return TronWebProto.AssetIssueContract.FrozenSupply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AssetIssueContract.FrozenSupply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AssetIssueContract.FrozenSupply}\n */\nTronWebProto.AssetIssueContract.FrozenSupply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFrozenAmount(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFrozenDays(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AssetIssueContract.FrozenSupply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.AssetIssueContract.FrozenSupply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AssetIssueContract.FrozenSupply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AssetIssueContract.FrozenSupply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFrozenAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getFrozenDays();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 frozen_amount = 1;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.FrozenSupply.prototype.getFrozenAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract.FrozenSupply} returns this\n */\nTronWebProto.AssetIssueContract.FrozenSupply.prototype.setFrozenAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int64 frozen_days = 2;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.FrozenSupply.prototype.getFrozenDays = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract.FrozenSupply} returns this\n */\nTronWebProto.AssetIssueContract.FrozenSupply.prototype.setFrozenDays = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional string id = 41;\n * @return {string}\n */\nTronWebProto.AssetIssueContract.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 41, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 41, value);\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AssetIssueContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.AssetIssueContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.AssetIssueContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes name = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AssetIssueContract.prototype.getName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes name = 2;\n * This is a type-conversion wrapper around `getName()`\n * @return {string}\n */\nTronWebProto.AssetIssueContract.prototype.getName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getName()));\n};\n\n\n/**\n * optional bytes name = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getName()`\n * @return {!Uint8Array}\n */\nTronWebProto.AssetIssueContract.prototype.getName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getName()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setName = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional bytes abbr = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AssetIssueContract.prototype.getAbbr = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes abbr = 3;\n * This is a type-conversion wrapper around `getAbbr()`\n * @return {string}\n */\nTronWebProto.AssetIssueContract.prototype.getAbbr_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAbbr()));\n};\n\n\n/**\n * optional bytes abbr = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAbbr()`\n * @return {!Uint8Array}\n */\nTronWebProto.AssetIssueContract.prototype.getAbbr_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAbbr()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setAbbr = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 total_supply = 4;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getTotalSupply = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setTotalSupply = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * repeated FrozenSupply frozen_supply = 5;\n * @return {!Array<!TronWebProto.AssetIssueContract.FrozenSupply>}\n */\nTronWebProto.AssetIssueContract.prototype.getFrozenSupplyList = function() {\n  return /** @type{!Array<!TronWebProto.AssetIssueContract.FrozenSupply>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.AssetIssueContract.FrozenSupply, 5));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.AssetIssueContract.FrozenSupply>} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n*/\nTronWebProto.AssetIssueContract.prototype.setFrozenSupplyList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n\n\n/**\n * @param {!TronWebProto.AssetIssueContract.FrozenSupply=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.AssetIssueContract.FrozenSupply}\n */\nTronWebProto.AssetIssueContract.prototype.addFrozenSupply = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, TronWebProto.AssetIssueContract.FrozenSupply, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.clearFrozenSupplyList = function() {\n  return this.setFrozenSupplyList([]);\n};\n\n\n/**\n * optional int32 trx_num = 6;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getTrxNum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setTrxNum = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional int32 precision = 7;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getPrecision = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setPrecision = function(value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * optional int32 num = 8;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getNum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setNum = function(value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * optional int64 start_time = 9;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getStartTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setStartTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 9, value);\n};\n\n\n/**\n * optional int64 end_time = 10;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getEndTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setEndTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 10, value);\n};\n\n\n/**\n * optional int64 order = 11;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getOrder = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setOrder = function(value) {\n  return jspb.Message.setProto3IntField(this, 11, value);\n};\n\n\n/**\n * optional int32 vote_score = 16;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getVoteScore = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setVoteScore = function(value) {\n  return jspb.Message.setProto3IntField(this, 16, value);\n};\n\n\n/**\n * optional bytes description = 20;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AssetIssueContract.prototype.getDescription = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 20, \"\"));\n};\n\n\n/**\n * optional bytes description = 20;\n * This is a type-conversion wrapper around `getDescription()`\n * @return {string}\n */\nTronWebProto.AssetIssueContract.prototype.getDescription_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDescription()));\n};\n\n\n/**\n * optional bytes description = 20;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDescription()`\n * @return {!Uint8Array}\n */\nTronWebProto.AssetIssueContract.prototype.getDescription_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDescription()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setDescription = function(value) {\n  return jspb.Message.setProto3BytesField(this, 20, value);\n};\n\n\n/**\n * optional bytes url = 21;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AssetIssueContract.prototype.getUrl = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 21, \"\"));\n};\n\n\n/**\n * optional bytes url = 21;\n * This is a type-conversion wrapper around `getUrl()`\n * @return {string}\n */\nTronWebProto.AssetIssueContract.prototype.getUrl_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getUrl()));\n};\n\n\n/**\n * optional bytes url = 21;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getUrl()`\n * @return {!Uint8Array}\n */\nTronWebProto.AssetIssueContract.prototype.getUrl_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getUrl()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setUrl = function(value) {\n  return jspb.Message.setProto3BytesField(this, 21, value);\n};\n\n\n/**\n * optional int64 free_asset_net_limit = 22;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getFreeAssetNetLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setFreeAssetNetLimit = function(value) {\n  return jspb.Message.setProto3IntField(this, 22, value);\n};\n\n\n/**\n * optional int64 public_free_asset_net_limit = 23;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getPublicFreeAssetNetLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setPublicFreeAssetNetLimit = function(value) {\n  return jspb.Message.setProto3IntField(this, 23, value);\n};\n\n\n/**\n * optional int64 public_free_asset_net_usage = 24;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getPublicFreeAssetNetUsage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setPublicFreeAssetNetUsage = function(value) {\n  return jspb.Message.setProto3IntField(this, 24, value);\n};\n\n\n/**\n * optional int64 public_latest_free_net_time = 25;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getPublicLatestFreeNetTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setPublicLatestFreeNetTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 25, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.TransferAssetContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.TransferAssetContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.TransferAssetContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.TransferAssetContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    assetName: msg.getAssetName_asB64(),\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    toAddress: msg.getToAddress_asB64(),\n    amount: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.TransferAssetContract}\n */\nTronWebProto.TransferAssetContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.TransferAssetContract;\n  return TronWebProto.TransferAssetContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.TransferAssetContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.TransferAssetContract}\n */\nTronWebProto.TransferAssetContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAssetName(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setToAddress(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.TransferAssetContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.TransferAssetContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.TransferAssetContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.TransferAssetContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAssetName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getToAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes asset_name = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TransferAssetContract.prototype.getAssetName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes asset_name = 1;\n * This is a type-conversion wrapper around `getAssetName()`\n * @return {string}\n */\nTronWebProto.TransferAssetContract.prototype.getAssetName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAssetName()));\n};\n\n\n/**\n * optional bytes asset_name = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAssetName()`\n * @return {!Uint8Array}\n */\nTronWebProto.TransferAssetContract.prototype.getAssetName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAssetName()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TransferAssetContract} returns this\n */\nTronWebProto.TransferAssetContract.prototype.setAssetName = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes owner_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TransferAssetContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 2;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.TransferAssetContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.TransferAssetContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TransferAssetContract} returns this\n */\nTronWebProto.TransferAssetContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional bytes to_address = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TransferAssetContract.prototype.getToAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes to_address = 3;\n * This is a type-conversion wrapper around `getToAddress()`\n * @return {string}\n */\nTronWebProto.TransferAssetContract.prototype.getToAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getToAddress()));\n};\n\n\n/**\n * optional bytes to_address = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getToAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.TransferAssetContract.prototype.getToAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getToAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TransferAssetContract} returns this\n */\nTronWebProto.TransferAssetContract.prototype.setToAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 amount = 4;\n * @return {number}\n */\nTronWebProto.TransferAssetContract.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.TransferAssetContract} returns this\n */\nTronWebProto.TransferAssetContract.prototype.setAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.UnfreezeAssetContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.UnfreezeAssetContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.UnfreezeAssetContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UnfreezeAssetContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.UnfreezeAssetContract}\n */\nTronWebProto.UnfreezeAssetContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.UnfreezeAssetContract;\n  return TronWebProto.UnfreezeAssetContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.UnfreezeAssetContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.UnfreezeAssetContract}\n */\nTronWebProto.UnfreezeAssetContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.UnfreezeAssetContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.UnfreezeAssetContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.UnfreezeAssetContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UnfreezeAssetContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UnfreezeAssetContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.UnfreezeAssetContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UnfreezeAssetContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UnfreezeAssetContract} returns this\n */\nTronWebProto.UnfreezeAssetContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.UpdateAssetContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.UpdateAssetContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.UpdateAssetContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UpdateAssetContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    description: msg.getDescription_asB64(),\n    url: msg.getUrl_asB64(),\n    newLimit: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    newPublicLimit: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.UpdateAssetContract}\n */\nTronWebProto.UpdateAssetContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.UpdateAssetContract;\n  return TronWebProto.UpdateAssetContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.UpdateAssetContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.UpdateAssetContract}\n */\nTronWebProto.UpdateAssetContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDescription(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setUrl(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNewLimit(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNewPublicLimit(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateAssetContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.UpdateAssetContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.UpdateAssetContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UpdateAssetContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getDescription_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getUrl_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getNewLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getNewPublicLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UpdateAssetContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.UpdateAssetContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateAssetContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UpdateAssetContract} returns this\n */\nTronWebProto.UpdateAssetContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes description = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UpdateAssetContract.prototype.getDescription = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes description = 2;\n * This is a type-conversion wrapper around `getDescription()`\n * @return {string}\n */\nTronWebProto.UpdateAssetContract.prototype.getDescription_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDescription()));\n};\n\n\n/**\n * optional bytes description = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDescription()`\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateAssetContract.prototype.getDescription_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDescription()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UpdateAssetContract} returns this\n */\nTronWebProto.UpdateAssetContract.prototype.setDescription = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional bytes url = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UpdateAssetContract.prototype.getUrl = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes url = 3;\n * This is a type-conversion wrapper around `getUrl()`\n * @return {string}\n */\nTronWebProto.UpdateAssetContract.prototype.getUrl_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getUrl()));\n};\n\n\n/**\n * optional bytes url = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getUrl()`\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateAssetContract.prototype.getUrl_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getUrl()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UpdateAssetContract} returns this\n */\nTronWebProto.UpdateAssetContract.prototype.setUrl = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 new_limit = 4;\n * @return {number}\n */\nTronWebProto.UpdateAssetContract.prototype.getNewLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.UpdateAssetContract} returns this\n */\nTronWebProto.UpdateAssetContract.prototype.setNewLimit = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional int64 new_public_limit = 5;\n * @return {number}\n */\nTronWebProto.UpdateAssetContract.prototype.getNewPublicLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.UpdateAssetContract} returns this\n */\nTronWebProto.UpdateAssetContract.prototype.setNewPublicLimit = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.ParticipateAssetIssueContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.ParticipateAssetIssueContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ParticipateAssetIssueContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    toAddress: msg.getToAddress_asB64(),\n    assetName: msg.getAssetName_asB64(),\n    amount: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ParticipateAssetIssueContract}\n */\nTronWebProto.ParticipateAssetIssueContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.ParticipateAssetIssueContract;\n  return TronWebProto.ParticipateAssetIssueContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ParticipateAssetIssueContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ParticipateAssetIssueContract}\n */\nTronWebProto.ParticipateAssetIssueContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setToAddress(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAssetName(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.ParticipateAssetIssueContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ParticipateAssetIssueContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ParticipateAssetIssueContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getToAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getAssetName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ParticipateAssetIssueContract} returns this\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes to_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getToAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes to_address = 2;\n * This is a type-conversion wrapper around `getToAddress()`\n * @return {string}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getToAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getToAddress()));\n};\n\n\n/**\n * optional bytes to_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getToAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getToAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getToAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ParticipateAssetIssueContract} returns this\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.setToAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional bytes asset_name = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getAssetName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes asset_name = 3;\n * This is a type-conversion wrapper around `getAssetName()`\n * @return {string}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getAssetName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAssetName()));\n};\n\n\n/**\n * optional bytes asset_name = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAssetName()`\n * @return {!Uint8Array}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getAssetName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAssetName()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ParticipateAssetIssueContract} returns this\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.setAssetName = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 amount = 4;\n * @return {number}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ParticipateAssetIssueContract} returns this\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.setAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\ngoog.object.extend(exports, TronWebProto);\n", "// source: core/contract/smart_contract.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global =\n    (typeof globalThis !== 'undefined' && globalThis) ||\n    (typeof window !== 'undefined' && window) ||\n    (typeof global !== 'undefined' && global) ||\n    (typeof self !== 'undefined' && self) ||\n    function () {\n        return this;\n    }.call(null) ||\n    Function('return this')();\n\nvar core_Tron_pb = require('../../core/Tron_pb.cjs');\ngoog.object.extend(proto, core_Tron_pb);\ngoog.exportSymbol('TronWebProto.ClearABIContract', null, global);\ngoog.exportSymbol('TronWebProto.ContractState', null, global);\ngoog.exportSymbol('TronWebProto.CreateSmartContract', null, global);\ngoog.exportSymbol('TronWebProto.SmartContract', null, global);\ngoog.exportSymbol('TronWebProto.SmartContract.ABI', null, global);\ngoog.exportSymbol('TronWebProto.SmartContract.ABI.Entry', null, global);\ngoog.exportSymbol('TronWebProto.SmartContract.ABI.Entry.EntryType', null, global);\ngoog.exportSymbol('TronWebProto.SmartContract.ABI.Entry.Param', null, global);\ngoog.exportSymbol('TronWebProto.SmartContract.ABI.Entry.StateMutabilityType', null, global);\ngoog.exportSymbol('TronWebProto.SmartContractDataWrapper', null, global);\ngoog.exportSymbol('TronWebProto.TriggerSmartContract', null, global);\ngoog.exportSymbol('TronWebProto.UpdateEnergyLimitContract', null, global);\ngoog.exportSymbol('TronWebProto.UpdateSettingContract', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.SmartContract = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.SmartContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.SmartContract.displayName = 'TronWebProto.SmartContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.SmartContract.ABI = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.SmartContract.ABI.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.SmartContract.ABI, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.SmartContract.ABI.displayName = 'TronWebProto.SmartContract.ABI';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.SmartContract.ABI.Entry = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.SmartContract.ABI.Entry.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.SmartContract.ABI.Entry, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.SmartContract.ABI.Entry.displayName = 'TronWebProto.SmartContract.ABI.Entry';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.SmartContract.ABI.Entry.Param = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.SmartContract.ABI.Entry.Param, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.SmartContract.ABI.Entry.Param.displayName = 'TronWebProto.SmartContract.ABI.Entry.Param';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ContractState = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ContractState, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.ContractState.displayName = 'TronWebProto.ContractState';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.CreateSmartContract = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.CreateSmartContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.CreateSmartContract.displayName = 'TronWebProto.CreateSmartContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.TriggerSmartContract = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.TriggerSmartContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.TriggerSmartContract.displayName = 'TronWebProto.TriggerSmartContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ClearABIContract = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ClearABIContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.ClearABIContract.displayName = 'TronWebProto.ClearABIContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.UpdateSettingContract = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.UpdateSettingContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.UpdateSettingContract.displayName = 'TronWebProto.UpdateSettingContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.UpdateEnergyLimitContract = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.UpdateEnergyLimitContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.UpdateEnergyLimitContract.displayName = 'TronWebProto.UpdateEnergyLimitContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.SmartContractDataWrapper = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.SmartContractDataWrapper, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.SmartContractDataWrapper.displayName = 'TronWebProto.SmartContractDataWrapper';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.SmartContract.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.SmartContract.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.SmartContract} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.SmartContract.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                originAddress: msg.getOriginAddress_asB64(),\n                contractAddress: msg.getContractAddress_asB64(),\n                abi: (f = msg.getAbi()) && TronWebProto.SmartContract.ABI.toObject(includeInstance, f),\n                bytecode: msg.getBytecode_asB64(),\n                callValue: jspb.Message.getFieldWithDefault(msg, 5, 0),\n                consumeUserResourcePercent: jspb.Message.getFieldWithDefault(msg, 6, 0),\n                name: jspb.Message.getFieldWithDefault(msg, 7, ''),\n                originEnergyLimit: jspb.Message.getFieldWithDefault(msg, 8, 0),\n                codeHash: msg.getCodeHash_asB64(),\n                trxHash: msg.getTrxHash_asB64(),\n                version: jspb.Message.getFieldWithDefault(msg, 11, 0),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.SmartContract}\n */\nTronWebProto.SmartContract.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.SmartContract();\n    return TronWebProto.SmartContract.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.SmartContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.SmartContract}\n */\nTronWebProto.SmartContract.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setOriginAddress(value);\n                break;\n            case 2:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setContractAddress(value);\n                break;\n            case 3:\n                var value = new TronWebProto.SmartContract.ABI();\n                reader.readMessage(value, TronWebProto.SmartContract.ABI.deserializeBinaryFromReader);\n                msg.setAbi(value);\n                break;\n            case 4:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setBytecode(value);\n                break;\n            case 5:\n                var value = /** @type {number} */ (reader.readInt64());\n                msg.setCallValue(value);\n                break;\n            case 6:\n                var value = /** @type {number} */ (reader.readInt64());\n                msg.setConsumeUserResourcePercent(value);\n                break;\n            case 7:\n                var value = /** @type {string} */ (reader.readString());\n                msg.setName(value);\n                break;\n            case 8:\n                var value = /** @type {number} */ (reader.readInt64());\n                msg.setOriginEnergyLimit(value);\n                break;\n            case 9:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setCodeHash(value);\n                break;\n            case 10:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setTrxHash(value);\n                break;\n            case 11:\n                var value = /** @type {number} */ (reader.readInt32());\n                msg.setVersion(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContract.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.SmartContract.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.SmartContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SmartContract.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getOriginAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(1, f);\n    }\n    f = message.getContractAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(2, f);\n    }\n    f = message.getAbi();\n    if (f != null) {\n        writer.writeMessage(3, f, TronWebProto.SmartContract.ABI.serializeBinaryToWriter);\n    }\n    f = message.getBytecode_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(4, f);\n    }\n    f = message.getCallValue();\n    if (f !== 0) {\n        writer.writeInt64(5, f);\n    }\n    f = message.getConsumeUserResourcePercent();\n    if (f !== 0) {\n        writer.writeInt64(6, f);\n    }\n    f = message.getName();\n    if (f.length > 0) {\n        writer.writeString(7, f);\n    }\n    f = message.getOriginEnergyLimit();\n    if (f !== 0) {\n        writer.writeInt64(8, f);\n    }\n    f = message.getCodeHash_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(9, f);\n    }\n    f = message.getTrxHash_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(10, f);\n    }\n    f = message.getVersion();\n    if (f !== 0) {\n        writer.writeInt32(11, f);\n    }\n};\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.SmartContract.ABI.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.SmartContract.ABI.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.SmartContract.ABI.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.SmartContract.ABI} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.SmartContract.ABI.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                entrysList: jspb.Message.toObjectList(\n                    msg.getEntrysList(),\n                    TronWebProto.SmartContract.ABI.Entry.toObject,\n                    includeInstance\n                ),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.SmartContract.ABI}\n */\nTronWebProto.SmartContract.ABI.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.SmartContract.ABI();\n    return TronWebProto.SmartContract.ABI.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.SmartContract.ABI} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.SmartContract.ABI}\n */\nTronWebProto.SmartContract.ABI.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = new TronWebProto.SmartContract.ABI.Entry();\n                reader.readMessage(value, TronWebProto.SmartContract.ABI.Entry.deserializeBinaryFromReader);\n                msg.addEntrys(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContract.ABI.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.SmartContract.ABI.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.SmartContract.ABI} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SmartContract.ABI.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getEntrysList();\n    if (f.length > 0) {\n        writer.writeRepeatedMessage(1, f, TronWebProto.SmartContract.ABI.Entry.serializeBinaryToWriter);\n    }\n};\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.SmartContract.ABI.Entry.repeatedFields_ = [4, 5];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.SmartContract.ABI.Entry.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.SmartContract.ABI.Entry.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.SmartContract.ABI.Entry} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.SmartContract.ABI.Entry.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                anonymous: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),\n                constant: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),\n                name: jspb.Message.getFieldWithDefault(msg, 3, ''),\n                inputsList: jspb.Message.toObjectList(\n                    msg.getInputsList(),\n                    TronWebProto.SmartContract.ABI.Entry.Param.toObject,\n                    includeInstance\n                ),\n                outputsList: jspb.Message.toObjectList(\n                    msg.getOutputsList(),\n                    TronWebProto.SmartContract.ABI.Entry.Param.toObject,\n                    includeInstance\n                ),\n                type: jspb.Message.getFieldWithDefault(msg, 6, 0),\n                payable: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),\n                statemutability: jspb.Message.getFieldWithDefault(msg, 8, 0),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.SmartContract.ABI.Entry}\n */\nTronWebProto.SmartContract.ABI.Entry.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.SmartContract.ABI.Entry();\n    return TronWebProto.SmartContract.ABI.Entry.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.SmartContract.ABI.Entry} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.SmartContract.ABI.Entry}\n */\nTronWebProto.SmartContract.ABI.Entry.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = /** @type {boolean} */ (reader.readBool());\n                msg.setAnonymous(value);\n                break;\n            case 2:\n                var value = /** @type {boolean} */ (reader.readBool());\n                msg.setConstant(value);\n                break;\n            case 3:\n                var value = /** @type {string} */ (reader.readString());\n                msg.setName(value);\n                break;\n            case 4:\n                var value = new TronWebProto.SmartContract.ABI.Entry.Param();\n                reader.readMessage(value, TronWebProto.SmartContract.ABI.Entry.Param.deserializeBinaryFromReader);\n                msg.addInputs(value);\n                break;\n            case 5:\n                var value = new TronWebProto.SmartContract.ABI.Entry.Param();\n                reader.readMessage(value, TronWebProto.SmartContract.ABI.Entry.Param.deserializeBinaryFromReader);\n                msg.addOutputs(value);\n                break;\n            case 6:\n                var value = /** @type {!TronWebProto.SmartContract.ABI.Entry.EntryType} */ (reader.readEnum());\n                msg.setType(value);\n                break;\n            case 7:\n                var value = /** @type {boolean} */ (reader.readBool());\n                msg.setPayable(value);\n                break;\n            case 8:\n                var value = /** @type {!TronWebProto.SmartContract.ABI.Entry.StateMutabilityType} */ (reader.readEnum());\n                msg.setStatemutability(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.SmartContract.ABI.Entry.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.SmartContract.ABI.Entry} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SmartContract.ABI.Entry.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getAnonymous();\n    if (f) {\n        writer.writeBool(1, f);\n    }\n    f = message.getConstant();\n    if (f) {\n        writer.writeBool(2, f);\n    }\n    f = message.getName();\n    if (f.length > 0) {\n        writer.writeString(3, f);\n    }\n    f = message.getInputsList();\n    if (f.length > 0) {\n        writer.writeRepeatedMessage(4, f, TronWebProto.SmartContract.ABI.Entry.Param.serializeBinaryToWriter);\n    }\n    f = message.getOutputsList();\n    if (f.length > 0) {\n        writer.writeRepeatedMessage(5, f, TronWebProto.SmartContract.ABI.Entry.Param.serializeBinaryToWriter);\n    }\n    f = message.getType();\n    if (f !== 0.0) {\n        writer.writeEnum(6, f);\n    }\n    f = message.getPayable();\n    if (f) {\n        writer.writeBool(7, f);\n    }\n    f = message.getStatemutability();\n    if (f !== 0.0) {\n        writer.writeEnum(8, f);\n    }\n};\n\n/**\n * @enum {number}\n */\nTronWebProto.SmartContract.ABI.Entry.EntryType = {\n    UNKNOWNENTRYTYPE: 0,\n    CONSTRUCTOR: 1,\n    FUNCTION: 2,\n    EVENT: 3,\n    FALLBACK: 4,\n    RECEIVE: 5,\n    ERROR: 6,\n};\n\n/**\n * @enum {number}\n */\nTronWebProto.SmartContract.ABI.Entry.StateMutabilityType = {\n    UNKNOWNMUTABILITYTYPE: 0,\n    PURE: 1,\n    VIEW: 2,\n    NONPAYABLE: 3,\n    PAYABLE: 4,\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.SmartContract.ABI.Entry.Param.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.SmartContract.ABI.Entry.Param.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.SmartContract.ABI.Entry.Param} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.SmartContract.ABI.Entry.Param.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                indexed: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),\n                name: jspb.Message.getFieldWithDefault(msg, 2, ''),\n                type: jspb.Message.getFieldWithDefault(msg, 3, ''),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.SmartContract.ABI.Entry.Param}\n */\nTronWebProto.SmartContract.ABI.Entry.Param.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.SmartContract.ABI.Entry.Param();\n    return TronWebProto.SmartContract.ABI.Entry.Param.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.SmartContract.ABI.Entry.Param} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.SmartContract.ABI.Entry.Param}\n */\nTronWebProto.SmartContract.ABI.Entry.Param.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = /** @type {boolean} */ (reader.readBool());\n                msg.setIndexed(value);\n                break;\n            case 2:\n                var value = /** @type {string} */ (reader.readString());\n                msg.setName(value);\n                break;\n            case 3:\n                var value = /** @type {string} */ (reader.readString());\n                msg.setType(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContract.ABI.Entry.Param.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.SmartContract.ABI.Entry.Param.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.SmartContract.ABI.Entry.Param} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SmartContract.ABI.Entry.Param.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getIndexed();\n    if (f) {\n        writer.writeBool(1, f);\n    }\n    f = message.getName();\n    if (f.length > 0) {\n        writer.writeString(2, f);\n    }\n    f = message.getType();\n    if (f.length > 0) {\n        writer.writeString(3, f);\n    }\n};\n\n/**\n * optional bool indexed = 1;\n * @return {boolean}\n */\nTronWebProto.SmartContract.ABI.Entry.Param.prototype.getIndexed = function () {\n    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));\n};\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.SmartContract.ABI.Entry.Param} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.Param.prototype.setIndexed = function (value) {\n    return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n/**\n * optional string name = 2;\n * @return {string}\n */\nTronWebProto.SmartContract.ABI.Entry.Param.prototype.getName = function () {\n    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));\n};\n\n/**\n * @param {string} value\n * @return {!TronWebProto.SmartContract.ABI.Entry.Param} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.Param.prototype.setName = function (value) {\n    return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n/**\n * optional string type = 3;\n * @return {string}\n */\nTronWebProto.SmartContract.ABI.Entry.Param.prototype.getType = function () {\n    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));\n};\n\n/**\n * @param {string} value\n * @return {!TronWebProto.SmartContract.ABI.Entry.Param} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.Param.prototype.setType = function (value) {\n    return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n/**\n * optional bool anonymous = 1;\n * @return {boolean}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.getAnonymous = function () {\n    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));\n};\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.setAnonymous = function (value) {\n    return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n/**\n * optional bool constant = 2;\n * @return {boolean}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.getConstant = function () {\n    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.setConstant = function (value) {\n    return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n/**\n * optional string name = 3;\n * @return {string}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.getName = function () {\n    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));\n};\n\n/**\n * @param {string} value\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.setName = function (value) {\n    return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n/**\n * repeated Param inputs = 4;\n * @return {!Array<!TronWebProto.SmartContract.ABI.Entry.Param>}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.getInputsList = function () {\n    return /** @type{!Array<!TronWebProto.SmartContract.ABI.Entry.Param>} */ (\n        jspb.Message.getRepeatedWrapperField(this, TronWebProto.SmartContract.ABI.Entry.Param, 4)\n    );\n};\n\n/**\n * @param {!Array<!TronWebProto.SmartContract.ABI.Entry.Param>} value\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.setInputsList = function (value) {\n    return jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n/**\n * @param {!TronWebProto.SmartContract.ABI.Entry.Param=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.SmartContract.ABI.Entry.Param}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.addInputs = function (opt_value, opt_index) {\n    return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, TronWebProto.SmartContract.ABI.Entry.Param, opt_index);\n};\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.clearInputsList = function () {\n    return this.setInputsList([]);\n};\n\n/**\n * repeated Param outputs = 5;\n * @return {!Array<!TronWebProto.SmartContract.ABI.Entry.Param>}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.getOutputsList = function () {\n    return /** @type{!Array<!TronWebProto.SmartContract.ABI.Entry.Param>} */ (\n        jspb.Message.getRepeatedWrapperField(this, TronWebProto.SmartContract.ABI.Entry.Param, 5)\n    );\n};\n\n/**\n * @param {!Array<!TronWebProto.SmartContract.ABI.Entry.Param>} value\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.setOutputsList = function (value) {\n    return jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n\n/**\n * @param {!TronWebProto.SmartContract.ABI.Entry.Param=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.SmartContract.ABI.Entry.Param}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.addOutputs = function (opt_value, opt_index) {\n    return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, TronWebProto.SmartContract.ABI.Entry.Param, opt_index);\n};\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.clearOutputsList = function () {\n    return this.setOutputsList([]);\n};\n\n/**\n * optional EntryType type = 6;\n * @return {!TronWebProto.SmartContract.ABI.Entry.EntryType}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.getType = function () {\n    return /** @type {!TronWebProto.SmartContract.ABI.Entry.EntryType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n/**\n * @param {!TronWebProto.SmartContract.ABI.Entry.EntryType} value\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.setType = function (value) {\n    return jspb.Message.setProto3EnumField(this, 6, value);\n};\n\n/**\n * optional bool payable = 7;\n * @return {boolean}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.getPayable = function () {\n    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));\n};\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.setPayable = function (value) {\n    return jspb.Message.setProto3BooleanField(this, 7, value);\n};\n\n/**\n * optional StateMutabilityType stateMutability = 8;\n * @return {!TronWebProto.SmartContract.ABI.Entry.StateMutabilityType}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.getStatemutability = function () {\n    return /** @type {!TronWebProto.SmartContract.ABI.Entry.StateMutabilityType} */ (\n        jspb.Message.getFieldWithDefault(this, 8, 0)\n    );\n};\n\n/**\n * @param {!TronWebProto.SmartContract.ABI.Entry.StateMutabilityType} value\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.setStatemutability = function (value) {\n    return jspb.Message.setProto3EnumField(this, 8, value);\n};\n\n/**\n * repeated Entry entrys = 1;\n * @return {!Array<!TronWebProto.SmartContract.ABI.Entry>}\n */\nTronWebProto.SmartContract.ABI.prototype.getEntrysList = function () {\n    return /** @type{!Array<!TronWebProto.SmartContract.ABI.Entry>} */ (\n        jspb.Message.getRepeatedWrapperField(this, TronWebProto.SmartContract.ABI.Entry, 1)\n    );\n};\n\n/**\n * @param {!Array<!TronWebProto.SmartContract.ABI.Entry>} value\n * @return {!TronWebProto.SmartContract.ABI} returns this\n */\nTronWebProto.SmartContract.ABI.prototype.setEntrysList = function (value) {\n    return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n/**\n * @param {!TronWebProto.SmartContract.ABI.Entry=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.SmartContract.ABI.Entry}\n */\nTronWebProto.SmartContract.ABI.prototype.addEntrys = function (opt_value, opt_index) {\n    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, TronWebProto.SmartContract.ABI.Entry, opt_index);\n};\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.SmartContract.ABI} returns this\n */\nTronWebProto.SmartContract.ABI.prototype.clearEntrysList = function () {\n    return this.setEntrysList([]);\n};\n\n/**\n * optional bytes origin_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.SmartContract.prototype.getOriginAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ''));\n};\n\n/**\n * optional bytes origin_address = 1;\n * This is a type-conversion wrapper around `getOriginAddress()`\n * @return {string}\n */\nTronWebProto.SmartContract.prototype.getOriginAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getOriginAddress()));\n};\n\n/**\n * optional bytes origin_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOriginAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContract.prototype.getOriginAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getOriginAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setOriginAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n/**\n * optional bytes contract_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.SmartContract.prototype.getContractAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ''));\n};\n\n/**\n * optional bytes contract_address = 2;\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {string}\n */\nTronWebProto.SmartContract.prototype.getContractAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getContractAddress()));\n};\n\n/**\n * optional bytes contract_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContract.prototype.getContractAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getContractAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setContractAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n/**\n * optional ABI abi = 3;\n * @return {?TronWebProto.SmartContract.ABI}\n */\nTronWebProto.SmartContract.prototype.getAbi = function () {\n    return /** @type{?TronWebProto.SmartContract.ABI} */ (jspb.Message.getWrapperField(this, TronWebProto.SmartContract.ABI, 3));\n};\n\n/**\n * @param {?TronWebProto.SmartContract.ABI|undefined} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setAbi = function (value) {\n    return jspb.Message.setWrapperField(this, 3, value);\n};\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.clearAbi = function () {\n    return this.setAbi(undefined);\n};\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.SmartContract.prototype.hasAbi = function () {\n    return jspb.Message.getField(this, 3) != null;\n};\n\n/**\n * optional bytes bytecode = 4;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.SmartContract.prototype.getBytecode = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ''));\n};\n\n/**\n * optional bytes bytecode = 4;\n * This is a type-conversion wrapper around `getBytecode()`\n * @return {string}\n */\nTronWebProto.SmartContract.prototype.getBytecode_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getBytecode()));\n};\n\n/**\n * optional bytes bytecode = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBytecode()`\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContract.prototype.getBytecode_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getBytecode()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setBytecode = function (value) {\n    return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n/**\n * optional int64 call_value = 5;\n * @return {number}\n */\nTronWebProto.SmartContract.prototype.getCallValue = function () {\n    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n/**\n * @param {number} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setCallValue = function (value) {\n    return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n/**\n * optional int64 consume_user_resource_percent = 6;\n * @return {number}\n */\nTronWebProto.SmartContract.prototype.getConsumeUserResourcePercent = function () {\n    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n/**\n * @param {number} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setConsumeUserResourcePercent = function (value) {\n    return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n/**\n * optional string name = 7;\n * @return {string}\n */\nTronWebProto.SmartContract.prototype.getName = function () {\n    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));\n};\n\n/**\n * @param {string} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setName = function (value) {\n    return jspb.Message.setProto3StringField(this, 7, value);\n};\n\n/**\n * optional int64 origin_energy_limit = 8;\n * @return {number}\n */\nTronWebProto.SmartContract.prototype.getOriginEnergyLimit = function () {\n    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n/**\n * @param {number} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setOriginEnergyLimit = function (value) {\n    return jspb.Message.setProto3IntField(this, 8, value);\n};\n\n/**\n * optional bytes code_hash = 9;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.SmartContract.prototype.getCodeHash = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ''));\n};\n\n/**\n * optional bytes code_hash = 9;\n * This is a type-conversion wrapper around `getCodeHash()`\n * @return {string}\n */\nTronWebProto.SmartContract.prototype.getCodeHash_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getCodeHash()));\n};\n\n/**\n * optional bytes code_hash = 9;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCodeHash()`\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContract.prototype.getCodeHash_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getCodeHash()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setCodeHash = function (value) {\n    return jspb.Message.setProto3BytesField(this, 9, value);\n};\n\n/**\n * optional bytes trx_hash = 10;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.SmartContract.prototype.getTrxHash = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 10, ''));\n};\n\n/**\n * optional bytes trx_hash = 10;\n * This is a type-conversion wrapper around `getTrxHash()`\n * @return {string}\n */\nTronWebProto.SmartContract.prototype.getTrxHash_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getTrxHash()));\n};\n\n/**\n * optional bytes trx_hash = 10;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTrxHash()`\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContract.prototype.getTrxHash_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getTrxHash()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setTrxHash = function (value) {\n    return jspb.Message.setProto3BytesField(this, 10, value);\n};\n\n/**\n * optional int32 version = 11;\n * @return {number}\n */\nTronWebProto.SmartContract.prototype.getVersion = function () {\n    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n/**\n * @param {number} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setVersion = function (value) {\n    return jspb.Message.setProto3IntField(this, 11, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.ContractState.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.ContractState.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.ContractState} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.ContractState.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                energyUsage: jspb.Message.getFieldWithDefault(msg, 1, 0),\n                energyFactor: jspb.Message.getFieldWithDefault(msg, 2, 0),\n                updateCycle: jspb.Message.getFieldWithDefault(msg, 3, 0),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ContractState}\n */\nTronWebProto.ContractState.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.ContractState();\n    return TronWebProto.ContractState.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ContractState} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ContractState}\n */\nTronWebProto.ContractState.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = /** @type {number} */ (reader.readInt64());\n                msg.setEnergyUsage(value);\n                break;\n            case 2:\n                var value = /** @type {number} */ (reader.readInt64());\n                msg.setEnergyFactor(value);\n                break;\n            case 3:\n                var value = /** @type {number} */ (reader.readInt64());\n                msg.setUpdateCycle(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ContractState.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.ContractState.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ContractState} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ContractState.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getEnergyUsage();\n    if (f !== 0) {\n        writer.writeInt64(1, f);\n    }\n    f = message.getEnergyFactor();\n    if (f !== 0) {\n        writer.writeInt64(2, f);\n    }\n    f = message.getUpdateCycle();\n    if (f !== 0) {\n        writer.writeInt64(3, f);\n    }\n};\n\n/**\n * optional int64 energy_usage = 1;\n * @return {number}\n */\nTronWebProto.ContractState.prototype.getEnergyUsage = function () {\n    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ContractState} returns this\n */\nTronWebProto.ContractState.prototype.setEnergyUsage = function (value) {\n    return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n/**\n * optional int64 energy_factor = 2;\n * @return {number}\n */\nTronWebProto.ContractState.prototype.getEnergyFactor = function () {\n    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ContractState} returns this\n */\nTronWebProto.ContractState.prototype.setEnergyFactor = function (value) {\n    return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n/**\n * optional int64 update_cycle = 3;\n * @return {number}\n */\nTronWebProto.ContractState.prototype.getUpdateCycle = function () {\n    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ContractState} returns this\n */\nTronWebProto.ContractState.prototype.setUpdateCycle = function (value) {\n    return jspb.Message.setProto3IntField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.CreateSmartContract.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.CreateSmartContract.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.CreateSmartContract} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.CreateSmartContract.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                ownerAddress: msg.getOwnerAddress_asB64(),\n                newContract: (f = msg.getNewContract()) && TronWebProto.SmartContract.toObject(includeInstance, f),\n                callTokenValue: jspb.Message.getFieldWithDefault(msg, 3, 0),\n                tokenId: jspb.Message.getFieldWithDefault(msg, 4, 0),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.CreateSmartContract}\n */\nTronWebProto.CreateSmartContract.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.CreateSmartContract();\n    return TronWebProto.CreateSmartContract.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.CreateSmartContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.CreateSmartContract}\n */\nTronWebProto.CreateSmartContract.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setOwnerAddress(value);\n                break;\n            case 2:\n                var value = new TronWebProto.SmartContract();\n                reader.readMessage(value, TronWebProto.SmartContract.deserializeBinaryFromReader);\n                msg.setNewContract(value);\n                break;\n            case 3:\n                var value = /** @type {number} */ (reader.readInt64());\n                msg.setCallTokenValue(value);\n                break;\n            case 4:\n                var value = /** @type {number} */ (reader.readInt64());\n                msg.setTokenId(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.CreateSmartContract.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.CreateSmartContract.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.CreateSmartContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.CreateSmartContract.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getOwnerAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(1, f);\n    }\n    f = message.getNewContract();\n    if (f != null) {\n        writer.writeMessage(2, f, TronWebProto.SmartContract.serializeBinaryToWriter);\n    }\n    f = message.getCallTokenValue();\n    if (f !== 0) {\n        writer.writeInt64(3, f);\n    }\n    f = message.getTokenId();\n    if (f !== 0) {\n        writer.writeInt64(4, f);\n    }\n};\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.CreateSmartContract.prototype.getOwnerAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ''));\n};\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.CreateSmartContract.prototype.getOwnerAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getOwnerAddress()));\n};\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.CreateSmartContract.prototype.getOwnerAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getOwnerAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.CreateSmartContract} returns this\n */\nTronWebProto.CreateSmartContract.prototype.setOwnerAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n/**\n * optional SmartContract new_contract = 2;\n * @return {?TronWebProto.SmartContract}\n */\nTronWebProto.CreateSmartContract.prototype.getNewContract = function () {\n    return /** @type{?TronWebProto.SmartContract} */ (jspb.Message.getWrapperField(this, TronWebProto.SmartContract, 2));\n};\n\n/**\n * @param {?TronWebProto.SmartContract|undefined} value\n * @return {!TronWebProto.CreateSmartContract} returns this\n */\nTronWebProto.CreateSmartContract.prototype.setNewContract = function (value) {\n    return jspb.Message.setWrapperField(this, 2, value);\n};\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.CreateSmartContract} returns this\n */\nTronWebProto.CreateSmartContract.prototype.clearNewContract = function () {\n    return this.setNewContract(undefined);\n};\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.CreateSmartContract.prototype.hasNewContract = function () {\n    return jspb.Message.getField(this, 2) != null;\n};\n\n/**\n * optional int64 call_token_value = 3;\n * @return {number}\n */\nTronWebProto.CreateSmartContract.prototype.getCallTokenValue = function () {\n    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n/**\n * @param {number} value\n * @return {!TronWebProto.CreateSmartContract} returns this\n */\nTronWebProto.CreateSmartContract.prototype.setCallTokenValue = function (value) {\n    return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n/**\n * optional int64 token_id = 4;\n * @return {number}\n */\nTronWebProto.CreateSmartContract.prototype.getTokenId = function () {\n    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n/**\n * @param {number} value\n * @return {!TronWebProto.CreateSmartContract} returns this\n */\nTronWebProto.CreateSmartContract.prototype.setTokenId = function (value) {\n    return jspb.Message.setProto3IntField(this, 4, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.TriggerSmartContract.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.TriggerSmartContract.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.TriggerSmartContract} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.TriggerSmartContract.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                ownerAddress: msg.getOwnerAddress_asB64(),\n                contractAddress: msg.getContractAddress_asB64(),\n                callValue: jspb.Message.getFieldWithDefault(msg, 3, 0),\n                data: msg.getData_asB64(),\n                callTokenValue: jspb.Message.getFieldWithDefault(msg, 5, 0),\n                tokenId: jspb.Message.getFieldWithDefault(msg, 6, 0),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.TriggerSmartContract}\n */\nTronWebProto.TriggerSmartContract.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.TriggerSmartContract();\n    return TronWebProto.TriggerSmartContract.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.TriggerSmartContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.TriggerSmartContract}\n */\nTronWebProto.TriggerSmartContract.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setOwnerAddress(value);\n                break;\n            case 2:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setContractAddress(value);\n                break;\n            case 3:\n                var value = /** @type {number} */ (reader.readInt64());\n                msg.setCallValue(value);\n                break;\n            case 4:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setData(value);\n                break;\n            case 5:\n                var value = /** @type {number} */ (reader.readInt64());\n                msg.setCallTokenValue(value);\n                break;\n            case 6:\n                var value = /** @type {number} */ (reader.readInt64());\n                msg.setTokenId(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.TriggerSmartContract.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.TriggerSmartContract.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.TriggerSmartContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.TriggerSmartContract.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getOwnerAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(1, f);\n    }\n    f = message.getContractAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(2, f);\n    }\n    f = message.getCallValue();\n    if (f !== 0) {\n        writer.writeInt64(3, f);\n    }\n    f = message.getData_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(4, f);\n    }\n    f = message.getCallTokenValue();\n    if (f !== 0) {\n        writer.writeInt64(5, f);\n    }\n    f = message.getTokenId();\n    if (f !== 0) {\n        writer.writeInt64(6, f);\n    }\n};\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TriggerSmartContract.prototype.getOwnerAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ''));\n};\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.TriggerSmartContract.prototype.getOwnerAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getOwnerAddress()));\n};\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.TriggerSmartContract.prototype.getOwnerAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getOwnerAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TriggerSmartContract} returns this\n */\nTronWebProto.TriggerSmartContract.prototype.setOwnerAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n/**\n * optional bytes contract_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TriggerSmartContract.prototype.getContractAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ''));\n};\n\n/**\n * optional bytes contract_address = 2;\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {string}\n */\nTronWebProto.TriggerSmartContract.prototype.getContractAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getContractAddress()));\n};\n\n/**\n * optional bytes contract_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.TriggerSmartContract.prototype.getContractAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getContractAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TriggerSmartContract} returns this\n */\nTronWebProto.TriggerSmartContract.prototype.setContractAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n/**\n * optional int64 call_value = 3;\n * @return {number}\n */\nTronWebProto.TriggerSmartContract.prototype.getCallValue = function () {\n    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n/**\n * @param {number} value\n * @return {!TronWebProto.TriggerSmartContract} returns this\n */\nTronWebProto.TriggerSmartContract.prototype.setCallValue = function (value) {\n    return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n/**\n * optional bytes data = 4;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TriggerSmartContract.prototype.getData = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ''));\n};\n\n/**\n * optional bytes data = 4;\n * This is a type-conversion wrapper around `getData()`\n * @return {string}\n */\nTronWebProto.TriggerSmartContract.prototype.getData_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getData()));\n};\n\n/**\n * optional bytes data = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getData()`\n * @return {!Uint8Array}\n */\nTronWebProto.TriggerSmartContract.prototype.getData_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getData()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TriggerSmartContract} returns this\n */\nTronWebProto.TriggerSmartContract.prototype.setData = function (value) {\n    return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n/**\n * optional int64 call_token_value = 5;\n * @return {number}\n */\nTronWebProto.TriggerSmartContract.prototype.getCallTokenValue = function () {\n    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n/**\n * @param {number} value\n * @return {!TronWebProto.TriggerSmartContract} returns this\n */\nTronWebProto.TriggerSmartContract.prototype.setCallTokenValue = function (value) {\n    return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n/**\n * optional int64 token_id = 6;\n * @return {number}\n */\nTronWebProto.TriggerSmartContract.prototype.getTokenId = function () {\n    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n/**\n * @param {number} value\n * @return {!TronWebProto.TriggerSmartContract} returns this\n */\nTronWebProto.TriggerSmartContract.prototype.setTokenId = function (value) {\n    return jspb.Message.setProto3IntField(this, 6, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.ClearABIContract.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.ClearABIContract.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.ClearABIContract} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.ClearABIContract.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                ownerAddress: msg.getOwnerAddress_asB64(),\n                contractAddress: msg.getContractAddress_asB64(),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ClearABIContract}\n */\nTronWebProto.ClearABIContract.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.ClearABIContract();\n    return TronWebProto.ClearABIContract.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ClearABIContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ClearABIContract}\n */\nTronWebProto.ClearABIContract.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setOwnerAddress(value);\n                break;\n            case 2:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setContractAddress(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ClearABIContract.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.ClearABIContract.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ClearABIContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ClearABIContract.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getOwnerAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(1, f);\n    }\n    f = message.getContractAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(2, f);\n    }\n};\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ClearABIContract.prototype.getOwnerAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ''));\n};\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.ClearABIContract.prototype.getOwnerAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getOwnerAddress()));\n};\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ClearABIContract.prototype.getOwnerAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getOwnerAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ClearABIContract} returns this\n */\nTronWebProto.ClearABIContract.prototype.setOwnerAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n/**\n * optional bytes contract_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ClearABIContract.prototype.getContractAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ''));\n};\n\n/**\n * optional bytes contract_address = 2;\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {string}\n */\nTronWebProto.ClearABIContract.prototype.getContractAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getContractAddress()));\n};\n\n/**\n * optional bytes contract_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ClearABIContract.prototype.getContractAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getContractAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ClearABIContract} returns this\n */\nTronWebProto.ClearABIContract.prototype.setContractAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.UpdateSettingContract.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.UpdateSettingContract.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.UpdateSettingContract} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.UpdateSettingContract.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                ownerAddress: msg.getOwnerAddress_asB64(),\n                contractAddress: msg.getContractAddress_asB64(),\n                consumeUserResourcePercent: jspb.Message.getFieldWithDefault(msg, 3, 0),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.UpdateSettingContract}\n */\nTronWebProto.UpdateSettingContract.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.UpdateSettingContract();\n    return TronWebProto.UpdateSettingContract.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.UpdateSettingContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.UpdateSettingContract}\n */\nTronWebProto.UpdateSettingContract.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setOwnerAddress(value);\n                break;\n            case 2:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setContractAddress(value);\n                break;\n            case 3:\n                var value = /** @type {number} */ (reader.readInt64());\n                msg.setConsumeUserResourcePercent(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateSettingContract.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.UpdateSettingContract.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.UpdateSettingContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UpdateSettingContract.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getOwnerAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(1, f);\n    }\n    f = message.getContractAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(2, f);\n    }\n    f = message.getConsumeUserResourcePercent();\n    if (f !== 0) {\n        writer.writeInt64(3, f);\n    }\n};\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UpdateSettingContract.prototype.getOwnerAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ''));\n};\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.UpdateSettingContract.prototype.getOwnerAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getOwnerAddress()));\n};\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateSettingContract.prototype.getOwnerAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getOwnerAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UpdateSettingContract} returns this\n */\nTronWebProto.UpdateSettingContract.prototype.setOwnerAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n/**\n * optional bytes contract_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UpdateSettingContract.prototype.getContractAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ''));\n};\n\n/**\n * optional bytes contract_address = 2;\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {string}\n */\nTronWebProto.UpdateSettingContract.prototype.getContractAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getContractAddress()));\n};\n\n/**\n * optional bytes contract_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateSettingContract.prototype.getContractAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getContractAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UpdateSettingContract} returns this\n */\nTronWebProto.UpdateSettingContract.prototype.setContractAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n/**\n * optional int64 consume_user_resource_percent = 3;\n * @return {number}\n */\nTronWebProto.UpdateSettingContract.prototype.getConsumeUserResourcePercent = function () {\n    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n/**\n * @param {number} value\n * @return {!TronWebProto.UpdateSettingContract} returns this\n */\nTronWebProto.UpdateSettingContract.prototype.setConsumeUserResourcePercent = function (value) {\n    return jspb.Message.setProto3IntField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.UpdateEnergyLimitContract.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.UpdateEnergyLimitContract.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.UpdateEnergyLimitContract} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.UpdateEnergyLimitContract.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                ownerAddress: msg.getOwnerAddress_asB64(),\n                contractAddress: msg.getContractAddress_asB64(),\n                originEnergyLimit: jspb.Message.getFieldWithDefault(msg, 3, 0),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.UpdateEnergyLimitContract}\n */\nTronWebProto.UpdateEnergyLimitContract.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.UpdateEnergyLimitContract();\n    return TronWebProto.UpdateEnergyLimitContract.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.UpdateEnergyLimitContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.UpdateEnergyLimitContract}\n */\nTronWebProto.UpdateEnergyLimitContract.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setOwnerAddress(value);\n                break;\n            case 2:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setContractAddress(value);\n                break;\n            case 3:\n                var value = /** @type {number} */ (reader.readInt64());\n                msg.setOriginEnergyLimit(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.UpdateEnergyLimitContract.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.UpdateEnergyLimitContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UpdateEnergyLimitContract.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getOwnerAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(1, f);\n    }\n    f = message.getContractAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(2, f);\n    }\n    f = message.getOriginEnergyLimit();\n    if (f !== 0) {\n        writer.writeInt64(3, f);\n    }\n};\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.getOwnerAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ''));\n};\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.getOwnerAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getOwnerAddress()));\n};\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.getOwnerAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getOwnerAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UpdateEnergyLimitContract} returns this\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.setOwnerAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n/**\n * optional bytes contract_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.getContractAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ''));\n};\n\n/**\n * optional bytes contract_address = 2;\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {string}\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.getContractAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getContractAddress()));\n};\n\n/**\n * optional bytes contract_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.getContractAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getContractAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UpdateEnergyLimitContract} returns this\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.setContractAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n/**\n * optional int64 origin_energy_limit = 3;\n * @return {number}\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.getOriginEnergyLimit = function () {\n    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n/**\n * @param {number} value\n * @return {!TronWebProto.UpdateEnergyLimitContract} returns this\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.setOriginEnergyLimit = function (value) {\n    return jspb.Message.setProto3IntField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.SmartContractDataWrapper.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.SmartContractDataWrapper.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.SmartContractDataWrapper} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.SmartContractDataWrapper.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                smartContract: (f = msg.getSmartContract()) && TronWebProto.SmartContract.toObject(includeInstance, f),\n                runtimecode: msg.getRuntimecode_asB64(),\n                contractState: (f = msg.getContractState()) && TronWebProto.ContractState.toObject(includeInstance, f),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.SmartContractDataWrapper}\n */\nTronWebProto.SmartContractDataWrapper.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.SmartContractDataWrapper();\n    return TronWebProto.SmartContractDataWrapper.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.SmartContractDataWrapper} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.SmartContractDataWrapper}\n */\nTronWebProto.SmartContractDataWrapper.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = new TronWebProto.SmartContract();\n                reader.readMessage(value, TronWebProto.SmartContract.deserializeBinaryFromReader);\n                msg.setSmartContract(value);\n                break;\n            case 2:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setRuntimecode(value);\n                break;\n            case 3:\n                var value = new TronWebProto.ContractState();\n                reader.readMessage(value, TronWebProto.ContractState.deserializeBinaryFromReader);\n                msg.setContractState(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContractDataWrapper.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.SmartContractDataWrapper.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.SmartContractDataWrapper} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SmartContractDataWrapper.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getSmartContract();\n    if (f != null) {\n        writer.writeMessage(1, f, TronWebProto.SmartContract.serializeBinaryToWriter);\n    }\n    f = message.getRuntimecode_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(2, f);\n    }\n    f = message.getContractState();\n    if (f != null) {\n        writer.writeMessage(3, f, TronWebProto.ContractState.serializeBinaryToWriter);\n    }\n};\n\n/**\n * optional SmartContract smart_contract = 1;\n * @return {?TronWebProto.SmartContract}\n */\nTronWebProto.SmartContractDataWrapper.prototype.getSmartContract = function () {\n    return /** @type{?TronWebProto.SmartContract} */ (jspb.Message.getWrapperField(this, TronWebProto.SmartContract, 1));\n};\n\n/**\n * @param {?TronWebProto.SmartContract|undefined} value\n * @return {!TronWebProto.SmartContractDataWrapper} returns this\n */\nTronWebProto.SmartContractDataWrapper.prototype.setSmartContract = function (value) {\n    return jspb.Message.setWrapperField(this, 1, value);\n};\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.SmartContractDataWrapper} returns this\n */\nTronWebProto.SmartContractDataWrapper.prototype.clearSmartContract = function () {\n    return this.setSmartContract(undefined);\n};\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.SmartContractDataWrapper.prototype.hasSmartContract = function () {\n    return jspb.Message.getField(this, 1) != null;\n};\n\n/**\n * optional bytes runtimecode = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.SmartContractDataWrapper.prototype.getRuntimecode = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ''));\n};\n\n/**\n * optional bytes runtimecode = 2;\n * This is a type-conversion wrapper around `getRuntimecode()`\n * @return {string}\n */\nTronWebProto.SmartContractDataWrapper.prototype.getRuntimecode_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getRuntimecode()));\n};\n\n/**\n * optional bytes runtimecode = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRuntimecode()`\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContractDataWrapper.prototype.getRuntimecode_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getRuntimecode()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.SmartContractDataWrapper} returns this\n */\nTronWebProto.SmartContractDataWrapper.prototype.setRuntimecode = function (value) {\n    return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n/**\n * optional ContractState contract_state = 3;\n * @return {?TronWebProto.ContractState}\n */\nTronWebProto.SmartContractDataWrapper.prototype.getContractState = function () {\n    return /** @type{?TronWebProto.ContractState} */ (jspb.Message.getWrapperField(this, TronWebProto.ContractState, 3));\n};\n\n/**\n * @param {?TronWebProto.ContractState|undefined} value\n * @return {!TronWebProto.SmartContractDataWrapper} returns this\n */\nTronWebProto.SmartContractDataWrapper.prototype.setContractState = function (value) {\n    return jspb.Message.setWrapperField(this, 3, value);\n};\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.SmartContractDataWrapper} returns this\n */\nTronWebProto.SmartContractDataWrapper.prototype.clearContractState = function () {\n    return this.setContractState(undefined);\n};\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.SmartContractDataWrapper.prototype.hasContractState = function () {\n    return jspb.Message.getField(this, 3) != null;\n};\n\ngoog.object.extend(exports, TronWebProto);\n", "// source: core/contract/witness_contract.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof window !== 'undefined' && window) ||\n  (typeof global !== 'undefined' && global) ||\n  (typeof self !== 'undefined' && self) ||\n  (function () { return this; }).call(null) ||\n  Function('return this')();\n\ngoog.exportSymbol('TronWebProto.VoteWitnessContract', null, global);\ngoog.exportSymbol('TronWebProto.VoteWitnessContract.Vote', null, global);\ngoog.exportSymbol('TronWebProto.WitnessCreateContract', null, global);\ngoog.exportSymbol('TronWebProto.WitnessUpdateContract', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.WitnessCreateContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.WitnessCreateContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.WitnessCreateContract.displayName = 'TronWebProto.WitnessCreateContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.WitnessUpdateContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.WitnessUpdateContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.WitnessUpdateContract.displayName = 'TronWebProto.WitnessUpdateContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.VoteWitnessContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.VoteWitnessContract.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.VoteWitnessContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.VoteWitnessContract.displayName = 'TronWebProto.VoteWitnessContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.VoteWitnessContract.Vote = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.VoteWitnessContract.Vote, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.VoteWitnessContract.Vote.displayName = 'TronWebProto.VoteWitnessContract.Vote';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.WitnessCreateContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.WitnessCreateContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.WitnessCreateContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.WitnessCreateContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    url: msg.getUrl_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.WitnessCreateContract}\n */\nTronWebProto.WitnessCreateContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.WitnessCreateContract;\n  return TronWebProto.WitnessCreateContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.WitnessCreateContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.WitnessCreateContract}\n */\nTronWebProto.WitnessCreateContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setUrl(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.WitnessCreateContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.WitnessCreateContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.WitnessCreateContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.WitnessCreateContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getUrl_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.WitnessCreateContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.WitnessCreateContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.WitnessCreateContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.WitnessCreateContract} returns this\n */\nTronWebProto.WitnessCreateContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes url = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.WitnessCreateContract.prototype.getUrl = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes url = 2;\n * This is a type-conversion wrapper around `getUrl()`\n * @return {string}\n */\nTronWebProto.WitnessCreateContract.prototype.getUrl_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getUrl()));\n};\n\n\n/**\n * optional bytes url = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getUrl()`\n * @return {!Uint8Array}\n */\nTronWebProto.WitnessCreateContract.prototype.getUrl_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getUrl()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.WitnessCreateContract} returns this\n */\nTronWebProto.WitnessCreateContract.prototype.setUrl = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.WitnessUpdateContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.WitnessUpdateContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.WitnessUpdateContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.WitnessUpdateContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    updateUrl: msg.getUpdateUrl_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.WitnessUpdateContract}\n */\nTronWebProto.WitnessUpdateContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.WitnessUpdateContract;\n  return TronWebProto.WitnessUpdateContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.WitnessUpdateContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.WitnessUpdateContract}\n */\nTronWebProto.WitnessUpdateContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 12:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setUpdateUrl(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.WitnessUpdateContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.WitnessUpdateContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.WitnessUpdateContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.WitnessUpdateContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getUpdateUrl_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      12,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.WitnessUpdateContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.WitnessUpdateContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.WitnessUpdateContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.WitnessUpdateContract} returns this\n */\nTronWebProto.WitnessUpdateContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes update_url = 12;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.WitnessUpdateContract.prototype.getUpdateUrl = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, \"\"));\n};\n\n\n/**\n * optional bytes update_url = 12;\n * This is a type-conversion wrapper around `getUpdateUrl()`\n * @return {string}\n */\nTronWebProto.WitnessUpdateContract.prototype.getUpdateUrl_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getUpdateUrl()));\n};\n\n\n/**\n * optional bytes update_url = 12;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getUpdateUrl()`\n * @return {!Uint8Array}\n */\nTronWebProto.WitnessUpdateContract.prototype.getUpdateUrl_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getUpdateUrl()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.WitnessUpdateContract} returns this\n */\nTronWebProto.WitnessUpdateContract.prototype.setUpdateUrl = function(value) {\n  return jspb.Message.setProto3BytesField(this, 12, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.VoteWitnessContract.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.VoteWitnessContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.VoteWitnessContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.VoteWitnessContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.VoteWitnessContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    votesList: jspb.Message.toObjectList(msg.getVotesList(),\n    TronWebProto.VoteWitnessContract.Vote.toObject, includeInstance),\n    support: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.VoteWitnessContract}\n */\nTronWebProto.VoteWitnessContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.VoteWitnessContract;\n  return TronWebProto.VoteWitnessContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.VoteWitnessContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.VoteWitnessContract}\n */\nTronWebProto.VoteWitnessContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = new TronWebProto.VoteWitnessContract.Vote;\n      reader.readMessage(value,TronWebProto.VoteWitnessContract.Vote.deserializeBinaryFromReader);\n      msg.addVotes(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSupport(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.VoteWitnessContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.VoteWitnessContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.VoteWitnessContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.VoteWitnessContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getVotesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      TronWebProto.VoteWitnessContract.Vote.serializeBinaryToWriter\n    );\n  }\n  f = message.getSupport();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.VoteWitnessContract.Vote.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.VoteWitnessContract.Vote.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.VoteWitnessContract.Vote} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.VoteWitnessContract.Vote.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    voteAddress: msg.getVoteAddress_asB64(),\n    voteCount: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.VoteWitnessContract.Vote}\n */\nTronWebProto.VoteWitnessContract.Vote.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.VoteWitnessContract.Vote;\n  return TronWebProto.VoteWitnessContract.Vote.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.VoteWitnessContract.Vote} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.VoteWitnessContract.Vote}\n */\nTronWebProto.VoteWitnessContract.Vote.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setVoteAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setVoteCount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.VoteWitnessContract.Vote.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.VoteWitnessContract.Vote.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.VoteWitnessContract.Vote} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.VoteWitnessContract.Vote.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getVoteAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getVoteCount();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes vote_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.VoteWitnessContract.Vote.prototype.getVoteAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes vote_address = 1;\n * This is a type-conversion wrapper around `getVoteAddress()`\n * @return {string}\n */\nTronWebProto.VoteWitnessContract.Vote.prototype.getVoteAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getVoteAddress()));\n};\n\n\n/**\n * optional bytes vote_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getVoteAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.VoteWitnessContract.Vote.prototype.getVoteAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getVoteAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.VoteWitnessContract.Vote} returns this\n */\nTronWebProto.VoteWitnessContract.Vote.prototype.setVoteAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 vote_count = 2;\n * @return {number}\n */\nTronWebProto.VoteWitnessContract.Vote.prototype.getVoteCount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.VoteWitnessContract.Vote} returns this\n */\nTronWebProto.VoteWitnessContract.Vote.prototype.setVoteCount = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.VoteWitnessContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.VoteWitnessContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.VoteWitnessContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.VoteWitnessContract} returns this\n */\nTronWebProto.VoteWitnessContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * repeated Vote votes = 2;\n * @return {!Array<!TronWebProto.VoteWitnessContract.Vote>}\n */\nTronWebProto.VoteWitnessContract.prototype.getVotesList = function() {\n  return /** @type{!Array<!TronWebProto.VoteWitnessContract.Vote>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.VoteWitnessContract.Vote, 2));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.VoteWitnessContract.Vote>} value\n * @return {!TronWebProto.VoteWitnessContract} returns this\n*/\nTronWebProto.VoteWitnessContract.prototype.setVotesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!TronWebProto.VoteWitnessContract.Vote=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.VoteWitnessContract.Vote}\n */\nTronWebProto.VoteWitnessContract.prototype.addVotes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, TronWebProto.VoteWitnessContract.Vote, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.VoteWitnessContract} returns this\n */\nTronWebProto.VoteWitnessContract.prototype.clearVotesList = function() {\n  return this.setVotesList([]);\n};\n\n\n/**\n * optional bool support = 3;\n * @return {boolean}\n */\nTronWebProto.VoteWitnessContract.prototype.getSupport = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.VoteWitnessContract} returns this\n */\nTronWebProto.VoteWitnessContract.prototype.setSupport = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\ngoog.object.extend(exports, TronWebProto);\n", "// source: core/contract/storage_contract.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof window !== 'undefined' && window) ||\n  (typeof global !== 'undefined' && global) ||\n  (typeof self !== 'undefined' && self) ||\n  (function () { return this; }).call(null) ||\n  Function('return this')();\n\ngoog.exportSymbol('TronWebProto.BuyStorageBytesContract', null, global);\ngoog.exportSymbol('TronWebProto.BuyStorageContract', null, global);\ngoog.exportSymbol('TronWebProto.SellStorageContract', null, global);\ngoog.exportSymbol('TronWebProto.UpdateBrokerageContract', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.BuyStorageBytesContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.BuyStorageBytesContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.BuyStorageBytesContract.displayName = 'TronWebProto.BuyStorageBytesContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.BuyStorageContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.BuyStorageContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.BuyStorageContract.displayName = 'TronWebProto.BuyStorageContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.SellStorageContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.SellStorageContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.SellStorageContract.displayName = 'TronWebProto.SellStorageContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.UpdateBrokerageContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.UpdateBrokerageContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.UpdateBrokerageContract.displayName = 'TronWebProto.UpdateBrokerageContract';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.BuyStorageBytesContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.BuyStorageBytesContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.BuyStorageBytesContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.BuyStorageBytesContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    bytes: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.BuyStorageBytesContract}\n */\nTronWebProto.BuyStorageBytesContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.BuyStorageBytesContract;\n  return TronWebProto.BuyStorageBytesContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.BuyStorageBytesContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.BuyStorageBytesContract}\n */\nTronWebProto.BuyStorageBytesContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBytes(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.BuyStorageBytesContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.BuyStorageBytesContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.BuyStorageBytesContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.BuyStorageBytesContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getBytes();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.BuyStorageBytesContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.BuyStorageBytesContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.BuyStorageBytesContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.BuyStorageBytesContract} returns this\n */\nTronWebProto.BuyStorageBytesContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 bytes = 2;\n * @return {number}\n */\nTronWebProto.BuyStorageBytesContract.prototype.getBytes = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.BuyStorageBytesContract} returns this\n */\nTronWebProto.BuyStorageBytesContract.prototype.setBytes = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.BuyStorageContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.BuyStorageContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.BuyStorageContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.BuyStorageContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    quant: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.BuyStorageContract}\n */\nTronWebProto.BuyStorageContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.BuyStorageContract;\n  return TronWebProto.BuyStorageContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.BuyStorageContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.BuyStorageContract}\n */\nTronWebProto.BuyStorageContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setQuant(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.BuyStorageContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.BuyStorageContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.BuyStorageContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.BuyStorageContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getQuant();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.BuyStorageContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.BuyStorageContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.BuyStorageContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.BuyStorageContract} returns this\n */\nTronWebProto.BuyStorageContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 quant = 2;\n * @return {number}\n */\nTronWebProto.BuyStorageContract.prototype.getQuant = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.BuyStorageContract} returns this\n */\nTronWebProto.BuyStorageContract.prototype.setQuant = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.SellStorageContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.SellStorageContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.SellStorageContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SellStorageContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    storageBytes: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.SellStorageContract}\n */\nTronWebProto.SellStorageContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.SellStorageContract;\n  return TronWebProto.SellStorageContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.SellStorageContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.SellStorageContract}\n */\nTronWebProto.SellStorageContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setStorageBytes(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.SellStorageContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.SellStorageContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.SellStorageContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SellStorageContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getStorageBytes();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.SellStorageContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.SellStorageContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.SellStorageContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.SellStorageContract} returns this\n */\nTronWebProto.SellStorageContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 storage_bytes = 2;\n * @return {number}\n */\nTronWebProto.SellStorageContract.prototype.getStorageBytes = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.SellStorageContract} returns this\n */\nTronWebProto.SellStorageContract.prototype.setStorageBytes = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.UpdateBrokerageContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.UpdateBrokerageContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.UpdateBrokerageContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UpdateBrokerageContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    brokerage: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.UpdateBrokerageContract}\n */\nTronWebProto.UpdateBrokerageContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.UpdateBrokerageContract;\n  return TronWebProto.UpdateBrokerageContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.UpdateBrokerageContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.UpdateBrokerageContract}\n */\nTronWebProto.UpdateBrokerageContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setBrokerage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateBrokerageContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.UpdateBrokerageContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.UpdateBrokerageContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UpdateBrokerageContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getBrokerage();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UpdateBrokerageContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.UpdateBrokerageContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateBrokerageContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UpdateBrokerageContract} returns this\n */\nTronWebProto.UpdateBrokerageContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int32 brokerage = 2;\n * @return {number}\n */\nTronWebProto.UpdateBrokerageContract.prototype.getBrokerage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.UpdateBrokerageContract} returns this\n */\nTronWebProto.UpdateBrokerageContract.prototype.setBrokerage = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\ngoog.object.extend(exports, TronWebProto);\n", "// source: core/contract/account_contract.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global =\n    (typeof globalThis !== 'undefined' && globalThis) ||\n    (typeof window !== 'undefined' && window) ||\n    (typeof global !== 'undefined' && global) ||\n    (typeof self !== 'undefined' && self) ||\n    function () {\n        return this;\n    }.call(null) ||\n    Function('return this')();\n\nvar core_Tron_pb = require('../../core/Tron_pb.cjs');\ngoog.object.extend(proto, core_Tron_pb);\ngoog.exportSymbol('TronWebProto.AccountCreateContract', null, global);\ngoog.exportSymbol('TronWebProto.AccountPermissionUpdateContract', null, global);\ngoog.exportSymbol('TronWebProto.AccountUpdateContract', null, global);\ngoog.exportSymbol('TronWebProto.SetAccountIdContract', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AccountCreateContract = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.AccountCreateContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.AccountCreateContract.displayName = 'TronWebProto.AccountCreateContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AccountUpdateContract = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.AccountUpdateContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.AccountUpdateContract.displayName = 'TronWebProto.AccountUpdateContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.SetAccountIdContract = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.SetAccountIdContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.SetAccountIdContract.displayName = 'TronWebProto.SetAccountIdContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AccountPermissionUpdateContract = function (opt_data) {\n    jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.AccountPermissionUpdateContract.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.AccountPermissionUpdateContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n    /**\n     * @public\n     * @override\n     */\n    TronWebProto.AccountPermissionUpdateContract.displayName = 'TronWebProto.AccountPermissionUpdateContract';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.AccountCreateContract.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.AccountCreateContract.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.AccountCreateContract} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.AccountCreateContract.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                ownerAddress: msg.getOwnerAddress_asB64(),\n                accountAddress: msg.getAccountAddress_asB64(),\n                type: jspb.Message.getFieldWithDefault(msg, 3, 0),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AccountCreateContract}\n */\nTronWebProto.AccountCreateContract.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.AccountCreateContract();\n    return TronWebProto.AccountCreateContract.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AccountCreateContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AccountCreateContract}\n */\nTronWebProto.AccountCreateContract.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setOwnerAddress(value);\n                break;\n            case 2:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setAccountAddress(value);\n                break;\n            case 3:\n                var value = /** @type {!TronWebProto.AccountType} */ (reader.readEnum());\n                msg.setType(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AccountCreateContract.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.AccountCreateContract.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AccountCreateContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountCreateContract.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getOwnerAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(1, f);\n    }\n    f = message.getAccountAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(2, f);\n    }\n    f = message.getType();\n    if (f !== 0.0) {\n        writer.writeEnum(3, f);\n    }\n};\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AccountCreateContract.prototype.getOwnerAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ''));\n};\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.AccountCreateContract.prototype.getOwnerAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getOwnerAddress()));\n};\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.AccountCreateContract.prototype.getOwnerAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getOwnerAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AccountCreateContract} returns this\n */\nTronWebProto.AccountCreateContract.prototype.setOwnerAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n/**\n * optional bytes account_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AccountCreateContract.prototype.getAccountAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ''));\n};\n\n/**\n * optional bytes account_address = 2;\n * This is a type-conversion wrapper around `getAccountAddress()`\n * @return {string}\n */\nTronWebProto.AccountCreateContract.prototype.getAccountAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getAccountAddress()));\n};\n\n/**\n * optional bytes account_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAccountAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.AccountCreateContract.prototype.getAccountAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getAccountAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AccountCreateContract} returns this\n */\nTronWebProto.AccountCreateContract.prototype.setAccountAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n/**\n * optional AccountType type = 3;\n * @return {!TronWebProto.AccountType}\n */\nTronWebProto.AccountCreateContract.prototype.getType = function () {\n    return /** @type {!TronWebProto.AccountType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n/**\n * @param {!TronWebProto.AccountType} value\n * @return {!TronWebProto.AccountCreateContract} returns this\n */\nTronWebProto.AccountCreateContract.prototype.setType = function (value) {\n    return jspb.Message.setProto3EnumField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.AccountUpdateContract.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.AccountUpdateContract.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.AccountUpdateContract} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.AccountUpdateContract.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                accountName: msg.getAccountName_asB64(),\n                ownerAddress: msg.getOwnerAddress_asB64(),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AccountUpdateContract}\n */\nTronWebProto.AccountUpdateContract.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.AccountUpdateContract();\n    return TronWebProto.AccountUpdateContract.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AccountUpdateContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AccountUpdateContract}\n */\nTronWebProto.AccountUpdateContract.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setAccountName(value);\n                break;\n            case 2:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setOwnerAddress(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AccountUpdateContract.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.AccountUpdateContract.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AccountUpdateContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountUpdateContract.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getAccountName_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(1, f);\n    }\n    f = message.getOwnerAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(2, f);\n    }\n};\n\n/**\n * optional bytes account_name = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AccountUpdateContract.prototype.getAccountName = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ''));\n};\n\n/**\n * optional bytes account_name = 1;\n * This is a type-conversion wrapper around `getAccountName()`\n * @return {string}\n */\nTronWebProto.AccountUpdateContract.prototype.getAccountName_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getAccountName()));\n};\n\n/**\n * optional bytes account_name = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAccountName()`\n * @return {!Uint8Array}\n */\nTronWebProto.AccountUpdateContract.prototype.getAccountName_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getAccountName()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AccountUpdateContract} returns this\n */\nTronWebProto.AccountUpdateContract.prototype.setAccountName = function (value) {\n    return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n/**\n * optional bytes owner_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AccountUpdateContract.prototype.getOwnerAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ''));\n};\n\n/**\n * optional bytes owner_address = 2;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.AccountUpdateContract.prototype.getOwnerAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getOwnerAddress()));\n};\n\n/**\n * optional bytes owner_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.AccountUpdateContract.prototype.getOwnerAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getOwnerAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AccountUpdateContract} returns this\n */\nTronWebProto.AccountUpdateContract.prototype.setOwnerAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.SetAccountIdContract.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.SetAccountIdContract.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.SetAccountIdContract} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.SetAccountIdContract.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                accountId: msg.getAccountId_asB64(),\n                ownerAddress: msg.getOwnerAddress_asB64(),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.SetAccountIdContract}\n */\nTronWebProto.SetAccountIdContract.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.SetAccountIdContract();\n    return TronWebProto.SetAccountIdContract.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.SetAccountIdContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.SetAccountIdContract}\n */\nTronWebProto.SetAccountIdContract.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setAccountId(value);\n                break;\n            case 2:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setOwnerAddress(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.SetAccountIdContract.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.SetAccountIdContract.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.SetAccountIdContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SetAccountIdContract.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getAccountId_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(1, f);\n    }\n    f = message.getOwnerAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(2, f);\n    }\n};\n\n/**\n * optional bytes account_id = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.SetAccountIdContract.prototype.getAccountId = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ''));\n};\n\n/**\n * optional bytes account_id = 1;\n * This is a type-conversion wrapper around `getAccountId()`\n * @return {string}\n */\nTronWebProto.SetAccountIdContract.prototype.getAccountId_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getAccountId()));\n};\n\n/**\n * optional bytes account_id = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAccountId()`\n * @return {!Uint8Array}\n */\nTronWebProto.SetAccountIdContract.prototype.getAccountId_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getAccountId()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.SetAccountIdContract} returns this\n */\nTronWebProto.SetAccountIdContract.prototype.setAccountId = function (value) {\n    return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n/**\n * optional bytes owner_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.SetAccountIdContract.prototype.getOwnerAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ''));\n};\n\n/**\n * optional bytes owner_address = 2;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.SetAccountIdContract.prototype.getOwnerAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getOwnerAddress()));\n};\n\n/**\n * optional bytes owner_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.SetAccountIdContract.prototype.getOwnerAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getOwnerAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.SetAccountIdContract} returns this\n */\nTronWebProto.SetAccountIdContract.prototype.setOwnerAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.AccountPermissionUpdateContract.repeatedFields_ = [4];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n    /**\n     * Creates an object representation of this proto.\n     * Field names that are reserved in JavaScript and will be renamed to pb_name.\n     * Optional fields that are not set will be set to undefined.\n     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n     * For the list of reserved names please see:\n     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n     * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n     *     JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @return {!Object}\n     */\n    TronWebProto.AccountPermissionUpdateContract.prototype.toObject = function (opt_includeInstance) {\n        return TronWebProto.AccountPermissionUpdateContract.toObject(opt_includeInstance, this);\n    };\n\n    /**\n     * Static version of the {@see toObject} method.\n     * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n     *     the JSPB instance for transitional soy proto support:\n     *     http://goto/soy-param-migration\n     * @param {!TronWebProto.AccountPermissionUpdateContract} msg The msg instance to transform.\n     * @return {!Object}\n     * @suppress {unusedLocalVariables} f is only used for nested messages\n     */\n    TronWebProto.AccountPermissionUpdateContract.toObject = function (includeInstance, msg) {\n        var f,\n            obj = {\n                ownerAddress: msg.getOwnerAddress_asB64(),\n                owner: (f = msg.getOwner()) && core_Tron_pb.Permission.toObject(includeInstance, f),\n                witness: (f = msg.getWitness()) && core_Tron_pb.Permission.toObject(includeInstance, f),\n                activesList: jspb.Message.toObjectList(msg.getActivesList(), core_Tron_pb.Permission.toObject, includeInstance),\n            };\n\n        if (includeInstance) {\n            obj.$jspbMessageInstance = msg;\n        }\n        return obj;\n    };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AccountPermissionUpdateContract}\n */\nTronWebProto.AccountPermissionUpdateContract.deserializeBinary = function (bytes) {\n    var reader = new jspb.BinaryReader(bytes);\n    var msg = new TronWebProto.AccountPermissionUpdateContract();\n    return TronWebProto.AccountPermissionUpdateContract.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AccountPermissionUpdateContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AccountPermissionUpdateContract}\n */\nTronWebProto.AccountPermissionUpdateContract.deserializeBinaryFromReader = function (msg, reader) {\n    while (reader.nextField()) {\n        if (reader.isEndGroup()) {\n            break;\n        }\n        var field = reader.getFieldNumber();\n        switch (field) {\n            case 1:\n                var value = /** @type {!Uint8Array} */ (reader.readBytes());\n                msg.setOwnerAddress(value);\n                break;\n            case 2:\n                var value = new core_Tron_pb.Permission();\n                reader.readMessage(value, core_Tron_pb.Permission.deserializeBinaryFromReader);\n                msg.setOwner(value);\n                break;\n            case 3:\n                var value = new core_Tron_pb.Permission();\n                reader.readMessage(value, core_Tron_pb.Permission.deserializeBinaryFromReader);\n                msg.setWitness(value);\n                break;\n            case 4:\n                var value = new core_Tron_pb.Permission();\n                reader.readMessage(value, core_Tron_pb.Permission.deserializeBinaryFromReader);\n                msg.addActives(value);\n                break;\n            default:\n                reader.skipField();\n                break;\n        }\n    }\n    return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.serializeBinary = function () {\n    var writer = new jspb.BinaryWriter();\n    TronWebProto.AccountPermissionUpdateContract.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AccountPermissionUpdateContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountPermissionUpdateContract.serializeBinaryToWriter = function (message, writer) {\n    var f = undefined;\n    f = message.getOwnerAddress_asU8();\n    if (f.length > 0) {\n        writer.writeBytes(1, f);\n    }\n    f = message.getOwner();\n    if (f != null) {\n        writer.writeMessage(2, f, core_Tron_pb.Permission.serializeBinaryToWriter);\n    }\n    f = message.getWitness();\n    if (f != null) {\n        writer.writeMessage(3, f, core_Tron_pb.Permission.serializeBinaryToWriter);\n    }\n    f = message.getActivesList();\n    if (f.length > 0) {\n        writer.writeRepeatedMessage(4, f, core_Tron_pb.Permission.serializeBinaryToWriter);\n    }\n};\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.getOwnerAddress = function () {\n    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ''));\n};\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.getOwnerAddress_asB64 = function () {\n    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getOwnerAddress()));\n};\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.getOwnerAddress_asU8 = function () {\n    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getOwnerAddress()));\n};\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AccountPermissionUpdateContract} returns this\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.setOwnerAddress = function (value) {\n    return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n/**\n * optional Permission owner = 2;\n * @return {?TronWebProto.Permission}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.getOwner = function () {\n    return /** @type{?TronWebProto.Permission} */ (jspb.Message.getWrapperField(this, core_Tron_pb.Permission, 2));\n};\n\n/**\n * @param {?TronWebProto.Permission|undefined} value\n * @return {!TronWebProto.AccountPermissionUpdateContract} returns this\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.setOwner = function (value) {\n    return jspb.Message.setWrapperField(this, 2, value);\n};\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.AccountPermissionUpdateContract} returns this\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.clearOwner = function () {\n    return this.setOwner(undefined);\n};\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.hasOwner = function () {\n    return jspb.Message.getField(this, 2) != null;\n};\n\n/**\n * optional Permission witness = 3;\n * @return {?TronWebProto.Permission}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.getWitness = function () {\n    return /** @type{?TronWebProto.Permission} */ (jspb.Message.getWrapperField(this, core_Tron_pb.Permission, 3));\n};\n\n/**\n * @param {?TronWebProto.Permission|undefined} value\n * @return {!TronWebProto.AccountPermissionUpdateContract} returns this\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.setWitness = function (value) {\n    return jspb.Message.setWrapperField(this, 3, value);\n};\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.AccountPermissionUpdateContract} returns this\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.clearWitness = function () {\n    return this.setWitness(undefined);\n};\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.hasWitness = function () {\n    return jspb.Message.getField(this, 3) != null;\n};\n\n/**\n * repeated Permission actives = 4;\n * @return {!Array<!TronWebProto.Permission>}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.getActivesList = function () {\n    return /** @type{!Array<!TronWebProto.Permission>} */ (\n        jspb.Message.getRepeatedWrapperField(this, core_Tron_pb.Permission, 4)\n    );\n};\n\n/**\n * @param {!Array<!TronWebProto.Permission>} value\n * @return {!TronWebProto.AccountPermissionUpdateContract} returns this\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.setActivesList = function (value) {\n    return jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n/**\n * @param {!TronWebProto.Permission=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Permission}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.addActives = function (opt_value, opt_index) {\n    return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, TronWebProto.Permission, opt_index);\n};\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.AccountPermissionUpdateContract} returns this\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.clearActivesList = function () {\n    return this.setActivesList([]);\n};\n\ngoog.object.extend(exports, TronWebProto);\n", "// source: core/contract/proposal_contract.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof window !== 'undefined' && window) ||\n  (typeof global !== 'undefined' && global) ||\n  (typeof self !== 'undefined' && self) ||\n  (function () { return this; }).call(null) ||\n  Function('return this')();\n\ngoog.exportSymbol('TronWebProto.ProposalApproveContract', null, global);\ngoog.exportSymbol('TronWebProto.ProposalCreateContract', null, global);\ngoog.exportSymbol('TronWebProto.ProposalDeleteContract', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ProposalApproveContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ProposalApproveContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.ProposalApproveContract.displayName = 'TronWebProto.ProposalApproveContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ProposalCreateContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ProposalCreateContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.ProposalCreateContract.displayName = 'TronWebProto.ProposalCreateContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ProposalDeleteContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ProposalDeleteContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.ProposalDeleteContract.displayName = 'TronWebProto.ProposalDeleteContract';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.ProposalApproveContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.ProposalApproveContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.ProposalApproveContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ProposalApproveContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    proposalId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    isAddApproval: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ProposalApproveContract}\n */\nTronWebProto.ProposalApproveContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.ProposalApproveContract;\n  return TronWebProto.ProposalApproveContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ProposalApproveContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ProposalApproveContract}\n */\nTronWebProto.ProposalApproveContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setProposalId(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsAddApproval(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ProposalApproveContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.ProposalApproveContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ProposalApproveContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ProposalApproveContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getProposalId();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getIsAddApproval();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ProposalApproveContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.ProposalApproveContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ProposalApproveContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ProposalApproveContract} returns this\n */\nTronWebProto.ProposalApproveContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 proposal_id = 2;\n * @return {number}\n */\nTronWebProto.ProposalApproveContract.prototype.getProposalId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ProposalApproveContract} returns this\n */\nTronWebProto.ProposalApproveContract.prototype.setProposalId = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bool is_add_approval = 3;\n * @return {boolean}\n */\nTronWebProto.ProposalApproveContract.prototype.getIsAddApproval = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.ProposalApproveContract} returns this\n */\nTronWebProto.ProposalApproveContract.prototype.setIsAddApproval = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.ProposalCreateContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.ProposalCreateContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.ProposalCreateContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ProposalCreateContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    parametersMap: (f = msg.getParametersMap()) ? f.toObject(includeInstance, undefined) : []\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ProposalCreateContract}\n */\nTronWebProto.ProposalCreateContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.ProposalCreateContract;\n  return TronWebProto.ProposalCreateContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ProposalCreateContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ProposalCreateContract}\n */\nTronWebProto.ProposalCreateContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = msg.getParametersMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt64, jspb.BinaryReader.prototype.readInt64, null, 0, 0);\n         });\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ProposalCreateContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.ProposalCreateContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ProposalCreateContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ProposalCreateContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getParametersMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeInt64, jspb.BinaryWriter.prototype.writeInt64);\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ProposalCreateContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.ProposalCreateContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ProposalCreateContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ProposalCreateContract} returns this\n */\nTronWebProto.ProposalCreateContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * map<int64, int64> parameters = 2;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,number>}\n */\nTronWebProto.ProposalCreateContract.prototype.getParametersMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,number>} */ (\n      jspb.Message.getMapField(this, 2, opt_noLazyCreate,\n      null));\n};\n\n\n/**\n * Clears values from the map. The map will be non-null.\n * @return {!TronWebProto.ProposalCreateContract} returns this\n */\nTronWebProto.ProposalCreateContract.prototype.clearParametersMap = function() {\n  this.getParametersMap().clear();\n  return this;};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.ProposalDeleteContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.ProposalDeleteContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.ProposalDeleteContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ProposalDeleteContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    proposalId: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ProposalDeleteContract}\n */\nTronWebProto.ProposalDeleteContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.ProposalDeleteContract;\n  return TronWebProto.ProposalDeleteContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ProposalDeleteContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ProposalDeleteContract}\n */\nTronWebProto.ProposalDeleteContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setProposalId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ProposalDeleteContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.ProposalDeleteContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ProposalDeleteContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ProposalDeleteContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getProposalId();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ProposalDeleteContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.ProposalDeleteContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ProposalDeleteContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ProposalDeleteContract} returns this\n */\nTronWebProto.ProposalDeleteContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 proposal_id = 2;\n * @return {number}\n */\nTronWebProto.ProposalDeleteContract.prototype.getProposalId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ProposalDeleteContract} returns this\n */\nTronWebProto.ProposalDeleteContract.prototype.setProposalId = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\ngoog.object.extend(exports, TronWebProto);\n", "// source: core/contract/exchange_contract.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof window !== 'undefined' && window) ||\n  (typeof global !== 'undefined' && global) ||\n  (typeof self !== 'undefined' && self) ||\n  (function () { return this; }).call(null) ||\n  Function('return this')();\n\ngoog.exportSymbol('TronWebProto.ExchangeCreateContract', null, global);\ngoog.exportSymbol('TronWebProto.ExchangeInjectContract', null, global);\ngoog.exportSymbol('TronWebProto.ExchangeTransactionContract', null, global);\ngoog.exportSymbol('TronWebProto.ExchangeWithdrawContract', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ExchangeCreateContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ExchangeCreateContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.ExchangeCreateContract.displayName = 'TronWebProto.ExchangeCreateContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ExchangeInjectContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ExchangeInjectContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.ExchangeInjectContract.displayName = 'TronWebProto.ExchangeInjectContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ExchangeWithdrawContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ExchangeWithdrawContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.ExchangeWithdrawContract.displayName = 'TronWebProto.ExchangeWithdrawContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ExchangeTransactionContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ExchangeTransactionContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.ExchangeTransactionContract.displayName = 'TronWebProto.ExchangeTransactionContract';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.ExchangeCreateContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.ExchangeCreateContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.ExchangeCreateContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ExchangeCreateContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    firstTokenId: msg.getFirstTokenId_asB64(),\n    firstTokenBalance: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    secondTokenId: msg.getSecondTokenId_asB64(),\n    secondTokenBalance: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ExchangeCreateContract}\n */\nTronWebProto.ExchangeCreateContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.ExchangeCreateContract;\n  return TronWebProto.ExchangeCreateContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ExchangeCreateContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ExchangeCreateContract}\n */\nTronWebProto.ExchangeCreateContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setFirstTokenId(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFirstTokenBalance(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSecondTokenId(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSecondTokenBalance(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeCreateContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.ExchangeCreateContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ExchangeCreateContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ExchangeCreateContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getFirstTokenId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getFirstTokenBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getSecondTokenId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getSecondTokenBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ExchangeCreateContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.ExchangeCreateContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeCreateContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ExchangeCreateContract} returns this\n */\nTronWebProto.ExchangeCreateContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes first_token_id = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ExchangeCreateContract.prototype.getFirstTokenId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes first_token_id = 2;\n * This is a type-conversion wrapper around `getFirstTokenId()`\n * @return {string}\n */\nTronWebProto.ExchangeCreateContract.prototype.getFirstTokenId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getFirstTokenId()));\n};\n\n\n/**\n * optional bytes first_token_id = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFirstTokenId()`\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeCreateContract.prototype.getFirstTokenId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getFirstTokenId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ExchangeCreateContract} returns this\n */\nTronWebProto.ExchangeCreateContract.prototype.setFirstTokenId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional int64 first_token_balance = 3;\n * @return {number}\n */\nTronWebProto.ExchangeCreateContract.prototype.getFirstTokenBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ExchangeCreateContract} returns this\n */\nTronWebProto.ExchangeCreateContract.prototype.setFirstTokenBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional bytes second_token_id = 4;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ExchangeCreateContract.prototype.getSecondTokenId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes second_token_id = 4;\n * This is a type-conversion wrapper around `getSecondTokenId()`\n * @return {string}\n */\nTronWebProto.ExchangeCreateContract.prototype.getSecondTokenId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSecondTokenId()));\n};\n\n\n/**\n * optional bytes second_token_id = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSecondTokenId()`\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeCreateContract.prototype.getSecondTokenId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSecondTokenId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ExchangeCreateContract} returns this\n */\nTronWebProto.ExchangeCreateContract.prototype.setSecondTokenId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional int64 second_token_balance = 5;\n * @return {number}\n */\nTronWebProto.ExchangeCreateContract.prototype.getSecondTokenBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ExchangeCreateContract} returns this\n */\nTronWebProto.ExchangeCreateContract.prototype.setSecondTokenBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.ExchangeInjectContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.ExchangeInjectContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.ExchangeInjectContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ExchangeInjectContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    exchangeId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    tokenId: msg.getTokenId_asB64(),\n    quant: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ExchangeInjectContract}\n */\nTronWebProto.ExchangeInjectContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.ExchangeInjectContract;\n  return TronWebProto.ExchangeInjectContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ExchangeInjectContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ExchangeInjectContract}\n */\nTronWebProto.ExchangeInjectContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExchangeId(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTokenId(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setQuant(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeInjectContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.ExchangeInjectContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ExchangeInjectContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ExchangeInjectContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getExchangeId();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getTokenId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getQuant();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ExchangeInjectContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.ExchangeInjectContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeInjectContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ExchangeInjectContract} returns this\n */\nTronWebProto.ExchangeInjectContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 exchange_id = 2;\n * @return {number}\n */\nTronWebProto.ExchangeInjectContract.prototype.getExchangeId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ExchangeInjectContract} returns this\n */\nTronWebProto.ExchangeInjectContract.prototype.setExchangeId = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bytes token_id = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ExchangeInjectContract.prototype.getTokenId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes token_id = 3;\n * This is a type-conversion wrapper around `getTokenId()`\n * @return {string}\n */\nTronWebProto.ExchangeInjectContract.prototype.getTokenId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTokenId()));\n};\n\n\n/**\n * optional bytes token_id = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTokenId()`\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeInjectContract.prototype.getTokenId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTokenId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ExchangeInjectContract} returns this\n */\nTronWebProto.ExchangeInjectContract.prototype.setTokenId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 quant = 4;\n * @return {number}\n */\nTronWebProto.ExchangeInjectContract.prototype.getQuant = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ExchangeInjectContract} returns this\n */\nTronWebProto.ExchangeInjectContract.prototype.setQuant = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.ExchangeWithdrawContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.ExchangeWithdrawContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ExchangeWithdrawContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    exchangeId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    tokenId: msg.getTokenId_asB64(),\n    quant: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ExchangeWithdrawContract}\n */\nTronWebProto.ExchangeWithdrawContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.ExchangeWithdrawContract;\n  return TronWebProto.ExchangeWithdrawContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ExchangeWithdrawContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ExchangeWithdrawContract}\n */\nTronWebProto.ExchangeWithdrawContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExchangeId(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTokenId(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setQuant(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.ExchangeWithdrawContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ExchangeWithdrawContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ExchangeWithdrawContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getExchangeId();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getTokenId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getQuant();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ExchangeWithdrawContract} returns this\n */\nTronWebProto.ExchangeWithdrawContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 exchange_id = 2;\n * @return {number}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.getExchangeId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ExchangeWithdrawContract} returns this\n */\nTronWebProto.ExchangeWithdrawContract.prototype.setExchangeId = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bytes token_id = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.getTokenId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes token_id = 3;\n * This is a type-conversion wrapper around `getTokenId()`\n * @return {string}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.getTokenId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTokenId()));\n};\n\n\n/**\n * optional bytes token_id = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTokenId()`\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.getTokenId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTokenId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ExchangeWithdrawContract} returns this\n */\nTronWebProto.ExchangeWithdrawContract.prototype.setTokenId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 quant = 4;\n * @return {number}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.getQuant = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ExchangeWithdrawContract} returns this\n */\nTronWebProto.ExchangeWithdrawContract.prototype.setQuant = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.ExchangeTransactionContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.ExchangeTransactionContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.ExchangeTransactionContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ExchangeTransactionContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    exchangeId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    tokenId: msg.getTokenId_asB64(),\n    quant: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    expected: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ExchangeTransactionContract}\n */\nTronWebProto.ExchangeTransactionContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.ExchangeTransactionContract;\n  return TronWebProto.ExchangeTransactionContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ExchangeTransactionContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ExchangeTransactionContract}\n */\nTronWebProto.ExchangeTransactionContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExchangeId(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTokenId(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setQuant(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpected(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeTransactionContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.ExchangeTransactionContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ExchangeTransactionContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ExchangeTransactionContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getExchangeId();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getTokenId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getQuant();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getExpected();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ExchangeTransactionContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.ExchangeTransactionContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeTransactionContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ExchangeTransactionContract} returns this\n */\nTronWebProto.ExchangeTransactionContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 exchange_id = 2;\n * @return {number}\n */\nTronWebProto.ExchangeTransactionContract.prototype.getExchangeId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ExchangeTransactionContract} returns this\n */\nTronWebProto.ExchangeTransactionContract.prototype.setExchangeId = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bytes token_id = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ExchangeTransactionContract.prototype.getTokenId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes token_id = 3;\n * This is a type-conversion wrapper around `getTokenId()`\n * @return {string}\n */\nTronWebProto.ExchangeTransactionContract.prototype.getTokenId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTokenId()));\n};\n\n\n/**\n * optional bytes token_id = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTokenId()`\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeTransactionContract.prototype.getTokenId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTokenId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ExchangeTransactionContract} returns this\n */\nTronWebProto.ExchangeTransactionContract.prototype.setTokenId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 quant = 4;\n * @return {number}\n */\nTronWebProto.ExchangeTransactionContract.prototype.getQuant = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ExchangeTransactionContract} returns this\n */\nTronWebProto.ExchangeTransactionContract.prototype.setQuant = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional int64 expected = 5;\n * @return {number}\n */\nTronWebProto.ExchangeTransactionContract.prototype.getExpected = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ExchangeTransactionContract} returns this\n */\nTronWebProto.ExchangeTransactionContract.prototype.setExpected = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\ngoog.object.extend(exports, TronWebProto);\n", "import { byteArray2hexStr } from './bytes.js';\nimport { getBase58CheckAddress, genPriKey, getAddressFromPriKey, getPubKeyFromPriKey, pkToAddress } from './crypto.js';\nimport { ethersHDNodeWallet, Mnemonic, Wordlist } from './ethersUtils.js';\nimport { TRON_BIP39_PATH_INDEX_0 } from './address.js';\n\nconst INVALID_TRON_PATH_ERROR_MSG = 'Invalid tron path provided';\n\nexport function generateAccount() {\n    const priKeyBytes = genPriKey();\n    const pubKeyBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = getAddressFromPriKey(priKeyBytes);\n\n    const privateKey = byteArray2hexStr(priKeyBytes);\n    const publicKey = byteArray2hexStr(pubKeyBytes);\n\n    return {\n        privateKey,\n        publicKey,\n        address: {\n            base58: getBase58CheckAddress(addressBytes),\n            hex: byteArray2hexStr(addressBytes),\n        },\n    };\n}\n\nexport function generateRandom(password = '', path = TRON_BIP39_PATH_INDEX_0, wordlist?: Wordlist) {\n    const account = ethersHDNodeWallet.createRandom(password, path, wordlist);\n\n    const result = {\n        mnemonic: account.mnemonic,\n        privateKey: account.privateKey,\n        publicKey: account.signingKey.publicKey,\n        address: pkToAddress(account.privateKey.replace(/^0x/, '')),\n        path: account.path,\n    };\n\n    return result;\n}\n\nexport function generateAccountWithMnemonic(\n    mnemonic: string,\n    path: string = TRON_BIP39_PATH_INDEX_0,\n    password: string | null | undefined = '',\n    wordlist: Wordlist | null = null\n) {\n    // eslint-disable-next-line no-useless-escape\n    if (!String(path).match(/^m\\/44\\'\\/195\\'/)) {\n        throw new Error(INVALID_TRON_PATH_ERROR_MSG);\n    }\n    const account = ethersHDNodeWallet.fromMnemonic(Mnemonic.fromPhrase(mnemonic, password, wordlist), path);\n\n    const result = {\n        mnemonic: account.mnemonic,\n        privateKey: account.privateKey,\n        publicKey: account.signingKey.publicKey,\n        address: pkToAddress(account.privateKey.replace(/^0x/, '')),\n    };\n\n    return result;\n}\n", "import { Base64 } from './base64.js';\nimport { BytesLike } from '../types/UtilsTypes.js';\n\nexport function byte2hexStr(byte: number) {\n    if (byte < 0 || byte > 255) throw new Error('Input must be a byte');\n\n    const hexByteMap = '0123456789ABCDEF';\n\n    let str = '';\n    str += hexByteMap.charAt(byte >> 4);\n    str += hexByteMap.charAt(byte & 0x0f);\n\n    return str;\n}\n\nexport function bytesToString(arr: BytesLike) {\n    let str = '';\n\n    for (let i = 0; i < arr.length; i++) {\n        const one = arr[i].toString(2);\n        const v = one.match(/^1+?(?=0)/);\n\n        if (v && one.length === 8) {\n            const bytesLength = v[0].length;\n            let store = arr[i].toString(2).slice(7 - bytesLength);\n\n            for (let st = 1; st < bytesLength; st++) store += arr[st + i].toString(2).slice(2);\n\n            str += String.fromCharCode(parseInt(store, 2));\n            i += bytesLength - 1;\n        } else {\n            str += String.fromCharCode(arr[i]);\n        }\n    }\n\n    return str;\n}\n\nexport function hextoString(hex: string) {\n    const arr = hex.replace(/^0x/, '').split('');\n    let out = '';\n\n    for (let i = 0; i < arr.length / 2; i++) {\n        const tmp = `0x${arr[i * 2]}${arr[i * 2 + 1]}`;\n        out += String.fromCharCode(parseInt(tmp));\n    }\n\n    return out;\n}\n\nexport function byteArray2hexStr(byteArray: BytesLike) {\n    let str = '';\n\n    for (let i = 0; i < byteArray.length; i++) str += byte2hexStr(byteArray[i]);\n\n    return str;\n}\n\nexport function base64DecodeFromString(string64: string) {\n    return new Base64().decodeToByteArray(string64);\n}\n\nexport function base64EncodeToString(bytes: BytesLike) {\n    const b = new Base64();\n    const string64 = b.encodeIgnoreUtf8(bytes);\n\n    return string64;\n}\n", "import type { BytesLike } from '../types/UtilsTypes.js';\n\nconst _keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nexport class Base64 {\n    encode(input: string) {\n        let output = '';\n        let chr1: number;\n        let chr2: number;\n        let chr3: number;\n        let enc1: number;\n        let enc2: number;\n        let enc3: number;\n        let enc4: number;\n        let i = 0;\n\n        while (i < input.length) {\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) enc3 = enc4 = 64;\n            else if (isNaN(chr3)) enc4 = 64;\n\n            output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\n        }\n\n        return output;\n    }\n\n    encodeIgnoreUtf8(inputBytes: BytesLike) {\n        let output = '';\n        let chr1: number;\n        let chr2: number;\n        let chr3: number;\n        let enc1: number;\n        let enc2: number;\n        let enc3: number;\n        let enc4: number;\n        let i = 0;\n\n        while (i < inputBytes.length) {\n            chr1 = inputBytes[i++];\n            chr2 = inputBytes[i++];\n            chr3 = inputBytes[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) enc3 = enc4 = 64;\n            else if (isNaN(chr3)) enc4 = 64;\n\n            output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\n        }\n\n        return output;\n    }\n\n    decode(input: string) {\n        let output = '';\n        let chr1: number;\n        let chr2: number;\n        let chr3: number;\n        let enc1: number;\n        let enc2: number;\n        let enc3: number;\n        let enc4: number;\n        let i = 0;\n\n        // eslint-disable-next-line no-useless-escape\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n        while (i < input.length) {\n            enc1 = _keyStr.indexOf(input.charAt(i++));\n            enc2 = _keyStr.indexOf(input.charAt(i++));\n            enc3 = _keyStr.indexOf(input.charAt(i++));\n            enc4 = _keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64) output = output + String.fromCharCode(chr2);\n\n            if (enc4 != 64) output = output + String.fromCharCode(chr3);\n        }\n\n        return this._utf8_decode(output);\n    }\n\n    decodeToByteArray(input: string) {\n        let output = '';\n        let chr1: number;\n        let chr2: number;\n        let chr3: number;\n        let enc1: number;\n        let enc2: number;\n        let enc3: number;\n        let enc4: number;\n        let i = 0;\n\n        // eslint-disable-next-line no-useless-escape\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n        while (i < input.length) {\n            enc1 = _keyStr.indexOf(input.charAt(i++));\n            enc2 = _keyStr.indexOf(input.charAt(i++));\n            enc3 = _keyStr.indexOf(input.charAt(i++));\n            enc4 = _keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64) output = output + String.fromCharCode(chr2);\n\n            if (enc4 != 64) output = output + String.fromCharCode(chr3);\n        }\n\n        return this._out2ByteArray(output);\n    }\n\n    _out2ByteArray(utftext: string) {\n        const byteArray: BytesLike = new Array(utftext.length);\n\n        let i = 0;\n        let c = 0;\n\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n            byteArray[i] = c;\n            i++;\n        }\n\n        return byteArray;\n    }\n\n    _utf8_encode(string: string) {\n        string = string.replace(/\\r\\n/g, '\\n');\n        let utftext = '';\n\n        for (let n = 0; n < string.length; n++) {\n            const c = string.charCodeAt(n);\n\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            } else if (c > 127 && c < 2048) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            } else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n        }\n\n        return utftext;\n    }\n\n    _utf8_decode(utftext: string) {\n        let string = '';\n        let i = 0;\n        let c = 0;\n        let c2 = 0;\n        let c3 = 0;\n\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n\n            if (c < 128) {\n                string += String.fromCharCode(c);\n                i++;\n            } else if (c > 191 && c < 224) {\n                c2 = utftext.charCodeAt(i + 1);\n                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n                i += 2;\n            } else {\n                c2 = utftext.charCodeAt(i + 1);\n                c3 = utftext.charCodeAt(i + 2);\n\n                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\n                i += 3;\n            }\n        }\n\n        return string;\n    }\n}\n", "import { ADDRESS_PREFIX, ADDRESS_PREFIX_BYTE, ADDRESS_SIZE } from './address.js';\nimport { base64EncodeToString, base64DecodeFromString, hexStr2byteArray } from './code.js';\nimport { encode58, decode58 } from './base58.js';\nimport { byte2hexStr, byteArray2hexStr } from './bytes.js';\nimport { keccak256, sha256, SigningKey, recoverAddress, arrayify, Signature } from './ethersUtils.js';\nimport { TypedDataEncoder } from './typedData.js';\nimport { secp256k1 as secp } from 'ethereum-cryptography/secp256k1';\nimport type { TypedDataDomain, TypedDataField } from 'ethers';\nimport { SignedTransaction } from '../types/Transaction.js';\n\nimport type { BytesLike } from '../types/UtilsTypes.js';\n\nfunction normalizePrivateKeyBytes(priKeyBytes: BytesLike) {\n    return hexStr2byteArray(byteArray2hexStr(priKeyBytes).padStart(64, '0'));\n}\n\nexport function getBase58CheckAddress(addressBytes: number[]) {\n    const hash0 = SHA256(addressBytes);\n    const hash1 = SHA256(hash0);\n\n    let checkSum = hash1.slice(0, 4);\n    checkSum = addressBytes.concat(checkSum);\n\n    return encode58(checkSum);\n}\n\nexport function decodeBase58Address(base58Sting: string) {\n    if (typeof base58Sting != 'string') return false;\n\n    if (base58Sting.length <= 4) return false;\n\n    let address = decode58(base58Sting);\n\n    if (base58Sting.length <= 4) return false;\n\n    const len = address.length;\n    const offset = len - 4;\n    const checkSum = address.slice(offset);\n\n    address = address.slice(0, offset);\n\n    const hash0 = SHA256(address);\n    const hash1 = SHA256(hash0);\n    const checkSum1 = hash1.slice(0, 4);\n\n    if (\n        checkSum[0] == checkSum1[0] &&\n        checkSum[1] == checkSum1[1] &&\n        checkSum[2] == checkSum1[2] &&\n        checkSum[3] == checkSum1[3]\n    ) {\n        return address;\n    }\n\n    throw new Error('Invalid address provided');\n}\n\n// @TODO transaction type should be determined.\nexport function signTransaction(priKeyBytes: string | BytesLike, transaction: any): SignedTransaction {\n    if (typeof priKeyBytes === 'string') priKeyBytes = hexStr2byteArray(priKeyBytes);\n\n    const txID = transaction.txID;\n    const signature = ECKeySign(hexStr2byteArray(txID), priKeyBytes);\n\n    if (Array.isArray(transaction.signature)) {\n        if (!transaction.signature.includes(signature)) transaction.signature.push(signature);\n    } else transaction.signature = [signature];\n    return transaction;\n}\n\nexport function ecRecover(signedData: string, signature: string) {\n    signedData = '0x' + signedData.replace(/^0x/, '');\n    signature = '0x' + signature.replace(/^0x/, '');\n\n    const recovered = recoverAddress(arrayify(signedData), Signature.from(signature));\n    const tronAddress = ADDRESS_PREFIX + recovered.substring(2);\n    return tronAddress;\n}\n\nexport function arrayToBase64String(a: number[]) {\n    return btoa(String.fromCharCode(...a));\n}\n\nexport function signBytes(privateKey: string | BytesLike, contents: BytesLike) {\n    if (typeof privateKey === 'string') privateKey = hexStr2byteArray(privateKey);\n\n    const hashBytes = SHA256(contents);\n    const signBytes = ECKeySign(hashBytes, privateKey);\n\n    return signBytes;\n}\n\nexport function _signTypedData(\n    domain: TypedDataDomain,\n    types: Record<string, Array<TypedDataField>>,\n    value: Record<string, any>,\n    privateKey: string\n) {\n    const key = `0x${privateKey.replace(/^0x/, '')}`;\n    const signingKey = new SigningKey(key);\n\n    const messageDigest = TypedDataEncoder.hash(domain, types, value);\n    const signature = signingKey.sign(messageDigest);\n    const signatureHex = ['0x', signature.r.substring(2), signature.s.substring(2), Number(signature.v).toString(16)].join('');\n    return signatureHex;\n}\n\nexport function getRowBytesFromTransactionBase64(base64Data: string): Uint8Array {\n    const bytesDecode = base64DecodeFromString(base64Data);\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const transaction = globalThis.proto.protocol.Transaction.deserializeBinary(bytesDecode);\n    const raw = transaction.getRawData();\n\n    return raw.serializeBinary();\n}\n\nexport function genPriKey() {\n    const priKey = secp.utils.randomPrivateKey();\n    let priKeyHex = byteArray2hexStr(priKey);\n\n    priKeyHex = priKeyHex.padStart(64, '0');\n\n    return hexStr2byteArray(priKeyHex);\n}\n\nexport function computeAddress(pubBytes: BytesLike) {\n    if (pubBytes.length === 65) pubBytes = pubBytes.slice(1);\n\n    const hash = keccak256(new Uint8Array(pubBytes)).toString().substring(2);\n    const addressHex = ADDRESS_PREFIX + hash.substring(24);\n\n    return hexStr2byteArray(addressHex);\n}\n\nexport function getAddressFromPriKey(priKeyBytes: BytesLike) {\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    return computeAddress(pubBytes);\n}\n\nexport function decode58Check(addressStr: string) {\n    const decodeCheck = decode58(addressStr);\n\n    if (decodeCheck.length <= 4) return false;\n\n    const decodeData = decodeCheck.slice(0, decodeCheck.length - 4);\n    const hash0 = SHA256(decodeData);\n    const hash1 = SHA256(hash0);\n\n    if (\n        hash1[0] === decodeCheck[decodeData.length] &&\n        hash1[1] === decodeCheck[decodeData.length + 1] &&\n        hash1[2] === decodeCheck[decodeData.length + 2] &&\n        hash1[3] === decodeCheck[decodeData.length + 3]\n    ) {\n        return decodeData;\n    }\n\n    return false;\n}\n\nexport function isAddressValid(base58Str: string) {\n    if (typeof base58Str !== 'string') return false;\n\n    if (base58Str.length !== ADDRESS_SIZE) return false;\n\n    let address = decode58(base58Str);\n\n    if (address.length !== 25) return false;\n\n    if (address[0] !== ADDRESS_PREFIX_BYTE) return false;\n\n    const checkSum = address.slice(21);\n    address = address.slice(0, 21);\n\n    const hash0 = SHA256(address);\n    const hash1 = SHA256(hash0);\n    const checkSum1 = hash1.slice(0, 4);\n\n    if (\n        checkSum[0] == checkSum1[0] &&\n        checkSum[1] == checkSum1[1] &&\n        checkSum[2] == checkSum1[2] &&\n        checkSum[3] == checkSum1[3]\n    ) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getBase58CheckAddressFromPriKeyBase64String(priKeyBase64String: string) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n\n    return getBase58CheckAddress(addressBytes);\n}\n\nexport function getHexStrAddressFromPriKeyBase64String(priKeyBase64String: string) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n    const addressHex = byteArray2hexStr(addressBytes);\n\n    return addressHex;\n}\n\nexport function getAddressFromPriKeyBase64String(priKeyBase64String: string) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n    const addressBase64 = base64EncodeToString(addressBytes);\n\n    return addressBase64;\n}\n\nexport function getPubKeyFromPriKey(priKeyBytes: BytesLike) {\n    const pubkey = secp.ProjectivePoint.fromPrivateKey(new Uint8Array(normalizePrivateKeyBytes(priKeyBytes)));\n    const x = pubkey.x;\n    const y = pubkey.y;\n\n    const xHex = x.toString(16).padStart(64, '0');\n    const yHex = y.toString(16).padStart(64, '0');\n\n    const pubkeyHex = `04${xHex}${yHex}`;\n    const pubkeyBytes = hexStr2byteArray(pubkeyHex);\n\n    return pubkeyBytes;\n}\n\nexport function ECKeySign(hashBytes: BytesLike, priKeyBytes: BytesLike) {\n    const signature = secp.sign(byteArray2hexStr(hashBytes), byteArray2hexStr(priKeyBytes));\n\n    const r = signature.r.toString(16);\n    const s = signature.s.toString(16);\n    const v = signature.recovery! + 27;\n\n    return r.padStart(64, '0') + s.padStart(64, '0') + byte2hexStr(v);\n}\n\nexport function SHA256(msgBytes: BytesLike) {\n    const msgHex = byteArray2hexStr(msgBytes);\n    const hashHex = sha256('0x' + msgHex).replace(/^0x/, '');\n    return hexStr2byteArray(hashHex);\n}\n\nexport function passwordToAddress(password: string) {\n    const com_priKeyBytes = base64DecodeFromString(password);\n    const com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n\n    return getBase58CheckAddress(com_addressBytes);\n}\n\nexport function pkToAddress(privateKey: string, strict = false) {\n    const com_priKeyBytes = hexStr2byteArray(privateKey, strict);\n    const com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n\n    return getBase58CheckAddress(com_addressBytes);\n}\n\nexport function sha3(string: string, prefix = true) {\n    return (prefix ? '0x' : '') + keccak256(Buffer.from(string, 'utf-8')).toString().substring(2);\n}\n", "import { hexStr2byteArray, byteArray2hexStr } from './code.js';\nimport { decodeBase58Address, getBase58CheckAddress, isAddressValid, pkToAddress } from './crypto.js';\nimport { isHex, isString } from './validations.js';\nimport { keccak256 } from './ethersUtils.js';\n\nexport const ADDRESS_SIZE = 34;\nexport const ADDRESS_PREFIX = '41';\nexport const ADDRESS_PREFIX_BYTE = 0x41;\nexport const ADDRESS_PREFIX_REGEX = /^(41)/;\n\nexport const TRON_BIP39_PATH_PREFIX = \"m/44'/195'\";\nexport const TRON_BIP39_PATH_INDEX_0 = TRON_BIP39_PATH_PREFIX + \"/0'/0/0\";\n\nexport function fromHex(address: string) {\n    if (!isHex(address)) return address;\n\n    return getBase58CheckAddress(hexStr2byteArray(address.replace(/^0x/, ADDRESS_PREFIX)));\n}\n\nexport function toHex(address: string) {\n    if (isHex(address)) return address.toLowerCase().replace(/^0x/, ADDRESS_PREFIX);\n\n    return byteArray2hexStr(decodeBase58Address(address) as number[]).toLowerCase();\n}\n\nfunction getChecksumAddress(address: string): string {\n    address = address.toLowerCase();\n\n    const chars = address.substring(2).split('');\n\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n\n    const hashed = hexStr2byteArray(keccak256(expanded).slice(2));\n\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n\n    return ADDRESS_PREFIX + chars.join('');\n}\n\nexport function toChecksumAddress(address: string) {\n    if (!isAddress(address)) throw new Error(`'${address}' is not a valid address string`);\n    return getChecksumAddress(toHex(address));\n}\n\nexport function isChecksumAddress(address: string) {\n    if (!isHex(address) || address.length !== 42) return false;\n    try {\n        return toChecksumAddress(address) === address;\n    } catch {\n        return false;\n    }\n}\n\nexport function fromPrivateKey(privateKey: string, strict = false) {\n    try {\n        return pkToAddress(privateKey, strict);\n    } catch {\n        return false;\n    }\n}\n\nexport function isAddress(address: unknown): boolean {\n    if (!address || !isString(address)) return false;\n\n    // Convert HEX to Base58\n    if (address.length === 42) {\n        try {\n            // it throws an error if the address starts with 0x\n            return isAddress(getBase58CheckAddress(hexStr2byteArray(address)));\n        } catch (err) {\n            return false;\n        }\n    }\n    try {\n        return isAddressValid(address);\n    } catch (err) {\n        return false;\n    }\n}\n", "import {\n    byte2hexStr,\n    bytesToString,\n    hextoString,\n    byteArray2hexStr,\n    base64DecodeFromString,\n    base64EncodeToString,\n} from './bytes.js';\n\nimport type { BytesLike } from '../types/UtilsTypes.js';\n\nexport function bin2String(array: BytesLike) {\n    return bytesToString(array);\n}\n\nexport function arrayEquals(array1: any[], array2: any[], strict = false) {\n    if (array1.length != array2.length) return false;\n\n    for (let i = 0; i < array1.length; i++) {\n        if (strict) {\n            if (array1[i] != array2[i]) return false;\n        } else if (JSON.stringify(array1[i]) != JSON.stringify(array2[i])) return false;\n    }\n\n    return true;\n}\n\nexport function stringToBytes(str: string) {\n    const bytes = [];\n    const len: number = str.length;\n    let c: number;\n\n    for (let i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n\n        if (c >= 0x010000 && c <= 0x10ffff) {\n            bytes.push(((c >> 18) & 0x07) | 0xf0);\n            bytes.push(((c >> 12) & 0x3f) | 0x80);\n            bytes.push(((c >> 6) & 0x3f) | 0x80);\n            bytes.push((c & 0x3f) | 0x80);\n        } else if (c >= 0x000800 && c <= 0x00ffff) {\n            bytes.push(((c >> 12) & 0x0f) | 0xe0);\n            bytes.push(((c >> 6) & 0x3f) | 0x80);\n            bytes.push((c & 0x3f) | 0x80);\n        } else if (c >= 0x000080 && c <= 0x0007ff) {\n            bytes.push(((c >> 6) & 0x1f) | 0xc0);\n            bytes.push((c & 0x3f) | 0x80);\n        } else bytes.push(c & 0xff);\n    }\n\n    return bytes;\n}\n\nexport { byte2hexStr, bytesToString, hextoString, byteArray2hexStr, base64DecodeFromString, base64EncodeToString };\n\nexport function hexChar2byte(c: string) {\n    let d: number | undefined;\n\n    if (c >= 'A' && c <= 'F') d = c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n    else if (c >= 'a' && c <= 'f') d = c.charCodeAt(0) - 'a'.charCodeAt(0) + 10;\n    else if (c >= '0' && c <= '9') d = c.charCodeAt(0) - '0'.charCodeAt(0);\n\n    if (typeof d === 'number') return d;\n    else throw new Error('The passed hex char is not a valid hex char');\n}\n\nexport function isHexChar(c: string) {\n    if ((c >= 'A' && c <= 'F') || (c >= 'a' && c <= 'f') || (c >= '0' && c <= '9')) {\n        return 1;\n    }\n\n    return 0;\n}\n\n// set strict as true: if the length of str is odd, add 0 before the str to make its length as even\nexport function hexStr2byteArray(str: string, strict = false) {\n    let len = str.length;\n\n    if (strict) {\n        if (len % 2) {\n            str = `0${str}`;\n            len++;\n        }\n    }\n    const byteArray: number[] = [];\n    let d = 0;\n    let j = 0;\n    let k = 0;\n\n    for (let i = 0; i < len; i++) {\n        const c = str.charAt(i);\n\n        if (isHexChar(c)) {\n            d <<= 4;\n            d += hexChar2byte(c);\n            j++;\n\n            if (0 === j % 2) {\n                byteArray[k++] = d;\n                d = 0;\n            }\n        } else throw new Error('The passed hex char is not a valid hex string');\n    }\n\n    return byteArray;\n}\n\n//yyyy-MM-DD HH-mm-ss\nexport function strToDate(str: string) {\n    if (!/^\\d{4}-\\d{2}-\\d{2}( \\d{2}-\\d{2}-\\d{2}|)/.test(str)) throw new Error('The passed date string is not valid');\n\n    const tempStrs = str.split(' ');\n    const dateStrs = tempStrs[0].split('-');\n    const year = parseInt(dateStrs[0], 10);\n    const month = parseInt(dateStrs[1], 10) - 1;\n    const day = parseInt(dateStrs[2], 10);\n\n    if (tempStrs.length > 1) {\n        const timeStrs = tempStrs[1].split('-');\n        const hour = parseInt(timeStrs[0], 10);\n        const minute = parseInt(timeStrs[1], 10);\n        const second = parseInt(timeStrs[2], 10);\n\n        return new Date(year, month, day, hour, minute, second);\n    }\n\n    return new Date(year, month, day);\n}\n\nexport function isNumber(c: string) {\n    if (c >= '0' && c <= '9') return 1;\n\n    return 0;\n}\n\n//return 1: address  --- 20Bytes HexString\n//return 2: blockNumber ------ Decimal number\n//return 3: assetName ------ String\n//return other: error\nexport function getStringType(str: string) {\n    if (null == str) return -1;\n\n    if (str.length == 0 || str == '') return -1;\n\n    let i = 0;\n\n    if (str.length == 40) {\n        for (; i < 40; i++) {\n            const c = str.charAt(i);\n\n            if (!isHexChar(c)) break;\n        }\n    }\n\n    if (i == 40) return 1; //40 Hex, Address\n\n    for (i = 0; i < str.length; i++) {\n        const c = str.charAt(i);\n\n        if (!isNumber(c)) break;\n    }\n\n    if (i == str.length) return 2; // All Decimal number, BlockNumber\n\n    for (i = 0; i < str.length; i++) {\n        const c = str.charAt(i);\n\n        if (c > ' ') return 3; // At least one visible character\n    }\n\n    return -1;\n}\n", "import { BigNumber } from 'bignumber.js';\nimport validator from 'validator';\nimport { ADDRESS_PREFIX } from './address.js';\nimport { AbiParamsCommon } from '../types/ABI.js';\nimport { IBigNumber } from '../types/TronWeb.js';\n\nimport type { EventQueryDataType, MapEventQueryDataType } from '../types/UtilsTypes.js';\n\nexport function isValidURL(url: string): boolean {\n    if (typeof url !== 'string') return false;\n    return validator.isURL(url.toString(), {\n        protocols: ['http', 'https'],\n        require_tld: false,\n    });\n}\n\nexport function isObject(obj: unknown): obj is Record<number | string | symbol, unknown> {\n    return obj === Object(obj) && Object.prototype.toString.call(obj) !== '[object Array]';\n}\n\nexport function isArray(array: unknown): array is unknown[] {\n    return Array.isArray(array);\n}\n\nexport function isJson(string: string): boolean {\n    try {\n        return !!JSON.parse(string);\n    } catch (ex) {\n        return false;\n    }\n}\n\nexport function isBoolean(bool: unknown): bool is boolean {\n    return typeof bool === 'boolean';\n}\n\nexport function isBigNumber(number: unknown): number is IBigNumber {\n    return !!number && (number instanceof BigNumber || (number.constructor && number.constructor.name === 'BigNumber'));\n}\n\nexport function isString(string: unknown): string is string {\n    return typeof string === 'string' || (!!string && string.constructor && string.constructor.name === 'String');\n}\n\nexport function isFunction(obj: unknown): obj is (...args: unknown[]) => unknown {\n    return typeof obj === 'function';\n}\n\nexport function isHex(string: string): string is string {\n    return typeof string === 'string' && !isNaN(parseInt(string, 16)) && /^(0x|)[a-fA-F0-9]+$/.test(string);\n}\n\nexport function isInteger(number: unknown): number is number {\n    if (number === null) return false;\n    return Number.isInteger(Number(number));\n}\n\nexport function hasProperty(obj: object, property: string | number | symbol) {\n    return Object.prototype.hasOwnProperty.call(obj, property);\n}\n\nexport function hasProperties(obj: object, ...properties: (string | number | symbol)[]) {\n    return (\n        properties.length &&\n        !properties\n            .map((property) => {\n                return hasProperty(obj, property);\n            })\n            .includes(false)\n    );\n}\n\nexport function mapEvent(event: EventQueryDataType) {\n    const data: MapEventQueryDataType = {\n        block: event.block_number,\n        timestamp: event.block_timestamp,\n        contract: event.contract_address,\n        name: event.event_name,\n        transaction: event.transaction_id,\n        result: event.result,\n        resourceNode: event.resource_Node || (event._unconfirmed ? 'fullNode' : 'solidityNode'),\n    };\n    if (event._unconfirmed) {\n        data.unconfirmed = event._unconfirmed;\n    }\n    if (event._fingerprint) {\n        data.fingerprint = event._fingerprint;\n    }\n    return data;\n}\n\nexport function parseEvent(event: EventQueryDataType, { inputs: abi }: { inputs: ReadonlyArray<AbiParamsCommon> }) {\n    if (!event.result) return event;\n\n    if (isObject(event.result)) {\n        for (let i = 0; i < abi.length; i++) {\n            const obj = abi[i];\n            if (obj.type == 'address' && obj.name in event.result)\n                event.result[obj.name] = ADDRESS_PREFIX + (event.result[obj.name] as string).substr(2).toLowerCase();\n        }\n    } else if (isArray(event.result)) {\n        event.result = (event.result as string[]).reduce<Record<string, string>>((obj, result, index) => {\n            const { name, type } = abi[index];\n\n            if (type == 'address') result = ADDRESS_PREFIX + result.substr(2).toLowerCase();\n\n            obj[name] = result;\n\n            return obj;\n        }, {});\n    }\n\n    return event;\n}\n\nexport function padLeft(input: string | number, padding: string, amount: number): string {\n    let res = input.toString();\n\n    while (res.length < amount) res = padding + res;\n\n    return res;\n}\n\nexport function isNotNullOrUndefined(val: unknown): boolean {\n    return val !== null && typeof val !== 'undefined';\n}\n\nexport async function sleep(millis = 1000): Promise<any> {\n    return new Promise((resolve) => setTimeout(resolve, millis));\n}\n", "/*\r\n *      bignumber.js v9.1.2\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\nvar\r\n  isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n  mathceil = Math.ceil,\r\n  mathfloor = Math.floor,\r\n\r\n  bignumberError = '[BigNumber Error] ',\r\n  tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n  BASE = 1e14,\r\n  LOG_BASE = 14,\r\n  MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n  // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n  POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n  SQRT_BASE = 1e7,\r\n\r\n  // EDITABLE\r\n  // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n  // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n  MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n/*\r\n * Create and return a BigNumber constructor.\r\n */\r\nfunction clone(configObject) {\r\n  var div, convertBase, parseNumeric,\r\n    P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n    ONE = new BigNumber(1),\r\n\r\n\r\n    //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n    // The default values below must be integers within the inclusive ranges stated.\r\n    // The values can also be changed at run-time using BigNumber.set.\r\n\r\n    // The maximum number of decimal places for operations involving division.\r\n    DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n    // The rounding mode used when rounding to the above decimal places, and when using\r\n    // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n    // UP         0 Away from zero.\r\n    // DOWN       1 Towards zero.\r\n    // CEIL       2 Towards +Infinity.\r\n    // FLOOR      3 Towards -Infinity.\r\n    // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n    // The exponent value at and beneath which toString returns exponential notation.\r\n    // Number type: -7\r\n    TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n    // The exponent value at and above which toString returns exponential notation.\r\n    // Number type: 21\r\n    TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n    // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // Number type: -324  (5e-324)\r\n    MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // Number type:  308  (1.7976931348623157e+308)\r\n    // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n    MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    CRYPTO = false,                          // true or false\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN      1 The remainder has the same sign as the dividend.\r\n    //             This modulo mode is commonly known as 'truncated division' and is\r\n    //             equivalent to (a % n) in JavaScript.\r\n    // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n    // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n    //             The remainder is always positive.\r\n    //\r\n    // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n    // modes are commonly used for the modulus operation.\r\n    // Although the other rounding modes can also be used, they may not give useful results.\r\n    MODULO_MODE = 1,                         // 0 to 9\r\n\r\n    // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n    // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n    POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n    // The format specification used by the BigNumber.prototype.toFormat method.\r\n    FORMAT = {\r\n      prefix: '',\r\n      groupSize: 3,\r\n      secondaryGroupSize: 0,\r\n      groupSeparator: ',',\r\n      decimalSeparator: '.',\r\n      fractionGroupSize: 0,\r\n      fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n      suffix: ''\r\n    },\r\n\r\n    // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n    // '-', '.', whitespace, or repeated character.\r\n    // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n    ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n    alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n  //------------------------------------------------------------------------------------------\r\n\r\n\r\n  // CONSTRUCTOR\r\n\r\n\r\n  /*\r\n   * The BigNumber constructor and exported function.\r\n   * Create and return a new instance of a BigNumber object.\r\n   *\r\n   * v {number|string|BigNumber} A numeric value.\r\n   * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n   */\r\n  function BigNumber(v, b) {\r\n    var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n      x = this;\r\n\r\n    // Enable constructor call without `new`.\r\n    if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n    if (b == null) {\r\n\r\n      if (v && v._isBigNumber === true) {\r\n        x.s = v.s;\r\n\r\n        if (!v.c || v.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n        } else if (v.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.c = v.c.slice();\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n        // Use `1 / n` to handle minus zero also.\r\n        x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n        // Fast path for integers, where n < 2147483648 (2**31).\r\n        if (v === ~~v) {\r\n          for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n          if (e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else {\r\n            x.e = e;\r\n            x.c = [v];\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        str = String(v);\r\n      } else {\r\n\r\n        if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n        x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n      // Exponential form?\r\n      if ((i = str.search(/e/i)) > 0) {\r\n\r\n        // Determine exponent.\r\n        if (e < 0) e = i;\r\n        e += +str.slice(i + 1);\r\n        str = str.substring(0, i);\r\n      } else if (e < 0) {\r\n\r\n        // Integer.\r\n        e = str.length;\r\n      }\r\n\r\n    } else {\r\n\r\n      // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n      intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n      // Allow exponential notation to be used with base 10 argument, while\r\n      // also rounding to DECIMAL_PLACES as with other bases.\r\n      if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n        x = new BigNumber(v);\r\n        return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n      }\r\n\r\n      str = String(v);\r\n\r\n      if (isNum = typeof v == 'number') {\r\n\r\n        // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n        if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n        x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n          throw Error\r\n           (tooManyDigits + v);\r\n        }\r\n      } else {\r\n        x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      alphabet = ALPHABET.slice(0, b);\r\n      e = i = 0;\r\n\r\n      // Check that str is a valid base b number.\r\n      // Don't use RegExp, so alphabet can contain special characters.\r\n      for (len = str.length; i < len; i++) {\r\n        if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n          if (c == '.') {\r\n\r\n            // If '.' is not the first character and it has not be found before.\r\n            if (i > e) {\r\n              e = len;\r\n              continue;\r\n            }\r\n          } else if (!caseChanged) {\r\n\r\n            // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n            if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n              caseChanged = true;\r\n              i = -1;\r\n              e = 0;\r\n              continue;\r\n            }\r\n          }\r\n\r\n          return parseNumeric(x, String(v), isNum, b);\r\n        }\r\n      }\r\n\r\n      // Prevent later check for length on converted number.\r\n      isNum = false;\r\n      str = convertBase(str, b, 10, x.s);\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n      else e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n    if (str = str.slice(i, ++len)) {\r\n      len -= i;\r\n\r\n      // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n      if (isNum && BigNumber.DEBUG &&\r\n        len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n          throw Error\r\n           (tooManyDigits + (x.s * v));\r\n      }\r\n\r\n       // Overflow?\r\n      if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        x.c = x.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      } else {\r\n        x.e = e;\r\n        x.c = [];\r\n\r\n        // Transform base\r\n\r\n        // e is the base 10 exponent.\r\n        // i is where to slice str to get the first element of the coefficient array.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n        if (i < len) {\r\n          if (i) x.c.push(+str.slice(0, i));\r\n\r\n          for (len -= LOG_BASE; i < len;) {\r\n            x.c.push(+str.slice(i, i += LOG_BASE));\r\n          }\r\n\r\n          i = LOG_BASE - (str = str.slice(i)).length;\r\n        } else {\r\n          i -= len;\r\n        }\r\n\r\n        for (; i--; str += '0');\r\n        x.c.push(+str);\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    }\r\n  }\r\n\r\n\r\n  // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n  BigNumber.clone = clone;\r\n\r\n  BigNumber.ROUND_UP = 0;\r\n  BigNumber.ROUND_DOWN = 1;\r\n  BigNumber.ROUND_CEIL = 2;\r\n  BigNumber.ROUND_FLOOR = 3;\r\n  BigNumber.ROUND_HALF_UP = 4;\r\n  BigNumber.ROUND_HALF_DOWN = 5;\r\n  BigNumber.ROUND_HALF_EVEN = 6;\r\n  BigNumber.ROUND_HALF_CEIL = 7;\r\n  BigNumber.ROUND_HALF_FLOOR = 8;\r\n  BigNumber.EUCLID = 9;\r\n\r\n\r\n  /*\r\n   * Configure infrequently-changing library-wide settings.\r\n   *\r\n   * Accept an object with the following optional properties (if the value of a property is\r\n   * a number, it must be an integer within the inclusive range stated):\r\n   *\r\n   *   DECIMAL_PLACES   {number}           0 to MAX\r\n   *   ROUNDING_MODE    {number}           0 to 8\r\n   *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n   *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n   *   CRYPTO           {boolean}          true or false\r\n   *   MODULO_MODE      {number}           0 to 9\r\n   *   POW_PRECISION       {number}           0 to MAX\r\n   *   ALPHABET         {string}           A string of two or more unique characters which does\r\n   *                                       not contain '.'.\r\n   *   FORMAT           {object}           An object with some of the following properties:\r\n   *     prefix                 {string}\r\n   *     groupSize              {number}\r\n   *     secondaryGroupSize     {number}\r\n   *     groupSeparator         {string}\r\n   *     decimalSeparator       {string}\r\n   *     fractionGroupSize      {number}\r\n   *     fractionGroupSeparator {string}\r\n   *     suffix                 {string}\r\n   *\r\n   * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n   *\r\n   * E.g.\r\n   * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n   *\r\n   * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n   *\r\n   * Return an object with the properties current values.\r\n   */\r\n  BigNumber.config = BigNumber.set = function (obj) {\r\n    var p, v;\r\n\r\n    if (obj != null) {\r\n\r\n      if (typeof obj == 'object') {\r\n\r\n        // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          DECIMAL_PLACES = v;\r\n        }\r\n\r\n        // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n        // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 8, p);\r\n          ROUNDING_MODE = v;\r\n        }\r\n\r\n        // EXPONENTIAL_AT {number|number[]}\r\n        // Integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n        // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, 0, p);\r\n            intCheck(v[1], 0, MAX, p);\r\n            TO_EXP_NEG = v[0];\r\n            TO_EXP_POS = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n          }\r\n        }\r\n\r\n        // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n        // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n        if (obj.hasOwnProperty(p = 'RANGE')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, -1, p);\r\n            intCheck(v[1], 1, MAX, p);\r\n            MIN_EXP = v[0];\r\n            MAX_EXP = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            if (v) {\r\n              MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' cannot be zero: ' + v);\r\n            }\r\n          }\r\n        }\r\n\r\n        // CRYPTO {boolean} true or false.\r\n        // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n        // '[BigNumber Error] crypto unavailable'\r\n        if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n          v = obj[p];\r\n          if (v === !!v) {\r\n            if (v) {\r\n              if (typeof crypto != 'undefined' && crypto &&\r\n               (crypto.getRandomValues || crypto.randomBytes)) {\r\n                CRYPTO = v;\r\n              } else {\r\n                CRYPTO = !v;\r\n                throw Error\r\n                 (bignumberError + 'crypto unavailable');\r\n              }\r\n            } else {\r\n              CRYPTO = v;\r\n            }\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' not true or false: ' + v);\r\n          }\r\n        }\r\n\r\n        // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n        // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 9, p);\r\n          MODULO_MODE = v;\r\n        }\r\n\r\n        // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          POW_PRECISION = v;\r\n        }\r\n\r\n        // FORMAT {object}\r\n        // '[BigNumber Error] FORMAT not an object: {v}'\r\n        if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n          v = obj[p];\r\n          if (typeof v == 'object') FORMAT = v;\r\n          else throw Error\r\n           (bignumberError + p + ' not an object: ' + v);\r\n        }\r\n\r\n        // ALPHABET {string}\r\n        // '[BigNumber Error] ALPHABET invalid: {v}'\r\n        if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n          v = obj[p];\r\n\r\n          // Disallow if less than two characters,\r\n          // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n          if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n            alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n            ALPHABET = v;\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' invalid: ' + v);\r\n          }\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Object expected: {v}'\r\n        throw Error\r\n         (bignumberError + 'Object expected: ' + obj);\r\n      }\r\n    }\r\n\r\n    return {\r\n      DECIMAL_PLACES: DECIMAL_PLACES,\r\n      ROUNDING_MODE: ROUNDING_MODE,\r\n      EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n      RANGE: [MIN_EXP, MAX_EXP],\r\n      CRYPTO: CRYPTO,\r\n      MODULO_MODE: MODULO_MODE,\r\n      POW_PRECISION: POW_PRECISION,\r\n      FORMAT: FORMAT,\r\n      ALPHABET: ALPHABET\r\n    };\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if v is a BigNumber instance, otherwise return false.\r\n   *\r\n   * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n   *\r\n   * v {any}\r\n   *\r\n   * '[BigNumber Error] Invalid BigNumber: {v}'\r\n   */\r\n  BigNumber.isBigNumber = function (v) {\r\n    if (!v || v._isBigNumber !== true) return false;\r\n    if (!BigNumber.DEBUG) return true;\r\n\r\n    var i, n,\r\n      c = v.c,\r\n      e = v.e,\r\n      s = v.s;\r\n\r\n    out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n      if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n        // If the first element is zero, the BigNumber value must be zero.\r\n        if (c[0] === 0) {\r\n          if (e === 0 && c.length === 1) return true;\r\n          break out;\r\n        }\r\n\r\n        // Calculate number of digits that c[0] should have, based on the exponent.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (i < 1) i += LOG_BASE;\r\n\r\n        // Calculate number of digits of c[0].\r\n        //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n        if (String(c[0]).length == i) {\r\n\r\n          for (i = 0; i < c.length; i++) {\r\n            n = c[i];\r\n            if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n          }\r\n\r\n          // Last element cannot be zero, unless it is the only element.\r\n          if (n !== 0) return true;\r\n        }\r\n      }\r\n\r\n    // Infinity/NaN\r\n    } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n      return true;\r\n    }\r\n\r\n    throw Error\r\n      (bignumberError + 'Invalid BigNumber: ' + v);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.maximum = BigNumber.max = function () {\r\n    return maxOrMin(arguments, -1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.minimum = BigNumber.min = function () {\r\n    return maxOrMin(arguments, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n   * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n   * zeros are produced).\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n   * '[BigNumber Error] crypto unavailable'\r\n   */\r\n  BigNumber.random = (function () {\r\n    var pow2_53 = 0x20000000000000;\r\n\r\n    // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n    // Check if Math.random() produces more than 32 bits of randomness.\r\n    // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n    // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n    var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n     ? function () { return mathfloor(Math.random() * pow2_53); }\r\n     : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n       (Math.random() * 0x800000 | 0); };\r\n\r\n    return function (dp) {\r\n      var a, b, e, k, v,\r\n        i = 0,\r\n        c = [],\r\n        rand = new BigNumber(ONE);\r\n\r\n      if (dp == null) dp = DECIMAL_PLACES;\r\n      else intCheck(dp, 0, MAX);\r\n\r\n      k = mathceil(dp / LOG_BASE);\r\n\r\n      if (CRYPTO) {\r\n\r\n        // Browsers supporting crypto.getRandomValues.\r\n        if (crypto.getRandomValues) {\r\n\r\n          a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n          for (; i < k;) {\r\n\r\n            // 53 bits:\r\n            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n            //                                     11111 11111111 11111111\r\n            // 0x20000 is 2^21.\r\n            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n            // Rejection sampling:\r\n            // 0 <= v < 9007199254740992\r\n            // Probability that v >= 9e15, is\r\n            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n            if (v >= 9e15) {\r\n              b = crypto.getRandomValues(new Uint32Array(2));\r\n              a[i] = b[0];\r\n              a[i + 1] = b[1];\r\n            } else {\r\n\r\n              // 0 <= v <= 8999999999999999\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 2;\r\n            }\r\n          }\r\n          i = k / 2;\r\n\r\n        // Node.js supporting crypto.randomBytes.\r\n        } else if (crypto.randomBytes) {\r\n\r\n          // buffer\r\n          a = crypto.randomBytes(k *= 7);\r\n\r\n          for (; i < k;) {\r\n\r\n            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n            // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n            // 0 <= v < 9007199254740992\r\n            v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n               (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n               (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n            if (v >= 9e15) {\r\n              crypto.randomBytes(7).copy(a, i);\r\n            } else {\r\n\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 7;\r\n            }\r\n          }\r\n          i = k / 7;\r\n        } else {\r\n          CRYPTO = false;\r\n          throw Error\r\n           (bignumberError + 'crypto unavailable');\r\n        }\r\n      }\r\n\r\n      // Use Math.random.\r\n      if (!CRYPTO) {\r\n\r\n        for (; i < k;) {\r\n          v = random53bitInt();\r\n          if (v < 9e15) c[i++] = v % 1e14;\r\n        }\r\n      }\r\n\r\n      k = c[--i];\r\n      dp %= LOG_BASE;\r\n\r\n      // Convert trailing digits to zeros according to dp.\r\n      if (k && dp) {\r\n        v = POWS_TEN[LOG_BASE - dp];\r\n        c[i] = mathfloor(k / v) * v;\r\n      }\r\n\r\n      // Remove trailing elements which are zero.\r\n      for (; c[i] === 0; c.pop(), i--);\r\n\r\n      // Zero?\r\n      if (i < 0) {\r\n        c = [e = 0];\r\n      } else {\r\n\r\n        // Remove leading elements which are zero and adjust exponent accordingly.\r\n        for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n        // Count the digits of the first element of c to determine leading zeros, and...\r\n        for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n        // adjust the exponent accordingly.\r\n        if (i < LOG_BASE) e -= LOG_BASE - i;\r\n      }\r\n\r\n      rand.e = e;\r\n      rand.c = c;\r\n      return rand;\r\n    };\r\n  })();\r\n\r\n\r\n   /*\r\n   * Return a BigNumber whose value is the sum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.sum = function () {\r\n    var i = 1,\r\n      args = arguments,\r\n      sum = new BigNumber(args[0]);\r\n    for (; i < args.length;) sum = sum.plus(args[i++]);\r\n    return sum;\r\n  };\r\n\r\n\r\n  // PRIVATE FUNCTIONS\r\n\r\n\r\n  // Called by BigNumber and BigNumber.prototype.toString.\r\n  convertBase = (function () {\r\n    var decimal = '0123456789';\r\n\r\n    /*\r\n     * Convert string of baseIn to an array of numbers of baseOut.\r\n     * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n     * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n     */\r\n    function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n      var j,\r\n        arr = [0],\r\n        arrL,\r\n        i = 0,\r\n        len = str.length;\r\n\r\n      for (; i < len;) {\r\n        for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n        arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n        for (j = 0; j < arr.length; j++) {\r\n\r\n          if (arr[j] > baseOut - 1) {\r\n            if (arr[j + 1] == null) arr[j + 1] = 0;\r\n            arr[j + 1] += arr[j] / baseOut | 0;\r\n            arr[j] %= baseOut;\r\n          }\r\n        }\r\n      }\r\n\r\n      return arr.reverse();\r\n    }\r\n\r\n    // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n    // If the caller is toString, we are converting from base 10 to baseOut.\r\n    // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n    return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n      var alphabet, d, e, k, r, x, xc, y,\r\n        i = str.indexOf('.'),\r\n        dp = DECIMAL_PLACES,\r\n        rm = ROUNDING_MODE;\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        k = POW_PRECISION;\r\n\r\n        // Unlimited precision.\r\n        POW_PRECISION = 0;\r\n        str = str.replace('.', '');\r\n        y = new BigNumber(baseIn);\r\n        x = y.pow(str.length - i);\r\n        POW_PRECISION = k;\r\n\r\n        // Convert str as if an integer, then restore the fraction part by dividing the\r\n        // result by its base raised to a power.\r\n\r\n        y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n         10, baseOut, decimal);\r\n        y.e = y.c.length;\r\n      }\r\n\r\n      // Convert the number as integer.\r\n\r\n      xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n       ? (alphabet = ALPHABET, decimal)\r\n       : (alphabet = decimal, ALPHABET));\r\n\r\n      // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n      e = k = xc.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xc[--k] == 0; xc.pop());\r\n\r\n      // Zero?\r\n      if (!xc[0]) return alphabet.charAt(0);\r\n\r\n      // Does str represent an integer? If so, no need for the division.\r\n      if (i < 0) {\r\n        --e;\r\n      } else {\r\n        x.c = xc;\r\n        x.e = e;\r\n\r\n        // The sign is needed for correct rounding.\r\n        x.s = sign;\r\n        x = div(x, y, dp, rm, baseOut);\r\n        xc = x.c;\r\n        r = x.r;\r\n        e = x.e;\r\n      }\r\n\r\n      // xc now represents str converted to baseOut.\r\n\r\n      // THe index of the rounding digit.\r\n      d = e + dp + 1;\r\n\r\n      // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n      i = xc[d];\r\n\r\n      // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n      k = baseOut / 2;\r\n      r = r || d < 0 || xc[d + 1] != null;\r\n\r\n      r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n            : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n      // If the index of the rounding digit is not greater than zero, or xc represents\r\n      // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n      // such as 0.00001.\r\n      if (d < 1 || !xc[0]) {\r\n\r\n        // 1^-dp or 0\r\n        str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n      } else {\r\n\r\n        // Truncate xc to the required number of decimal places.\r\n        xc.length = d;\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (--baseOut; ++xc[--d] > baseOut;) {\r\n            xc[d] = 0;\r\n\r\n            if (!d) {\r\n              ++e;\r\n              xc = [1].concat(xc);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (k = xc.length; !xc[--k];);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n        // Add leading zeros, decimal point and trailing zeros as required.\r\n        str = toFixedPoint(str, e, alphabet.charAt(0));\r\n      }\r\n\r\n      // The caller will add the sign.\r\n      return str;\r\n    };\r\n  })();\r\n\r\n\r\n  // Perform division in the specified base. Called by div and convertBase.\r\n  div = (function () {\r\n\r\n    // Assume non-zero x and k.\r\n    function multiply(x, k, base) {\r\n      var m, temp, xlo, xhi,\r\n        carry = 0,\r\n        i = x.length,\r\n        klo = k % SQRT_BASE,\r\n        khi = k / SQRT_BASE | 0;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        xlo = x[i] % SQRT_BASE;\r\n        xhi = x[i] / SQRT_BASE | 0;\r\n        m = khi * xlo + xhi * klo;\r\n        temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n        carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n        x[i] = temp % base;\r\n      }\r\n\r\n      if (carry) x = [carry].concat(x);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, cmp;\r\n\r\n      if (aL != bL) {\r\n        cmp = aL > bL ? 1 : -1;\r\n      } else {\r\n\r\n        for (i = cmp = 0; i < aL; i++) {\r\n\r\n          if (a[i] != b[i]) {\r\n            cmp = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return cmp;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n    }\r\n\r\n    // x: dividend, y: divisor.\r\n    return function (x, y, dp, rm, base) {\r\n      var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n        yL, yz,\r\n        s = x.s == y.s ? 1 : -1,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n        return new BigNumber(\r\n\r\n         // Return NaN if either NaN, or both Infinity or 0.\r\n         !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n          // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n          xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n       );\r\n      }\r\n\r\n      q = new BigNumber(s);\r\n      qc = q.c = [];\r\n      e = x.e - y.e;\r\n      s = dp + e + 1;\r\n\r\n      if (!base) {\r\n        base = BASE;\r\n        e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n        s = s / LOG_BASE | 0;\r\n      }\r\n\r\n      // Result exponent may be one less then the current value of e.\r\n      // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n      for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n      if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n      if (s < 0) {\r\n        qc.push(1);\r\n        more = true;\r\n      } else {\r\n        xL = xc.length;\r\n        yL = yc.length;\r\n        i = 0;\r\n        s += 2;\r\n\r\n        // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n        n = mathfloor(base / (yc[0] + 1));\r\n\r\n        // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n        // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n        if (n > 1) {\r\n          yc = multiply(yc, n, base);\r\n          xc = multiply(xc, n, base);\r\n          yL = yc.length;\r\n          xL = xc.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xc.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL; rem[remL++] = 0);\r\n        yz = yc.slice();\r\n        yz = [0].concat(yz);\r\n        yc0 = yc[0];\r\n        if (yc[1] >= base / 2) yc0++;\r\n        // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n        // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n        do {\r\n          n = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yc, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, n.\r\n\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // n is how many times the divisor goes into the current remainder.\r\n            n = mathfloor(rem0 / yc0);\r\n\r\n            //  Algorithm:\r\n            //  product = divisor multiplied by trial digit (n).\r\n            //  Compare product and remainder.\r\n            //  If product is greater than remainder:\r\n            //    Subtract divisor from product, decrement trial digit.\r\n            //  Subtract product from remainder.\r\n            //  If product was less than remainder at the last compare:\r\n            //    Compare new remainder and divisor.\r\n            //    If remainder is greater than divisor:\r\n            //      Subtract divisor from remainder, increment trial digit.\r\n\r\n            if (n > 1) {\r\n\r\n              // n may be > base only when base is 3.\r\n              if (n >= base) n = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiply(yc, n, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              // If product > remainder then trial digit n too high.\r\n              // n is 1 too high about 5% of the time, and is not known to have\r\n              // ever been more than 1 too high.\r\n              while (compare(prod, rem, prodL, remL) == 1) {\r\n                n--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                prodL = prod.length;\r\n                cmp = 1;\r\n              }\r\n            } else {\r\n\r\n              // n is 0 or 1, cmp is -1.\r\n              // If n is 0, there is no need to compare yc and rem again below,\r\n              // so change cmp to 1 to avoid it.\r\n              // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n              if (n == 0) {\r\n\r\n                // divisor < remainder, so n must be at least 1.\r\n                cmp = n = 1;\r\n              }\r\n\r\n              // product = divisor\r\n              prod = yc.slice();\r\n              prodL = prod.length;\r\n            }\r\n\r\n            if (prodL < remL) prod = [0].concat(prod);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n            remL = rem.length;\r\n\r\n             // If product was < remainder.\r\n            if (cmp == -1) {\r\n\r\n              // Compare divisor and new remainder.\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              // Trial digit n too low.\r\n              // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n              while (compare(yc, rem, yL, remL) < 1) {\r\n                n++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                remL = rem.length;\r\n              }\r\n            }\r\n          } else if (cmp === 0) {\r\n            n++;\r\n            rem = [0];\r\n          } // else cmp === 1 and n will be 0\r\n\r\n          // Add the next digit, n, to the result array.\r\n          qc[i++] = n;\r\n\r\n          // Update the remainder.\r\n          if (rem[0]) {\r\n            rem[remL++] = xc[xi] || 0;\r\n          } else {\r\n            rem = [xc[xi]];\r\n            remL = 1;\r\n          }\r\n        } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n        more = rem[0] != null;\r\n\r\n        // Leading zero?\r\n        if (!qc[0]) qc.splice(0, 1);\r\n      }\r\n\r\n      if (base == BASE) {\r\n\r\n        // To calculate q.e, first get the number of digits of qc[0].\r\n        for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n        round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n      // Caller is convertBase.\r\n      } else {\r\n        q.e = e;\r\n        q.r = +more;\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n   * notation rounded to the specified decimal places or significant digits.\r\n   *\r\n   * n: a BigNumber.\r\n   * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n   * rm: the rounding mode.\r\n   * id: 1 (toExponential) or 2 (toPrecision).\r\n   */\r\n  function format(n, i, rm, id) {\r\n    var c0, e, ne, len, str;\r\n\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n\r\n    if (!n.c) return n.toString();\r\n\r\n    c0 = n.c[0];\r\n    ne = n.e;\r\n\r\n    if (i == null) {\r\n      str = coeffToString(n.c);\r\n      str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n       ? toExponential(str, ne)\r\n       : toFixedPoint(str, ne, '0');\r\n    } else {\r\n      n = round(new BigNumber(n), i, rm);\r\n\r\n      // n.e may have changed if the value was rounded up.\r\n      e = n.e;\r\n\r\n      str = coeffToString(n.c);\r\n      len = str.length;\r\n\r\n      // toPrecision returns exponential notation if the number of significant digits\r\n      // specified is less than the number of digits necessary to represent the integer\r\n      // part of the value in fixed-point notation.\r\n\r\n      // Exponential notation.\r\n      if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n        // Append zeros?\r\n        for (; len < i; str += '0', len++);\r\n        str = toExponential(str, e);\r\n\r\n      // Fixed-point notation.\r\n      } else {\r\n        i -= ne;\r\n        str = toFixedPoint(str, e, '0');\r\n\r\n        // Append zeros?\r\n        if (e + 1 > len) {\r\n          if (--i > 0) for (str += '.'; i--; str += '0');\r\n        } else {\r\n          i += e - len;\r\n          if (i > 0) {\r\n            if (e + 1 == len) str += '.';\r\n            for (; i--; str += '0');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n.s < 0 && c0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Handle BigNumber.max and BigNumber.min.\r\n  // If any number is NaN, return NaN.\r\n  function maxOrMin(args, n) {\r\n    var k, y,\r\n      i = 1,\r\n      x = new BigNumber(args[0]);\r\n\r\n    for (; i < args.length; i++) {\r\n      y = new BigNumber(args[i]);\r\n      if (!y.s || (k = compare(x, y)) === n || k === 0 && x.s === n) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n   * Called by minus, plus and times.\r\n   */\r\n  function normalise(n, c, e) {\r\n    var i = 1,\r\n      j = c.length;\r\n\r\n     // Remove trailing zeros.\r\n    for (; !c[--j]; c.pop());\r\n\r\n    // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n    for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n    // Overflow?\r\n    if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n      // Infinity.\r\n      n.c = n.e = null;\r\n\r\n    // Underflow?\r\n    } else if (e < MIN_EXP) {\r\n\r\n      // Zero.\r\n      n.c = [n.e = 0];\r\n    } else {\r\n      n.e = e;\r\n      n.c = c;\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n\r\n  // Handle values that fail the validity test in BigNumber.\r\n  parseNumeric = (function () {\r\n    var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n      dotAfter = /^([^.]+)\\.$/,\r\n      dotBefore = /^\\.([^.]+)$/,\r\n      isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n      whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n    return function (x, str, isNum, b) {\r\n      var base,\r\n        s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n      // No exception on ±Infinity or NaN.\r\n      if (isInfinityOrNaN.test(s)) {\r\n        x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n      } else {\r\n        if (!isNum) {\r\n\r\n          // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n          s = s.replace(basePrefix, function (m, p1, p2) {\r\n            base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n            return !b || b == base ? p1 : m;\r\n          });\r\n\r\n          if (b) {\r\n            base = b;\r\n\r\n            // E.g. '1.' to '1', '.1' to '0.1'\r\n            s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n          }\r\n\r\n          if (str != s) return new BigNumber(s, base);\r\n        }\r\n\r\n        // '[BigNumber Error] Not a number: {n}'\r\n        // '[BigNumber Error] Not a base {b} number: {n}'\r\n        if (BigNumber.DEBUG) {\r\n          throw Error\r\n            (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n        }\r\n\r\n        // NaN\r\n        x.s = null;\r\n      }\r\n\r\n      x.c = x.e = null;\r\n    }\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n   * If r is truthy, it is known that there are more digits after the rounding digit.\r\n   */\r\n  function round(x, sd, rm, r) {\r\n    var d, i, j, k, n, ni, rd,\r\n      xc = x.c,\r\n      pows10 = POWS_TEN;\r\n\r\n    // if x is not Infinity or NaN...\r\n    if (xc) {\r\n\r\n      // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n      // ni is the index of n within x.c.\r\n      // d is the number of digits of n.\r\n      // i is the index of rd within n including leading zeros.\r\n      // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n      out: {\r\n\r\n        // Get the number of digits of the first element of xc.\r\n        for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n        i = sd - d;\r\n\r\n        // If the rounding digit is in the first element of xc...\r\n        if (i < 0) {\r\n          i += LOG_BASE;\r\n          j = sd;\r\n          n = xc[ni = 0];\r\n\r\n          // Get the rounding digit at index j of n.\r\n          rd = mathfloor(n / pows10[d - j - 1] % 10);\r\n        } else {\r\n          ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n          if (ni >= xc.length) {\r\n\r\n            if (r) {\r\n\r\n              // Needed by sqrt.\r\n              for (; xc.length <= ni; xc.push(0));\r\n              n = rd = 0;\r\n              d = 1;\r\n              i %= LOG_BASE;\r\n              j = i - LOG_BASE + 1;\r\n            } else {\r\n              break out;\r\n            }\r\n          } else {\r\n            n = k = xc[ni];\r\n\r\n            // Get the number of digits of n.\r\n            for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n            // Get the index of rd within n.\r\n            i %= LOG_BASE;\r\n\r\n            // Get the index of rd within n, adjusted for leading zeros.\r\n            // The number of leading zeros of n is given by LOG_BASE - d.\r\n            j = i - LOG_BASE + d;\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = j < 0 ? 0 : mathfloor(n / pows10[d - j - 1] % 10);\r\n          }\r\n        }\r\n\r\n        r = r || sd < 0 ||\r\n\r\n        // Are there any non-zero digits after the rounding digit?\r\n        // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n        // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n         xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n        r = rm < 4\r\n         ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n         : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n           rm == (x.s < 0 ? 8 : 7));\r\n\r\n        if (sd < 1 || !xc[0]) {\r\n          xc.length = 0;\r\n\r\n          if (r) {\r\n\r\n            // Convert sd to decimal places.\r\n            sd -= x.e + 1;\r\n\r\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n            xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n            x.e = -sd || 0;\r\n          } else {\r\n\r\n            // Zero.\r\n            xc[0] = x.e = 0;\r\n          }\r\n\r\n          return x;\r\n        }\r\n\r\n        // Remove excess digits.\r\n        if (i == 0) {\r\n          xc.length = ni;\r\n          k = 1;\r\n          ni--;\r\n        } else {\r\n          xc.length = ni + 1;\r\n          k = pows10[LOG_BASE - i];\r\n\r\n          // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n          // j > 0 means i > number of leading zeros of n.\r\n          xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n        }\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          for (; ;) {\r\n\r\n            // If the digit to be rounded up is in the first element of xc...\r\n            if (ni == 0) {\r\n\r\n              // i will be the length of xc[0] before k is added.\r\n              for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n              j = xc[0] += k;\r\n              for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n              // if i != k the length has increased.\r\n              if (i != k) {\r\n                x.e++;\r\n                if (xc[0] == BASE) xc[0] = 1;\r\n              }\r\n\r\n              break;\r\n            } else {\r\n              xc[ni] += k;\r\n              if (xc[ni] != BASE) break;\r\n              xc[ni--] = 0;\r\n              k = 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = xc.length; xc[--i] === 0; xc.pop());\r\n      }\r\n\r\n      // Overflow? Infinity.\r\n      if (x.e > MAX_EXP) {\r\n        x.c = x.e = null;\r\n\r\n      // Underflow? Zero.\r\n      } else if (x.e < MIN_EXP) {\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function valueOf(n) {\r\n    var str,\r\n      e = n.e;\r\n\r\n    if (e === null) return n.toString();\r\n\r\n    str = coeffToString(n.c);\r\n\r\n    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n      ? toExponential(str, e)\r\n      : toFixedPoint(str, e, '0');\r\n\r\n    return n.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new BigNumber(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   *   0 if they have the same value,\r\n   *   or null if the value of either is NaN.\r\n   */\r\n  P.comparedTo = function (y, b) {\r\n    return compare(this, new BigNumber(y, b));\r\n  };\r\n\r\n\r\n  /*\r\n   * If dp is undefined or null or true or false, return the number of decimal places of the\r\n   * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   *\r\n   * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.decimalPlaces = P.dp = function (dp, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), dp + x.e + 1, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last number.\r\n    if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n    if (n < 0) n = 0;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n   * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.dividedBy = P.div = function (y, b) {\r\n    return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n   * BigNumber by the value of BigNumber(y, b).\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n    return div(this, new BigNumber(y, b), 0, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n   *\r\n   * If m is present, return the result modulo m.\r\n   * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n   *\r\n   * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n   * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n   *\r\n   * n {number|string|BigNumber} The exponent. An integer.\r\n   * [m] {number|string|BigNumber} The modulus.\r\n   *\r\n   * '[BigNumber Error] Exponent not an integer: {n}'\r\n   */\r\n  P.exponentiatedBy = P.pow = function (n, m) {\r\n    var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n      x = this;\r\n\r\n    n = new BigNumber(n);\r\n\r\n    // Allow NaN and ±Infinity, but not other non-integers.\r\n    if (n.c && !n.isInteger()) {\r\n      throw Error\r\n        (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n    }\r\n\r\n    if (m != null) m = new BigNumber(m);\r\n\r\n    // Exponent of MAX_SAFE_INTEGER is 15.\r\n    nIsBig = n.e > 14;\r\n\r\n    // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n    if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n      // The sign of the result of pow when x is negative depends on the evenness of n.\r\n      // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n      y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n      return m ? y.mod(m) : y;\r\n    }\r\n\r\n    nIsNeg = n.s < 0;\r\n\r\n    if (m) {\r\n\r\n      // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n      if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n      isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n      if (isModExp) x = x.mod(m);\r\n\r\n    // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n    // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n    } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n      // [1, 240000000]\r\n      ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n      // [80000000000000]  [99999750000000]\r\n      : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n      // If x is negative and n is odd, k = -0, else k = 0.\r\n      k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n      // If x >= 1, k = ±Infinity.\r\n      if (x.e > -1) k = 1 / k;\r\n\r\n      // If n is negative return ±0, else return ±Infinity.\r\n      return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n    } else if (POW_PRECISION) {\r\n\r\n      // Truncating each coefficient array to a length of k after each multiplication\r\n      // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n      // i.e. there will be a minimum of 28 guard digits retained.\r\n      k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n    }\r\n\r\n    if (nIsBig) {\r\n      half = new BigNumber(0.5);\r\n      if (nIsNeg) n.s = 1;\r\n      nIsOdd = isOdd(n);\r\n    } else {\r\n      i = Math.abs(+valueOf(n));\r\n      nIsOdd = i % 2;\r\n    }\r\n\r\n    y = new BigNumber(ONE);\r\n\r\n    // Performs 54 loop iterations for n of 9007199254740991.\r\n    for (; ;) {\r\n\r\n      if (nIsOdd) {\r\n        y = y.times(x);\r\n        if (!y.c) break;\r\n\r\n        if (k) {\r\n          if (y.c.length > k) y.c.length = k;\r\n        } else if (isModExp) {\r\n          y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (i) {\r\n        i = mathfloor(i / 2);\r\n        if (i === 0) break;\r\n        nIsOdd = i % 2;\r\n      } else {\r\n        n = n.times(half);\r\n        round(n, n.e + 1, 1);\r\n\r\n        if (n.e > 14) {\r\n          nIsOdd = isOdd(n);\r\n        } else {\r\n          i = +valueOf(n);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        }\r\n      }\r\n\r\n      x = x.times(x);\r\n\r\n      if (k) {\r\n        if (x.c && x.c.length > k) x.c.length = k;\r\n      } else if (isModExp) {\r\n        x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n      }\r\n    }\r\n\r\n    if (isModExp) return y;\r\n    if (nIsNeg) y = ONE.div(y);\r\n\r\n    return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n   * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n   */\r\n  P.integerValue = function (rm) {\r\n    var n = new BigNumber(this);\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n    return round(n, n.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isEqualTo = P.eq = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.c;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isGreaterThan = P.gt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n   */\r\n  P.isInteger = function () {\r\n    return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isLessThan = P.lt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is negative, otherwise return false.\r\n   */\r\n  P.isNegative = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is positive, otherwise return false.\r\n   */\r\n  P.isPositive = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.c && this.c[0] == 0;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.minus = function (y, b) {\r\n    var i, j, t, xLTy,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Either Infinity?\r\n      if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n      // Either zero?\r\n      if (!xc[0] || !yc[0]) {\r\n\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n         // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n         ROUNDING_MODE == 3 ? -0 : 0);\r\n      }\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Determine which is the bigger number.\r\n    if (a = xe - ye) {\r\n\r\n      if (xLTy = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      for (b = a; b--; t.push(0));\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n\r\n        if (xc[b] != yc[b]) {\r\n          xLTy = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xLTy) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    b = (j = yc.length) - (i = xc.length);\r\n\r\n    // Append zeros to xc if shorter.\r\n    // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n    if (b > 0) for (; b--; xc[i++] = 0);\r\n    b = BASE - 1;\r\n\r\n    // Subtract yc from xc.\r\n    for (; j > a;) {\r\n\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i]; xc[i] = b);\r\n        --xc[i];\r\n        xc[j] += BASE;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n    // Zero?\r\n    if (!xc[0]) {\r\n\r\n      // Following IEEE 754 (2008) 6.3,\r\n      // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n      y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n    // for finite x and y.\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n   * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n   */\r\n  P.modulo = P.mod = function (y, b) {\r\n    var q, s,\r\n      x = this;\r\n\r\n    y = new BigNumber(y, b);\r\n\r\n    // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n    if (!x.c || !y.s || y.c && !y.c[0]) {\r\n      return new BigNumber(NaN);\r\n\r\n    // Return x if y is Infinity or x is zero.\r\n    } else if (!y.c || x.c && !x.c[0]) {\r\n      return new BigNumber(x);\r\n    }\r\n\r\n    if (MODULO_MODE == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // r = x - qy    where  0 <= r < abs(y)\r\n      s = y.s;\r\n      y.s = 1;\r\n      q = div(x, y, 0, 3);\r\n      y.s = s;\r\n      q.s *= s;\r\n    } else {\r\n      q = div(x, y, 0, MODULO_MODE);\r\n    }\r\n\r\n    y = x.minus(q.times(y));\r\n\r\n    // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n    if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n   * of BigNumber(y, b).\r\n   */\r\n  P.multipliedBy = P.times = function (y, b) {\r\n    var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n      base, sqrtBase,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new BigNumber(y, b)).c;\r\n\r\n    // Either NaN, ±Infinity or ±0?\r\n    if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n      // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n      if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n        y.c = y.e = y.s = null;\r\n      } else {\r\n        y.s *= x.s;\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        if (!xc || !yc) {\r\n          y.c = y.e = null;\r\n\r\n        // Return ±0 if either is ±0.\r\n        } else {\r\n          y.c = [0];\r\n          y.e = 0;\r\n        }\r\n      }\r\n\r\n      return y;\r\n    }\r\n\r\n    e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n    y.s *= x.s;\r\n    xcL = xc.length;\r\n    ycL = yc.length;\r\n\r\n    // Ensure xc points to longer array and xcL to its length.\r\n    if (xcL < ycL) {\r\n      zc = xc;\r\n      xc = yc;\r\n      yc = zc;\r\n      i = xcL;\r\n      xcL = ycL;\r\n      ycL = i;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n    base = BASE;\r\n    sqrtBase = SQRT_BASE;\r\n\r\n    for (i = ycL; --i >= 0;) {\r\n      c = 0;\r\n      ylo = yc[i] % sqrtBase;\r\n      yhi = yc[i] / sqrtBase | 0;\r\n\r\n      for (k = xcL, j = i + k; j > i;) {\r\n        xlo = xc[--k] % sqrtBase;\r\n        xhi = xc[k] / sqrtBase | 0;\r\n        m = yhi * xlo + xhi * ylo;\r\n        xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n        c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n        zc[j--] = xlo % base;\r\n      }\r\n\r\n      zc[j] = c;\r\n    }\r\n\r\n    if (c) {\r\n      ++e;\r\n    } else {\r\n      zc.splice(0, 1);\r\n    }\r\n\r\n    return normalise(y, zc, e);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n   * i.e. multiplied by -1.\r\n   */\r\n  P.negated = function () {\r\n    var x = new BigNumber(this);\r\n    x.s = -x.s || null;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.plus = function (y, b) {\r\n    var t,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n     if (a != b) {\r\n      y.s = -b;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Return ±Infinity if either ±Infinity.\r\n      if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n      // Either zero?\r\n      // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n      if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n    if (a = xe - ye) {\r\n      if (a > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        a = -a;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; a--; t.push(0));\r\n      t.reverse();\r\n    }\r\n\r\n    a = xc.length;\r\n    b = yc.length;\r\n\r\n    // Point xc to the longer array, and b to the shorter length.\r\n    if (a - b < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n      b = a;\r\n    }\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n    for (a = 0; b;) {\r\n      a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n      xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n    }\r\n\r\n    if (a) {\r\n      xc = [a].concat(xc);\r\n      ++ye;\r\n    }\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    // ye = MAX_EXP + 1 possible\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   * If sd is undefined or null or true or false, return the number of significant digits of\r\n   * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   * If sd is true include integer-part trailing zeros in the count.\r\n   *\r\n   * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n   *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.precision = P.sd = function (sd, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (sd != null && sd !== !!sd) {\r\n      intCheck(sd, 1, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), sd, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    v = c.length - 1;\r\n    n = v * LOG_BASE + 1;\r\n\r\n    if (v = c[v]) {\r\n\r\n      // Subtract the number of trailing zeros of the last element.\r\n      for (; v % 10 == 0; v /= 10, n--);\r\n\r\n      // Add the number of digits of the first element.\r\n      for (v = c[0]; v >= 10; v /= 10, n++);\r\n    }\r\n\r\n    if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n   * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n   *\r\n   * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n   */\r\n  P.shiftedBy = function (k) {\r\n    intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n    return this.times('1e' + k);\r\n  };\r\n\r\n\r\n  /*\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N) =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I) =  I\r\n   *  sqrt(0) =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n   * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, r, rep, t,\r\n      x = this,\r\n      c = x.c,\r\n      s = x.s,\r\n      e = x.e,\r\n      dp = DECIMAL_PLACES + 4,\r\n      half = new BigNumber('0.5');\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !c || !c[0]) {\r\n      return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n    }\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+valueOf(x));\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = coeffToString(c);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(+n);\r\n      e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new BigNumber(n);\r\n    } else {\r\n      r = new BigNumber(s + '');\r\n    }\r\n\r\n    // Check for zero.\r\n    // r could be zero if MIN_EXP is changed after the this value was created.\r\n    // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n    // coeffToString to throw.\r\n    if (r.c[0]) {\r\n      e = r.e;\r\n      s = e + dp;\r\n      if (s < 3) s = 0;\r\n\r\n      // Newton-Raphson iteration.\r\n      for (; ;) {\r\n        t = r;\r\n        r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n        if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n          // The exponent of r may here be one less than the final result exponent,\r\n          // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n          // are indexed correctly.\r\n          if (r.e < e) --s;\r\n          n = n.slice(s - 3, s + 1);\r\n\r\n          // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n          // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n          // iteration.\r\n          if (n == '9999' || !rep && n == '4999') {\r\n\r\n            // On the first iteration only, check to see if rounding up gives the\r\n            // exact result as the nines may infinitely repeat.\r\n            if (!rep) {\r\n              round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n              if (t.times(t).eq(x)) {\r\n                r = t;\r\n                break;\r\n              }\r\n            }\r\n\r\n            dp += 4;\r\n            s += 4;\r\n            rep = 1;\r\n          } else {\r\n\r\n            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n            // result. If not, then there are further digits and m will be truthy.\r\n            if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n              // Truncate to the first rounding digit.\r\n              round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n              m = !r.times(r).eq(x);\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in exponential notation and\r\n   * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp++;\r\n    }\r\n    return format(this, dp, rm, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n   * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n   * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp = dp + this.e + 1;\r\n    }\r\n    return format(this, dp, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n   * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n   * of the format or FORMAT object (see BigNumber.set).\r\n   *\r\n   * The formatting object may contain some or all of the properties shown below.\r\n   *\r\n   * FORMAT = {\r\n   *   prefix: '',\r\n   *   groupSize: 3,\r\n   *   secondaryGroupSize: 0,\r\n   *   groupSeparator: ',',\r\n   *   decimalSeparator: '.',\r\n   *   fractionGroupSize: 0,\r\n   *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n   *   suffix: ''\r\n   * };\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   * [format] {object} Formatting options. See FORMAT pbject above.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   * '[BigNumber Error] Argument not an object: {format}'\r\n   */\r\n  P.toFormat = function (dp, rm, format) {\r\n    var str,\r\n      x = this;\r\n\r\n    if (format == null) {\r\n      if (dp != null && rm && typeof rm == 'object') {\r\n        format = rm;\r\n        rm = null;\r\n      } else if (dp && typeof dp == 'object') {\r\n        format = dp;\r\n        dp = rm = null;\r\n      } else {\r\n        format = FORMAT;\r\n      }\r\n    } else if (typeof format != 'object') {\r\n      throw Error\r\n        (bignumberError + 'Argument not an object: ' + format);\r\n    }\r\n\r\n    str = x.toFixed(dp, rm);\r\n\r\n    if (x.c) {\r\n      var i,\r\n        arr = str.split('.'),\r\n        g1 = +format.groupSize,\r\n        g2 = +format.secondaryGroupSize,\r\n        groupSeparator = format.groupSeparator || '',\r\n        intPart = arr[0],\r\n        fractionPart = arr[1],\r\n        isNeg = x.s < 0,\r\n        intDigits = isNeg ? intPart.slice(1) : intPart,\r\n        len = intDigits.length;\r\n\r\n      if (g2) {\r\n        i = g1;\r\n        g1 = g2;\r\n        g2 = i;\r\n        len -= i;\r\n      }\r\n\r\n      if (g1 > 0 && len > 0) {\r\n        i = len % g1 || g1;\r\n        intPart = intDigits.substr(0, i);\r\n        for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n        if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n        if (isNeg) intPart = '-' + intPart;\r\n      }\r\n\r\n      str = fractionPart\r\n       ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n        ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n         '$&' + (format.fractionGroupSeparator || ''))\r\n        : fractionPart)\r\n       : intPart;\r\n    }\r\n\r\n    return (format.prefix || '') + str + (format.suffix || '');\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n   * fraction with an integer numerator and an integer denominator.\r\n   * The denominator will be a positive non-zero value less than or equal to the specified\r\n   * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n   * the lowest value necessary to represent the number exactly.\r\n   *\r\n   * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n   *\r\n   * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n   */\r\n  P.toFraction = function (md) {\r\n    var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n      x = this,\r\n      xc = x.c;\r\n\r\n    if (md != null) {\r\n      n = new BigNumber(md);\r\n\r\n      // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n      if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n        throw Error\r\n          (bignumberError + 'Argument ' +\r\n            (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n      }\r\n    }\r\n\r\n    if (!xc) return new BigNumber(x);\r\n\r\n    d = new BigNumber(ONE);\r\n    n1 = d0 = new BigNumber(ONE);\r\n    d1 = n0 = new BigNumber(ONE);\r\n    s = coeffToString(xc);\r\n\r\n    // Determine initial denominator.\r\n    // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n    e = d.e = s.length - x.e - 1;\r\n    d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n    md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n    exp = MAX_EXP;\r\n    MAX_EXP = 1 / 0;\r\n    n = new BigNumber(s);\r\n\r\n    // n0 = d1 = 0\r\n    n0.c[0] = 0;\r\n\r\n    for (; ;)  {\r\n      q = div(n, d, 0, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.comparedTo(md) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      n1 = n0.plus(q.times(d2 = n1));\r\n      n0 = d2;\r\n      d = n.minus(q.times(d2 = d));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = div(md.minus(d0), d1, 0, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n    e = e * 2;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n    r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n        div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n    MAX_EXP = exp;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this BigNumber converted to a number primitive.\r\n   */\r\n  P.toNumber = function () {\r\n    return +valueOf(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n   * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n   * necessary to represent the integer part of the value in fixed-point notation, then use\r\n   * exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    if (sd != null) intCheck(sd, 1, MAX);\r\n    return format(this, sd, rm, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n   * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n   * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n   * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n   * TO_EXP_NEG, return exponential notation.\r\n   *\r\n   * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n   *\r\n   * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n   */\r\n  P.toString = function (b) {\r\n    var str,\r\n      n = this,\r\n      s = n.s,\r\n      e = n.e;\r\n\r\n    // Infinity or NaN?\r\n    if (e === null) {\r\n      if (s) {\r\n        str = 'Infinity';\r\n        if (s < 0) str = '-' + str;\r\n      } else {\r\n        str = 'NaN';\r\n      }\r\n    } else {\r\n      if (b == null) {\r\n        str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n         ? toExponential(coeffToString(n.c), e)\r\n         : toFixedPoint(coeffToString(n.c), e, '0');\r\n      } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n        n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n        str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n      } else {\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n        str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n      }\r\n\r\n      if (s < 0 && n.c[0]) str = '-' + str;\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return as toString, but do not accept a base argument, and include the minus sign for\r\n   * negative zero.\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    return valueOf(this);\r\n  };\r\n\r\n\r\n  P._isBigNumber = true;\r\n\r\n  P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n  // Node.js v10.12.0+\r\n  P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n\r\n  if (configObject != null) BigNumber.set(configObject);\r\n\r\n  return BigNumber;\r\n}\r\n\r\n\r\n// PRIVATE HELPER FUNCTIONS\r\n\r\n// These functions don't need access to variables,\r\n// e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\nfunction bitFloor(n) {\r\n  var i = n | 0;\r\n  return n > 0 || n === i ? i : i - 1;\r\n}\r\n\r\n\r\n// Return a coefficient array as a string of base 10 digits.\r\nfunction coeffToString(a) {\r\n  var s, z,\r\n    i = 1,\r\n    j = a.length,\r\n    r = a[0] + '';\r\n\r\n  for (; i < j;) {\r\n    s = a[i++] + '';\r\n    z = LOG_BASE - s.length;\r\n    for (; z--; s = '0' + s);\r\n    r += s;\r\n  }\r\n\r\n  // Determine trailing zeros.\r\n  for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n  return r.slice(0, j + 1 || 1);\r\n}\r\n\r\n\r\n// Compare the value of BigNumbers x and y.\r\nfunction compare(x, y) {\r\n  var a, b,\r\n    xc = x.c,\r\n    yc = y.c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either NaN?\r\n  if (!i || !j) return null;\r\n\r\n  a = xc && !xc[0];\r\n  b = yc && !yc[0];\r\n\r\n  // Either zero?\r\n  if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  a = i < 0;\r\n  b = k == l;\r\n\r\n  // Either Infinity?\r\n  if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n  // Compare exponents.\r\n  if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n}\r\n\r\n\r\n/*\r\n * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n */\r\nfunction intCheck(n, min, max, name) {\r\n  if (n < min || n > max || n !== mathfloor(n)) {\r\n    throw Error\r\n     (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n       ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n       : ' not a primitive number: ') + String(n));\r\n  }\r\n}\r\n\r\n\r\n// Assumes finite n.\r\nfunction isOdd(n) {\r\n  var k = n.c.length - 1;\r\n  return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n}\r\n\r\n\r\nfunction toExponential(str, e) {\r\n  return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n   (e < 0 ? 'e' : 'e+') + e;\r\n}\r\n\r\n\r\nfunction toFixedPoint(str, e, z) {\r\n  var len, zs;\r\n\r\n  // Negative exponent?\r\n  if (e < 0) {\r\n\r\n    // Prepend zeros.\r\n    for (zs = z + '.'; ++e; zs += z);\r\n    str = zs + str;\r\n\r\n  // Positive exponent\r\n  } else {\r\n    len = str.length;\r\n\r\n    // Append zeros.\r\n    if (++e > len) {\r\n      for (zs = z, e -= len; --e; zs += z);\r\n      str += zs;\r\n    } else if (e < len) {\r\n      str = str.slice(0, e) + '.' + str.slice(e);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// EXPORT\r\n\r\n\r\nexport var BigNumber = clone();\r\n\r\nexport default BigNumber;\r\n", "import {\n    keccak256,\n    sha256,\n    toUtf8Bytes,\n    toUtf8String,\n    recoverAddress,\n    SigningKey,\n    AbiCoder,\n    Signature,\n    concat,\n    id,\n    Mnemonic,\n    Wordlist,\n    wordlists,\n    HDNodeWallet as ethersHDNodeWallet,\n    getBytes,\n    computeHmac,\n} from 'ethers';\n\nimport type { BytesLike, SignatureLike } from 'ethers';\n\nimport { Interface } from './interface.js';\n\nconst splitSignature = (sigBytes: SignatureLike) => Signature.from(sigBytes);\nconst joinSignature = (splitSig: SignatureLike) => Signature.from(splitSig).serialized;\nconst arrayify = (value: BytesLike) => getBytes(value);\nconst FormatTypes = {\n    sighash: 'sighash',\n    minimal: 'minimal',\n    full: 'full',\n    json: 'json',\n};\nconst isValidMnemonic = Mnemonic.isValidMnemonic;\n\ncomputeHmac.register((algorithm, key, data) => {\n    return computeHmac._(algorithm, Buffer.from(key), Buffer.from(data));\n});\n\nexport {\n    keccak256,\n    sha256,\n    toUtf8Bytes,\n    toUtf8String,\n    recoverAddress,\n    Signature,\n    SigningKey,\n    AbiCoder,\n    Interface,\n    FormatTypes,\n    splitSignature,\n    joinSignature,\n    arrayify,\n    ethersHDNodeWallet,\n    concat,\n    id,\n    Mnemonic,\n    Wordlist,\n    wordlists,\n    isValidMnemonic,\n};\n", "/* Do NOT modify this file; see /src.ts/_admin/update-version.ts */\n\n/**\n *  The current version of Ethers.\n */\nexport const version: string = \"6.13.5\";\n", "/**\n *  Property helper functions.\n *\n *  @_subsection api/utils:Properties  [about-properties]\n */\n\nfunction checkType(value: any, type: string, name: string): void {\n    const types = type.split(\"|\").map(t => t.trim());\n    for (let i = 0; i < types.length; i++) {\n        switch (type) {\n            case \"any\":\n                return;\n            case \"bigint\":\n            case \"boolean\":\n            case \"number\":\n            case \"string\":\n                if (typeof(value) === type) { return; }\n        }\n    }\n\n    const error: any = new Error(`invalid value for type ${ type }`);\n    error.code = \"INVALID_ARGUMENT\";\n    error.argument = `value.${ name }`;\n    error.value = value;\n\n    throw error;\n}\n\n/**\n *  Resolves to a new object that is a copy of %%value%%, but with all\n *  values resolved.\n */\nexport async function resolveProperties<T>(value: { [ P in keyof T ]: T[P] | Promise<T[P]>}): Promise<T> {\n    const keys = Object.keys(value);\n    const results = await Promise.all(keys.map((k) => Promise.resolve(value[<keyof T>k])));\n    return results.reduce((accum: any, v, index) => {\n        accum[keys[index]] = v;\n        return accum;\n    }, <{ [ P in keyof T]: T[P] }>{ });\n}\n\n/**\n *  Assigns the %%values%% to %%target%% as read-only values.\n *\n *  It %%types%% is specified, the values are checked.\n */\nexport function defineProperties<T>(\n target: T,\n values: { [ K in keyof T ]?: T[K] },\n types?: { [ K in keyof T ]?: string }): void {\n\n    for (let key in values) {\n        let value = values[key];\n\n        const type = (types ? types[key]: null);\n        if (type) { checkType(value, type, key); }\n\n        Object.defineProperty(target, key, { enumerable: true, value, writable: false });\n    }\n}\n", "/**\n *  All errors in ethers include properties to ensure they are both\n *  human-readable (i.e. ``.message``) and machine-readable (i.e. ``.code``).\n *\n *  The [[isError]] function can be used to check the error ``code`` and\n *  provide a type guard for the properties present on that error interface.\n *\n *  @_section: api/utils/errors:Errors  [about-errors]\n */\n\nimport { version } from \"../_version.js\";\n\nimport { defineProperties } from \"./properties.js\";\n\nimport type {\n    TransactionRequest, TransactionReceipt, TransactionResponse\n} from \"../providers/index.js\";\n\nimport type { FetchRequest, FetchResponse } from \"./fetch.js\";\n\n/**\n *  An error may contain additional properties, but those must not\n *  conflict with any implicit properties.\n */\nexport type ErrorInfo<T> = Omit<T, \"code\" | \"name\" | \"message\" | \"shortMessage\"> & { shortMessage?: string };\n\n\nfunction stringify(value: any): any {\n    if (value == null) { return \"null\"; }\n\n    if (Array.isArray(value)) {\n        return \"[ \" + (value.map(stringify)).join(\", \") + \" ]\";\n    }\n\n    if (value instanceof Uint8Array) {\n        const HEX = \"0123456789abcdef\";\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            result += HEX[value[i] >> 4];\n            result += HEX[value[i] & 0xf];\n        }\n        return result;\n    }\n\n    if (typeof(value) === \"object\" && typeof(value.toJSON) === \"function\") {\n        return stringify(value.toJSON());\n    }\n\n    switch (typeof(value)) {\n        case \"boolean\": case \"symbol\":\n            return value.toString();\n        case \"bigint\":\n            return BigInt(value).toString();\n        case \"number\":\n            return (value).toString();\n        case \"string\":\n            return JSON.stringify(value);\n        case \"object\": {\n            const keys = Object.keys(value);\n            keys.sort();\n            return \"{ \" + keys.map((k) => `${ stringify(k) }: ${ stringify(value[k]) }`).join(\", \") + \" }\";\n        }\n    }\n\n    return `[ COULD NOT SERIALIZE ]`;\n}\n\n/**\n *  All errors emitted by ethers have an **ErrorCode** to help\n *  identify and coalesce errors to simplify programmatic analysis.\n *\n *  Each **ErrorCode** is the %%code%% proerty of a coresponding\n *  [[EthersError]].\n *\n *  **Generic Errors**\n *\n *  **``\"UNKNOWN_ERROR\"``** - see [[UnknownError]]\n *\n *  **``\"NOT_IMPLEMENTED\"``** - see [[NotImplementedError]]\n *\n *  **``\"UNSUPPORTED_OPERATION\"``** - see [[UnsupportedOperationError]]\n *\n *  **``\"NETWORK_ERROR\"``** - see [[NetworkError]]\n *\n *  **``\"SERVER_ERROR\"``** - see [[ServerError]]\n *\n *  **``\"TIMEOUT\"``** - see [[TimeoutError]]\n *\n *  **``\"BAD_DATA\"``** - see [[BadDataError]]\n *\n *  **``\"CANCELLED\"``** - see [[CancelledError]]\n *\n *  **Operational Errors**\n *\n *  **``\"BUFFER_OVERRUN\"``** - see [[BufferOverrunError]]\n *\n *  **``\"NUMERIC_FAULT\"``** - see [[NumericFaultError]]\n *\n *  **Argument Errors**\n *\n *  **``\"INVALID_ARGUMENT\"``** - see [[InvalidArgumentError]]\n *\n *  **``\"MISSING_ARGUMENT\"``** - see [[MissingArgumentError]]\n *\n *  **``\"UNEXPECTED_ARGUMENT\"``** - see [[UnexpectedArgumentError]]\n *\n *  **``\"VALUE_MISMATCH\"``** - //unused//\n *\n *  **Blockchain Errors**\n *\n *  **``\"CALL_EXCEPTION\"``** - see [[CallExceptionError]]\n *\n *  **``\"INSUFFICIENT_FUNDS\"``** - see [[InsufficientFundsError]]\n *\n *  **``\"NONCE_EXPIRED\"``** - see [[NonceExpiredError]]\n *\n *  **``\"REPLACEMENT_UNDERPRICED\"``** - see [[ReplacementUnderpricedError]]\n *\n *  **``\"TRANSACTION_REPLACED\"``** - see [[TransactionReplacedError]]\n *\n *  **``\"UNCONFIGURED_NAME\"``** - see [[UnconfiguredNameError]]\n *\n *  **``\"OFFCHAIN_FAULT\"``** - see [[OffchainFaultError]]\n *\n *  **User Interaction Errors**\n *\n *  **``\"ACTION_REJECTED\"``** - see [[ActionRejectedError]]\n */\nexport type ErrorCode =\n\n    // Generic Errors\n    \"UNKNOWN_ERROR\" | \"NOT_IMPLEMENTED\" | \"UNSUPPORTED_OPERATION\" |\n    \"NETWORK_ERROR\" | \"SERVER_ERROR\" | \"TIMEOUT\" | \"BAD_DATA\" |\n    \"CANCELLED\" |\n\n    // Operational Errors\n    \"BUFFER_OVERRUN\" |  \"NUMERIC_FAULT\" |\n\n    // Argument Errors\n    \"INVALID_ARGUMENT\" | \"MISSING_ARGUMENT\" | \"UNEXPECTED_ARGUMENT\" |\n    \"VALUE_MISMATCH\" |\n\n    // Blockchain Errors\n    \"CALL_EXCEPTION\" | \"INSUFFICIENT_FUNDS\" | \"NONCE_EXPIRED\" |\n    \"REPLACEMENT_UNDERPRICED\" | \"TRANSACTION_REPLACED\" |\n    \"UNCONFIGURED_NAME\" | \"OFFCHAIN_FAULT\" |\n\n    // User Interaction\n    \"ACTION_REJECTED\"\n;\n\n/**\n *  All errors in Ethers include properties to assist in\n *  machine-readable errors.\n */\nexport interface EthersError<T extends ErrorCode = ErrorCode> extends Error {\n    /**\n     *  The string error code.\n     */\n    code: ErrorCode;\n\n    /**\n     *  A short message describing the error, with minimal additional\n     *  details.\n     */\n    shortMessage: string;\n\n    /**\n     *  Additional info regarding the error that may be useful.\n     *\n     *  This is generally helpful mostly for human-based debugging.\n     */\n    info?: Record<string, any>;\n\n    /**\n     *  Any related error.\n     */\n    error?: Error;\n}\n\n// Generic Errors\n\n/**\n *  This Error is a catch-all for when there is no way for Ethers to\n *  know what the underlying problem is.\n */\nexport interface UnknownError extends EthersError<\"UNKNOWN_ERROR\"> {\n    [ key: string ]: any;\n}\n\n/**\n *  This Error is mostly used as a stub for functionality that is\n *  intended for the future, but is currently not implemented.\n */\nexport interface NotImplementedError extends EthersError<\"NOT_IMPLEMENTED\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n}\n\n/**\n *  This Error indicates that the attempted operation is not supported.\n *\n *  This could range from a specific JSON-RPC end-point not supporting\n *  a feature to a specific configuration of an object prohibiting the\n *  operation.\n *\n *  For example, a [[Wallet]] with no connected [[Provider]] is unable\n *  to send a transaction.\n */\nexport interface UnsupportedOperationError extends EthersError<\"UNSUPPORTED_OPERATION\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n}\n\n/**\n *  This Error indicates a problem connecting to a network.\n */\nexport interface NetworkError extends EthersError<\"NETWORK_ERROR\"> {\n    /**\n     *  The network event.\n     */\n    event: string;\n}\n\n/**\n *  This Error indicates there was a problem fetching a resource from\n *  a server.\n */\nexport interface ServerError extends EthersError<\"SERVER_ERROR\"> {\n    /**\n     *  The requested resource.\n     */\n    request: FetchRequest | string;\n\n    /**\n     *  The response received from the server, if available.\n     */\n    response?: FetchResponse;\n}\n\n/**\n *  This Error indicates that the timeout duration has expired and\n *  that the operation has been implicitly cancelled.\n *\n *  The side-effect of the operation may still occur, as this\n *  generally means a request has been sent and there has simply\n *  been no response to indicate whether it was processed or not.\n */\nexport interface TimeoutError extends EthersError<\"TIMEOUT\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n\n    /**\n     *  The reason.\n     */\n    reason: string;\n\n    /**\n     *  The resource request, if available.\n     */\n    request?: FetchRequest;\n}\n\n/**\n *  This Error indicates that a provided set of data cannot\n *  be correctly interpreted.\n */\nexport interface BadDataError extends EthersError<\"BAD_DATA\"> {\n    /**\n     *  The data.\n     */\n    value: any;\n}\n\n/**\n *  This Error indicates that the operation was cancelled by a\n *  programmatic call, for example to ``cancel()``.\n */\nexport interface CancelledError extends EthersError<\"CANCELLED\"> {\n}\n\n\n// Operational Errors\n\n/**\n *  This Error indicates an attempt was made to read outside the bounds\n *  of protected data.\n *\n *  Most operations in Ethers are protected by bounds checks, to mitigate\n *  exploits when parsing data.\n */\nexport interface BufferOverrunError extends EthersError<\"BUFFER_OVERRUN\"> {\n    /**\n     *  The buffer that was overrun.\n     */\n    buffer: Uint8Array;\n\n    /**\n     *  The length of the buffer.\n     */\n    length: number;\n\n    /**\n     *  The offset that was requested.\n     */\n    offset: number;\n}\n\n/**\n *  This Error indicates an operation which would result in incorrect\n *  arithmetic output has occurred.\n *\n *  For example, trying to divide by zero or using a ``uint8`` to store\n *  a negative value.\n */\nexport interface NumericFaultError extends EthersError<\"NUMERIC_FAULT\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n\n    /**\n     *  The fault reported.\n     */\n    fault: string;\n\n    /**\n     *  The value the operation was attempted against.\n     */\n    value: any;\n}\n\n\n// Argument Errors\n\n/**\n *  This Error indicates an incorrect type or value was passed to\n *  a function or method.\n */\nexport interface InvalidArgumentError extends EthersError<\"INVALID_ARGUMENT\"> {\n    /**\n     *  The name of the argument.\n     */\n    argument: string;\n\n    /**\n     *  The value that was provided.\n     */\n    value: any;\n\n    info?: Record<string, any>\n}\n\n/**\n *  This Error indicates there were too few arguments were provided.\n */\nexport interface MissingArgumentError extends EthersError<\"MISSING_ARGUMENT\"> {\n    /**\n     *  The number of arguments received.\n     */\n    count: number;\n\n    /**\n     *  The number of arguments expected.\n     */\n    expectedCount: number;\n}\n\n/**\n *  This Error indicates too many arguments were provided.\n */\nexport interface UnexpectedArgumentError extends EthersError<\"UNEXPECTED_ARGUMENT\"> {\n    /**\n     *  The number of arguments received.\n     */\n    count: number;\n\n    /**\n     *  The number of arguments expected.\n     */\n    expectedCount: number;\n}\n\n\n// Blockchain Errors\n\n/**\n *  The action that resulted in the call exception.\n */\nexport type CallExceptionAction = \"call\" | \"estimateGas\" | \"getTransactionResult\" | \"sendTransaction\" | \"unknown\";\n\n/**\n *  The related transaction that caused the error.\n */\nexport type CallExceptionTransaction = {\n    to: null | string;\n    from?: string;\n    data: string;\n};\n\n/**\n *  This **Error** indicates a transaction reverted.\n */\nexport interface CallExceptionError extends EthersError<\"CALL_EXCEPTION\"> {\n\n    /**\n     *  The action being performed when the revert was encountered.\n     */\n    action: CallExceptionAction;\n\n    /**\n     *  The revert data returned.\n     */\n    data: null | string;\n\n    /**\n     *  A human-readable representation of data, if possible.\n     */\n    reason: null | string;\n\n    /**\n     *  The transaction that triggered the exception.\n     */\n    transaction: CallExceptionTransaction,\n\n    /**\n     *  The contract invocation details, if available.\n     */\n    invocation: null | {\n        method: string;\n        signature: string;\n        args: Array<any>;\n    }\n\n    /**\n     *  The built-in or custom revert error, if available\n     */\n    revert: null | {\n        signature: string;\n        name: string;\n        args: Array<any>;\n    }\n\n    /**\n     *  If the error occurred in a transaction that was mined\n     *  (with a status of ``0``), this is the receipt.\n     */\n    receipt?: TransactionReceipt;   // @TODO: in v7, make this `null | TransactionReceipt`\n}\n\n\n/**\n *  The sending account has insufficient funds to cover the\n *  entire transaction cost.\n */\nexport interface InsufficientFundsError extends EthersError<\"INSUFFICIENT_FUNDS\"> {\n    /**\n     *  The transaction.\n     */\n    transaction: TransactionRequest;\n}\n\n/**\n *  The sending account has already used this nonce in a\n *  transaction that has been included.\n */\nexport interface NonceExpiredError extends EthersError<\"NONCE_EXPIRED\"> {\n    /**\n     *  The transaction.\n     */\n    transaction: TransactionRequest;\n}\n\n/**\n *  A CCIP-read exception, which cannot be recovered from or\n *  be further processed.\n */\nexport interface OffchainFaultError extends EthersError<\"OFFCHAIN_FAULT\"> {\n    /**\n     *  The transaction.\n     */\n    transaction?: TransactionRequest;\n\n    /**\n     *  The reason the CCIP-read failed.\n     */\n    reason: string;\n}\n\n/**\n *  An attempt was made to replace a transaction, but with an\n *  insufficient additional fee to afford evicting the old\n *  transaction from the memory pool.\n */\nexport interface ReplacementUnderpricedError extends EthersError<\"REPLACEMENT_UNDERPRICED\"> {\n    /**\n     *  The transaction.\n     */\n    transaction: TransactionRequest;\n}\n\n/**\n *  A pending transaction was replaced by another.\n */\nexport interface TransactionReplacedError extends EthersError<\"TRANSACTION_REPLACED\"> {\n    /**\n     *  If the transaction was cancelled, such that the original\n     *  effects of the transaction cannot be assured.\n     */\n    cancelled: boolean;\n\n    /**\n     *  The reason the transaction was replaced.\n     */\n    reason: \"repriced\" | \"cancelled\" | \"replaced\";\n\n    /**\n     *  The hash of the replaced transaction.\n     */\n    hash: string;\n\n    /**\n     *  The transaction that replaced the transaction.\n     */\n    replacement: TransactionResponse;\n\n    /**\n     *  The receipt of the transaction that replace the transaction.\n     */\n    receipt: TransactionReceipt;\n}\n\n/**\n *  This Error indicates an ENS name was used, but the name has not\n *  been configured.\n *\n *  This could indicate an ENS name is unowned or that the current\n *  address being pointed to is the [[ZeroAddress]].\n */\nexport interface UnconfiguredNameError extends EthersError<\"UNCONFIGURED_NAME\"> {\n    /**\n     *  The ENS name that was requested\n     */\n    value: string;\n}\n\n/**\n *  This Error indicates a request was rejected by the user.\n *\n *  In most clients (such as MetaMask), when an operation requires user\n *  authorization (such as ``signer.sendTransaction``), the client\n *  presents a dialog box to the user. If the user denies the request\n *  this error is thrown.\n */\nexport interface ActionRejectedError extends EthersError<\"ACTION_REJECTED\"> {\n    /**\n     *  The requested action.\n     */\n    action: \"requestAccess\" | \"sendTransaction\" | \"signMessage\" | \"signTransaction\" | \"signTypedData\" | \"unknown\",\n\n    /**\n     *  The reason the action was rejected.\n     *\n     *  If there is already a pending request, some clients may indicate\n     *  there is already a ``\"pending\"`` action. This prevents an app\n     *  from spamming the user.\n     */\n    reason: \"expired\" | \"rejected\" | \"pending\"\n}\n\n// Coding; converts an ErrorCode its Typed Error\n\n/**\n *  A conditional type that transforms the [[ErrorCode]] T into\n *  its EthersError type.\n *\n *  @flatworm-skip-docs\n */\nexport type CodedEthersError<T> =\n    T extends \"UNKNOWN_ERROR\" ? UnknownError:\n    T extends \"NOT_IMPLEMENTED\" ? NotImplementedError:\n    T extends \"UNSUPPORTED_OPERATION\" ? UnsupportedOperationError:\n    T extends \"NETWORK_ERROR\" ? NetworkError:\n    T extends \"SERVER_ERROR\" ? ServerError:\n    T extends \"TIMEOUT\" ? TimeoutError:\n    T extends \"BAD_DATA\" ? BadDataError:\n    T extends \"CANCELLED\" ? CancelledError:\n\n    T extends \"BUFFER_OVERRUN\" ? BufferOverrunError:\n    T extends \"NUMERIC_FAULT\" ? NumericFaultError:\n\n    T extends \"INVALID_ARGUMENT\" ? InvalidArgumentError:\n    T extends \"MISSING_ARGUMENT\" ? MissingArgumentError:\n    T extends \"UNEXPECTED_ARGUMENT\" ? UnexpectedArgumentError:\n\n    T extends \"CALL_EXCEPTION\" ? CallExceptionError:\n    T extends \"INSUFFICIENT_FUNDS\" ? InsufficientFundsError:\n    T extends \"NONCE_EXPIRED\" ? NonceExpiredError:\n    T extends \"OFFCHAIN_FAULT\" ? OffchainFaultError:\n    T extends \"REPLACEMENT_UNDERPRICED\" ? ReplacementUnderpricedError:\n    T extends \"TRANSACTION_REPLACED\" ? TransactionReplacedError:\n    T extends \"UNCONFIGURED_NAME\" ? UnconfiguredNameError:\n\n    T extends \"ACTION_REJECTED\" ? ActionRejectedError:\n\n    never;\n\n\n\n/**\n *  Returns true if the %%error%% matches an error thrown by ethers\n *  that matches the error %%code%%.\n *\n *  In TypeScript environments, this can be used to check that %%error%%\n *  matches an EthersError type, which means the expected properties will\n *  be set.\n *\n *  @See [ErrorCodes](api:ErrorCode)\n *  @example\n *    try {\n *      // code....\n *    } catch (e) {\n *      if (isError(e, \"CALL_EXCEPTION\")) {\n *          // The Type Guard has validated this object\n *          console.log(e.data);\n *      }\n *    }\n */\nexport function isError<K extends ErrorCode, T extends CodedEthersError<K>>(error: any, code: K): error is T {\n    return (error && (<EthersError>error).code === code);\n}\n\n/**\n *  Returns true if %%error%% is a [[CallExceptionError].\n */\nexport function isCallException(error: any): error is CallExceptionError {\n    return isError(error, \"CALL_EXCEPTION\");\n}\n\n/**\n *  Returns a new Error configured to the format ethers emits errors, with\n *  the %%message%%, [[api:ErrorCode]] %%code%% and additional properties\n *  for the corresponding EthersError.\n *\n *  Each error in ethers includes the version of ethers, a\n *  machine-readable [[ErrorCode]], and depending on %%code%%, additional\n *  required properties. The error message will also include the %%message%%,\n *  ethers version, %%code%% and all additional properties, serialized.\n */\nexport function makeError<K extends ErrorCode, T extends CodedEthersError<K>>(message: string, code: K, info?: ErrorInfo<T>): T {\n    let shortMessage = message;\n\n    {\n        const details: Array<string> = [];\n        if (info) {\n            if (\"message\" in info || \"code\" in info || \"name\" in info) {\n                throw new Error(`value will overwrite populated values: ${ stringify(info) }`);\n            }\n            for (const key in info) {\n                if (key === \"shortMessage\") { continue; }\n                const value = <any>(info[<keyof ErrorInfo<T>>key]);\n//                try {\n                    details.push(key + \"=\" + stringify(value));\n//                } catch (error: any) {\n//                console.log(\"MMM\", error.message);\n//                    details.push(key + \"=[could not serialize object]\");\n//                }\n            }\n        }\n        details.push(`code=${ code }`);\n        details.push(`version=${ version }`);\n\n        if (details.length) {\n            message += \" (\" + details.join(\", \") + \")\";\n        }\n    }\n\n    let error;\n    switch (code) {\n        case \"INVALID_ARGUMENT\":\n            error = new TypeError(message);\n            break;\n        case \"NUMERIC_FAULT\":\n        case \"BUFFER_OVERRUN\":\n            error = new RangeError(message);\n            break;\n        default:\n            error = new Error(message);\n    }\n\n    defineProperties<EthersError>(<EthersError>error, { code });\n\n    if (info) { Object.assign(error, info); }\n\n    if ((<any>error).shortMessage == null) {\n        defineProperties<EthersError>(<EthersError>error, { shortMessage });\n    }\n\n    return <T>error;\n}\n\n/**\n *  Throws an EthersError with %%message%%, %%code%% and additional error\n *  %%info%% when %%check%% is falsish..\n *\n *  @see [[api:makeError]]\n */\nexport function assert<K extends ErrorCode, T extends CodedEthersError<K>>(check: unknown, message: string, code: K, info?: ErrorInfo<T>): asserts check {\n    if (!check) { throw makeError(message, code, info); }\n}\n\n\n/**\n *  A simple helper to simply ensuring provided arguments match expected\n *  constraints, throwing if not.\n *\n *  In TypeScript environments, the %%check%% has been asserted true, so\n *  any further code does not need additional compile-time checks.\n */\nexport function assertArgument(check: unknown, message: string, name: string, value: unknown): asserts check {\n    assert(check, message, \"INVALID_ARGUMENT\", { argument: name, value: value });\n}\n\nexport function assertArgumentCount(count: number, expectedCount: number, message?: string): void {\n    if (message == null) { message = \"\"; }\n    if (message) { message = \": \" + message; }\n\n    assert(count >= expectedCount, \"missing argument\" + message, \"MISSING_ARGUMENT\", {\n        count: count,\n        expectedCount: expectedCount\n    });\n\n    assert(count <= expectedCount, \"too many arguments\" + message, \"UNEXPECTED_ARGUMENT\", {\n        count: count,\n        expectedCount: expectedCount\n    });\n}\n\nconst _normalizeForms = [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].reduce((accum, form) => {\n    try {\n        // General test for normalize\n        /* c8 ignore start */\n        if (\"test\".normalize(form) !== \"test\") { throw new Error(\"bad\"); };\n        /* c8 ignore stop */\n\n        if (form === \"NFD\") {\n            const check = String.fromCharCode(0xe9).normalize(\"NFD\");\n            const expected = String.fromCharCode(0x65, 0x0301)\n            /* c8 ignore start */\n            if (check !== expected) { throw new Error(\"broken\") }\n            /* c8 ignore stop */\n        }\n\n        accum.push(form);\n    } catch(error) { }\n\n    return accum;\n}, <Array<string>>[]);\n\n/**\n *  Throws if the normalization %%form%% is not supported.\n */\nexport function assertNormalize(form: string): void {\n    assert(_normalizeForms.indexOf(form) >= 0, \"platform missing String.prototype.normalize\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"String.prototype.normalize\", info: { form }\n    });\n}\n\n/**\n *  Many classes use file-scoped values to guard the constructor,\n *  making it effectively private. This facilitates that pattern\n *  by ensuring the %%givenGaurd%% matches the file-scoped %%guard%%,\n *  throwing if not, indicating the %%className%% if provided.\n */\nexport function assertPrivate(givenGuard: any, guard: any, className?: string): void {\n    if (className == null) { className = \"\"; }\n    if (givenGuard !== guard) {\n        let method = className, operation = \"new\";\n        if (className) {\n            method += \".\";\n            operation += \" \" + className;\n        }\n        assert(false, `private constructor; use ${ method }from* methods`, \"UNSUPPORTED_OPERATION\", {\n            operation\n        });\n    }\n}\n", "/**\n *  Some data helpers.\n *\n *\n *  @_subsection api/utils:Data Helpers  [about-data]\n */\nimport { assert, assertArgument } from \"./errors.js\";\n\n/**\n *  A [[HexString]] whose length is even, which ensures it is a valid\n *  representation of binary data.\n */\nexport type DataHexString = string;\n\n/**\n *  A string which is prefixed with ``0x`` and followed by any number\n *  of case-agnostic hexadecimal characters.\n *\n *  It must match the regular expression ``/0x[0-9A-Fa-f]*\\/``.\n */\nexport type HexString = string;\n\n/**\n *  An object that can be used to represent binary data.\n */\nexport type BytesLike = DataHexString | Uint8Array;\n\nfunction _getBytes(value: BytesLike, name?: string, copy?: boolean): Uint8Array {\n    if (value instanceof Uint8Array) {\n        if (copy) { return new Uint8Array(value); }\n        return value;\n    }\n\n    if (typeof(value) === \"string\" && value.match(/^0x(?:[0-9a-f][0-9a-f])*$/i)) {\n        const result = new Uint8Array((value.length - 2) / 2);\n        let offset = 2;\n        for (let i = 0; i < result.length; i++) {\n            result[i] = parseInt(value.substring(offset, offset + 2), 16);\n            offset += 2;\n        }\n        return result;\n    }\n\n    assertArgument(false, \"invalid BytesLike value\", name || \"value\", value);\n}\n\n/**\n *  Get a typed Uint8Array for %%value%%. If already a Uint8Array\n *  the original %%value%% is returned; if a copy is required use\n *  [[getBytesCopy]].\n *\n *  @see: getBytesCopy\n */\nexport function getBytes(value: BytesLike, name?: string): Uint8Array {\n    return _getBytes(value, name, false);\n}\n\n/**\n *  Get a typed Uint8Array for %%value%%, creating a copy if necessary\n *  to prevent any modifications of the returned value from being\n *  reflected elsewhere.\n *\n *  @see: getBytes\n */\nexport function getBytesCopy(value: BytesLike, name?: string): Uint8Array {\n    return _getBytes(value, name, true);\n}\n\n\n/**\n *  Returns true if %%value%% is a valid [[HexString]].\n *\n *  If %%length%% is ``true`` or a //number//, it also checks that\n *  %%value%% is a valid [[DataHexString]] of %%length%% (if a //number//)\n *  bytes of data (e.g. ``0x1234`` is 2 bytes).\n */\nexport function isHexString(value: any, length?: number | boolean): value is `0x${ string }` {\n    if (typeof(value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false\n    }\n\n    if (typeof(length) === \"number\" && value.length !== 2 + 2 * length) { return false; }\n    if (length === true && (value.length % 2) !== 0) { return false; }\n\n    return true;\n}\n\n/**\n *  Returns true if %%value%% is a valid representation of arbitrary\n *  data (i.e. a valid [[DataHexString]] or a Uint8Array).\n */\nexport function isBytesLike(value: any): value is BytesLike {\n    return (isHexString(value, true) || (value instanceof Uint8Array));\n}\n\nconst HexCharacters: string = \"0123456789abcdef\";\n\n/**\n *  Returns a [[DataHexString]] representation of %%data%%.\n */\nexport function hexlify(data: BytesLike): string {\n    const bytes = getBytes(data);\n\n    let result = \"0x\";\n    for (let i = 0; i < bytes.length; i++) {\n        const v = bytes[i];\n        result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n    }\n    return result;\n}\n\n/**\n *  Returns a [[DataHexString]] by concatenating all values\n *  within %%data%%.\n */\nexport function concat(datas: ReadonlyArray<BytesLike>): string {\n    return \"0x\" + datas.map((d) => hexlify(d).substring(2)).join(\"\");\n}\n\n/**\n *  Returns the length of %%data%%, in bytes.\n */\nexport function dataLength(data: BytesLike): number {\n    if (isHexString(data, true)) { return (data.length - 2) / 2; }\n    return getBytes(data).length;\n}\n\n/**\n *  Returns a [[DataHexString]] by slicing %%data%% from the %%start%%\n *  offset to the %%end%% offset.\n *\n *  By default %%start%% is 0 and %%end%% is the length of %%data%%.\n */\nexport function dataSlice(data: BytesLike, start?: number, end?: number): string {\n    const bytes = getBytes(data);\n    if (end != null && end > bytes.length) {\n        assert(false, \"cannot slice beyond data bounds\", \"BUFFER_OVERRUN\", {\n            buffer: bytes, length: bytes.length, offset: end\n        });\n    }\n    return hexlify(bytes.slice((start == null) ? 0: start, (end == null) ? bytes.length: end));\n}\n\n/**\n *  Return the [[DataHexString]] result by stripping all **leading**\n ** zero bytes from %%data%%.\n */\nexport function stripZerosLeft(data: BytesLike): string {\n    let bytes = hexlify(data).substring(2);\n    while (bytes.startsWith(\"00\")) { bytes = bytes.substring(2); }\n    return \"0x\" + bytes;\n}\n\nfunction zeroPad(data: BytesLike, length: number, left: boolean): string {\n    const bytes = getBytes(data);\n    assert(length >= bytes.length, \"padding exceeds data length\", \"BUFFER_OVERRUN\", {\n        buffer: new Uint8Array(bytes),\n        length: length,\n        offset: length + 1\n    });\n\n    const result = new Uint8Array(length);\n    result.fill(0);\n    if (left) {\n        result.set(bytes, length - bytes.length);\n    } else {\n        result.set(bytes, 0);\n    }\n\n    return hexlify(result);\n}\n\n/**\n *  Return the [[DataHexString]] of %%data%% padded on the **left**\n *  to %%length%% bytes.\n *\n *  If %%data%% already exceeds %%length%%, a [[BufferOverrunError]] is\n *  thrown.\n *\n *  This pads data the same as **values** are in Solidity\n *  (e.g. ``uint128``).\n */\nexport function zeroPadValue(data: BytesLike, length: number): string {\n    return zeroPad(data, length, true);\n}\n\n/**\n *  Return the [[DataHexString]] of %%data%% padded on the **right**\n *  to %%length%% bytes.\n *\n *  If %%data%% already exceeds %%length%%, a [[BufferOverrunError]] is\n *  thrown.\n *\n *  This pads data the same as **bytes** are in Solidity\n *  (e.g. ``bytes16``).\n */\nexport function zeroPadBytes(data: BytesLike, length: number): string {\n    return zeroPad(data, length, false);\n}\n", "/**\n *  Some mathematic operations.\n *\n *  @_subsection: api/utils:Math Helpers  [about-maths]\n */\nimport { hexlify, isBytesLike } from \"./data.js\";\nimport { assert, assertArgument } from \"./errors.js\";\n\nimport type { BytesLike } from \"./data.js\";\n\n/**\n *  Any type that can be used where a numeric value is needed.\n */\nexport type Numeric = number | bigint;\n\n/**\n *  Any type that can be used where a big number is needed.\n */\nexport type BigNumberish = string | Numeric;\n\n\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\n\n//const BN_Max256 = (BN_1 << BigInt(256)) - BN_1;\n\n\n// IEEE 754 support 53-bits of mantissa\nconst maxValue = 0x1fffffffffffff;\n\n/**\n *  Convert %%value%% from a twos-compliment representation of %%width%%\n *  bits to its value.\n *\n *  If the highest bit is ``1``, the result will be negative.\n */\nexport function fromTwos(_value: BigNumberish, _width: Numeric): bigint {\n    const value = getUint(_value, \"value\");\n    const width = BigInt(getNumber(_width, \"width\"));\n\n    assert((value >> width) === BN_0, \"overflow\", \"NUMERIC_FAULT\", {\n        operation: \"fromTwos\", fault: \"overflow\", value: _value\n    });\n\n    // Top bit set; treat as a negative value\n    if (value >> (width - BN_1)) {\n        const mask = (BN_1 << width) - BN_1;\n        return -(((~value) & mask) + BN_1);\n    }\n\n    return value;\n}\n\n/**\n *  Convert %%value%% to a twos-compliment representation of\n *  %%width%% bits.\n *\n *  The result will always be positive.\n */\nexport function toTwos(_value: BigNumberish, _width: Numeric): bigint {\n    let value = getBigInt(_value, \"value\");\n    const width = BigInt(getNumber(_width, \"width\"));\n\n    const limit = (BN_1 << (width - BN_1));\n\n    if (value < BN_0) {\n        value = -value;\n        assert(value <= limit, \"too low\", \"NUMERIC_FAULT\", {\n            operation: \"toTwos\", fault: \"overflow\", value: _value\n        });\n        const mask = (BN_1 << width) - BN_1;\n        return ((~value) & mask) + BN_1;\n    } else {\n        assert(value < limit, \"too high\", \"NUMERIC_FAULT\", {\n            operation: \"toTwos\", fault: \"overflow\", value: _value\n        });\n    }\n\n    return value;\n}\n\n/**\n *  Mask %%value%% with a bitmask of %%bits%% ones.\n */\nexport function mask(_value: BigNumberish, _bits: Numeric): bigint {\n    const value = getUint(_value, \"value\");\n    const bits = BigInt(getNumber(_bits, \"bits\"));\n    return value & ((BN_1 << bits) - BN_1);\n}\n\n/**\n *  Gets a BigInt from %%value%%. If it is an invalid value for\n *  a BigInt, then an ArgumentError will be thrown for %%name%%.\n */\nexport function getBigInt(value: BigNumberish, name?: string): bigint {\n    switch (typeof(value)) {\n        case \"bigint\": return value;\n        case \"number\":\n            assertArgument(Number.isInteger(value), \"underflow\", name || \"value\", value);\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return BigInt(value);\n        case \"string\":\n            try {\n                if (value === \"\") { throw new Error(\"empty string\"); }\n                if (value[0] === \"-\" && value[1] !== \"-\") {\n                    return -BigInt(value.substring(1));\n                }\n                return BigInt(value);\n            } catch(e: any) {\n                assertArgument(false, `invalid BigNumberish string: ${ e.message }`, name || \"value\", value);\n            }\n    }\n    assertArgument(false, \"invalid BigNumberish value\", name || \"value\", value);\n}\n\n/**\n *  Returns %%value%% as a bigint, validating it is valid as a bigint\n *  value and that it is positive.\n */\nexport function getUint(value: BigNumberish, name?: string): bigint {\n    const result = getBigInt(value, name);\n    assert(result >= BN_0, \"unsigned value cannot be negative\", \"NUMERIC_FAULT\", {\n        fault: \"overflow\", operation: \"getUint\", value\n    });\n    return result;\n}\n\nconst Nibbles = \"0123456789abcdef\";\n\n/*\n * Converts %%value%% to a BigInt. If %%value%% is a Uint8Array, it\n * is treated as Big Endian data.\n */\nexport function toBigInt(value: BigNumberish | Uint8Array): bigint {\n    if (value instanceof Uint8Array) {\n        let result = \"0x0\";\n        for (const v of value) {\n            result += Nibbles[v >> 4];\n            result += Nibbles[v & 0x0f];\n        }\n        return BigInt(result);\n    }\n\n    return getBigInt(value);\n}\n\n/**\n *  Gets a //number// from %%value%%. If it is an invalid value for\n *  a //number//, then an ArgumentError will be thrown for %%name%%.\n */\nexport function getNumber(value: BigNumberish, name?: string): number {\n    switch (typeof(value)) {\n        case \"bigint\":\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return Number(value);\n        case \"number\":\n            assertArgument(Number.isInteger(value), \"underflow\", name || \"value\", value);\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return value;\n        case \"string\":\n            try {\n                if (value === \"\") { throw new Error(\"empty string\"); }\n                return getNumber(BigInt(value), name);\n            } catch(e: any) {\n                assertArgument(false, `invalid numeric string: ${ e.message }`, name || \"value\", value);\n            }\n    }\n    assertArgument(false, \"invalid numeric value\", name || \"value\", value);\n}\n\n\n/**\n *  Converts %%value%% to a number. If %%value%% is a Uint8Array, it\n *  is treated as Big Endian data. Throws if the value is not safe.\n */\nexport function toNumber(value: BigNumberish | Uint8Array): number {\n    return getNumber(toBigInt(value));\n}\n\n/**\n *  Converts %%value%% to a Big Endian hexstring, optionally padded to\n *  %%width%% bytes.\n */\nexport function toBeHex(_value: BigNumberish, _width?: Numeric): string {\n    const value = getUint(_value, \"value\");\n\n    let result = value.toString(16);\n\n    if (_width == null) {\n        // Ensure the value is of even length\n        if (result.length % 2) { result = \"0\" + result; }\n    } else {\n        const width = getNumber(_width, \"width\");\n        assert(width * 2 >= result.length, `value exceeds width (${ width } bytes)`, \"NUMERIC_FAULT\", {\n            operation: \"toBeHex\",\n            fault: \"overflow\",\n            value: _value\n        });\n\n        // Pad the value to the required width\n        while (result.length < (width * 2)) { result = \"0\" + result; }\n\n    }\n\n    return \"0x\" + result;\n}\n\n/**\n *  Converts %%value%% to a Big Endian Uint8Array.\n */\nexport function toBeArray(_value: BigNumberish): Uint8Array {\n    const value = getUint(_value, \"value\");\n\n    if (value === BN_0) { return new Uint8Array([ ]); }\n\n    let hex = value.toString(16);\n    if (hex.length % 2) { hex = \"0\" + hex; }\n\n    const result = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < result.length; i++) {\n        const offset = i * 2;\n        result[i] = parseInt(hex.substring(offset, offset + 2), 16);\n    }\n\n    return result;\n}\n\n/**\n *  Returns a [[HexString]] for %%value%% safe to use as a //Quantity//.\n *\n *  A //Quantity// does not have and leading 0 values unless the value is\n *  the literal value `0x0`. This is most commonly used for JSSON-RPC\n *  numeric values.\n */\nexport function toQuantity(value: BytesLike | BigNumberish): string {\n    let result = hexlify(isBytesLike(value) ? value: toBeArray(value)).substring(2);\n    while (result.startsWith(\"0\")) { result = result.substring(1); }\n    if (result === \"\") { result = \"0\"; }\n    return \"0x\" + result;\n}\n", "/**\n *  The [Base58 Encoding](link-base58) scheme allows a **numeric** value\n *  to be encoded as a compact string using a radix of 58 using only\n *  alpha-numeric characters. Confusingly similar characters are omitted\n *  (i.e. ``\"l0O\"``).\n *\n *  Note that Base58 encodes a **numeric** value, not arbitrary bytes,\n *  since any zero-bytes on the left would get removed. To mitigate this\n *  issue most schemes that use Base58 choose specific high-order values\n *  to ensure non-zero prefixes.\n *\n *  @_subsection: api/utils:Base58 Encoding [about-base58]\n */\n\nimport { getBytes } from \"./data.js\";\nimport { assertArgument } from \"./errors.js\";\nimport { toBigInt } from \"./maths.js\";\n\nimport type { BytesLike } from \"./index.js\";\n\n\nconst Alphabet = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\nlet Lookup: null | Record<string, bigint> = null;\n\nfunction getAlpha(letter: string): bigint {\n    if (Lookup == null) {\n        Lookup = { };\n        for (let i = 0; i < Alphabet.length; i++) {\n            Lookup[Alphabet[i]] = BigInt(i);\n        }\n    }\n    const result = Lookup[letter];\n    assertArgument(result != null, `invalid base58 value`, \"letter\", letter);\n    return result;\n}\n\n\nconst BN_0 = BigInt(0);\nconst BN_58 = BigInt(58);\n\n/**\n *  Encode %%value%% as a Base58-encoded string.\n */\nexport function encodeBase58(_value: BytesLike): string {\n    const bytes = getBytes(_value);\n\n    let value = toBigInt(bytes);\n    let result = \"\";\n    while (value) {\n        result = Alphabet[Number(value % BN_58)] + result;\n        value /= BN_58;\n    }\n\n    // Account for leading padding zeros\n    for (let i = 0; i < bytes.length; i++) {\n        if (bytes[i]) { break; }\n        result = Alphabet[0] + result;\n    }\n\n    return result;\n}\n\n/**\n *  Decode the Base58-encoded %%value%%.\n */\nexport function decodeBase58(value: string): bigint {\n    let result = BN_0;\n    for (let i = 0; i < value.length; i++) {\n        result *= BN_58;\n        result += getAlpha(value[i]);\n    }\n    return result;\n}\n", "\n// utils/base64-browser\n\nimport { getBytes } from \"./data.js\";\n\nimport type { BytesLike } from \"./data.js\";\n\n\nexport function decodeBase64(textData: string): Uint8Array {\n    textData = atob(textData);\n    const data = new Uint8Array(textData.length);\n    for (let i = 0; i < textData.length; i++) {\n        data[i] = textData.charCodeAt(i);\n    }\n    return getBytes(data);\n}\n\nexport function encodeBase64(_data: BytesLike): string {\n    const data = getBytes(_data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n", "/**\n *  Events allow for applications to use the observer pattern, which\n *  allows subscribing and publishing events, outside the normal\n *  execution paths.\n *\n *  @_section api/utils/events:Events  [about-events]\n */\nimport { defineProperties } from \"./properties.js\";\n\n/**\n *  A callback function called when a an event is triggered.\n */\nexport type Listener = (...args: Array<any>) => void;\n\n/**\n *  An **EventEmitterable** behaves similar to an EventEmitter\n *  except provides async access to its methods.\n *\n *  An EventEmitter implements the observer pattern.\n */\nexport interface EventEmitterable<T> {\n    /**\n     *  Registers a %%listener%% that is called whenever the\n     *  %%event%% occurs until unregistered.\n     */\n    on(event: T, listener: Listener): Promise<this>;\n\n    /**\n     *  Registers a %%listener%% that is called the next time\n     *  %%event%% occurs.\n     */\n    once(event: T, listener: Listener): Promise<this>;\n\n    /**\n     *  Triggers each listener for %%event%% with the %%args%%.\n     */\n    emit(event: T, ...args: Array<any>): Promise<boolean>;\n\n    /**\n     *  Resolves to the number of listeners for %%event%%.\n     */\n    listenerCount(event?: T): Promise<number>;\n\n    /**\n     *  Resolves to the listeners for %%event%%.\n     */\n    listeners(event?: T): Promise<Array<Listener>>;\n\n    /**\n     *  Unregister the %%listener%% for %%event%%. If %%listener%%\n     *  is unspecified, all listeners are unregistered.\n     */\n    off(event: T, listener?: Listener): Promise<this>;\n\n    /**\n     *  Unregister all listeners for %%event%%.\n     */\n    removeAllListeners(event?: T): Promise<this>;\n\n    /**\n     *  Alias for [[on]].\n     */\n    addListener(event: T, listener: Listener): Promise<this>;\n\n    /**\n     *  Alias for [[off]].\n     */\n    removeListener(event: T, listener: Listener): Promise<this>;\n}\n\n/**\n *  When an [[EventEmitterable]] triggers a [[Listener]], the\n *  callback always ahas one additional argument passed, which is\n *  an **EventPayload**.\n */\nexport class EventPayload<T> {\n    /**\n     *  The event filter.\n     */\n    readonly filter!: T;\n\n    /**\n     *  The **EventEmitterable**.\n     */\n    readonly emitter!: EventEmitterable<T>;\n\n    readonly #listener: null | Listener;\n\n    /**\n     *  Create a new **EventPayload** for %%emitter%% with\n     *  the %%listener%% and for %%filter%%.\n     */\n    constructor(emitter: EventEmitterable<T>, listener: null | Listener, filter: T) {\n        this.#listener = listener;\n        defineProperties<EventPayload<any>>(this, { emitter, filter });\n    }\n\n    /**\n     *  Unregister the triggered listener for future events.\n     */\n    async removeListener(): Promise<void> {\n        if (this.#listener == null) { return; }\n        await this.emitter.off(this.filter, this.#listener);\n    }\n}\n", "/**\n *  Using strings in Ethereum (or any security-basd system) requires\n *  additional care. These utilities attempt to mitigate some of the\n *  safety issues as well as provide the ability to recover and analyse\n *  strings.\n *\n *  @_subsection api/utils:Strings and UTF-8  [about-strings]\n */\nimport { getBytes } from \"./data.js\";\nimport { assertArgument, assertNormalize } from \"./errors.js\";\n\nimport type { BytesLike } from \"./index.js\";\n\n\n///////////////////////////////\n\n/**\n *  The stanard normalization forms.\n */\nexport type UnicodeNormalizationForm = \"NFC\" | \"NFD\" | \"NFKC\" | \"NFKD\";\n\n/**\n *  When using the UTF-8 error API the following errors can be intercepted\n *  and processed as the %%reason%% passed to the [[Utf8ErrorFunc]].\n *\n *  **``\"UNEXPECTED_CONTINUE\"``** - a continuation byte was present where there\n *  was nothing to continue.\n *\n *  **``\"BAD_PREFIX\"``** - an invalid (non-continuation) byte to start a\n *  UTF-8 codepoint was found.\n *\n *  **``\"OVERRUN\"``** - the string is too short to process the expected\n *  codepoint length.\n *\n *  **``\"MISSING_CONTINUE\"``** - a missing continuation byte was expected but\n *  not found. The %%offset%% indicates the index the continuation byte\n *  was expected at.\n *\n *  **``\"OUT_OF_RANGE\"``** - the computed code point is outside the range\n *  for UTF-8. The %%badCodepoint%% indicates the computed codepoint, which was\n *  outside the valid UTF-8 range.\n *\n *  **``\"UTF16_SURROGATE\"``** - the UTF-8 strings contained a UTF-16 surrogate\n *  pair. The %%badCodepoint%% is the computed codepoint, which was inside the\n *  UTF-16 surrogate range.\n *\n *  **``\"OVERLONG\"``** - the string is an overlong representation. The\n *  %%badCodepoint%% indicates the computed codepoint, which has already\n *  been bounds checked.\n *\n *\n *  @returns string\n */\nexport type Utf8ErrorReason = \"UNEXPECTED_CONTINUE\" | \"BAD_PREFIX\" | \"OVERRUN\" |\n    \"MISSING_CONTINUE\" | \"OUT_OF_RANGE\" | \"UTF16_SURROGATE\" | \"OVERLONG\";\n\n\n/**\n *  A callback that can be used with [[toUtf8String]] to analysis or\n *  recovery from invalid UTF-8 data.\n *\n *  Parsing UTF-8 data is done through a simple Finite-State Machine (FSM)\n *  which calls the ``Utf8ErrorFunc`` if a fault is detected.\n *\n *  The %%reason%% indicates where in the FSM execution the fault\n *  occurred and the %%offset%% indicates where the input failed.\n *\n *  The %%bytes%% represents the raw UTF-8 data that was provided and\n *  %%output%% is the current array of UTF-8 code-points, which may\n *  be updated by the ``Utf8ErrorFunc``.\n *\n *  The value of the %%badCodepoint%% depends on the %%reason%%. See\n *  [[Utf8ErrorReason]] for details.\n *\n *  The function should return the number of bytes that should be skipped\n *  when control resumes to the FSM.\n */\nexport type Utf8ErrorFunc = (reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number) => number;\n\n\nfunction errorFunc(reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number): number {\n    assertArgument(false, `invalid codepoint at offset ${ offset }; ${ reason }`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number): number {\n\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === \"BAD_PREFIX\" || reason === \"UNEXPECTED_CONTINUE\") {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) { break; }\n            i++;\n        }\n        return i;\n    }\n\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === \"OVERRUN\") {\n        return bytes.length - offset - 1;\n    }\n\n    // Nothing to skip\n    return 0;\n}\n\nfunction replaceFunc(reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number): number {\n\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === \"OVERLONG\") {\n        assertArgument(typeof(badCodepoint) === \"number\", \"invalid bad code point for replacement\", \"badCodepoint\", badCodepoint);\n        output.push(badCodepoint);\n        return 0;\n    }\n\n    // Put the replacement character into the output\n    output.push(0xfffd);\n\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n\n/**\n *  A handful of popular, built-in UTF-8 error handling strategies.\n *\n *  **``\"error\"``** - throws on ANY illegal UTF-8 sequence or\n *  non-canonical (overlong) codepoints (this is the default)\n *\n *  **``\"ignore\"``** - silently drops any illegal UTF-8 sequence\n *  and accepts non-canonical (overlong) codepoints\n *\n *  **``\"replace\"``** - replace any illegal UTF-8 sequence with the\n *  UTF-8 replacement character (i.e. ``\"\\\\ufffd\"``) and accepts\n *  non-canonical (overlong) codepoints\n *\n *  @returns: Record<\"error\" | \"ignore\" | \"replace\", Utf8ErrorFunc>\n */\nexport const Utf8ErrorFuncs: Readonly<Record<\"error\" | \"ignore\" | \"replace\", Utf8ErrorFunc>> = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(_bytes: BytesLike, onError?: Utf8ErrorFunc): Array<number> {\n    if (onError == null) { onError = Utf8ErrorFuncs.error; }\n\n    const bytes = getBytes(_bytes, \"bytes\");\n\n    const result: Array<number> = [];\n    let i = 0;\n\n    // Invalid bytes are ignored\n    while(i < bytes.length) {\n\n        const c = bytes[i++];\n\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n\n        // Multibyte; how many bytes left for this character?\n        let extraLength: null | number = null;\n        let overlongMask: null | number = null;\n\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n\n        // 1110 xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n\n        // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n\n        } else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(\"UNEXPECTED_CONTINUE\", i - 1, bytes, result);\n            } else {\n                i += onError(\"BAD_PREFIX\", i - 1, bytes, result);\n            }\n            continue;\n        }\n\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(\"OVERRUN\", i - 1, bytes, result);\n            continue;\n        }\n\n        // Remove the length prefix from the char\n        let res: null | number = c & ((1 << (8 - extraLength - 1)) - 1);\n\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(\"MISSING_CONTINUE\", i, bytes, result);\n                res = null;\n                break;\n            };\n\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n\n        // See above loop for invalid continuation byte\n        if (res === null) { continue; }\n\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(\"OUT_OF_RANGE\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(\"UTF16_SURROGATE\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(\"OVERLONG\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        result.push(res);\n    }\n\n    return result;\n}\n\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n\n/**\n *  Returns the UTF-8 byte representation of %%str%%.\n *\n *  If %%form%% is specified, the string is normalized.\n */\nexport function toUtf8Bytes(str: string, form?: UnicodeNormalizationForm): Uint8Array {\n    assertArgument(typeof(str) === \"string\", \"invalid string value\", \"str\", str);\n\n    if (form != null) {\n        assertNormalize(form);\n        str = str.normalize(form);\n    }\n\n    let result: Array<number> = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n\n        if (c < 0x80) {\n            result.push(c);\n\n        } else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n\n        } else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n\n            assertArgument(i < str.length && ((c2 & 0xfc00) === 0xdc00),\n                \"invalid surrogate pair\", \"str\", str);\n\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n\n        } else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n\n    return new Uint8Array(result);\n};\n\n//export \nfunction _toUtf8String(codePoints: Array<number>): string {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode(\n            (((codePoint >> 10) & 0x3ff) + 0xd800),\n            ((codePoint & 0x3ff) + 0xdc00)\n        );\n    }).join(\"\");\n}\n\n/**\n *  Returns the string represented by the UTF-8 data %%bytes%%.\n *\n *  When %%onError%% function is specified, it is called on UTF-8\n *  errors allowing recovery using the [[Utf8ErrorFunc]] API.\n *  (default: [error](Utf8ErrorFuncs))\n */\nexport function toUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\n/**\n *  Returns the UTF-8 code-points for %%str%%.\n *\n *  If %%form%% is specified, the string is normalized.\n */\nexport function toUtf8CodePoints(str: string, form?: UnicodeNormalizationForm): Array<number> {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n\n", "import { assert, makeError } from \"./errors.js\";\n\nimport type {\n    FetchGetUrlFunc, FetchRequest, FetchCancelSignal, GetUrlResponse\n} from \"./fetch.js\";\n\nexport function createGetUrl(options?: Record<string, any>): FetchGetUrlFunc {\n\n    async function getUrl(req: FetchRequest, _signal?: FetchCancelSignal): Promise<GetUrlResponse> {\n        assert(_signal == null || !_signal.cancelled, \"request cancelled before sending\", \"CANCELLED\");\n\n        const protocol = req.url.split(\":\")[0].toLowerCase();\n\n        assert(protocol === \"http\" || protocol === \"https\", `unsupported protocol ${ protocol }`, \"UNSUPPORTED_OPERATION\", {\n            info: { protocol },\n            operation: \"request\"\n        });\n\n        assert(protocol === \"https\" || !req.credentials || req.allowInsecureAuthentication, \"insecure authorized connections unsupported\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"request\"\n        });\n\n        let error: null | Error = null;\n\n        const controller = new AbortController();\n\n        const timer = setTimeout(() => {\n            error = makeError(\"request timeout\", \"TIMEOUT\");\n            controller.abort();\n        }, req.timeout);\n\n        if (_signal) {\n            _signal.addListener(() => {\n                error = makeError(\"request cancelled\", \"CANCELLED\");\n                controller.abort();\n            });\n        }\n\n        const init = {\n            method: req.method,\n            headers: new Headers(Array.from(req)),\n            body: req.body || undefined,\n            signal: controller.signal\n        };\n\n        let resp: Awaited<ReturnType<typeof fetch>>;\n        try {\n            resp = await fetch(req.url, init);\n        } catch (_error) {\n            clearTimeout(timer);\n            if (error) { throw error; }\n            throw _error;\n        }\n\n        clearTimeout(timer);\n\n        const headers: Record<string, string> = { };\n        resp.headers.forEach((value, key) => {\n            headers[key.toLowerCase()] = value;\n        });\n\n        const respBody = await resp.arrayBuffer();\n        const body = (respBody == null) ? null: new Uint8Array(respBody);\n\n        return {\n            statusCode: resp.status,\n            statusMessage: resp.statusText,\n            headers, body\n        };\n    }\n\n    return getUrl;\n}\n\n// @TODO: remove in v7; provided for backwards compat\nconst defaultGetUrl: FetchGetUrlFunc = createGetUrl({ });\n\nexport async function getUrl(req: FetchRequest, _signal?: FetchCancelSignal): Promise<GetUrlResponse> {\n    return defaultGetUrl(req, _signal);\n}\n\n", "/**\n *  Fetching content from the web is environment-specific, so Ethers\n *  provides an abstraction that each environment can implement to provide\n *  this service.\n *\n *  On [Node.js](link-node), the ``http`` and ``https`` libs are used to\n *  create a request object, register event listeners and process data\n *  and populate the [[FetchResponse]].\n *\n *  In a browser, the [DOM fetch](link-js-fetch) is used, and the resulting\n *  ``Promise`` is waited on to retrieve the payload.\n *\n *  The [[FetchRequest]] is responsible for handling many common situations,\n *  such as redirects, server throttling, authentication, etc.\n *\n *  It also handles common gateways, such as IPFS and data URIs.\n *\n *  @_section api/utils/fetching:Fetching Web Content  [about-fetch]\n */\nimport { decodeBase64, encodeBase64 } from \"./base64.js\";\nimport { hexlify } from \"./data.js\";\nimport { assert, assertArgument } from \"./errors.js\";\nimport { defineProperties } from \"./properties.js\";\nimport { toUtf8Bytes, toUtf8String } from \"./utf8.js\";\n\nimport { createGetUrl } from \"./geturl.js\";\n\n/**\n *  An environment's implementation of ``getUrl`` must return this type.\n */\nexport type GetUrlResponse = {\n    statusCode: number,\n    statusMessage: string,\n    headers: Record<string, string>,\n    body: null | Uint8Array\n};\n\n/**\n *  This can be used to control how throttling is handled in\n *  [[FetchRequest-setThrottleParams]].\n */\nexport type FetchThrottleParams = {\n    maxAttempts?: number;\n    slotInterval?: number;\n};\n\n/**\n *  Called before any network request, allowing updated headers (e.g. Bearer tokens), etc.\n */\nexport type FetchPreflightFunc = (req: FetchRequest) => Promise<FetchRequest>;\n\n/**\n *  Called on the response, allowing client-based throttling logic or post-processing.\n */\nexport type FetchProcessFunc = (req: FetchRequest, resp: FetchResponse) => Promise<FetchResponse>;\n\n/**\n *  Called prior to each retry; return true to retry, false to abort.\n */\nexport type FetchRetryFunc = (req: FetchRequest, resp: FetchResponse, attempt: number) => Promise<boolean>;\n\n/**\n *  Called on Gateway URLs.\n */\nexport type FetchGatewayFunc = (url: string, signal?: FetchCancelSignal) => Promise<FetchRequest | FetchResponse>;\n\n/**\n *  Used to perform a fetch; use this to override the underlying network\n *  fetch layer. In NodeJS, the default uses the \"http\" and \"https\" libraries\n *  and in the browser ``fetch`` is used. If you wish to use Axios, this is\n *  how you would register it.\n */\nexport type FetchGetUrlFunc = (req: FetchRequest, signal?: FetchCancelSignal) => Promise<GetUrlResponse>;\n\n\nconst MAX_ATTEMPTS = 12;\nconst SLOT_INTERVAL = 250;\n\n// The global FetchGetUrlFunc implementation.\nlet defaultGetUrlFunc: FetchGetUrlFunc = createGetUrl();\n\nconst reData = new RegExp(\"^data:([^;:]*)?(;base64)?,(.*)$\", \"i\");\nconst reIpfs = new RegExp(\"^ipfs:/\\/(ipfs/)?(.*)$\", \"i\");\n\n// If locked, new Gateways cannot be added\nlet locked = false;\n\n// https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs\nasync function dataGatewayFunc(url: string, signal?: FetchCancelSignal): Promise<FetchResponse> {\n    try {\n        const match = url.match(reData);\n        if (!match) { throw new Error(\"invalid data\"); }\n        return new FetchResponse(200, \"OK\", {\n            \"content-type\": (match[1] || \"text/plain\"),\n        }, (match[2] ? decodeBase64(match[3]): unpercent(match[3])));\n    } catch (error) {\n        return new FetchResponse(599, \"BAD REQUEST (invalid data: URI)\", { }, null, new FetchRequest(url));\n    }\n}\n\n/**\n *  Returns a [[FetchGatewayFunc]] for fetching content from a standard\n *  IPFS gateway hosted at %%baseUrl%%.\n */\nfunction getIpfsGatewayFunc(baseUrl: string): FetchGatewayFunc {\n    async function gatewayIpfs(url: string, signal?: FetchCancelSignal): Promise<FetchRequest | FetchResponse> {\n        try {\n            const match = url.match(reIpfs);\n            if (!match) { throw new Error(\"invalid link\"); }\n            return new FetchRequest(`${ baseUrl }${ match[2] }`);\n        } catch (error) {\n            return new FetchResponse(599, \"BAD REQUEST (invalid IPFS URI)\", { }, null, new FetchRequest(url));\n        }\n    }\n\n    return gatewayIpfs;\n}\n\nconst Gateways: Record<string, FetchGatewayFunc> = {\n    \"data\": dataGatewayFunc,\n    \"ipfs\": getIpfsGatewayFunc(\"https:/\\/gateway.ipfs.io/ipfs/\")\n};\n\nconst fetchSignals: WeakMap<FetchRequest, () => void> = new WeakMap();\n\n/**\n *  @_ignore\n */\nexport class FetchCancelSignal {\n    #listeners: Array<() => void>;\n    #cancelled: boolean;\n\n    constructor(request: FetchRequest) {\n        this.#listeners = [ ];\n        this.#cancelled = false;\n\n        fetchSignals.set(request, () => {\n            if (this.#cancelled) { return; }\n            this.#cancelled = true;\n\n            for (const listener of this.#listeners) {\n                setTimeout(() => { listener(); }, 0);\n            }\n            this.#listeners = [ ];\n        });\n    }\n\n    addListener(listener: () => void): void {\n        assert(!this.#cancelled, \"singal already cancelled\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"fetchCancelSignal.addCancelListener\"\n        });\n        this.#listeners.push(listener);\n    }\n\n    get cancelled(): boolean { return this.#cancelled; }\n\n    checkSignal(): void {\n        assert(!this.cancelled, \"cancelled\", \"CANCELLED\", { });\n    }\n}\n\n// Check the signal, throwing if it is cancelled\nfunction checkSignal(signal?: FetchCancelSignal): FetchCancelSignal {\n    if (signal == null) { throw new Error(\"missing signal; should not happen\"); }\n    signal.checkSignal();\n    return signal;\n}\n\n/**\n *  Represents a request for a resource using a URI.\n *\n *  By default, the supported schemes are ``HTTP``, ``HTTPS``, ``data:``,\n *  and ``IPFS:``.\n *\n *  Additional schemes can be added globally using [[registerGateway]].\n *\n *  @example:\n *    req = new FetchRequest(\"https://www.ricmoo.com\")\n *    resp = await req.send()\n *    resp.body.length\n *    //_result:\n */\nexport class FetchRequest implements Iterable<[ key: string, value: string ]> {\n    #allowInsecure: boolean;\n    #gzip: boolean;\n    #headers: Record<string, string>;\n    #method: string;\n    #timeout: number;\n    #url: string;\n\n    #body?: Uint8Array;\n    #bodyType?: string;\n    #creds?: string;\n\n    // Hooks\n    #preflight?: null | FetchPreflightFunc;\n    #process?: null | FetchProcessFunc;\n    #retry?: null | FetchRetryFunc;\n\n    #signal?: FetchCancelSignal;\n\n    #throttle: Required<FetchThrottleParams>;\n\n    #getUrlFunc: null | FetchGetUrlFunc;\n\n    /**\n     *  The fetch URL to request.\n     */\n    get url(): string { return this.#url; }\n    set url(url: string) {\n        this.#url = String(url);\n    }\n\n    /**\n     *  The fetch body, if any, to send as the request body. //(default: null)//\n     *\n     *  When setting a body, the intrinsic ``Content-Type`` is automatically\n     *  set and will be used if **not overridden** by setting a custom\n     *  header.\n     *\n     *  If %%body%% is null, the body is cleared (along with the\n     *  intrinsic ``Content-Type``).\n     *\n     *  If %%body%% is a string, the intrinsic ``Content-Type`` is set to\n     *  ``text/plain``.\n     *\n     *  If %%body%% is a Uint8Array, the intrinsic ``Content-Type`` is set to\n     *  ``application/octet-stream``.\n     *\n     *  If %%body%% is any other object, the intrinsic ``Content-Type`` is\n     *  set to ``application/json``.\n     */\n    get body(): null | Uint8Array {\n        if (this.#body == null) { return null; }\n        return new Uint8Array(this.#body);\n    }\n    set body(body: null | string | Readonly<object> | Readonly<Uint8Array>) {\n        if (body == null) {\n            this.#body = undefined;\n            this.#bodyType = undefined;\n        } else if (typeof(body) === \"string\") {\n            this.#body = toUtf8Bytes(body);\n            this.#bodyType = \"text/plain\";\n        } else if (body instanceof Uint8Array) {\n            this.#body = body;\n            this.#bodyType = \"application/octet-stream\";\n        } else if (typeof(body) === \"object\") {\n            this.#body = toUtf8Bytes(JSON.stringify(body));\n            this.#bodyType = \"application/json\";\n        } else {\n            throw new Error(\"invalid body\");\n        }\n    }\n\n    /**\n     *  Returns true if the request has a body.\n     */\n    hasBody(): this is (FetchRequest & { body: Uint8Array }) {\n        return (this.#body != null);\n    }\n\n    /**\n     *  The HTTP method to use when requesting the URI. If no method\n     *  has been explicitly set, then ``GET`` is used if the body is\n     *  null and ``POST`` otherwise.\n     */\n    get method(): string {\n        if (this.#method) { return this.#method; }\n        if (this.hasBody()) { return \"POST\"; }\n        return \"GET\";\n    }\n    set method(method: null | string) {\n        if (method == null) { method = \"\"; }\n        this.#method = String(method).toUpperCase();\n    }\n\n    /**\n     *  The headers that will be used when requesting the URI. All\n     *  keys are lower-case.\n     *\n     *  This object is a copy, so any changes will **NOT** be reflected\n     *  in the ``FetchRequest``.\n     *\n     *  To set a header entry, use the ``setHeader`` method.\n     */\n    get headers(): Record<string, string> {\n        const headers = Object.assign({ }, this.#headers);\n\n        if (this.#creds) {\n            headers[\"authorization\"] = `Basic ${ encodeBase64(toUtf8Bytes(this.#creds)) }`;\n        };\n\n        if (this.allowGzip) {\n            headers[\"accept-encoding\"] = \"gzip\";\n        }\n\n        if (headers[\"content-type\"] == null && this.#bodyType) {\n            headers[\"content-type\"] = this.#bodyType;\n        }\n        if (this.body) { headers[\"content-length\"] = String(this.body.length); }\n\n        return headers;\n    }\n\n    /**\n     *  Get the header for %%key%%, ignoring case.\n     */\n    getHeader(key: string): string {\n        return this.headers[key.toLowerCase()];\n    }\n\n    /**\n     *  Set the header for %%key%% to %%value%%. All values are coerced\n     *  to a string.\n     */\n    setHeader(key: string, value: string | number): void {\n        this.#headers[String(key).toLowerCase()] = String(value);\n    }\n\n    /**\n     *  Clear all headers, resetting all intrinsic headers.\n     */\n    clearHeaders(): void {\n        this.#headers = { };\n    }\n\n    [Symbol.iterator](): Iterator<[ key: string, value: string ]> {\n        const headers = this.headers;\n        const keys = Object.keys(headers);\n        let index = 0;\n        return {\n            next: () => {\n                if (index < keys.length) {\n                    const key = keys[index++];\n                    return {\n                        value: [ key, headers[key] ], done: false\n                    }\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n\n    /**\n     *  The value that will be sent for the ``Authorization`` header.\n     *\n     *  To set the credentials, use the ``setCredentials`` method.\n     */\n    get credentials(): null | string {\n        return this.#creds || null;\n    }\n\n    /**\n     *  Sets an ``Authorization`` for %%username%% with %%password%%.\n     */\n    setCredentials(username: string, password: string): void {\n        assertArgument(!username.match(/:/), \"invalid basic authentication username\", \"username\", \"[REDACTED]\");\n        this.#creds = `${ username }:${ password }`;\n    }\n\n    /**\n     *  Enable and request gzip-encoded responses. The response will\n     *  automatically be decompressed. //(default: true)//\n     */\n    get allowGzip(): boolean {\n        return this.#gzip;\n    }\n    set allowGzip(value: boolean) {\n        this.#gzip = !!value;\n    }\n\n    /**\n     *  Allow ``Authentication`` credentials to be sent over insecure\n     *  channels. //(default: false)//\n     */\n    get allowInsecureAuthentication(): boolean {\n        return !!this.#allowInsecure;\n    }\n    set allowInsecureAuthentication(value: boolean) {\n        this.#allowInsecure = !!value;\n    }\n\n    /**\n     *  The timeout (in milliseconds) to wait for a complete response.\n     *  //(default: 5 minutes)//\n     */\n    get timeout(): number { return this.#timeout; }\n    set timeout(timeout: number) {\n        assertArgument(timeout >= 0, \"timeout must be non-zero\", \"timeout\", timeout);\n        this.#timeout = timeout;\n    }\n\n    /**\n     *  This function is called prior to each request, for example\n     *  during a redirection or retry in case of server throttling.\n     *\n     *  This offers an opportunity to populate headers or update\n     *  content before sending a request.\n     */\n    get preflightFunc(): null | FetchPreflightFunc {\n        return this.#preflight || null;\n    }\n    set preflightFunc(preflight: null | FetchPreflightFunc) {\n        this.#preflight = preflight;\n    }\n\n    /**\n     *  This function is called after each response, offering an\n     *  opportunity to provide client-level throttling or updating\n     *  response data.\n     *\n     *  Any error thrown in this causes the ``send()`` to throw.\n     *\n     *  To schedule a retry attempt (assuming the maximum retry limit\n     *  has not been reached), use [[response.throwThrottleError]].\n     */\n    get processFunc(): null | FetchProcessFunc {\n        return this.#process || null;\n    }\n    set processFunc(process: null | FetchProcessFunc) {\n        this.#process = process;\n    }\n\n    /**\n     *  This function is called on each retry attempt.\n     */\n    get retryFunc(): null | FetchRetryFunc {\n        return this.#retry || null;\n    }\n    set retryFunc(retry: null | FetchRetryFunc) {\n        this.#retry = retry;\n    }\n\n    /**\n     *  This function is called to fetch content from HTTP and\n     *  HTTPS URLs and is platform specific (e.g. nodejs vs\n     *  browsers).\n     *\n     *  This is by default the currently registered global getUrl\n     *  function, which can be changed using [[registerGetUrl]].\n     *  If this has been set, setting is to ``null`` will cause\n     *  this FetchRequest (and any future clones) to revert back to\n     *  using the currently registered global getUrl function.\n     *\n     *  Setting this is generally not necessary, but may be useful\n     *  for developers that wish to intercept requests or to\n     *  configurege a proxy or other agent.\n     */\n    get getUrlFunc(): FetchGetUrlFunc {\n        return this.#getUrlFunc || defaultGetUrlFunc;\n    }\n    set getUrlFunc(value: null | FetchGetUrlFunc) {\n        this.#getUrlFunc = value;\n    }\n\n    /**\n     *  Create a new FetchRequest instance with default values.\n     *\n     *  Once created, each property may be set before issuing a\n     *  ``.send()`` to make the request.\n     */\n    constructor(url: string) {\n        this.#url = String(url);\n\n        this.#allowInsecure = false;\n        this.#gzip = true;\n        this.#headers = { };\n        this.#method = \"\";\n        this.#timeout = 300000;\n\n        this.#throttle = {\n            slotInterval: SLOT_INTERVAL,\n            maxAttempts: MAX_ATTEMPTS\n        };\n\n        this.#getUrlFunc = null;\n    }\n\n    toString(): string {\n        return `<FetchRequest method=${ JSON.stringify(this.method) } url=${ JSON.stringify(this.url) } headers=${ JSON.stringify(this.headers) } body=${ this.#body ? hexlify(this.#body): \"null\" }>`;\n    }\n\n    /**\n     *  Update the throttle parameters used to determine maximum\n     *  attempts and exponential-backoff properties.\n     */\n    setThrottleParams(params: FetchThrottleParams): void {\n        if (params.slotInterval != null) {\n            this.#throttle.slotInterval = params.slotInterval;\n        }\n        if (params.maxAttempts != null) {\n            this.#throttle.maxAttempts = params.maxAttempts;\n        }\n    }\n\n    async #send(attempt: number, expires: number, delay: number, _request: FetchRequest, _response: FetchResponse): Promise<FetchResponse> {\n        if (attempt >= this.#throttle.maxAttempts) {\n            return _response.makeServerError(\"exceeded maximum retry limit\");\n        }\n\n        assert(getTime() <= expires, \"timeout\", \"TIMEOUT\", {\n            operation: \"request.send\", reason: \"timeout\", request: _request\n        });\n\n        if (delay > 0) { await wait(delay); }\n\n        let req = this.clone();\n        const scheme = (req.url.split(\":\")[0] || \"\").toLowerCase();\n\n        // Process any Gateways\n        if (scheme in Gateways) {\n            const result = await Gateways[scheme](req.url, checkSignal(_request.#signal));\n            if (result instanceof FetchResponse) {\n                let response = result;\n\n                if (this.processFunc) {\n                    checkSignal(_request.#signal);\n                    try {\n                        response = await this.processFunc(req, response);\n                    } catch (error: any) {\n\n                        // Something went wrong during processing; throw a 5xx server error\n                        if (error.throttle == null || typeof(error.stall) !== \"number\") {\n                            response.makeServerError(\"error in post-processing function\", error).assertOk();\n                        }\n\n                        // Ignore throttling\n                    }\n                }\n\n                return response;\n            }\n            req = result;\n        }\n\n        // We have a preflight function; update the request\n        if (this.preflightFunc) { req = await this.preflightFunc(req); }\n\n        const resp = await this.getUrlFunc(req, checkSignal(_request.#signal));\n        let response = new FetchResponse(resp.statusCode, resp.statusMessage, resp.headers, resp.body, _request);\n\n        if (response.statusCode === 301 || response.statusCode === 302) {\n\n            // Redirect\n            try {\n                const location = response.headers.location || \"\";\n                return req.redirect(location).#send(attempt + 1, expires, 0, _request, response);\n            } catch (error) { }\n\n            // Things won't get any better on another attempt; abort\n            return response;\n\n        } else if (response.statusCode === 429) {\n\n            // Throttle\n            if (this.retryFunc == null || (await this.retryFunc(req, response, attempt))) {\n                const retryAfter = response.headers[\"retry-after\"];\n                let delay = this.#throttle.slotInterval * Math.trunc(Math.random() * Math.pow(2, attempt));\n                if (typeof(retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                    delay = parseInt(retryAfter);\n                }\n                return req.clone().#send(attempt + 1, expires, delay, _request, response);\n            }\n        }\n\n        if (this.processFunc) {\n            checkSignal(_request.#signal);\n            try {\n                response = await this.processFunc(req, response);\n            } catch (error: any) {\n\n                // Something went wrong during processing; throw a 5xx server error\n                if (error.throttle == null || typeof(error.stall) !== \"number\") {\n                    response.makeServerError(\"error in post-processing function\", error).assertOk();\n                }\n\n                // Throttle\n                let delay = this.#throttle.slotInterval * Math.trunc(Math.random() * Math.pow(2, attempt));;\n                if (error.stall >= 0) { delay = error.stall; }\n\n                return req.clone().#send(attempt + 1, expires, delay, _request, response);\n            }\n        }\n\n        return response;\n    }\n\n    /**\n     *  Resolves to the response by sending the request.\n     */\n    send(): Promise<FetchResponse> {\n        assert(this.#signal == null, \"request already sent\", \"UNSUPPORTED_OPERATION\", { operation: \"fetchRequest.send\" });\n        this.#signal = new FetchCancelSignal(this);\n        return this.#send(0, getTime() + this.timeout, 0, this, new FetchResponse(0, \"\", { }, null, this));\n    }\n\n    /**\n     *  Cancels the inflight response, causing a ``CANCELLED``\n     *  error to be rejected from the [[send]].\n     */\n    cancel(): void {\n        assert(this.#signal != null, \"request has not been sent\", \"UNSUPPORTED_OPERATION\", { operation: \"fetchRequest.cancel\" });\n        const signal = fetchSignals.get(this);\n        if (!signal) { throw new Error(\"missing signal; should not happen\"); }\n        signal();\n    }\n\n    /**\n     *  Returns a new [[FetchRequest]] that represents the redirection\n     *  to %%location%%.\n     */\n    redirect(location: string): FetchRequest {\n        // Redirection; for now we only support absolute locations\n        const current = this.url.split(\":\")[0].toLowerCase();\n        const target = location.split(\":\")[0].toLowerCase();\n\n        // Don't allow redirecting:\n        // - non-GET requests\n        // - downgrading the security (e.g. https => http)\n        // - to non-HTTP (or non-HTTPS) protocols [this could be relaxed?]\n        assert(this.method === \"GET\" && (current !== \"https\" || target !== \"http\") && location.match(/^https?:/), `unsupported redirect`, \"UNSUPPORTED_OPERATION\", {\n            operation: `redirect(${ this.method } ${ JSON.stringify(this.url) } => ${ JSON.stringify(location) })`\n        });\n\n        // Create a copy of this request, with a new URL\n        const req = new FetchRequest(location);\n        req.method = \"GET\";\n        req.allowGzip = this.allowGzip;\n        req.timeout = this.timeout;\n        req.#headers = Object.assign({ }, this.#headers);\n        if (this.#body) { req.#body = new Uint8Array(this.#body); }\n        req.#bodyType = this.#bodyType;\n\n        // Do not forward credentials unless on the same domain; only absolute\n        //req.allowInsecure = false;\n        // paths are currently supported; may want a way to specify to forward?\n        //setStore(req.#props, \"creds\", getStore(this.#pros, \"creds\"));\n\n        return req;\n    }\n\n    /**\n     *  Create a new copy of this request.\n     */\n    clone(): FetchRequest {\n        const clone = new FetchRequest(this.url);\n\n        // Preserve \"default method\" (i.e. null)\n        clone.#method = this.#method;\n\n        // Preserve \"default body\" with type, copying the Uint8Array is present\n        if (this.#body) { clone.#body = this.#body; }\n        clone.#bodyType = this.#bodyType;\n\n        // Preserve \"default headers\"\n        clone.#headers = Object.assign({ }, this.#headers);\n\n        // Credentials is readonly, so we copy internally\n        clone.#creds = this.#creds;\n\n        if (this.allowGzip) { clone.allowGzip = true; }\n\n        clone.timeout = this.timeout;\n        if (this.allowInsecureAuthentication) { clone.allowInsecureAuthentication = true; }\n\n        clone.#preflight = this.#preflight;\n        clone.#process = this.#process;\n        clone.#retry = this.#retry;\n\n        clone.#throttle = Object.assign({ }, this.#throttle);\n\n        clone.#getUrlFunc = this.#getUrlFunc;\n\n        return clone;\n    }\n\n    /**\n     *  Locks all static configuration for gateways and FetchGetUrlFunc\n     *  registration.\n     */\n    static lockConfig(): void {\n        locked = true;\n    }\n\n    /**\n     *  Get the current Gateway function for %%scheme%%.\n     */\n    static getGateway(scheme: string): null | FetchGatewayFunc {\n        return Gateways[scheme.toLowerCase()] || null;\n    }\n\n    /**\n     *  Use the %%func%% when fetching URIs using %%scheme%%.\n     *\n     *  This method affects all requests globally.\n     *\n     *  If [[lockConfig]] has been called, no change is made and this\n     *  throws.\n     */\n    static registerGateway(scheme: string, func: FetchGatewayFunc): void {\n        scheme = scheme.toLowerCase();\n        if (scheme === \"http\" || scheme === \"https\") {\n            throw new Error(`cannot intercept ${ scheme }; use registerGetUrl`);\n        }\n        if (locked) { throw new Error(\"gateways locked\"); }\n        Gateways[scheme] = func;\n    }\n\n    /**\n     *  Use %%getUrl%% when fetching URIs over HTTP and HTTPS requests.\n     *\n     *  This method affects all requests globally.\n     *\n     *  If [[lockConfig]] has been called, no change is made and this\n     *  throws.\n     */\n    static registerGetUrl(getUrl: FetchGetUrlFunc): void {\n        if (locked) { throw new Error(\"gateways locked\"); }\n        defaultGetUrlFunc = getUrl;\n    }\n\n    /**\n     *  Creates a getUrl function that fetches content from HTTP and\n     *  HTTPS URLs.\n     *\n     *  The available %%options%% are dependent on the platform\n     *  implementation of the default getUrl function.\n     *\n     *  This is not generally something that is needed, but is useful\n     *  when trying to customize simple behaviour when fetching HTTP\n     *  content.\n     */\n    static createGetUrlFunc(options?: Record<string, any>): FetchGetUrlFunc {\n        return createGetUrl(options);\n    }\n\n    /**\n     *  Creates a function that can \"fetch\" data URIs.\n     *\n     *  Note that this is automatically done internally to support\n     *  data URIs, so it is not necessary to register it.\n     *\n     *  This is not generally something that is needed, but may\n     *  be useful in a wrapper to perfom custom data URI functionality.\n     */\n    static createDataGateway(): FetchGatewayFunc {\n        return dataGatewayFunc;\n    }\n\n    /**\n     *  Creates a function that will fetch IPFS (unvalidated) from\n     *  a custom gateway baseUrl.\n     *\n     *  The default IPFS gateway used internally is\n     *  ``\"https:/\\/gateway.ipfs.io/ipfs/\"``.\n     */\n    static createIpfsGatewayFunc(baseUrl: string): FetchGatewayFunc {\n        return getIpfsGatewayFunc(baseUrl);\n    }\n}\n\n\ninterface ThrottleError extends Error {\n    stall: number;\n    throttle: true;\n};\n\n/**\n *  The response for a FetchRequest.\n */\nexport class FetchResponse implements Iterable<[ key: string, value: string ]> {\n    #statusCode: number;\n    #statusMessage: string;\n    #headers: Record<string, string>;\n    #body: null | Readonly<Uint8Array>;\n    #request: null | FetchRequest;\n\n    #error: { error?: Error, message: string };\n\n    toString(): string {\n        return `<FetchResponse status=${ this.statusCode } body=${ this.#body ? hexlify(this.#body): \"null\" }>`;\n    }\n\n    /**\n     *  The response status code.\n     */\n    get statusCode(): number { return this.#statusCode; }\n\n    /**\n     *  The response status message.\n     */\n    get statusMessage(): string { return this.#statusMessage; }\n\n    /**\n     *  The response headers. All keys are lower-case.\n     */\n    get headers(): Record<string, string> { return Object.assign({ }, this.#headers); }\n\n    /**\n     *  The response body, or ``null`` if there was no body.\n     */\n    get body(): null | Readonly<Uint8Array> {\n        return (this.#body == null) ? null: new Uint8Array(this.#body);\n    }\n\n    /**\n     *  The response body as a UTF-8 encoded string, or the empty\n     *  string (i.e. ``\"\"``) if there was no body.\n     *\n     *  An error is thrown if the body is invalid UTF-8 data.\n     */\n    get bodyText(): string {\n        try {\n            return (this.#body == null) ? \"\": toUtf8String(this.#body);\n        } catch (error) {\n            assert(false, \"response body is not valid UTF-8 data\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"bodyText\", info: { response: this }\n            });\n        }\n    }\n\n    /**\n     *  The response body, decoded as JSON.\n     *\n     *  An error is thrown if the body is invalid JSON-encoded data\n     *  or if there was no body.\n     */\n    get bodyJson(): any {\n        try {\n            return JSON.parse(this.bodyText);\n        } catch (error) {\n            assert(false, \"response body is not valid JSON\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"bodyJson\", info: { response: this }\n            });\n        }\n    }\n\n    [Symbol.iterator](): Iterator<[ key: string, value: string ]> {\n        const headers = this.headers;\n        const keys = Object.keys(headers);\n        let index = 0;\n        return {\n            next: () => {\n                if (index < keys.length) {\n                    const key = keys[index++];\n                    return {\n                        value: [ key, headers[key] ], done: false\n                    }\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n\n    constructor(statusCode: number, statusMessage: string, headers: Readonly<Record<string, string>>, body: null | Uint8Array, request?: FetchRequest) {\n        this.#statusCode = statusCode;\n        this.#statusMessage = statusMessage;\n        this.#headers = Object.keys(headers).reduce((accum, k) => {\n            accum[k.toLowerCase()] = String(headers[k]);\n            return accum;\n        }, <Record<string, string>>{ });\n        this.#body = ((body == null) ? null: new Uint8Array(body));\n        this.#request = (request || null);\n\n        this.#error = { message: \"\" };\n    }\n\n    /**\n     *  Return a Response with matching headers and body, but with\n     *  an error status code (i.e. 599) and %%message%% with an\n     *  optional %%error%%.\n     */\n    makeServerError(message?: string, error?: Error): FetchResponse {\n        let statusMessage: string;\n        if (!message) {\n            message = `${ this.statusCode } ${ this.statusMessage }`;\n            statusMessage = `CLIENT ESCALATED SERVER ERROR (${ message })`;\n        } else {\n            statusMessage = `CLIENT ESCALATED SERVER ERROR (${ this.statusCode } ${ this.statusMessage }; ${ message })`;\n        }\n        const response = new FetchResponse(599, statusMessage, this.headers,\n            this.body, this.#request || undefined);\n        response.#error = { message, error };\n        return response;\n    }\n\n    /**\n     *  If called within a [request.processFunc](FetchRequest-processFunc)\n     *  call, causes the request to retry as if throttled for %%stall%%\n     *  milliseconds.\n     */\n    throwThrottleError(message?: string, stall?: number): never {\n        if (stall == null) {\n            stall = -1;\n        } else {\n            assertArgument(Number.isInteger(stall) && stall >= 0, \"invalid stall timeout\", \"stall\", stall);\n        }\n\n        const error = new Error(message || \"throttling requests\");\n\n        defineProperties(<ThrottleError>error, { stall, throttle: true });\n\n        throw error;\n    }\n\n    /**\n     *  Get the header value for %%key%%, ignoring case.\n     */\n    getHeader(key: string): string {\n        return this.headers[key.toLowerCase()];\n    }\n\n    /**\n     *  Returns true if the response has a body.\n     */\n    hasBody(): this is (FetchResponse & { body: Uint8Array }) {\n        return (this.#body != null);\n    }\n\n    /**\n     *  The request made for this response.\n     */\n    get request(): null | FetchRequest { return this.#request; }\n\n    /**\n     *  Returns true if this response was a success statusCode.\n     */\n    ok(): boolean {\n        return (this.#error.message === \"\" && this.statusCode >= 200 && this.statusCode < 300);\n    }\n\n    /**\n     *  Throws a ``SERVER_ERROR`` if this response is not ok.\n     */\n    assertOk(): void {\n        if (this.ok()) { return; }\n        let { message, error } = this.#error;\n        if (message === \"\") {\n            message = `server response ${ this.statusCode } ${ this.statusMessage }`;\n        }\n\n        let requestUrl: null | string = null;\n        if (this.request) { requestUrl = this.request.url; }\n\n        let responseBody: null | string = null;\n        try {\n            if (this.#body) { responseBody = toUtf8String(this.#body); }\n        } catch (e) { }\n\n        assert(false, message, \"SERVER_ERROR\", {\n            request: (this.request || \"unknown request\"), response: this, error,\n            info: {\n                requestUrl, responseBody,\n                responseStatus: `${ this.statusCode } ${ this.statusMessage }` }\n        });\n    }\n}\n\n\nfunction getTime(): number { return (new Date()).getTime(); }\n\nfunction unpercent(value: string): Uint8Array {\n    return toUtf8Bytes(value.replace(/%([0-9a-f][0-9a-f])/gi, (all, code) => {\n        return String.fromCharCode(parseInt(code, 16));\n    }));\n}\n\nfunction wait(delay: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, delay));\n}\n", "/**\n *  The **FixedNumber** class permits using values with decimal places,\n *  using fixed-pont math.\n *\n *  Fixed-point math is still based on integers under-the-hood, but uses an\n *  internal offset to store fractional components below, and each operation\n *  corrects for this after each operation.\n *\n *  @_section: api/utils/fixed-point-math:Fixed-Point Maths  [about-fixed-point-math]\n */\nimport { getBytes } from \"./data.js\";\nimport { assert, assertArgument, assertPrivate } from \"./errors.js\";\nimport {\n    getBigInt, getNumber, fromTwos, mask, toBigInt\n} from \"./maths.js\";\nimport { defineProperties } from \"./properties.js\";\n\nimport type { BigNumberish, BytesLike, Numeric } from \"./index.js\";\n\nconst BN_N1 = BigInt(-1);\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_5 = BigInt(5);\n\nconst _guard = { };\n\n\n// Constant to pull zeros from for multipliers\nlet Zeros = \"0000\";\nwhile (Zeros.length < 80) { Zeros += Zeros; }\n\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getTens(decimals: number): bigint {\n    let result = Zeros;\n    while (result.length < decimals) { result += result; }\n    return BigInt(\"1\" + result.substring(0, decimals));\n}\n\n\n\n    /*\n     *  Returns a new FixedFormat for %%value%%.\n     *\n     *  If %%value%% is specified as a ``number``, the bit-width is\n     *  128 bits and %%value%% is used for the ``decimals``.\n     *\n     *  A string %%value%% may begin with ``fixed`` or ``ufixed``\n     *  for signed and unsigned respectfully. If no other properties\n     *  are specified, the bit-width is 128-bits with 18 decimals.\n     *\n     *  To specify the bit-width and demicals, append them separated\n     *  by an ``\"x\"`` to the %%value%%.\n     *\n     *  For example, ``ufixed128x18`` describes an unsigned, 128-bit\n     *  wide format with 18 decimals.\n     *\n     *  If %%value%% is an other object, its properties for ``signed``,\n     *  ``width`` and ``decimals`` are checked.\n     */\n\n/**\n *  A description of a fixed-point arithmetic field.\n *\n *  When specifying the fixed format, the values override the default of\n *  a ``fixed128x18``, which implies a signed 128-bit value with 18\n *  decimals of precision.\n *\n *  The alias ``fixed`` and ``ufixed`` can be used for ``fixed128x18`` and\n *  ``ufixed128x18`` respectively.\n *\n *  When a fixed format string begins with a ``u``, it indicates the field\n *  is unsigned, so any negative values will overflow. The first number\n *  indicates the bit-width and the second number indicates the decimal\n *  precision.\n *\n *  When a ``number`` is used for a fixed format, it indicates the number\n *  of decimal places, and the default width and signed-ness will be used.\n *\n *  The bit-width must be byte aligned and the decimals can be at most 80.\n */\nexport type FixedFormat = number | string | {\n    signed?: boolean,\n    width?: number,\n    decimals?: number\n};\n\nfunction checkValue(val: bigint, format: _FixedFormat, safeOp?: string): bigint {\n    const width = BigInt(format.width);\n    if (format.signed) {\n        const limit = (BN_1 << (width - BN_1));\n        assert(safeOp == null || (val >= -limit  && val < limit), \"overflow\", \"NUMERIC_FAULT\", {\n            operation: <string>safeOp, fault: \"overflow\", value: val\n        });\n\n        if (val > BN_0) {\n            val = fromTwos(mask(val, width), width);\n        } else {\n            val = -fromTwos(mask(-val, width), width);\n        }\n\n    } else {\n        const limit = (BN_1 << width);\n        assert(safeOp == null || (val >= 0 && val < limit), \"overflow\", \"NUMERIC_FAULT\", {\n            operation: <string>safeOp, fault: \"overflow\", value: val\n        });\n        val = (((val % limit) + limit) % limit) & (limit - BN_1);\n    }\n\n    return val;\n}\n\ntype _FixedFormat = { signed: boolean, width: number, decimals: number, name: string }\n\nfunction getFormat(value?: FixedFormat): _FixedFormat {\n    if (typeof(value) === \"number\") { value = `fixed128x${value}` }\n\n    let signed = true;\n    let width = 128;\n    let decimals = 18;\n\n    if (typeof(value) === \"string\") {\n        // Parse the format string\n        if (value === \"fixed\") {\n            // defaults...\n        } else if (value === \"ufixed\") {\n            signed = false;\n        } else {\n            const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n            assertArgument(match, \"invalid fixed format\", \"format\", value);\n            signed = (match[1] !== \"u\");\n            width = parseInt(match[2]);\n            decimals = parseInt(match[3]);\n        }\n    } else if (value) {\n        // Extract the values from the object\n        const v: any = value;\n        const check = (key: string, type: string, defaultValue: any): any => {\n            if (v[key] == null) { return defaultValue; }\n            assertArgument(typeof(v[key]) === type,\n                \"invalid fixed format (\" + key + \" not \" + type +\")\", \"format.\" + key, v[key]);\n            return v[key];\n        }\n        signed = check(\"signed\", \"boolean\", signed);\n        width = check(\"width\", \"number\", width);\n        decimals = check(\"decimals\", \"number\", decimals);\n    }\n\n    assertArgument((width % 8) === 0, \"invalid FixedNumber width (not byte aligned)\", \"format.width\", width);\n    assertArgument(decimals <= 80, \"invalid FixedNumber decimals (too large)\", \"format.decimals\", decimals);\n\n    const name = (signed ? \"\": \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n\n    return { signed, width, decimals, name };\n}\n\nfunction toString(val: bigint, decimals: number) {\n    let negative = \"\";\n    if (val < BN_0) {\n        negative = \"-\";\n        val *= BN_N1;\n    }\n\n    let str = val.toString();\n\n    // No decimal point for whole values\n    if (decimals === 0) { return (negative + str); }\n\n    // Pad out to the whole component (including a whole digit)\n    while (str.length <= decimals) { str = Zeros + str; }\n\n    // Insert the decimal point\n    const index = str.length - decimals;\n    str = str.substring(0, index) + \".\" + str.substring(index);\n\n    // Trim the whole component (leaving at least one 0)\n    while (str[0] === \"0\" && str[1] !== \".\") {\n        str = str.substring(1);\n    }\n\n    // Trim the decimal component (leaving at least one 0)\n    while (str[str.length - 1] === \"0\" && str[str.length - 2] !== \".\") {\n        str = str.substring(0, str.length - 1);\n    }\n\n    return (negative + str);\n}\n\n\n/**\n *  A FixedNumber represents a value over its [[FixedFormat]]\n *  arithmetic field.\n *\n *  A FixedNumber can be used to perform math, losslessly, on\n *  values which have decmial places.\n *\n *  A FixedNumber has a fixed bit-width to store values in, and stores all\n *  values internally by multiplying the value by 10 raised to the power of\n *  %%decimals%%.\n *\n *  If operations are performed that cause a value to grow too high (close to\n *  positive infinity) or too low (close to negative infinity), the value\n *  is said to //overflow//.\n *\n *  For example, an 8-bit signed value, with 0 decimals may only be within\n *  the range ``-128`` to ``127``; so ``-128 - 1`` will overflow and become\n *  ``127``. Likewise, ``127 + 1`` will overflow and become ``-127``.\n *\n *  Many operation have a normal and //unsafe// variant. The normal variant\n *  will throw a [[NumericFaultError]] on any overflow, while the //unsafe//\n *  variant will silently allow overflow, corrupting its value value.\n *\n *  If operations are performed that cause a value to become too small\n *  (close to zero), the value loses precison and is said to //underflow//.\n *\n *  For example, an value with 1 decimal place may store a number as small\n *  as ``0.1``, but the value of ``0.1 / 2`` is ``0.05``, which cannot fit\n *  into 1 decimal place, so underflow occurs which means precision is lost\n *  and the value becomes ``0``.\n *\n *  Some operations have a normal and //signalling// variant. The normal\n *  variant will silently ignore underflow, while the //signalling// variant\n *  will thow a [[NumericFaultError]] on underflow.\n */\nexport class FixedNumber {\n\n    /**\n     *  The specific fixed-point arithmetic field for this value.\n     */\n    readonly format!: string;\n\n    readonly #format: _FixedFormat;\n\n    // The actual value (accounting for decimals)\n    #val: bigint;\n\n    // A base-10 value to multiple values by to maintain the magnitude\n    readonly #tens: bigint;\n\n    /**\n     *  This is a property so console.log shows a human-meaningful value.\n     *\n     *  @private\n     */\n    readonly _value!: string;\n\n    // Use this when changing this file to get some typing info,\n    // but then switch to any to mask the internal type\n    //constructor(guard: any, value: bigint, format: _FixedFormat) {\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, value: bigint, format: any) {\n        assertPrivate(guard, _guard, \"FixedNumber\");\n\n        this.#val = value;\n\n        this.#format = format;\n\n        const _value = toString(value, format.decimals);\n\n        defineProperties<FixedNumber>(this, { format: format.name, _value });\n\n        this.#tens = getTens(format.decimals);\n    }\n\n    /**\n     *  If true, negative values are permitted, otherwise only\n     *  positive values and zero are allowed.\n     */\n    get signed(): boolean { return this.#format.signed; }\n\n    /**\n     *  The number of bits available to store the value.\n     */\n    get width(): number { return this.#format.width; }\n\n    /**\n     *  The number of decimal places in the fixed-point arithment field.\n     */\n    get decimals(): number { return this.#format.decimals; }\n\n    /**\n     *  The value as an integer, based on the smallest unit the\n     *  [[decimals]] allow.\n     */\n    get value(): bigint { return this.#val; }\n\n    #checkFormat(other: FixedNumber): void {\n        assertArgument(this.format === other.format,\n            \"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n    }\n\n    #checkValue(val: bigint, safeOp?: string): FixedNumber {\n/*\n        const width = BigInt(this.width);\n        if (this.signed) {\n            const limit = (BN_1 << (width - BN_1));\n            assert(safeOp == null || (val >= -limit  && val < limit), \"overflow\", \"NUMERIC_FAULT\", {\n                operation: <string>safeOp, fault: \"overflow\", value: val\n            });\n\n            if (val > BN_0) {\n                val = fromTwos(mask(val, width), width);\n            } else {\n                val = -fromTwos(mask(-val, width), width);\n            }\n\n        } else {\n            const masked = mask(val, width);\n            assert(safeOp == null || (val >= 0 && val === masked), \"overflow\", \"NUMERIC_FAULT\", {\n                operation: <string>safeOp, fault: \"overflow\", value: val\n            });\n            val = masked;\n        }\n*/\n        val = checkValue(val, this.#format, safeOp);\n        return new FixedNumber(_guard, val, this.#format);\n    }\n\n    #add(o: FixedNumber, safeOp?: string): FixedNumber {\n        this.#checkFormat(o);\n        return this.#checkValue(this.#val + o.#val, safeOp);\n    }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% added\n     *  to %%other%%, ignoring overflow.\n     */\n    addUnsafe(other: FixedNumber): FixedNumber { return this.#add(other); }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% added\n     *  to %%other%%. A [[NumericFaultError]] is thrown if overflow\n     *  occurs.\n     */\n    add(other: FixedNumber): FixedNumber { return this.#add(other, \"add\"); }\n\n    #sub(o: FixedNumber, safeOp?: string): FixedNumber {\n        this.#checkFormat(o);\n        return this.#checkValue(this.#val - o.#val, safeOp);\n    }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%other%% subtracted\n     *  from %%this%%, ignoring overflow.\n     */\n    subUnsafe(other: FixedNumber): FixedNumber { return this.#sub(other); }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%other%% subtracted\n     *  from %%this%%. A [[NumericFaultError]] is thrown if overflow\n     *  occurs.\n     */\n    sub(other: FixedNumber): FixedNumber { return this.#sub(other, \"sub\"); }\n\n    #mul(o: FixedNumber, safeOp?: string): FixedNumber {\n        this.#checkFormat(o);\n        return this.#checkValue((this.#val * o.#val) / this.#tens, safeOp);\n    }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% multiplied\n     *  by %%other%%, ignoring overflow and underflow (precision loss).\n     */\n    mulUnsafe(other: FixedNumber): FixedNumber { return this.#mul(other); }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% multiplied\n     *  by %%other%%. A [[NumericFaultError]] is thrown if overflow\n     *  occurs.\n     */\n    mul(other: FixedNumber): FixedNumber { return this.#mul(other, \"mul\"); }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% multiplied\n     *  by %%other%%. A [[NumericFaultError]] is thrown if overflow\n     *  occurs or if underflow (precision loss) occurs.\n     */\n    mulSignal(other: FixedNumber): FixedNumber {\n        this.#checkFormat(other);\n        const value = this.#val * other.#val;\n        assert((value % this.#tens) === BN_0, \"precision lost during signalling mul\", \"NUMERIC_FAULT\", {\n            operation: \"mulSignal\", fault: \"underflow\", value: this\n        });\n        return this.#checkValue(value / this.#tens, \"mulSignal\");\n    }\n\n    #div(o: FixedNumber, safeOp?: string): FixedNumber {\n        assert(o.#val !== BN_0, \"division by zero\", \"NUMERIC_FAULT\", {\n            operation: \"div\", fault: \"divide-by-zero\", value: this\n        });\n        this.#checkFormat(o);\n        return this.#checkValue((this.#val * this.#tens) / o.#val, safeOp);\n    }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% divided\n     *  by %%other%%, ignoring underflow (precision loss). A\n     *  [[NumericFaultError]] is thrown if overflow occurs.\n     */\n    divUnsafe(other: FixedNumber): FixedNumber { return this.#div(other); }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% divided\n     *  by %%other%%, ignoring underflow (precision loss). A\n     *  [[NumericFaultError]] is thrown if overflow occurs.\n     */\n    div(other: FixedNumber): FixedNumber { return this.#div(other, \"div\"); }\n\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% divided\n     *  by %%other%%. A [[NumericFaultError]] is thrown if underflow\n     *  (precision loss) occurs.\n     */\n    divSignal(other: FixedNumber): FixedNumber {\n        assert(other.#val !== BN_0, \"division by zero\", \"NUMERIC_FAULT\", {\n            operation: \"div\", fault: \"divide-by-zero\", value: this\n        });\n        this.#checkFormat(other);\n        const value = (this.#val * this.#tens);\n        assert((value % other.#val) === BN_0, \"precision lost during signalling div\", \"NUMERIC_FAULT\", {\n            operation: \"divSignal\", fault: \"underflow\", value: this\n        });\n        return this.#checkValue(value / other.#val, \"divSignal\");\n    }\n\n    /**\n     *  Returns a comparison result between %%this%% and %%other%%.\n     *\n     *  This is suitable for use in sorting, where ``-1`` implies %%this%%\n     *  is smaller, ``1`` implies %%this%% is larger and ``0`` implies\n     *  both are equal.\n     */\n     cmp(other: FixedNumber): number {\n         let a = this.value, b = other.value;\n\n         // Coerce a and b to the same magnitude\n         const delta = this.decimals - other.decimals;\n         if (delta > 0) {\n             b *= getTens(delta);\n         } else if (delta < 0) {\n             a *= getTens(-delta);\n         }\n\n         // Comnpare\n         if (a < b) { return -1; }\n         if (a > b) { return 1; }\n         return 0;\n     }\n\n    /**\n     *  Returns true if %%other%% is equal to %%this%%.\n     */\n     eq(other: FixedNumber): boolean { return this.cmp(other) === 0; }\n\n    /**\n     *  Returns true if %%other%% is less than to %%this%%.\n     */\n     lt(other: FixedNumber): boolean { return this.cmp(other) < 0; }\n\n    /**\n     *  Returns true if %%other%% is less than or equal to %%this%%.\n     */\n     lte(other: FixedNumber): boolean { return this.cmp(other) <= 0; }\n\n    /**\n     *  Returns true if %%other%% is greater than to %%this%%.\n     */\n     gt(other: FixedNumber): boolean { return this.cmp(other) > 0; }\n\n    /**\n     *  Returns true if %%other%% is greater than or equal to %%this%%.\n     */\n     gte(other: FixedNumber): boolean { return this.cmp(other) >= 0; }\n\n    /**\n     *  Returns a new [[FixedNumber]] which is the largest **integer**\n     *  that is less than or equal to %%this%%.\n     *\n     *  The decimal component of the result will always be ``0``.\n     */\n    floor(): FixedNumber {\n        let val = this.#val;\n        if (this.#val < BN_0) { val -= this.#tens - BN_1; }\n        val = (this.#val / this.#tens) * this.#tens;\n        return this.#checkValue(val, \"floor\");\n    }\n\n    /**\n     *  Returns a new [[FixedNumber]] which is the smallest **integer**\n     *  that is greater than or equal to %%this%%.\n     *\n     *  The decimal component of the result will always be ``0``.\n     */\n    ceiling(): FixedNumber {\n        let val = this.#val;\n        if (this.#val > BN_0) { val += this.#tens - BN_1; }\n        val = (this.#val / this.#tens) * this.#tens;\n        return this.#checkValue(val, \"ceiling\");\n    }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the decimal component\n     *  rounded up on ties at %%decimals%% places.\n     */\n    round(decimals?: number): FixedNumber {\n        if (decimals == null) { decimals = 0; }\n\n        // Not enough precision to not already be rounded\n        if (decimals >= this.decimals) { return this; }\n\n        const delta = this.decimals - decimals;\n        const bump = BN_5 * getTens(delta - 1);\n\n        let value = this.value + bump;\n        const tens = getTens(delta);\n        value = (value / tens) * tens;\n\n        checkValue(value, this.#format, \"round\");\n\n        return new FixedNumber(_guard, value, this.#format);\n    }\n\n    /**\n     *  Returns true if %%this%% is equal to ``0``.\n     */\n    isZero(): boolean { return (this.#val === BN_0); }\n\n    /**\n     *  Returns true if %%this%% is less than ``0``.\n     */\n    isNegative(): boolean { return (this.#val < BN_0); }\n\n    /**\n     *  Returns the string representation of %%this%%.\n     */\n    toString(): string { return this._value; }\n\n    /**\n     *  Returns a float approximation.\n     *\n     *  Due to IEEE 754 precission (or lack thereof), this function\n     *  can only return an approximation and most values will contain\n     *  rounding errors.\n     */\n    toUnsafeFloat(): number { return parseFloat(this.toString()); }\n\n    /**\n     *  Return a new [[FixedNumber]] with the same value but has had\n     *  its field set to %%format%%.\n     *\n     *  This will throw if the value cannot fit into %%format%%.\n     */\n    toFormat(format: FixedFormat): FixedNumber {\n        return FixedNumber.fromString(this.toString(), format);\n    }\n\n    /**\n     *  Creates a new [[FixedNumber]] for %%value%% divided by\n     *  %%decimal%% places with %%format%%.\n     *\n     *  This will throw a [[NumericFaultError]] if %%value%% (once adjusted\n     *  for %%decimals%%) cannot fit in %%format%%, either due to overflow\n     *  or underflow (precision loss).\n     */\n    static fromValue(_value: BigNumberish, _decimals?: Numeric, _format?: FixedFormat): FixedNumber {\n        const decimals = (_decimals == null) ? 0: getNumber(_decimals);\n        const format = getFormat(_format);\n\n        let value = getBigInt(_value, \"value\");\n        const delta = decimals - format.decimals;\n        if (delta > 0) {\n            const tens = getTens(delta);\n            assert((value % tens) === BN_0, \"value loses precision for format\", \"NUMERIC_FAULT\", {\n                operation: \"fromValue\", fault: \"underflow\", value: _value\n            });\n            value /= tens;\n        } else if (delta < 0) {\n            value *= getTens(-delta);\n        }\n\n        checkValue(value, format, \"fromValue\");\n\n        return new FixedNumber(_guard, value, format);\n    }\n\n    /**\n     *  Creates a new [[FixedNumber]] for %%value%% with %%format%%.\n     *\n     *  This will throw a [[NumericFaultError]] if %%value%% cannot fit\n     *  in %%format%%, either due to overflow or underflow (precision loss).\n     */\n    static fromString(_value: string, _format?: FixedFormat): FixedNumber {\n        const match = _value.match(/^(-?)([0-9]*)\\.?([0-9]*)$/);\n        assertArgument(match && (match[2].length + match[3].length) > 0, \"invalid FixedNumber string value\", \"value\", _value);\n\n        const format = getFormat(_format);\n\n        let whole = (match[2] || \"0\"), decimal = (match[3] || \"\");\n\n        // Pad out the decimals\n        while (decimal.length < format.decimals) { decimal += Zeros; }\n\n        // Check precision is safe\n        assert(decimal.substring(format.decimals).match(/^0*$/), \"too many decimals for format\", \"NUMERIC_FAULT\", {\n            operation: \"fromString\", fault: \"underflow\", value: _value\n        });\n\n        // Remove extra padding\n        decimal = decimal.substring(0, format.decimals);\n\n        const value = BigInt(match[1] + whole + decimal)\n\n        checkValue(value, format, \"fromString\");\n\n        return new FixedNumber(_guard, value, format);\n    }\n\n    /**\n     *  Creates a new [[FixedNumber]] with the big-endian representation\n     *  %%value%% with %%format%%.\n     *\n     *  This will throw a [[NumericFaultError]] if %%value%% cannot fit\n     *  in %%format%% due to overflow.\n     */\n    static fromBytes(_value: BytesLike, _format?: FixedFormat): FixedNumber {\n        let value = toBigInt(getBytes(_value, \"value\"));\n        const format = getFormat(_format);\n\n        if (format.signed) { value = fromTwos(value, format.width); }\n\n        checkValue(value, format, \"fromBytes\");\n\n        return new FixedNumber(_guard, value, format);\n    }\n}\n\n//const f1 = FixedNumber.fromString(\"12.56\", \"fixed16x2\");\n//const f2 = FixedNumber.fromString(\"0.3\", \"fixed16x2\");\n//console.log(f1.divSignal(f2));\n//const BUMP = FixedNumber.from(\"0.5\");\n", "//See: https://github.com/ethereum/wiki/wiki/RLP\n\nimport { hexlify } from \"./data.js\";\nimport { assert, assertArgument } from \"./errors.js\";\nimport { getBytes } from \"./data.js\";\n\nimport type { BytesLike, RlpStructuredData } from \"./index.js\";\n\n\nfunction hexlifyByte(value: number): string {\n    let result = value.toString(16);\n    while (result.length < 2) { result = \"0\" + result; }\n    return \"0x\" + result;\n}\n\nfunction unarrayifyInteger(data: Uint8Array, offset: number, length: number): number {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\n\ntype Decoded = {\n    result: any;\n    consumed: number;\n};\n\nfunction _decodeChildren(data: Uint8Array, offset: number, childOffset: number, length: number): Decoded {\n    const result: Array<any> = [];\n\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n\n        result.push(decoded.result);\n\n        childOffset += decoded.consumed;\n        assert(childOffset <= offset + 1 + length, \"child data too short\", \"BUFFER_OVERRUN\", {\n            buffer: data, length, offset\n        });\n    }\n\n    return {consumed: (1 + length), result: result};\n}\n\n// returns { consumed: number, result: Object }\nfunction _decode(data: Uint8Array, offset: number): { consumed: number, result: any } {\n    assert(data.length !== 0, \"data too short\", \"BUFFER_OVERRUN\", {\n        buffer: data, length: 0, offset: 1\n    });\n\n    const checkOffset = (offset: number) => {\n        assert(offset <= data.length, \"data short segment too short\", \"BUFFER_OVERRUN\", {\n            buffer: data, length: data.length, offset\n        });\n    };\n\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        checkOffset(offset + 1 + lengthLength);\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        checkOffset(offset + 1 + lengthLength + length);\n\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n\n    } else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        checkOffset(offset + 1 + length);\n\n        return _decodeChildren(data, offset, offset + 1, length);\n\n    } else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        checkOffset(offset + 1 + lengthLength);\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        checkOffset(offset + 1 + lengthLength + length);\n\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result }\n\n    } else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        checkOffset(offset + 1 + length);\n\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result }\n    }\n\n    return { consumed: 1, result: hexlifyByte(data[offset]) };\n}\n\n/**\n *  Decodes %%data%% into the structured data it represents.\n */\nexport function decodeRlp(_data: BytesLike): RlpStructuredData {\n    const data = getBytes(_data, \"data\");\n    const decoded = _decode(data, 0);\n    assertArgument(decoded.consumed === data.length, \"unexpected junk after rlp payload\", \"data\", _data);\n    return decoded.result;\n}\n\n", "//See: https://github.com/ethereum/wiki/wiki/RLP\n\nimport { getBytes } from \"./data.js\";\n\nimport type { RlpStructuredDataish } from \"./rlp.js\";\n\n\nfunction arrayifyInteger(value: number): Array<number> {\n    const result: Array<number> = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\n\nfunction _encode(object: Array<any> | string | Uint8Array): Array<number> {\n    if (Array.isArray(object)) {\n        let payload: Array<number> = [];\n        object.forEach(function(child) {\n            payload = payload.concat(_encode(child));\n        });\n\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length)\n            return payload;\n        }\n\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n\n        return length.concat(payload);\n\n    }\n\n    const data: Array<number> = Array.prototype.slice.call(getBytes(object, \"object\"));\n\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n\n    } else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n\n    return length.concat(data);\n}\n\nconst nibbles = \"0123456789abcdef\";\n\n/**\n *  Encodes %%object%% as an RLP-encoded [[DataHexString]].\n */\nexport function encodeRlp(object: RlpStructuredDataish): string {\n    let result = \"0x\";\n    for (const v of _encode(object)) {\n        result += nibbles[v >> 4];\n        result += nibbles[v & 0xf];\n    }\n    return result;\n}\n", "/**\n *  Explain UUID and link to RFC here.\n *\n *  @_subsection: api/utils:UUID  [about-uuid]\n */\nimport { getBytes, hexlify } from \"./data.js\";\n\nimport type { BytesLike } from \"./index.js\";\n\n/**\n *  Returns the version 4 [[link-uuid]] for the %%randomBytes%%.\n *\n *  @see: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\n */\nexport function uuidV4(randomBytes: BytesLike): string {\n    const bytes = getBytes(randomBytes, \"randomBytes\");\n\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    const value = hexlify(bytes);\n\n    return [\n       value.substring(2, 10),\n       value.substring(10, 14),\n       value.substring(14, 18),\n       value.substring(18, 22),\n       value.substring(22, 34),\n    ].join(\"-\");\n}\n", "\nimport {\n    defineProperties, concat, getBytesCopy, getNumber, hexlify,\n    toBeArray, toBigInt, toNumber,\n    assert, assertArgument\n    /*, isError*/\n} from \"../../utils/index.js\";\n\nimport type { BigNumberish, BytesLike } from \"../../utils/index.js\";\n\n/**\n * @_ignore:\n */\nexport const WordSize: number = 32;\nconst Padding = new Uint8Array(WordSize);\n\n// Properties used to immediate pass through to the underlying object\n// - `then` is used to detect if an object is a Promise for await\nconst passProperties = [ \"then\" ];\n\nconst _guard = { };\n\nconst resultNames: WeakMap<Result, ReadonlyArray<null | string>> = new WeakMap();\n\nfunction getNames(result: Result): ReadonlyArray<null | string> {\n    return resultNames.get(result)!;\n}\nfunction setNames(result: Result, names: ReadonlyArray<null | string>): void {\n    resultNames.set(result, names);\n}\n\nfunction throwError(name: string, error: Error): never {\n    const wrapped = new Error(`deferred error during ABI decoding triggered accessing ${ name }`);\n    (<any>wrapped).error = error;\n    throw wrapped;\n}\n\nfunction toObject(names: ReadonlyArray<null | string>, items: Result, deep?: boolean): Record<string, any> | Array<any> {\n    if (names.indexOf(null) >= 0) {\n        return items.map((item, index) => {\n            if (item instanceof Result) {\n                return toObject(getNames(item), item, deep);\n            }\n            return item;\n        });\n    }\n\n    return (<Array<string>>names).reduce((accum, name, index) => {\n        let item = items.getValue(name);\n        if (!(name in accum)) {\n            if (deep && item instanceof Result) {\n                item = toObject(getNames(item), item, deep);\n            }\n            accum[name] = item;\n        }\n        return accum;\n    }, <Record<string, any>>{ });\n}\n\n\n/**\n *  A [[Result]] is a sub-class of Array, which allows accessing any\n *  of its values either positionally by its index or, if keys are\n *  provided by its name.\n *\n *  @_docloc: api/abi\n */\nexport class Result extends Array<any> {\n    // No longer used; but cannot be removed as it will remove the\n    // #private field from the .d.ts which may break backwards\n    // compatibility\n    readonly #names: ReadonlyArray<null | string>;\n\n    [ K: string | number ]: any\n\n    /**\n     *  @private\n     */\n    constructor(...args: Array<any>) {\n        // To properly sub-class Array so the other built-in\n        // functions work, the constructor has to behave fairly\n        // well. So, in the event we are created via fromItems()\n        // we build the read-only Result object we want, but on\n        // any other input, we use the default constructor\n\n        // constructor(guard: any, items: Array<any>, keys?: Array<null | string>);\n        const guard = args[0];\n        let items: Array<any> = args[1];\n        let names: Array<null | string> = (args[2] || [ ]).slice();\n\n        let wrap = true;\n        if (guard !== _guard) {\n            items = args;\n            names = [ ];\n            wrap = false;\n        }\n\n        // Can't just pass in ...items since an array of length 1\n        // is a special case in the super.\n        super(items.length);\n        items.forEach((item, index) => { this[index] = item; });\n\n        // Find all unique keys\n        const nameCounts = names.reduce((accum, name) => {\n            if (typeof(name) === \"string\") {\n                accum.set(name, (accum.get(name) || 0) + 1);\n            }\n            return accum;\n        }, <Map<string, number>>(new Map()));\n\n        // Remove any key thats not unique\n        setNames(this, Object.freeze(items.map((item, index) => {\n            const name = names[index];\n            if (name != null && nameCounts.get(name) === 1) {\n                return name;\n            }\n            return null;\n        })));\n\n        // Dummy operations to prevent TypeScript from complaining\n        this.#names = [ ];\n        if (this.#names == null) { void(this.#names); }\n\n        if (!wrap) { return; }\n\n        // A wrapped Result is immutable\n        Object.freeze(this);\n\n        // Proxy indices and names so we can trap deferred errors\n        const proxy = new Proxy(this, {\n            get: (target, prop, receiver) => {\n                if (typeof(prop) === \"string\") {\n\n                    // Index accessor\n                    if (prop.match(/^[0-9]+$/)) {\n                        const index = getNumber(prop, \"%index\");\n                        if (index < 0 || index >= this.length) {\n                            throw new RangeError(\"out of result range\");\n                        }\n\n                        const item = target[index];\n                        if (item instanceof Error) {\n                            throwError(`index ${ index }`, item);\n                        }\n                        return item;\n                    }\n\n                    // Pass important checks (like `then` for Promise) through\n                    if (passProperties.indexOf(prop) >= 0) {\n                        return Reflect.get(target, prop, receiver);\n                    }\n\n                    const value = target[prop];\n                    if (value instanceof Function) {\n                        // Make sure functions work with private variables\n                        // See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy#no_private_property_forwarding\n                        return function(this: any, ...args: Array<any>) {\n                            return value.apply((this === receiver) ? target: this, args);\n                        };\n\n                    } else if (!(prop in target)) {\n                        // Possible name accessor\n                        return target.getValue.apply((this === receiver) ? target: this, [ prop ]);\n                    }\n                }\n\n                return Reflect.get(target, prop, receiver);\n            }\n        });\n        setNames(proxy, getNames(this));\n        return proxy;\n    }\n\n    /**\n     *  Returns the Result as a normal Array. If %%deep%%, any children\n     *  which are Result objects are also converted to a normal Array.\n     *\n     *  This will throw if there are any outstanding deferred\n     *  errors.\n     */\n    toArray(deep?: boolean): Array<any> {\n        const result: Array<any> = [ ];\n        this.forEach((item, index) => {\n            if (item instanceof Error) { throwError(`index ${ index }`, item); }\n            if (deep && item instanceof Result) {\n                item = item.toArray(deep);\n            }\n            result.push(item);\n        });\n        return result;\n    }\n\n    /**\n     *  Returns the Result as an Object with each name-value pair. If\n     *  %%deep%%, any children which are Result objects are also\n     *  converted to an Object.\n     *\n     *  This will throw if any value is unnamed, or if there are\n     *  any outstanding deferred errors.\n     */\n    toObject(deep?: boolean): Record<string, any> {\n        const names = getNames(this);\n        return names.reduce((accum, name, index) => {\n\n            assert(name != null, `value at index ${ index } unnamed`, \"UNSUPPORTED_OPERATION\", {\n                operation: \"toObject()\"\n            });\n\n            return toObject(names, this, deep);\n        }, <Record<string, any>>{});\n    }\n\n    /**\n     *  @_ignore\n     */\n    slice(start?: number | undefined, end?: number | undefined): Result {\n        if (start == null) { start = 0; }\n        if (start < 0) {\n            start += this.length;\n            if (start < 0) { start = 0; }\n        }\n\n        if (end == null) { end = this.length; }\n        if (end < 0) {\n            end += this.length;\n            if (end < 0) { end = 0; }\n        }\n        if (end > this.length) { end = this.length; }\n\n        const _names = getNames(this);\n\n        const result: Array<any> = [ ], names: Array<null | string> = [ ];\n        for (let i = start; i < end; i++) {\n            result.push(this[i]);\n            names.push(_names[i]);\n        }\n\n        return new Result(_guard, result, names);\n    }\n\n    /**\n     *  @_ignore\n     */\n    filter(callback: (el: any, index: number, array: Result) => boolean, thisArg?: any): Result {\n        const _names = getNames(this);\n\n        const result: Array<any> = [ ], names: Array<null | string> = [ ];\n        for (let i = 0; i < this.length; i++) {\n            const item = this[i];\n            if (item instanceof Error) {\n                throwError(`index ${ i }`, item);\n            }\n\n            if (callback.call(thisArg, item, i, this)) {\n                result.push(item);\n                names.push(_names[i]);\n            }\n        }\n\n        return new Result(_guard, result, names);\n    }\n\n    /**\n     *  @_ignore\n     */\n    map<T extends any = any>(callback: (el: any, index: number, array: Result) => T, thisArg?: any): Array<T> {\n        const result: Array<T> = [ ];\n        for (let i = 0; i < this.length; i++) {\n            const item = this[i];\n            if (item instanceof Error) {\n                throwError(`index ${ i }`, item);\n            }\n\n            result.push(callback.call(thisArg, item, i, this));\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Returns the value for %%name%%.\n     *\n     *  Since it is possible to have a key whose name conflicts with\n     *  a method on a [[Result]] or its superclass Array, or any\n     *  JavaScript keyword, this ensures all named values are still\n     *  accessible by name.\n     */\n    getValue(name: string): any {\n        const index = getNames(this).indexOf(name);\n        if (index === -1) { return undefined; }\n\n        const value = this[index];\n\n        if (value instanceof Error) {\n            throwError(`property ${ JSON.stringify(name) }`, (<any>value).error);\n        }\n\n        return value;\n    }\n\n    /**\n     *  Creates a new [[Result]] for %%items%% with each entry\n     *  also accessible by its corresponding name in %%keys%%.\n     */\n    static fromItems(items: Array<any>, keys?: Array<null | string>): Result {\n        return new Result(_guard, items, keys);\n    }\n}\n\n/**\n *  Returns all errors found in a [[Result]].\n *\n *  Since certain errors encountered when creating a [[Result]] do\n *  not impact the ability to continue parsing data, they are\n *  deferred until they are actually accessed. Hence a faulty string\n *  in an Event that is never used does not impact the program flow.\n *\n *  However, sometimes it may be useful to access, identify or\n *  validate correctness of a [[Result]].\n *\n *  @_docloc api/abi\n */\nexport function checkResultErrors(result: Result): Array<{ path: Array<string | number>, error: Error }> {\n    // Find the first error (if any)\n    const errors: Array<{ path: Array<string | number>, error: Error }> = [ ];\n\n    const checkErrors = function(path: Array<string | number>, object: any): void {\n        if (!Array.isArray(object)) { return; }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n\n            try {\n                 checkErrors(childPath, object[key]);\n            } catch (error: any) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    }\n    checkErrors([ ], result);\n\n    return errors;\n\n}\n\nfunction getValue(value: BigNumberish): Uint8Array {\n    let bytes = toBeArray(value);\n\n    assert (bytes.length <= WordSize, \"value out-of-bounds\",\n        \"BUFFER_OVERRUN\", { buffer: bytes, length: WordSize, offset: bytes.length });\n\n    if (bytes.length !== WordSize) {\n        bytes = getBytesCopy(concat([ Padding.slice(bytes.length % WordSize), bytes ]));\n    }\n\n    return bytes;\n}\n\n/**\n *  @_ignore\n */\nexport abstract class Coder {\n\n    // The coder name:\n    //   - address, uint256, tuple, array, etc.\n    readonly name!: string;\n\n    // The fully expanded type, including composite types:\n    //   - address, uint256, tuple(address,bytes), uint256[3][4][],  etc.\n    readonly type!: string;\n\n    // The localName bound in the signature, in this example it is \"baz\":\n    //   - tuple(address foo, uint bar) baz\n    readonly localName!: string;\n\n    // Whether this type is dynamic:\n    //  - Dynamic: bytes, string, address[], tuple(boolean[]), etc.\n    //  - Not Dynamic: address, uint256, boolean[3], tuple(address, uint8)\n    readonly dynamic!: boolean;\n\n    constructor(name: string, type: string, localName: string, dynamic: boolean) {\n        defineProperties<Coder>(this, { name, type, localName, dynamic }, {\n            name: \"string\", type: \"string\", localName: \"string\", dynamic: \"boolean\"\n        });\n    }\n\n    _throwError(message: string, value: any): never {\n        assertArgument(false, message, this.localName, value);\n    }\n\n    abstract encode(writer: Writer, value: any): number;\n    abstract decode(reader: Reader): any;\n\n    abstract defaultValue(): any;\n}\n\n/**\n *  @_ignore\n */\nexport class Writer {\n    // An array of WordSize lengthed objects to concatenation\n    #data: Array<Uint8Array>;\n    #dataLength: number;\n\n    constructor() {\n        this.#data = [ ];\n        this.#dataLength = 0;\n    }\n\n    get data(): string {\n        return concat(this.#data);\n    }\n    get length(): number { return this.#dataLength; }\n\n    #writeData(data: Uint8Array): number {\n        this.#data.push(data);\n        this.#dataLength += data.length;\n        return data.length;\n    }\n\n    appendWriter(writer: Writer): number {\n        return this.#writeData(getBytesCopy(writer.data));\n    }\n\n    // Arrayish item; pad on the right to *nearest* WordSize\n    writeBytes(value: BytesLike): number {\n        let bytes = getBytesCopy(value);\n        const paddingOffset = bytes.length % WordSize;\n        if (paddingOffset) {\n            bytes = getBytesCopy(concat([ bytes, Padding.slice(paddingOffset) ]))\n        }\n        return this.#writeData(bytes);\n    }\n\n    // Numeric item; pad on the left *to* WordSize\n    writeValue(value: BigNumberish): number {\n        return this.#writeData(getValue(value));\n    }\n\n    // Inserts a numeric place-holder, returning a callback that can\n    // be used to asjust the value later\n    writeUpdatableValue(): (value: BigNumberish) => void {\n        const offset = this.#data.length;\n        this.#data.push(Padding);\n        this.#dataLength += WordSize;\n        return (value: BigNumberish) => {\n            this.#data[offset] = getValue(value);\n        };\n    }\n}\n\n/**\n *  @_ignore\n */\nexport class Reader {\n    // Allows incomplete unpadded data to be read; otherwise an error\n    // is raised if attempting to overrun the buffer. This is required\n    // to deal with an old Solidity bug, in which event data for\n    // external (not public thoguh) was tightly packed.\n    readonly allowLoose!: boolean;\n\n    readonly #data: Uint8Array;\n    #offset: number;\n\n    #bytesRead: number;\n    #parent: null | Reader;\n    #maxInflation: number;\n\n    constructor(data: BytesLike, allowLoose?: boolean, maxInflation?: number) {\n        defineProperties<Reader>(this, { allowLoose: !!allowLoose });\n\n        this.#data = getBytesCopy(data);\n        this.#bytesRead = 0;\n        this.#parent = null;\n        this.#maxInflation = (maxInflation != null) ? maxInflation: 1024;\n\n        this.#offset = 0;\n    }\n\n    get data(): string { return hexlify(this.#data); }\n    get dataLength(): number { return this.#data.length; }\n    get consumed(): number { return this.#offset; }\n    get bytes(): Uint8Array { return new Uint8Array(this.#data); }\n\n    #incrementBytesRead(count: number): void {\n        if (this.#parent) { return this.#parent.#incrementBytesRead(count); }\n\n        this.#bytesRead += count;\n\n        // Check for excessive inflation (see: #4537)\n        assert(this.#maxInflation < 1 || this.#bytesRead <= this.#maxInflation * this.dataLength, `compressed ABI data exceeds inflation ratio of ${ this.#maxInflation } ( see: https:/\\/github.com/ethers-io/ethers.js/issues/4537 )`,  \"BUFFER_OVERRUN\", {\n            buffer: getBytesCopy(this.#data), offset: this.#offset,\n            length: count, info: {\n                bytesRead: this.#bytesRead,\n                dataLength: this.dataLength\n            }\n        });\n    }\n\n    #peekBytes(offset: number, length: number, loose?: boolean): Uint8Array {\n        let alignedLength = Math.ceil(length / WordSize) * WordSize;\n        if (this.#offset + alignedLength > this.#data.length) {\n            if (this.allowLoose && loose && this.#offset + length <= this.#data.length) {\n                alignedLength = length;\n            } else {\n                assert(false, \"data out-of-bounds\", \"BUFFER_OVERRUN\", {\n                    buffer: getBytesCopy(this.#data),\n                    length: this.#data.length,\n                    offset: this.#offset + alignedLength\n                });\n            }\n        }\n        return this.#data.slice(this.#offset, this.#offset + alignedLength)\n    }\n\n    // Create a sub-reader with the same underlying data, but offset\n    subReader(offset: number): Reader {\n        const reader = new Reader(this.#data.slice(this.#offset + offset), this.allowLoose, this.#maxInflation);\n        reader.#parent = this;\n        return reader;\n    }\n\n    // Read bytes\n    readBytes(length: number, loose?: boolean): Uint8Array {\n        let bytes = this.#peekBytes(0, length, !!loose);\n        this.#incrementBytesRead(length);\n        this.#offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n\n    // Read a numeric values\n    readValue(): bigint {\n        return toBigInt(this.readBytes(WordSize));\n    }\n\n    readIndex(): number {\n        return toNumber(this.readBytes(WordSize));\n    }\n}\n", "function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new Error('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n", "// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!u8a(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assertHash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assertExists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assertExists(this);\n    assertBytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n", "import { hash as assertHash, number as assertNumber } from './_assert.js';\nimport { hmac } from './hmac.js';\nimport { Hash, CHash, Input, createView, toBytes, checkOpts, asyncLoop } from './utils.js';\n\n// PBKDF (RFC 2898)\nexport type Pbkdf2Opt = {\n  c: number; // Iterations\n  dkLen?: number; // Desired key length in bytes (Intended output length in octets of the derived key\n  asyncTick?: number; // Maximum time in ms for which async function can block execution\n};\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash: CHash, _password: Input, _salt: Input, _opts: Pbkdf2Opt) {\n  assertHash(hash);\n  const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n  const { c, dkLen, asyncTick } = opts;\n  assertNumber(c);\n  assertNumber(dkLen);\n  assertNumber(asyncTick);\n  if (c < 1) throw new Error('PBKDF2: iterations (c) should be >= 1');\n  const password = toBytes(_password);\n  const salt = toBytes(_salt);\n  // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n  const DK = new Uint8Array(dkLen);\n  // U1 = PRF(Password, Salt + INT_32_BE(i))\n  const PRF = hmac.create(hash, password);\n  const PRFSalt = PRF._cloneInto().update(salt);\n  return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\n\nfunction pbkdf2Output<T extends Hash<T>>(\n  PRF: Hash<T>,\n  PRFSalt: Hash<T>,\n  DK: Uint8Array,\n  prfW: Hash<T>,\n  u: Uint8Array\n) {\n  PRF.destroy();\n  PRFSalt.destroy();\n  if (prfW) prfW.destroy();\n  u.fill(0);\n  return DK;\n}\n\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    for (let ui = 1; ui < c; ui++) {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    }\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n\nexport async function pbkdf2Async(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    await asyncLoop(c - 1, asyncTick, () => {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    });\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n", "import { exists, output } from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    exists(this);\n    output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n", "import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n", "const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number) => l;\nconst rotr32L = (h: number, _l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n", "import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends SHA2<SHA512> {\n  // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n  // Also looks cleaner and easier to verify with spec.\n  // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x6a09e667 | 0;\n  Al = 0xf3bcc908 | 0;\n  Bh = 0xbb67ae85 | 0;\n  Bl = 0x84caa73b | 0;\n  Ch = 0x3c6ef372 | 0;\n  Cl = 0xfe94f82b | 0;\n  Dh = 0xa54ff53a | 0;\n  Dl = 0x5f1d36f1 | 0;\n  Eh = 0x510e527f | 0;\n  El = 0xade682d1 | 0;\n  Fh = 0x9b05688c | 0;\n  Fl = 0x2b3e6c1f | 0;\n  Gh = 0x1f83d9ab | 0;\n  Gl = 0xfb41bd6b | 0;\n  Hh = 0x5be0cd19 | 0;\n  Hl = 0x137e2179 | 0;\n\n  constructor() {\n    super(128, 64, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ) {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number) {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean() {\n    SHA512_W_H.fill(0);\n    SHA512_W_L.fill(0);\n  }\n  destroy() {\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nclass SHA512_224 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x8c3d37c8 | 0;\n  Al = 0x19544da2 | 0;\n  Bh = 0x73e19966 | 0;\n  Bl = 0x89dcd4d6 | 0;\n  Ch = 0x1dfab7ae | 0;\n  Cl = 0x32ff9c82 | 0;\n  Dh = 0x679dd514 | 0;\n  Dl = 0x582f9fcf | 0;\n  Eh = 0x0f6d2b69 | 0;\n  El = 0x7bd44da8 | 0;\n  Fh = 0x77e36f73 | 0;\n  Fl = 0x04c48942 | 0;\n  Gh = 0x3f9d85a8 | 0;\n  Gl = 0x6a1d36c8 | 0;\n  Hh = 0x1112e6ad | 0;\n  Hl = 0x91d692a1 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\nclass SHA512_256 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x22312194 | 0;\n  Al = 0xfc2bf72c | 0;\n  Bh = 0x9f555fa3 | 0;\n  Bl = 0xc84c64c2 | 0;\n  Ch = 0x2393b86b | 0;\n  Cl = 0x6f53b151 | 0;\n  Dh = 0x96387719 | 0;\n  Dl = 0x5940eabd | 0;\n  Eh = 0x96283ee2 | 0;\n  El = 0xa88effe3 | 0;\n  Fh = 0xbe5e1e25 | 0;\n  Fl = 0x53863992 | 0;\n  Gh = 0x2b0199fc | 0;\n  Gl = 0x2c85b8aa | 0;\n  Hh = 0x0eb72ddc | 0;\n  Hl = 0x81c52ca2 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 32;\n  }\n}\n\nclass SHA384 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0xcbbb9d5d | 0;\n  Al = 0xc1059ed8 | 0;\n  Bh = 0x629a292a | 0;\n  Bl = 0x367cd507 | 0;\n  Ch = 0x9159015a | 0;\n  Cl = 0x3070dd17 | 0;\n  Dh = 0x152fecd8 | 0;\n  Dl = 0xf70e5939 | 0;\n  Eh = 0x67332667 | 0;\n  El = 0xffc00b31 | 0;\n  Fh = 0x8eb44a87 | 0;\n  Fl = 0x68581511 | 0;\n  Gh = 0xdb0c2e0d | 0;\n  Gl = 0x64f98fa7 | 0;\n  Hh = 0x47b5481d | 0;\n  Hl = 0xbefa4fa4 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 48;\n  }\n}\n\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n", "/* Browser Crypto Shims */\n\nimport { hmac } from \"@noble/hashes/hmac\";\nimport { pbkdf2 } from \"@noble/hashes/pbkdf2\";\nimport { sha256 } from \"@noble/hashes/sha256\";\nimport { sha512 } from \"@noble/hashes/sha512\";\n\nimport { assert, assertArgument } from \"../utils/index.js\";\n\n\ndeclare global {\n    interface Window { }\n\n    const window: Window;\n    const self: Window;\n}\n\n\nfunction getGlobal(): any {\n  if (typeof self !== 'undefined') { return self; }\n  if (typeof window !== 'undefined') { return window; }\n  if (typeof global !== 'undefined') { return global; }\n  throw new Error('unable to locate global object');\n};\n\nconst anyGlobal = getGlobal();\nconst crypto: any = anyGlobal.crypto || anyGlobal.msCrypto;\n\n\nexport interface CryptoHasher {\n    update(data: Uint8Array): CryptoHasher;\n    digest(): Uint8Array;\n}\n\nexport function createHash(algo: string): CryptoHasher {\n    switch (algo) {\n        case \"sha256\": return sha256.create();\n        case \"sha512\": return sha512.create();\n    }\n    assertArgument(false, \"invalid hashing algorithm name\", \"algorithm\", algo);\n}\n\nexport function createHmac(_algo: string, key: Uint8Array): CryptoHasher {\n    const algo = ({ sha256, sha512 }[_algo]);\n    assertArgument(algo != null, \"invalid hmac algorithm\", \"algorithm\", _algo);\n    return hmac.create(algo, key);\n}\n\nexport function pbkdf2Sync(password: Uint8Array, salt: Uint8Array, iterations: number, keylen: number, _algo: \"sha256\" | \"sha512\"): Uint8Array {\n    const algo = ({ sha256, sha512 }[_algo]);\n    assertArgument(algo != null, \"invalid pbkdf2 algorithm\", \"algorithm\", _algo);\n    return pbkdf2(algo, password, salt, { c: iterations, dkLen: keylen });\n}\n\nexport function randomBytes(length: number): Uint8Array {\n    assert(crypto != null, \"platform does not support secure random numbers\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"randomBytes\" });\n\n    assertArgument(Number.isInteger(length) && length > 0 && length <= 1024, \"invalid length\", \"length\", length);\n\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return result;\n}\n", "/**\n *  An **HMAC** enables verification that a given key was used\n *  to authenticate a payload.\n *\n *  See: [[link-wiki-hmac]]\n *\n *  @_subsection: api/crypto:HMAC  [about-hmac]\n */\nimport { createHmac } from \"./crypto.js\";\nimport { getBytes, hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nlet locked = false;\n\nconst _computeHmac = function(algorithm: \"sha256\" | \"sha512\", key: Uint8Array, data: Uint8Array): BytesLike {\n    return createHmac(algorithm, key).update(data).digest();\n}\n\nlet __computeHmac = _computeHmac;\n\n/**\n *  Return the HMAC for %%data%% using the %%key%% key with the underlying\n *  %%algo%% used for compression.\n *\n *  @example:\n *    key = id(\"some-secret\")\n *\n *    // Compute the HMAC\n *    computeHmac(\"sha256\", key, \"0x1337\")\n *    //_result:\n *\n *    // To compute the HMAC of UTF-8 data, the data must be\n *    // converted to UTF-8 bytes\n *    computeHmac(\"sha256\", key, toUtf8Bytes(\"Hello World\"))\n *    //_result:\n *\n */\nexport function computeHmac(algorithm: \"sha256\" | \"sha512\", _key: BytesLike, _data: BytesLike): string {\n    const key = getBytes(_key, \"key\");\n    const data = getBytes(_data, \"data\");\n    return hexlify(__computeHmac(algorithm, key, data));\n}\ncomputeHmac._ = _computeHmac;\ncomputeHmac.lock =  function() { locked = true; }\ncomputeHmac.register = function(func: (algorithm: \"sha256\" | \"sha512\", key: Uint8Array, data: Uint8Array) => BytesLike) {\n    if (locked) { throw new Error(\"computeHmac is locked\"); }\n    __computeHmac = func;\n}\nObject.freeze(computeHmac);\n", "import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport {\n  Hash,\n  u32,\n  Input,\n  toBytes,\n  wrapConstructor,\n  wrapXOFConstructorWithOpts,\n  HashXOF,\n} from './utils.js';\n\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA]: [number[], number[], bigint[]] = [[], [], []];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h: number, l: number, s: number) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s: Uint32Array, rounds: number = 24) {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta θ\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (ρ) and Pi (π)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (χ)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (ι)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  B.fill(0);\n}\n\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    public blockLen: number,\n    public suffix: number,\n    public outputLen: number,\n    protected enableXOF = false,\n    protected rounds: number = 24\n  ) {\n    super();\n    // Can be passed from user as dkLen\n    number(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    if (0 >= this.blockLen || this.blockLen >= 200)\n      throw new Error('Sha3 supports only keccak-f1600 function');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  protected keccak() {\n    keccakP(this.state32, this.rounds);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input) {\n    exists(this);\n    const { blockLen, state } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish() {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    exists(this, false);\n    bytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    number(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array) {\n    output(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest() {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy() {\n    this.destroyed = true;\n    this.state.fill(0);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapXOFConstructorWithOpts<HashXOF<Keccak>, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n", "/**\n *  Cryptographic hashing functions\n *\n *  @_subsection: api/crypto:Hash Functions [about-crypto-hashing]\n */\n\nimport { keccak_256 } from \"@noble/hashes/sha3\";\n\nimport { getBytes, hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nlet locked = false;\n\nconst _keccak256 = function(data: Uint8Array): Uint8Array {\n    return keccak_256(data);\n}\n\nlet __keccak256: (data: Uint8Array) => BytesLike = _keccak256;\n\n/**\n *  Compute the cryptographic KECCAK256 hash of %%data%%.\n *\n *  The %%data%% **must** be a data representation, to compute the\n *  hash of UTF-8 data use the [[id]] function.\n *\n *  @returns DataHexstring\n *  @example:\n *    keccak256(\"0x\")\n *    //_result:\n *\n *    keccak256(\"0x1337\")\n *    //_result:\n *\n *    keccak256(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n *    // Strings are assumed to be DataHexString, otherwise it will\n *    // throw. To hash UTF-8 data, see the note above.\n *    keccak256(\"Hello World\")\n *    //_error:\n */\nexport function keccak256(_data: BytesLike): string {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__keccak256(data));\n}\nkeccak256._ = _keccak256;\nkeccak256.lock = function(): void { locked = true; }\nkeccak256.register = function(func: (data: Uint8Array) => BytesLike) {\n    if (locked) { throw new TypeError(\"keccak256 is locked\"); }\n    __keccak256 = func;\n}\nObject.freeze(keccak256);\n", "import { SHA2 } from './_sha2.js';\nimport { wrapConstructor } from './utils.js';\n\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = /* @__PURE__ */ new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = /* @__PURE__ */ Uint8Array.from({ length: 16 }, (_, i) => i);\nconst Pi = /* @__PURE__ */ Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++) for (let j of [idxL, idxR]) j.push(j[i].map((k) => Rho[k]));\n\nconst shifts = /* @__PURE__ */ [\n  [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n  [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n  [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n  [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n  [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\nconst shiftsL = /* @__PURE__ */ idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = /* @__PURE__ */ idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst Kl = /* @__PURE__ */ new Uint32Array([\n  0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e,\n]);\nconst Kr = /* @__PURE__ */ new Uint32Array([\n  0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000,\n]);\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word: number, shift: number) => (word << shift) | (word >>> (32 - shift));\n// It's called f() in spec.\nfunction f(group: number, x: number, y: number, z: number): number {\n  if (group === 0) return x ^ y ^ z;\n  else if (group === 1) return (x & y) | (~x & z);\n  else if (group === 2) return (x | ~y) ^ z;\n  else if (group === 3) return (x & z) | (y & ~z);\n  else return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst BUF = /* @__PURE__ */ new Uint32Array(16);\nexport class RIPEMD160 extends SHA2<RIPEMD160> {\n  private h0 = 0x67452301 | 0;\n  private h1 = 0xefcdab89 | 0;\n  private h2 = 0x98badcfe | 0;\n  private h3 = 0x10325476 | 0;\n  private h4 = 0xc3d2e1f0 | 0;\n\n  constructor() {\n    super(64, 20, 8, true);\n  }\n  protected get(): [number, number, number, number, number] {\n    const { h0, h1, h2, h3, h4 } = this;\n    return [h0, h1, h2, h3, h4];\n  }\n  protected set(h0: number, h1: number, h2: number, h3: number, h4: number) {\n    this.h0 = h0 | 0;\n    this.h1 = h1 | 0;\n    this.h2 = h2 | 0;\n    this.h3 = h3 | 0;\n    this.h4 = h4 | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    for (let i = 0; i < 16; i++, offset += 4) BUF[i] = view.getUint32(offset, true);\n    // prettier-ignore\n    let al = this.h0 | 0, ar = al,\n        bl = this.h1 | 0, br = bl,\n        cl = this.h2 | 0, cr = cl,\n        dl = this.h3 | 0, dr = dl,\n        el = this.h4 | 0, er = el;\n\n    // Instead of iterating 0 to 80, we split it into 5 groups\n    // And use the groups in constants, functions, etc. Much simpler\n    for (let group = 0; group < 5; group++) {\n      const rGroup = 4 - group;\n      const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n      const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n      const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n      for (let i = 0; i < 16; i++) {\n        const tl = (rotl(al + f(group, bl, cl, dl) + BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n        al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n      }\n      // 2 loops are 10% faster\n      for (let i = 0; i < 16; i++) {\n        const tr = (rotl(ar + f(rGroup, br, cr, dr) + BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n        ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n      }\n    }\n    // Add the compressed chunk to the current hash value\n    this.set(\n      (this.h1 + cl + dr) | 0,\n      (this.h2 + dl + er) | 0,\n      (this.h3 + el + ar) | 0,\n      (this.h4 + al + br) | 0,\n      (this.h0 + bl + cr) | 0\n    );\n  }\n  protected roundClean() {\n    BUF.fill(0);\n  }\n  destroy() {\n    this.destroyed = true;\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0);\n  }\n}\n\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nexport const ripemd160 = /* @__PURE__ */ wrapConstructor(() => new RIPEMD160());\n", "import { ripemd160 as noble_ripemd160 } from \"@noble/hashes/ripemd160\";\n\nimport { getBytes,  hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nlet locked = false;\n\nconst _ripemd160 = function(data: Uint8Array): Uint8Array {\n    return noble_ripemd160(data);\n}\n\nlet __ripemd160: (data: Uint8Array) => BytesLike = _ripemd160;\n\n/**\n *  Compute the cryptographic RIPEMD-160 hash of %%data%%.\n *\n *  @_docloc: api/crypto:Hash Functions\n *  @returns DataHexstring\n *\n *  @example:\n *    ripemd160(\"0x\")\n *    //_result:\n *\n *    ripemd160(\"0x1337\")\n *    //_result:\n *\n *    ripemd160(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n */\nexport function ripemd160(_data: BytesLike): string {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__ripemd160(data));\n}\nripemd160._ = _ripemd160;\nripemd160.lock = function(): void { locked = true; }\nripemd160.register = function(func: (data: Uint8Array) => BytesLike) {\n    if (locked) { throw new TypeError(\"ripemd160 is locked\"); }\n    __ripemd160 = func;\n}\nObject.freeze(ripemd160);\n", "/**\n *  A **Password-Based Key-Derivation Function** is designed to create\n *  a sequence of bytes suitible as a **key** from a human-rememberable\n *  password.\n *\n *  @_subsection: api/crypto:Passwords  [about-pbkdf]\n */\n\nimport { pbkdf2Sync } from \"./crypto.js\";\n\nimport { getBytes, hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nlet locked = false;\n\nconst _pbkdf2 = function(password: Uint8Array, salt: Uint8Array, iterations: number, keylen: number, algo: \"sha256\" | \"sha512\"): BytesLike {\n    return pbkdf2Sync(password, salt, iterations, keylen, algo);\n}\n\nlet __pbkdf2 = _pbkdf2;\n\n/**\n *  Return the [[link-pbkdf2]] for %%keylen%% bytes for %%password%% using\n *  the %%salt%% and using %%iterations%% of %%algo%%.\n *\n *  This PBKDF is outdated and should not be used in new projects, but is\n *  required to decrypt older files.\n *\n *  @example:\n *    // The password must be converted to bytes, and it is generally\n *    // best practices to ensure the string has been normalized. Many\n *    // formats explicitly indicate the normalization form to use.\n *    password = \"hello\"\n *    passwordBytes = toUtf8Bytes(password, \"NFKC\")\n *\n *    salt = id(\"some-salt\")\n *\n *    // Compute the PBKDF2\n *    pbkdf2(passwordBytes, salt, 1024, 16, \"sha256\")\n *    //_result:\n */\nexport function pbkdf2(_password: BytesLike, _salt: BytesLike, iterations: number, keylen: number, algo: \"sha256\" | \"sha512\"): string {\n    const password = getBytes(_password, \"password\");\n    const salt = getBytes(_salt, \"salt\");\n    return hexlify(__pbkdf2(password, salt, iterations, keylen, algo));\n}\npbkdf2._ = _pbkdf2;\npbkdf2.lock = function(): void { locked = true; }\npbkdf2.register = function(func: (password: Uint8Array, salt: Uint8Array, iterations: number, keylen: number, algo: \"sha256\" | \"sha512\") => BytesLike) {\n    if (locked) { throw new Error(\"pbkdf2 is locked\"); }\n    __pbkdf2 = func;\n}\nObject.freeze(pbkdf2);\n", "/**\n *  A **Cryptographically Secure Random Value** is one that has been\n *  generated with additional care take to prevent side-channels\n *  from allowing others to detect it and prevent others from through\n *  coincidence generate the same values.\n *\n *  @_subsection: api/crypto:Random Values  [about-crypto-random]\n */\nimport { randomBytes as crypto_random } from \"./crypto.js\";\n\nlet locked = false;\n\nconst _randomBytes = function(length: number): Uint8Array {\n    return new Uint8Array(crypto_random(length));\n}\n\nlet __randomBytes = _randomBytes;\n\n/**\n *  Return %%length%% bytes of cryptographically secure random data.\n *\n *  @example:\n *    randomBytes(8)\n *    //_result:\n */\nexport function randomBytes(length: number): Uint8Array {\n    return __randomBytes(length);\n}\n\nrandomBytes._ = _randomBytes;\nrandomBytes.lock = function(): void { locked = true; }\nrandomBytes.register = function(func: (length: number) => Uint8Array) {\n    if (locked) { throw new Error(\"randomBytes is locked\"); }\n    __randomBytes = func;\n}\nObject.freeze(randomBytes);\n", "import { number as assertNumber } from './_assert.js';\nimport { sha256 } from './sha256.js';\nimport { pbkdf2 } from './pbkdf2.js';\nimport { asyncLoop, checkOpts, Input, u32 } from './utils.js';\n\n// RFC 7914 Scrypt KDF\n\n// Left rotate for uint32\nconst rotl = (a: number, b: number) => (a << b) | (a >>> (32 - b));\n\n// The main Scrypt loop: uses Salsa extensively.\n// Six versions of the function were tried, this is the fastest one.\n// prettier-ignore\nfunction XorAndSalsa(\n  prev: Uint32Array,\n  pi: number,\n  input: Uint32Array,\n  ii: number,\n  out: Uint32Array,\n  oi: number\n) {\n  // Based on https://cr.yp.to/salsa20.html\n  // Xor blocks\n  let y00 = prev[pi++] ^ input[ii++], y01 = prev[pi++] ^ input[ii++];\n  let y02 = prev[pi++] ^ input[ii++], y03 = prev[pi++] ^ input[ii++];\n  let y04 = prev[pi++] ^ input[ii++], y05 = prev[pi++] ^ input[ii++];\n  let y06 = prev[pi++] ^ input[ii++], y07 = prev[pi++] ^ input[ii++];\n  let y08 = prev[pi++] ^ input[ii++], y09 = prev[pi++] ^ input[ii++];\n  let y10 = prev[pi++] ^ input[ii++], y11 = prev[pi++] ^ input[ii++];\n  let y12 = prev[pi++] ^ input[ii++], y13 = prev[pi++] ^ input[ii++];\n  let y14 = prev[pi++] ^ input[ii++], y15 = prev[pi++] ^ input[ii++];\n  // Save state to temporary variables (salsa)\n  let x00 = y00, x01 = y01, x02 = y02, x03 = y03,\n      x04 = y04, x05 = y05, x06 = y06, x07 = y07,\n      x08 = y08, x09 = y09, x10 = y10, x11 = y11,\n      x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n  // Main loop (salsa)\n  for (let i = 0; i < 8; i += 2) {\n    x04 ^= rotl(x00 + x12 | 0,  7); x08 ^= rotl(x04 + x00 | 0,  9);\n    x12 ^= rotl(x08 + x04 | 0, 13); x00 ^= rotl(x12 + x08 | 0, 18);\n    x09 ^= rotl(x05 + x01 | 0,  7); x13 ^= rotl(x09 + x05 | 0,  9);\n    x01 ^= rotl(x13 + x09 | 0, 13); x05 ^= rotl(x01 + x13 | 0, 18);\n    x14 ^= rotl(x10 + x06 | 0,  7); x02 ^= rotl(x14 + x10 | 0,  9);\n    x06 ^= rotl(x02 + x14 | 0, 13); x10 ^= rotl(x06 + x02 | 0, 18);\n    x03 ^= rotl(x15 + x11 | 0,  7); x07 ^= rotl(x03 + x15 | 0,  9);\n    x11 ^= rotl(x07 + x03 | 0, 13); x15 ^= rotl(x11 + x07 | 0, 18);\n    x01 ^= rotl(x00 + x03 | 0,  7); x02 ^= rotl(x01 + x00 | 0,  9);\n    x03 ^= rotl(x02 + x01 | 0, 13); x00 ^= rotl(x03 + x02 | 0, 18);\n    x06 ^= rotl(x05 + x04 | 0,  7); x07 ^= rotl(x06 + x05 | 0,  9);\n    x04 ^= rotl(x07 + x06 | 0, 13); x05 ^= rotl(x04 + x07 | 0, 18);\n    x11 ^= rotl(x10 + x09 | 0,  7); x08 ^= rotl(x11 + x10 | 0,  9);\n    x09 ^= rotl(x08 + x11 | 0, 13); x10 ^= rotl(x09 + x08 | 0, 18);\n    x12 ^= rotl(x15 + x14 | 0,  7); x13 ^= rotl(x12 + x15 | 0,  9);\n    x14 ^= rotl(x13 + x12 | 0, 13); x15 ^= rotl(x14 + x13 | 0, 18);\n  }\n  // Write output (salsa)\n  out[oi++] = (y00 + x00) | 0; out[oi++] = (y01 + x01) | 0;\n  out[oi++] = (y02 + x02) | 0; out[oi++] = (y03 + x03) | 0;\n  out[oi++] = (y04 + x04) | 0; out[oi++] = (y05 + x05) | 0;\n  out[oi++] = (y06 + x06) | 0; out[oi++] = (y07 + x07) | 0;\n  out[oi++] = (y08 + x08) | 0; out[oi++] = (y09 + x09) | 0;\n  out[oi++] = (y10 + x10) | 0; out[oi++] = (y11 + x11) | 0;\n  out[oi++] = (y12 + x12) | 0; out[oi++] = (y13 + x13) | 0;\n  out[oi++] = (y14 + x14) | 0; out[oi++] = (y15 + x15) | 0;\n}\n\nfunction BlockMix(input: Uint32Array, ii: number, out: Uint32Array, oi: number, r: number) {\n  // The block B is r 128-byte chunks (which is equivalent of 2r 64-byte chunks)\n  let head = oi + 0;\n  let tail = oi + 16 * r;\n  for (let i = 0; i < 16; i++) out[tail + i] = input[ii + (2 * r - 1) * 16 + i]; // X ← B[2r−1]\n  for (let i = 0; i < r; i++, head += 16, ii += 16) {\n    // We write odd & even Yi at same time. Even: 0bXXXXX0 Odd:  0bXXXXX1\n    XorAndSalsa(out, tail, input, ii, out, head); // head[i] = Salsa(blockIn[2*i] ^ tail[i-1])\n    if (i > 0) tail += 16; // First iteration overwrites tmp value in tail\n    XorAndSalsa(out, head, input, (ii += 16), out, tail); // tail[i] = Salsa(blockIn[2*i+1] ^ head[i])\n  }\n}\n\nexport type ScryptOpts = {\n  N: number; // cost factor\n  r: number; // block size\n  p: number; // parallelization\n  dkLen?: number; // key length\n  asyncTick?: number; // block execution max time\n  maxmem?: number;\n  onProgress?: (progress: number) => void;\n};\n\n// Common prologue and epilogue for sync/async functions\nfunction scryptInit(password: Input, salt: Input, _opts?: ScryptOpts) {\n  // Maxmem - 1GB+1KB by default\n  const opts = checkOpts(\n    {\n      dkLen: 32,\n      asyncTick: 10,\n      maxmem: 1024 ** 3 + 1024,\n    },\n    _opts\n  );\n  const { N, r, p, dkLen, asyncTick, maxmem, onProgress } = opts;\n  assertNumber(N);\n  assertNumber(r);\n  assertNumber(p);\n  assertNumber(dkLen);\n  assertNumber(asyncTick);\n  assertNumber(maxmem);\n  if (onProgress !== undefined && typeof onProgress !== 'function')\n    throw new Error('progressCb should be function');\n  const blockSize = 128 * r;\n  const blockSize32 = blockSize / 4;\n  if (N <= 1 || (N & (N - 1)) !== 0 || N >= 2 ** (blockSize / 8) || N > 2 ** 32) {\n    // NOTE: we limit N to be less than 2**32 because of 32 bit variant of Integrify function\n    // There is no JS engines that allows alocate more than 4GB per single Uint8Array for now, but can change in future.\n    throw new Error(\n      'Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32'\n    );\n  }\n  if (p < 0 || p > ((2 ** 32 - 1) * 32) / blockSize) {\n    throw new Error(\n      'Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)'\n    );\n  }\n  if (dkLen < 0 || dkLen > (2 ** 32 - 1) * 32) {\n    throw new Error(\n      'Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32'\n    );\n  }\n  const memUsed = blockSize * (N + p);\n  if (memUsed > maxmem) {\n    throw new Error(\n      `Scrypt: parameters too large, ${memUsed} (128 * r * (N + p)) > ${maxmem} (maxmem)`\n    );\n  }\n  // [B0...Bp−1] ← PBKDF2HMAC-SHA256(Passphrase, Salt, 1, blockSize*ParallelizationFactor)\n  // Since it has only one iteration there is no reason to use async variant\n  const B = pbkdf2(sha256, password, salt, { c: 1, dkLen: blockSize * p });\n  const B32 = u32(B);\n  // Re-used between parallel iterations. Array(iterations) of B\n  const V = u32(new Uint8Array(blockSize * N));\n  const tmp = u32(new Uint8Array(blockSize));\n  let blockMixCb = () => {};\n  if (onProgress) {\n    const totalBlockMix = 2 * N * p;\n    // Invoke callback if progress changes from 10.01 to 10.02\n    // Allows to draw smooth progress bar on up to 8K screen\n    const callbackPer = Math.max(Math.floor(totalBlockMix / 10000), 1);\n    let blockMixCnt = 0;\n    blockMixCb = () => {\n      blockMixCnt++;\n      if (onProgress && (!(blockMixCnt % callbackPer) || blockMixCnt === totalBlockMix))\n        onProgress(blockMixCnt / totalBlockMix);\n    };\n  }\n  return { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick };\n}\n\nfunction scryptOutput(\n  password: Input,\n  dkLen: number,\n  B: Uint8Array,\n  V: Uint32Array,\n  tmp: Uint32Array\n) {\n  const res = pbkdf2(sha256, password, B, { c: 1, dkLen });\n  B.fill(0);\n  V.fill(0);\n  tmp.fill(0);\n  return res;\n}\n\n/**\n * Scrypt KDF from RFC 7914.\n * @param password - pass\n * @param salt - salt\n * @param opts - parameters\n * - `N` is cpu/mem work factor (power of 2 e.g. 2**18)\n * - `r` is block size (8 is common), fine-tunes sequential memory read size and performance\n * - `p` is parallelization factor (1 is common)\n * - `dkLen` is output key length in bytes e.g. 32.\n * - `asyncTick` - (default: 10) max time in ms for which async function can block execution\n * - `maxmem` - (default: `1024 ** 3 + 1024` aka 1GB+1KB). A limit that the app could use for scrypt\n * - `onProgress` - callback function that would be executed for progress report\n * @returns Derived key\n */\nexport function scrypt(password: Input, salt: Input, opts: ScryptOpts) {\n  const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb } = scryptInit(\n    password,\n    salt,\n    opts\n  );\n  for (let pi = 0; pi < p; pi++) {\n    const Pi = blockSize32 * pi;\n    for (let i = 0; i < blockSize32; i++) V[i] = B32[Pi + i]; // V[0] = B[i]\n    for (let i = 0, pos = 0; i < N - 1; i++) {\n      BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n      blockMixCb();\n    }\n    BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n    blockMixCb();\n    for (let i = 0; i < N; i++) {\n      // First u32 of the last 64-byte block (u32 is LE)\n      const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n      for (let k = 0; k < blockSize32; k++) tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n      BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n      blockMixCb();\n    }\n  }\n  return scryptOutput(password, dkLen, B, V, tmp);\n}\n\n/**\n * Scrypt KDF from RFC 7914.\n */\nexport async function scryptAsync(password: Input, salt: Input, opts: ScryptOpts) {\n  const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick } = scryptInit(\n    password,\n    salt,\n    opts\n  );\n  for (let pi = 0; pi < p; pi++) {\n    const Pi = blockSize32 * pi;\n    for (let i = 0; i < blockSize32; i++) V[i] = B32[Pi + i]; // V[0] = B[i]\n    let pos = 0;\n    await asyncLoop(N - 1, asyncTick, () => {\n      BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n      blockMixCb();\n    });\n    BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n    blockMixCb();\n    await asyncLoop(N, asyncTick, () => {\n      // First u32 of the last 64-byte block (u32 is LE)\n      const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n      for (let k = 0; k < blockSize32; k++) tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n      BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n      blockMixCb();\n    });\n  }\n  return scryptOutput(password, dkLen, B, V, tmp);\n}\n", "import { scrypt as _nobleSync, scryptAsync as _nobleAsync } from \"@noble/hashes/scrypt\";\n\nimport { getBytes, hexlify as H } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n/**\n *  A callback during long-running operations to update any\n *  UI or provide programatic access to the progress.\n *\n *  The %%percent%% is a value between ``0`` and ``1``.\n *\n *  @_docloc: api/crypto:Passwords\n */\nexport type ProgressCallback = (percent: number) => void;\n\n\nlet lockedSync = false, lockedAsync = false;\n\nconst _scryptAsync = async function(passwd: Uint8Array, salt: Uint8Array, N: number, r: number, p: number, dkLen: number, onProgress?: ProgressCallback) {\n    return await _nobleAsync(passwd, salt, { N, r, p, dkLen, onProgress });\n}\nconst _scryptSync = function(passwd: Uint8Array, salt: Uint8Array, N: number, r: number, p: number, dkLen: number) {\n    return _nobleSync(passwd, salt, { N, r, p, dkLen });\n}\n\nlet __scryptAsync: (passwd: Uint8Array, salt: Uint8Array, N: number, r: number, p: number, dkLen: number, onProgress?: ProgressCallback) => Promise<BytesLike> = _scryptAsync;\nlet __scryptSync: (passwd: Uint8Array, salt: Uint8Array, N: number, r: number, p: number, dkLen: number) => BytesLike = _scryptSync\n\n\n/**\n *  The [[link-wiki-scrypt]] uses a memory and cpu hard method of\n *  derivation to increase the resource cost to brute-force a password\n *  for a given key.\n *\n *  This means this algorithm is intentionally slow, and can be tuned to\n *  become slower. As computation and memory speed improve over time,\n *  increasing the difficulty maintains the cost of an attacker.\n *\n *  For example, if a target time of 5 seconds is used, a legitimate user\n *  which knows their password requires only 5 seconds to unlock their\n *  account. A 6 character password has 68 billion possibilities, which\n *  would require an attacker to invest over 10,000 years of CPU time. This\n *  is of course a crude example (as password generally aren't random),\n *  but demonstrates to value of imposing large costs to decryption.\n *\n *  For this reason, if building a UI which involved decrypting or\n *  encrypting datsa using scrypt, it is recommended to use a\n *  [[ProgressCallback]] (as event short periods can seem lik an eternity\n *  if the UI freezes). Including the phrase //\"decrypting\"// in the UI\n *  can also help, assuring the user their waiting is for a good reason.\n *\n *  @_docloc: api/crypto:Passwords\n *\n *  @example:\n *    // The password must be converted to bytes, and it is generally\n *    // best practices to ensure the string has been normalized. Many\n *    // formats explicitly indicate the normalization form to use.\n *    password = \"hello\"\n *    passwordBytes = toUtf8Bytes(password, \"NFKC\")\n *\n *    salt = id(\"some-salt\")\n *\n *    // Compute the scrypt\n *    scrypt(passwordBytes, salt, 1024, 8, 1, 16)\n *    //_result:\n */\nexport async function scrypt(_passwd: BytesLike, _salt: BytesLike, N: number, r: number, p: number, dkLen: number, progress?: ProgressCallback): Promise<string> {\n    const passwd = getBytes(_passwd, \"passwd\");\n    const salt = getBytes(_salt, \"salt\");\n    return H(await __scryptAsync(passwd, salt, N, r, p, dkLen, progress));\n}\nscrypt._ = _scryptAsync;\nscrypt.lock = function(): void { lockedAsync = true; }\nscrypt.register = function(func: (passwd: Uint8Array, salt: Uint8Array, N: number, r: number, p: number, dkLen: number, progress?: ProgressCallback) => Promise<BytesLike>) {\n    if (lockedAsync) { throw new Error(\"scrypt is locked\"); }\n    __scryptAsync = func;\n}\nObject.freeze(scrypt);\n\n/**\n *  Provides a synchronous variant of [[scrypt]].\n *\n *  This will completely lock up and freeze the UI in a browser and will\n *  prevent any event loop from progressing. For this reason, it is\n *  preferred to use the [async variant](scrypt).\n *\n *  @_docloc: api/crypto:Passwords\n *\n *  @example:\n *    // The password must be converted to bytes, and it is generally\n *    // best practices to ensure the string has been normalized. Many\n *    // formats explicitly indicate the normalization form to use.\n *    password = \"hello\"\n *    passwordBytes = toUtf8Bytes(password, \"NFKC\")\n *\n *    salt = id(\"some-salt\")\n *\n *    // Compute the scrypt\n *    scryptSync(passwordBytes, salt, 1024, 8, 1, 16)\n *    //_result:\n */\nexport function scryptSync(_passwd: BytesLike, _salt: BytesLike, N: number, r: number, p: number, dkLen: number): string {\n    const passwd = getBytes(_passwd, \"passwd\");\n    const salt = getBytes(_salt, \"salt\");\n    return H(__scryptSync(passwd, salt, N, r, p, dkLen));\n}\nscryptSync._ = _scryptSync;\nscryptSync.lock = function(): void { lockedSync = true; }\nscryptSync.register = function(func: (passwd: Uint8Array, salt: Uint8Array, N: number, r: number, p: number, dkLen: number) => BytesLike) {\n    if (lockedSync) { throw new Error(\"scryptSync is locked\"); }\n    __scryptSync = func;\n}\nObject.freeze(scryptSync);\n", "import { createHash } from \"./crypto.js\";\n\nimport { getBytes, hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nconst _sha256 = function(data: Uint8Array): Uint8Array {\n    return createHash(\"sha256\").update(data).digest();\n}\n\nconst _sha512 = function(data: Uint8Array): Uint8Array {\n    return createHash(\"sha512\").update(data).digest();\n}\n\nlet __sha256: (data: Uint8Array) => BytesLike = _sha256;\nlet __sha512: (data: Uint8Array) => BytesLike = _sha512;\n\nlet locked256 = false, locked512 = false;\n\n\n/**\n *  Compute the cryptographic SHA2-256 hash of %%data%%.\n *\n *  @_docloc: api/crypto:Hash Functions\n *  @returns DataHexstring\n *\n *  @example:\n *    sha256(\"0x\")\n *    //_result:\n *\n *    sha256(\"0x1337\")\n *    //_result:\n *\n *    sha256(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n */\nexport function sha256(_data: BytesLike): string {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__sha256(data));\n}\nsha256._ = _sha256;\nsha256.lock = function(): void { locked256 = true; }\nsha256.register = function(func: (data: Uint8Array) => BytesLike): void {\n    if (locked256) { throw new Error(\"sha256 is locked\"); }\n    __sha256 = func;\n}\nObject.freeze(sha256);\n\n\n/**\n *  Compute the cryptographic SHA2-512 hash of %%data%%.\n *\n *  @_docloc: api/crypto:Hash Functions\n *  @returns DataHexstring\n *\n *  @example:\n *    sha512(\"0x\")\n *    //_result:\n *\n *    sha512(\"0x1337\")\n *    //_result:\n *\n *    sha512(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n */\nexport function sha512(_data: BytesLike): string {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__sha512(data));\n}\nsha512._ = _sha512;\nsha512.lock = function(): void { locked512 = true; }\nsha512.register = function(func: (data: Uint8Array) => BytesLike): void {\n    if (locked512) { throw new Error(\"sha512 is locked\"); }\n    __sha512 = func;\n}\nObject.freeze(sha256);\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\nexport type Hex = Uint8Array | string; // hex strings are accepted for simplicity\nexport type PrivKey = Hex | bigint; // bigints are accepted to ease learning curve\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? `0${hex}` : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n: number | bigint, len: number): Uint8Array {\n  return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n: number | bigint): Uint8Array {\n  return hexToBytes(numberToHexUnpadded(n));\n}\n\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n    }\n  } else if (u8a(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(`${title} must be hex string or Uint8Array`);\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n  return res;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\nexport function equalBytes(b1: Uint8Array, b2: Uint8Array) {\n  // We don't care about timing attacks here\n  if (b1.length !== b2.length) return false;\n  for (let i = 0; i < b1.length; i++) if (b1[i] !== b2[i]) return false;\n  return true;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n// Bit operations\n\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n: bigint) {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n: bigint, pos: number) {\n  return (n >> BigInt(pos)) & _1n;\n}\n\n/**\n * Sets single bit at position.\n */\nexport const bitSet = (n: bigint, pos: number, value: boolean) => {\n  return n | ((value ? _1n : _0n) << BigInt(pos));\n};\n\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n: number) => (_2n << BigInt(n - 1)) - _1n;\n\n// DRBG\n\nconst u8n = (data?: any) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr: any) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n()) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any) => typeof val === 'bigint',\n  function: (val: any) => typeof val === 'function',\n  boolean: (val: any) => typeof val === 'boolean',\n  string: (val: any) => typeof val === 'string',\n  stringOrUint8Array: (val: any) => typeof val === 'string' || val instanceof Uint8Array,\n  isSafeInteger: (val: any) => Number.isSafeInteger(val),\n  array: (val: any) => Array.isArray(val),\n  field: (val: any, object: any) => (object as any).Fp.isValid(val),\n  hash: (val: any) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n) {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function')\n      throw new Error(`Invalid validator \"${type}\", expected function`);\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        `Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport {\n  bitMask,\n  numberToBytesBE,\n  numberToBytesLE,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  validateObject,\n} from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  if (modulo <= _0n || power < _0n) throw new Error('Expected power/modulo > 0');\n  if (modulo === _1n) return _0n;\n  let res = _1n;\n  while (power > _0n) {\n    if (power & _1n) res = (res * num) % modulo;\n    num = (num * num) % modulo;\n    power >>= _1n;\n  }\n  return res;\n}\n\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n// Inverses number over modulo\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n || modulo <= _0n) {\n    throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n  }\n  // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P: bigint) {\n  // Legendre constant: used to calculate Legendre symbol (a | p),\n  // which denotes the value of a^((p-1)/2) (mod p).\n  // (a | p) ≡ 1    if a is a square (mod p)\n  // (a | p) ≡ -1   if a is not a square (mod p)\n  // (a | p) ≡ 0    if a ≡ 0 (mod p)\n  const legendreC = (P - _1n) / _2n;\n\n  let Q: bigint, S: number, Z: bigint;\n  // Step 1: By factoring out powers of 2 from p - 1,\n  // find q and s such that p - 1 = q*(2^s) with q odd\n  for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++);\n\n  // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n  for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++);\n\n  // Fast-path\n  if (S === 1) {\n    const p1div4 = (P + _1n) / _4n;\n    return function tonelliFast<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Slow-path\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n    if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE)) throw new Error('Cannot find square root');\n    let r = S;\n    // TODO: will fail at Fp2/etc\n    let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n    let x = Fp.pow(n, Q1div2); // first guess at the square root\n    let b = Fp.pow(n, Q); // first guess at the fudge factor\n\n    while (!Fp.eql(b, Fp.ONE)) {\n      if (Fp.eql(b, Fp.ZERO)) return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n      // Find m such b^(2^m)==1\n      let m = 1;\n      for (let t2 = Fp.sqr(b); m < r; m++) {\n        if (Fp.eql(t2, Fp.ONE)) break;\n        t2 = Fp.sqr(t2); // t2 *= t2\n      }\n      // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n      const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n      g = Fp.sqr(ge); // g = ge * ge\n      x = Fp.mul(x, ge); // x *= ge\n      b = Fp.mul(b, g); // b *= g\n      r = m;\n    }\n    return x;\n  };\n}\n\nexport function FpSqrt(P: bigint) {\n  // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n  // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n\n  // P ≡ 3 (mod 4)\n  // √n = n^((P+1)/4)\n  if (P % _4n === _3n) {\n    // Not all roots possible!\n    // const ORDER =\n    //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n    // const NUM = 72057594037927816n;\n    const p1div4 = (P + _1n) / _4n;\n    return function sqrt3mod4<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      // Throw if root**2 != n\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n  if (P % _8n === _5n) {\n    const c1 = (P - _5n) / _8n;\n    return function sqrt5mod8<T>(Fp: IField<T>, n: T) {\n      const n2 = Fp.mul(n, _2n);\n      const v = Fp.pow(n2, c1);\n      const nv = Fp.mul(n, v);\n      const i = Fp.mul(Fp.mul(nv, _2n), v);\n      const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // P ≡ 9 (mod 16)\n  if (P % _16n === _9n) {\n    // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n    // Means we cannot use sqrt for constants at all!\n    //\n    // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    // sqrt = (x) => {\n    //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n    //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n    //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n    //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n    //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n    //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n    //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n    //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n    // }\n  }\n\n  // Other cases: Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint) => (mod(num, modulo) & _1n) === _1n;\n\n// Field is not always over prime: for example, Fp2 has ORDER(q)=p^m\nexport interface IField<T> {\n  ORDER: bigint;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in\n  // [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#section-4.1).\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  pow(lhs: T, power: bigint): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>) {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\n\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow<T>(f: IField<T>, num: T, power: bigint): T {\n  // Should have same speed as pow for bigints\n  // TODO: benchmark!\n  if (power < _0n) throw new Error('Expected power > 0');\n  if (power === _0n) return f.ONE;\n  if (power === _1n) return num;\n  let p = f.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = f.mul(p, d);\n    d = f.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch<T>(f: IField<T>, nums: T[]): T[] {\n  const tmp = new Array(nums.length);\n  // Walk from first to last, multiply them by each other MOD p\n  const lastMultiplied = nums.reduce((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = acc;\n    return f.mul(acc, num);\n  }, f.ONE);\n  // Invert last element\n  const inverted = f.inv(lastMultiplied);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = f.mul(acc, tmp[i]);\n    return f.mul(acc, num);\n  }, inverted);\n  return tmp;\n}\n\nexport function FpDiv<T>(f: IField<T>, lhs: T, rhs: T | bigint): T {\n  return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(f: IField<T>) {\n  const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n  return (x: T): boolean => {\n    const p = f.pow(x, legendreConst);\n    return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n  };\n}\n\n// CURVE.n lengths\nexport function nLength(n: bigint, nBitLength?: number) {\n  // Bit size, byte size of CURVE.n\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<IField<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('Field lengths over 2048 bytes are not supported');\n  const sqrtP = FpSqrt(ORDER);\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (a, b, c) => (c ? b : a),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder: bigint): number {\n  if (typeof fieldOrder !== 'bigint') throw new Error('field order must be bigint');\n  const bitLength = fieldOrder.toString(2).length;\n  return Math.ceil(bitLength / 8);\n}\n\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder: bigint): number {\n  const length = getFieldBytesLength(fieldOrder);\n  return length + Math.ceil(length / 2);\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key: Uint8Array, fieldOrder: bigint, isLE = false): Uint8Array {\n  const len = key.length;\n  const fieldLen = getFieldBytesLength(fieldOrder);\n  const minLen = getMinHashLength(fieldOrder);\n  // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n  if (len < 16 || len < minLen || len > 1024)\n    throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n  const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n  // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n  const reduced = mod(num, fieldOrder - _1n) + _1n;\n  return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { IField, validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number) {\n  const constTimeNegate = (condition: boolean, item: T): T => {\n    const neg = item.negate();\n    return condition ? neg : item;\n  };\n  const opts = (W: number) => {\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n  };\n  return {\n    constTimeNegate,\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint) {\n      let p = c.ZERO;\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n     * - 𝑊 is the window size\n     * - 𝑛 is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = opts(W);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // =1, because we skip zero\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n      // But need to carefully remove other checks before wNAF. ORDER == bits here\n      const { windows, windowSize } = opts(W);\n\n      let p = c.ZERO;\n      let f = c.BASE;\n\n      const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n      const maxNumber = 2 ** W;\n      const shiftBy = BigInt(W);\n\n      for (let window = 0; window < windows; window++) {\n        const offset = window * windowSize;\n        // Extract W bits.\n        let wbits = Number(n & mask);\n\n        // Shift number by W bits.\n        n >>= shiftBy;\n\n        // If the bits are bigger than max size, we'll split those.\n        // +224 => 256 - 32\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += _1n;\n        }\n\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n\n        // Check if we're onto Zero point.\n        // Add random point inside current window to f.\n        const offset1 = offset;\n        const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n        const cond1 = window % 2 !== 0;\n        const cond2 = wbits < 0;\n        if (wbits === 0) {\n          // The most important part for const-time getPublicKey\n          f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n        } else {\n          p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n        }\n      }\n      // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n      // Even if the variable is still unused, there are some checks which will\n      // throw an exception, so compiler needs to prove they won't happen, which is hard.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    wNAFCached(P: T, precomputesMap: Map<T, T[]>, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      // @ts-ignore\n      const W: number = P._WINDOW_SIZE || 1;\n      // Calculate precomputes on a first run, reuse them after\n      let comp = precomputesMap.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) {\n          precomputesMap.set(P, transform(comp));\n        }\n      }\n      return this.wNAF(W, comp, n);\n    },\n  };\n}\n\n// Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n// Though generator can be different (Fp2 / Fp6 for BLS).\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(curve: BasicCurve<FP> & T) {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { CHash, Hex, PrivKey, ensureBytes } from './utils.js';\nimport { Group, GroupConstructor, wNAF, BasicCurve, validateBasic, AffinePoint } from './curve.js';\n\nexport type { AffinePoint };\ntype HmacFnSync = (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array;\ntype EndomorphismOpts = {\n  beta: bigint;\n  splitScalar: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\nexport type BasicWCurve<T> = BasicCurve<T> & {\n  // Params: a, b\n  a: T;\n  b: T;\n\n  // Optional params\n  allowedPrivateKeyLengths?: readonly number[]; // for P521\n  wrapPrivateKey?: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  endo?: EndomorphismOpts; // Endomorphism options for Koblitz curves\n  // When a cofactor != 1, there can be an effective methods to:\n  // 1. Determine whether a point is torsion-free\n  isTorsionFree?: (c: ProjConstructor<T>, point: ProjPointType<T>) => boolean;\n  // 2. Clear torsion component\n  clearCofactor?: (c: ProjConstructor<T>, point: ProjPointType<T>) => ProjPointType<T>;\n};\n\ntype Entropy = Hex | true;\nexport type SignOpts = { lowS?: boolean; extraEntropy?: Entropy; prehash?: boolean };\nexport type VerOpts = { lowS?: boolean; prehash?: boolean };\n\n/**\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance of nominative types in TypeScript and interfaces only check for shape, so it's hard to create unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * TODO: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n */\n\n// Instance for 3d XYZ points\nexport interface ProjPointType<T> extends Group<ProjPointType<T>> {\n  readonly px: T;\n  readonly py: T;\n  readonly pz: T;\n  get x(): T;\n  get y(): T;\n  multiply(scalar: bigint): ProjPointType<T>;\n  toAffine(iz?: T): AffinePoint<T>;\n  isTorsionFree(): boolean;\n  clearCofactor(): ProjPointType<T>;\n  assertValidity(): void;\n  hasEvenY(): boolean;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n\n  multiplyUnsafe(scalar: bigint): ProjPointType<T>;\n  multiplyAndAddUnsafe(Q: ProjPointType<T>, a: bigint, b: bigint): ProjPointType<T> | undefined;\n  _setWindowSize(windowSize: number): void;\n}\n// Static methods for 3d XYZ points\nexport interface ProjConstructor<T> extends GroupConstructor<ProjPointType<T>> {\n  new (x: T, y: T, z: T): ProjPointType<T>;\n  fromAffine(p: AffinePoint<T>): ProjPointType<T>;\n  fromHex(hex: Hex): ProjPointType<T>;\n  fromPrivateKey(privateKey: PrivKey): ProjPointType<T>;\n  normalizeZ(points: ProjPointType<T>[]): ProjPointType<T>[];\n}\n\nexport type CurvePointsType<T> = BasicWCurve<T> & {\n  // Bytes\n  fromBytes?: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes?: (c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => Uint8Array;\n};\n\nfunction validatePointOpts<T>(curve: CurvePointsType<T>) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      a: 'field',\n      b: 'field',\n    },\n    {\n      allowedPrivateKeyLengths: 'array',\n      wrapPrivateKey: 'boolean',\n      isTorsionFree: 'function',\n      clearCofactor: 'function',\n      allowInfinityPoint: 'boolean',\n      fromBytes: 'function',\n      toBytes: 'function',\n    }\n  );\n  const { endo, Fp, a } = opts;\n  if (endo) {\n    if (!Fp.eql(a, Fp.ZERO)) {\n      throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n    }\n    if (\n      typeof endo !== 'object' ||\n      typeof endo.beta !== 'bigint' ||\n      typeof endo.splitScalar !== 'function'\n    ) {\n      throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n    }\n  }\n  return Object.freeze({ ...opts } as const);\n}\n\nexport type CurvePointsRes<T> = {\n  ProjectivePoint: ProjConstructor<T>;\n  normPrivateKeyToScalar: (key: PrivKey) => bigint;\n  weierstrassEquation: (x: T) => T;\n  isWithinCurveOrder: (num: bigint) => boolean;\n};\n\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n  // asn.1 DER encoding utils\n  Err: class DERErr extends Error {\n    constructor(m = '') {\n      super(m);\n    }\n  },\n  _parseInt(data: Uint8Array): { d: bigint; l: Uint8Array } {\n    const { Err: E } = DER;\n    if (data.length < 2 || data[0] !== 0x02) throw new E('Invalid signature integer tag');\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) throw new E('Invalid signature integer: wrong length');\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    if (res[0] & 0b10000000) throw new E('Invalid signature integer: negative');\n    if (res[0] === 0x00 && !(res[1] & 0b10000000))\n      throw new E('Invalid signature integer: unnecessary leading zero');\n    return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n  },\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E } = DER;\n    const data = typeof hex === 'string' ? h2b(hex) : hex;\n    if (!(data instanceof Uint8Array)) throw new Error('ui8a expected');\n    let l = data.length;\n    if (l < 2 || data[0] != 0x30) throw new E('Invalid signature tag');\n    if (data[1] !== l - 2) throw new E('Invalid signature: incorrect length');\n    const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n    const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n    if (rBytesLeft.length) throw new E('Invalid signature: left bytes after parsing');\n    return { r, s };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n    const slice = (s: string): string => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n    const h = (num: number | bigint) => {\n      const hex = num.toString(16);\n      return hex.length & 1 ? `0${hex}` : hex;\n    };\n    const s = slice(h(sig.s));\n    const r = slice(h(sig.r));\n    const shl = s.length / 2;\n    const rhl = r.length / 2;\n    const sl = h(shl);\n    const rl = h(rhl);\n    return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n  },\n};\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n\nexport function weierstrassPoints<T>(opts: CurvePointsType<T>) {\n  const CURVE = validatePointOpts(opts);\n  const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n\n  const toBytes =\n    CURVE.toBytes ||\n    ((_c: ProjConstructor<T>, point: ProjPointType<T>, _isCompressed: boolean) => {\n      const a = point.toAffine();\n      return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n    });\n  const fromBytes =\n    CURVE.fromBytes ||\n    ((bytes: Uint8Array) => {\n      // const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n      const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n      const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n      return { x, y };\n    });\n\n  /**\n   * y² = x³ + ax + b: Short weierstrass curve formula\n   * @returns y²\n   */\n  function weierstrassEquation(x: T): T {\n    const { a, b } = CURVE;\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x2 * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n  }\n  // Validate whether the passed curve params are valid.\n  // We check if curve equation works for generator point.\n  // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n  // ProjectivePoint class has not been initialized yet.\n  if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n    throw new Error('bad generator point: equation left != right');\n\n  // Valid group elements reside in range 1..n-1\n  function isWithinCurveOrder(num: bigint): boolean {\n    return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n  }\n  function assertGE(num: bigint) {\n    if (!isWithinCurveOrder(num)) throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n  }\n  // Validates if priv key is valid and converts it to bigint.\n  // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n  function normPrivateKeyToScalar(key: PrivKey): bigint {\n    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n    if (lengths && typeof key !== 'bigint') {\n      if (key instanceof Uint8Array) key = ut.bytesToHex(key);\n      // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n      if (typeof key !== 'string' || !lengths.includes(key.length)) throw new Error('Invalid key');\n      key = key.padStart(nByteLength * 2, '0');\n    }\n    let num: bigint;\n    try {\n      num =\n        typeof key === 'bigint'\n          ? key\n          : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n    } catch (error) {\n      throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n    }\n    if (wrapPrivateKey) num = mod.mod(num, n); // disabled by default, enabled for BLS\n    assertGE(num); // num in range [1..N-1]\n    return num;\n  }\n\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function assertPrjPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ProjectivePoint expected');\n  }\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n   * Default Point works in 2d / affine coordinates: (x, y)\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements ProjPointType<T> {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n\n    constructor(readonly px: T, readonly py: T, readonly pz: T) {\n      if (px == null || !Fp.isValid(px)) throw new Error('x required');\n      if (py == null || !Fp.isValid(py)) throw new Error('y required');\n      if (pz == null || !Fp.isValid(pz)) throw new Error('z required');\n    }\n\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      const is0 = (i: T) => Fp.eql(i, Fp.ZERO);\n      // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n      if (is0(x) && is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.pz));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(hex: Hex): Point {\n      const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n      P.assertValidity();\n      return P;\n    }\n\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(privateKey: PrivKey) {\n      return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n\n    // A point on curve is valid if it conforms to equation.\n    assertValidity(): void {\n      if (this.is0()) {\n        // (0, 1, 0) aka ZERO is invalid in most contexts.\n        // In BLS, ZERO can be serialized, so we allow it.\n        // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n        if (CURVE.allowInfinityPoint && !Fp.is0(this.py)) return;\n        throw new Error('bad point: ZERO');\n      }\n      // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n      const { x, y } = this.toAffine();\n      // Check if x, y are valid field elements\n      if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not FE');\n      const left = Fp.sqr(y); // y²\n      const right = weierstrassEquation(x); // x³ + ax + b\n      if (!Fp.eql(left, right)) throw new Error('bad point: equation left != right');\n      if (!this.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    }\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (Fp.isOdd) return !Fp.isOdd(y);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n\n    /**\n     * Compare one point to another.\n     */\n    equals(other: Point): boolean {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate(): Point {\n      return new Point(this.px, Fp.neg(this.py), this.pz);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, _3n);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, _3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    private is0() {\n      return this.equals(Point.ZERO);\n    }\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, (comp: Point[]) => {\n        const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n        return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n      });\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(n: bigint): Point {\n      const I = Point.ZERO;\n      if (n === _0n) return I;\n      assertGE(n); // Will throw on 0\n      if (n === _1n) return this;\n      const { endo } = CURVE;\n      if (!endo) return wnaf.unsafeLadder(this, n);\n\n      // Apply endomorphism\n      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n      let k1p = I;\n      let k2p = I;\n      let d: Point = this;\n      while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n) k1p = k1p.add(d);\n        if (k2 & _1n) k2p = k2p.add(d);\n        d = d.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n      }\n      if (k1neg) k1p = k1p.negate();\n      if (k2neg) k2p = k2p.negate();\n      k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n      return k1p.add(k2p);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      assertGE(scalar);\n      let n = scalar;\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      const { endo } = CURVE;\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let { p: k1p, f: f1p } = this.wNAF(k1);\n        let { p: k2p, f: f2p } = this.wNAF(k2);\n        k1p = wnaf.constTimeNegate(k1neg, k1p);\n        k2p = wnaf.constTimeNegate(k2neg, k2p);\n        k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n        point = k1p.add(k2p);\n        fake = f1p.add(f2p);\n      } else {\n        const { p, f } = this.wNAF(n);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return Point.normalizeZ([point, fake])[0];\n    }\n\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(Q: Point, a: bigint, b: bigint): Point | undefined {\n      const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n      const mul = (\n        P: Point,\n        a: bigint // Select faster multiply() method\n      ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n      const sum = mul(this, a).add(mul(Q, b));\n      return sum.is0() ? undefined : sum;\n    }\n\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) ∋ (x=x/z, y=y/z)\n    toAffine(iz?: T): AffinePoint<T> {\n      const { px: x, py: y, pz: z } = this;\n      const is0 = this.is0();\n      // If invZ was 0, we return zero point. However we still want to execute\n      // all operations, so we replace invZ with a random number, 1.\n      if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(z);\n      const ax = Fp.mul(x, iz);\n      const ay = Fp.mul(y, iz);\n      const zz = Fp.mul(z, iz);\n      if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n      if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n    isTorsionFree(): boolean {\n      const { h: cofactor, isTorsionFree } = CURVE;\n      if (cofactor === _1n) return true; // No subgroups, always torsion-free\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n    }\n    clearCofactor(): Point {\n      const { h: cofactor, clearCofactor } = CURVE;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(CURVE.h);\n    }\n\n    toRawBytes(isCompressed = true): Uint8Array {\n      this.assertValidity();\n      return toBytes(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      return ut.bytesToHex(this.toRawBytes(isCompressed));\n    }\n  }\n  const _bits = CURVE.nBitLength;\n  const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n  // Validate if generator point is on curve\n  return {\n    CURVE,\n    ProjectivePoint: Point as ProjConstructor<T>,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  };\n}\n\n// Instance\nexport interface SignatureType {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  assertValidity(): void;\n  addRecoveryBit(recovery: number): RecoveredSignatureType;\n  hasHighS(): boolean;\n  normalizeS(): SignatureType;\n  recoverPublicKey(msgHash: Hex): ProjPointType<bigint>;\n  toCompactRawBytes(): Uint8Array;\n  toCompactHex(): string;\n  // DER-encoded\n  toDERRawBytes(isCompressed?: boolean): Uint8Array;\n  toDERHex(isCompressed?: boolean): string;\n}\nexport type RecoveredSignatureType = SignatureType & {\n  readonly recovery: number;\n};\n// Static methods\nexport type SignatureConstructor = {\n  new (r: bigint, s: bigint): SignatureType;\n  fromCompact(hex: Hex): SignatureType;\n  fromDER(hex: Hex): SignatureType;\n};\ntype SignatureLike = { r: bigint; s: bigint };\n\nexport type PubKey = Hex | ProjPointType<bigint>;\n\nexport type CurveType = BasicWCurve<bigint> & {\n  hash: CHash; // CHash not FHash because we need outputLen for DRBG\n  hmac: HmacFnSync;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  lowS?: boolean;\n  bits2int?: (bytes: Uint8Array) => bigint;\n  bits2int_modN?: (bytes: Uint8Array) => bigint;\n};\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      hash: 'hash',\n      hmac: 'function',\n      randomBytes: 'function',\n    },\n    {\n      bits2int: 'function',\n      bits2int_modN: 'function',\n      lowS: 'boolean',\n    }\n  );\n  return Object.freeze({ lowS: true, ...opts } as const);\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: PrivKey, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (privateA: PrivKey, publicB: Hex, isCompressed?: boolean) => Uint8Array;\n  sign: (msgHash: Hex, privKey: PrivKey, opts?: SignOpts) => RecoveredSignatureType;\n  verify: (signature: Hex | SignatureLike, msgHash: Hex, publicKey: Hex, opts?: VerOpts) => boolean;\n  ProjectivePoint: ProjConstructor<bigint>;\n  Signature: SignatureConstructor;\n  utils: {\n    normPrivateKeyToScalar: (key: PrivKey) => bigint;\n    isValidPrivateKey(privateKey: PrivKey): boolean;\n    randomPrivateKey: () => Uint8Array;\n    precompute: (windowSize?: number, point?: ProjPointType<bigint>) => ProjPointType<bigint>;\n  };\n};\n\nexport function weierstrass(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const { Fp, n: CURVE_ORDER } = CURVE;\n  const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n  const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n\n  function isValidFieldElement(num: bigint): boolean {\n    return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n  }\n  function modN(a: bigint) {\n    return mod.mod(a, CURVE_ORDER);\n  }\n  function invN(a: bigint) {\n    return mod.invert(a, CURVE_ORDER);\n  }\n\n  const {\n    ProjectivePoint: Point,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  } = weierstrassPoints({\n    ...CURVE,\n    toBytes(_c, point, isCompressed: boolean): Uint8Array {\n      const a = point.toAffine();\n      const x = Fp.toBytes(a.x);\n      const cat = ut.concatBytes;\n      if (isCompressed) {\n        return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n      } else {\n        return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n      }\n    },\n    fromBytes(bytes: Uint8Array) {\n      const len = bytes.length;\n      const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // this.assertValidity() is done inside of fromHex\n      if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n        const x = ut.bytesToNumberBE(tail);\n        if (!isValidFieldElement(x)) throw new Error('Point is not on curve');\n        const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n        let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n        const isYOdd = (y & _1n) === _1n;\n        // ECDSA\n        const isHeadOdd = (head & 1) === 1;\n        if (isHeadOdd !== isYOdd) y = Fp.neg(y);\n        return { x, y };\n      } else if (len === uncompressedLen && head === 0x04) {\n        const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n        const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n        return { x, y };\n      } else {\n        throw new Error(\n          `Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`\n        );\n      }\n    },\n  });\n  const numToNByteStr = (num: bigint): string =>\n    ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n\n  function normalizeS(s: bigint) {\n    return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n  }\n  // slice bytes num\n  const slcNum = (b: Uint8Array, from: number, to: number) => ut.bytesToNumberBE(b.slice(from, to));\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n   */\n  class Signature implements SignatureType {\n    constructor(readonly r: bigint, readonly s: bigint, readonly recovery?: number) {\n      this.assertValidity();\n    }\n\n    // pair (bytes of r, bytes of s)\n    static fromCompact(hex: Hex) {\n      const l = CURVE.nByteLength;\n      hex = ensureBytes('compactSignature', hex, l * 2);\n      return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n    }\n\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER(hex: Hex) {\n      const { r, s } = DER.toSig(ensureBytes('DER', hex));\n      return new Signature(r, s);\n    }\n\n    assertValidity(): void {\n      // can use assertGE here\n      if (!isWithinCurveOrder(this.r)) throw new Error('r must be 0 < r < CURVE.n');\n      if (!isWithinCurveOrder(this.s)) throw new Error('s must be 0 < s < CURVE.n');\n    }\n\n    addRecoveryBit(recovery: number): RecoveredSignature {\n      return new Signature(this.r, this.s, recovery) as RecoveredSignature;\n    }\n\n    recoverPublicKey(msgHash: Hex): typeof Point.BASE {\n      const { r, s, recovery: rec } = this;\n      const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n      if (rec == null || ![0, 1, 2, 3].includes(rec)) throw new Error('recovery id invalid');\n      const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n      if (radj >= Fp.ORDER) throw new Error('recovery id 2 or 3 invalid');\n      const prefix = (rec & 1) === 0 ? '02' : '03';\n      const R = Point.fromHex(prefix + numToNByteStr(radj));\n      const ir = invN(radj); // r^-1\n      const u1 = modN(-h * ir); // -hr^-1\n      const u2 = modN(s * ir); // sr^-1\n      const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n      if (!Q) throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n    }\n\n    // DER-encoded\n    toDERRawBytes() {\n      return ut.hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n      return DER.hexFromSig({ r: this.r, s: this.s });\n    }\n\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return ut.hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n      return numToNByteStr(this.r) + numToNByteStr(this.s);\n    }\n  }\n  type RecoveredSignature = Signature & { recovery: number };\n\n  const utils = {\n    isValidPrivateKey(privateKey: PrivKey) {\n      try {\n        normPrivateKeyToScalar(privateKey);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    normPrivateKeyToScalar: normPrivateKeyToScalar,\n\n    /**\n     * Produces cryptographically secure private key from random of size\n     * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n     */\n    randomPrivateKey: (): Uint8Array => {\n      const length = mod.getMinHashLength(CURVE.n);\n      return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n    },\n\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n      return point;\n    },\n  };\n\n  /**\n   * Computes public key for a private key. Checks for validity of the private key.\n   * @param privateKey private key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(privateKey: PrivKey, isCompressed = true): Uint8Array {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: PrivKey | PubKey): boolean {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && (item as Hex).length;\n    if (arr) return len === compressedLen || len === uncompressedLen;\n    if (str) return len === 2 * compressedLen || len === 2 * uncompressedLen;\n    if (item instanceof Point) return true;\n    return false;\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from private key and public key.\n   * Checks: 1) private key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param privateA private key\n   * @param publicB different public key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(privateA: PrivKey, publicB: Hex, isCompressed = true): Uint8Array {\n    if (isProbPub(privateA)) throw new Error('first arg must be private key');\n    if (!isProbPub(publicB)) throw new Error('second arg must be public key');\n    const b = Point.fromHex(publicB); // check for being on-curve\n    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n  }\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    CURVE.bits2int ||\n    function (bytes: Uint8Array): bigint {\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    CURVE.bits2int_modN ||\n    function (bytes: Uint8Array): bigint {\n      return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // NOTE: pads output with zero as per spec\n  const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n  /**\n   * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n   */\n  function int2octets(num: bigint): Uint8Array {\n    if (typeof num !== 'bigint') throw new Error('bigint expected');\n    if (!(_0n <= num && num < ORDER_MASK))\n      throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n    // works with order, can have different size than numToField!\n    return ut.numberToBytesBE(num, CURVE.nByteLength);\n  }\n\n  // Steps A, D of RFC6979 3.2\n  // Creates RFC6979 seed; converts msg/privKey to numbers.\n  // Used only in sign, not in verify.\n  // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n  // Also it can be bigger for P224 + SHA256\n  function prepSig(msgHash: Hex, privateKey: PrivKey, opts = defaultSigOpts) {\n    if (['recovered', 'canonical'].some((k) => k in opts))\n      throw new Error('sign() legacy options not supported');\n    const { hash, randomBytes } = CURVE;\n    let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n    if (lowS == null) lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n    msgHash = ensureBytes('msgHash', msgHash);\n    if (prehash) msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(msgHash);\n    const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (ent != null) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n      seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n    }\n    const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    function k2sig(kBytes: Uint8Array): RecoveredSignature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n      if (!isWithinCurveOrder(k)) return; // Important: all mod() calls here must be done over N\n      const ik = invN(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n      const r = modN(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n      // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n      // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n      const s = modN(ik * modN(m + r * d)); // Not using blinding here\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = normalizeS(s); // if lowS was passed, ensure s is always\n        recovery ^= 1; // // in the bottom half of N\n      }\n      return new Signature(r, normS, recovery) as RecoveredSignature; // use normS, not s\n    }\n    return { seed, k2sig };\n  }\n  const defaultSigOpts: SignOpts = { lowS: CURVE.lowS, prehash: false };\n  const defaultVerOpts: VerOpts = { lowS: CURVE.lowS, prehash: false };\n\n  /**\n   * Signs message hash with a private key.\n   * ```\n   * sign(m, d, k) where\n   *   (x, y) = G × k\n   *   r = x mod n\n   *   s = (m + dr)/k mod n\n   * ```\n   * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n   * @param privKey private key\n   * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n   * @returns signature with recovery param\n   */\n  function sign(msgHash: Hex, privKey: PrivKey, opts = defaultSigOpts): RecoveredSignature {\n    const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n    const C = CURVE;\n    const drbg = ut.createHmacDrbg<RecoveredSignature>(C.hash.outputLen, C.nByteLength, C.hmac);\n    return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n  }\n\n  // Enable precomputes. Slows down first publicKey computation by 20ms.\n  Point.BASE._setWindowSize(8);\n  // utils.precompute(8, ProjectivePoint.BASE)\n\n  /**\n   * Verifies a signature against message hash and public key.\n   * Rejects lowS signatures by default: to override,\n   * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   U1 = hs^-1 mod n\n   *   U2 = rs^-1 mod n\n   *   R = U1⋅G - U2⋅P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Hex | SignatureLike,\n    msgHash: Hex,\n    publicKey: Hex,\n    opts = defaultVerOpts\n  ): boolean {\n    const sg = signature;\n    msgHash = ensureBytes('msgHash', msgHash);\n    publicKey = ensureBytes('publicKey', publicKey);\n    if ('strict' in opts) throw new Error('options.strict was renamed to lowS');\n    const { lowS, prehash } = opts;\n\n    let _sig: Signature | undefined = undefined;\n    let P: ProjPointType<bigint>;\n    try {\n      if (typeof sg === 'string' || sg instanceof Uint8Array) {\n        // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n        // Since DER can also be 2*nByteLength bytes, we check for it first.\n        try {\n          _sig = Signature.fromDER(sg);\n        } catch (derError) {\n          if (!(derError instanceof DER.Err)) throw derError;\n          _sig = Signature.fromCompact(sg);\n        }\n      } else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n        const { r, s } = sg;\n        _sig = new Signature(r, s);\n      } else {\n        throw new Error('PARSE');\n      }\n      P = Point.fromHex(publicKey);\n    } catch (error) {\n      if ((error as Error).message === 'PARSE')\n        throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n      return false;\n    }\n    if (lowS && _sig.hasHighS()) return false;\n    if (prehash) msgHash = CURVE.hash(msgHash);\n    const { r, s } = _sig;\n    const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n    const is = invN(s); // s^-1\n    const u1 = modN(h * is); // u1 = hs^-1 mod n\n    const u2 = modN(r * is); // u2 = rs^-1 mod n\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n    if (!R) return false;\n    const v = modN(R.x);\n    return v === r;\n  }\n  return {\n    CURVE,\n    getPublicKey,\n    getSharedSecret,\n    sign,\n    verify,\n    ProjectivePoint: Point,\n    Signature,\n    utils,\n  };\n}\n\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio<T>(Fp: mod.IField<T>, Z: T) {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = _0n;\n  for (let o = q - _1n; o % _2n === _0n; o /= _2n) l += _1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n  // 2n ** c1 == 2n << (c1-1)\n  const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n  const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n  const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n  const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > _1n; i--) {\n      let tv5 = i - _2n; // 18.    tv5 = i - 2\n      tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % _4n === _3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU<T>(\n  Fp: mod.IField<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n) {\n  mod.validateField(Fp);\n  if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n  if (!Fp.isOdd) throw new Error('Fp.isOdd is not implemented!');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    x = Fp.div(x, tv4); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport type { Group, GroupConstructor, AffinePoint } from './curve.js';\nimport { mod, IField } from './modular.js';\nimport { bytesToNumberBE, CHash, concatBytes, utf8ToBytes, validateObject } from './utils.js';\n\n/**\n * * `DST` is a domain separation tag, defined in section 2.2.5\n * * `p` characteristic of F, where F is a finite field of characteristic p and order q = p^m\n * * `m` is extension degree (1 for prime fields)\n * * `k` is the target security target in bits (e.g. 128), from section 5.1\n * * `expand` is `xmd` (SHA2, SHA3, BLAKE) or `xof` (SHAKE, BLAKE-XOF)\n * * `hash` conforming to `utils.CHash` interface, with `outputLen` / `blockLen` props\n */\ntype UnicodeOrBytes = string | Uint8Array;\nexport type Opts = {\n  DST: UnicodeOrBytes;\n  p: bigint;\n  m: number;\n  k: number;\n  expand: 'xmd' | 'xof';\n  hash: CHash;\n};\n\nfunction validateDST(dst: UnicodeOrBytes): Uint8Array {\n  if (dst instanceof Uint8Array) return dst;\n  if (typeof dst === 'string') return utf8ToBytes(dst);\n  throw new Error('DST must be Uint8Array or string');\n}\n\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = bytesToNumberBE;\n\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value: number, length: number): Uint8Array {\n  if (value < 0 || value >= 1 << (8 * length)) {\n    throw new Error(`bad I2OSP call: value=${value} length=${length}`);\n  }\n  const res = Array.from({ length }).fill(0) as number[];\n  for (let i = length - 1; i >= 0; i--) {\n    res[i] = value & 0xff;\n    value >>>= 8;\n  }\n  return new Uint8Array(res);\n}\n\nfunction strxor(a: Uint8Array, b: Uint8Array): Uint8Array {\n  const arr = new Uint8Array(a.length);\n  for (let i = 0; i < a.length; i++) {\n    arr[i] = a[i] ^ b[i];\n  }\n  return arr;\n}\n\nfunction isBytes(item: unknown): void {\n  if (!(item instanceof Uint8Array)) throw new Error('Uint8Array expected');\n}\nfunction isNum(item: unknown): void {\n  if (!Number.isSafeInteger(item)) throw new Error('number expected');\n}\n\n// Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits\n// https://www.rfc-editor.org/rfc/rfc9380#section-5.3.1\nexport function expand_message_xmd(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  H: CHash\n): Uint8Array {\n  isBytes(msg);\n  isBytes(DST);\n  isNum(lenInBytes);\n  // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n  if (DST.length > 255) DST = H(concatBytes(utf8ToBytes('H2C-OVERSIZE-DST-'), DST));\n  const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n  const ell = Math.ceil(lenInBytes / b_in_bytes);\n  if (ell > 255) throw new Error('Invalid xmd length');\n  const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n  const Z_pad = i2osp(0, r_in_bytes);\n  const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n  const b = new Array<Uint8Array>(ell);\n  const b_0 = H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n  b[0] = H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n  for (let i = 1; i <= ell; i++) {\n    const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n    b[i] = H(concatBytes(...args));\n  }\n  const pseudo_random_bytes = concatBytes(...b);\n  return pseudo_random_bytes.slice(0, lenInBytes);\n}\n\n// Produces a uniformly random byte string using an extendable-output function (XOF) H.\n// 1. The collision resistance of H MUST be at least k bits.\n// 2. H MUST be an XOF that has been proved indifferentiable from\n//    a random oracle under a reasonable cryptographic assumption.\n// https://www.rfc-editor.org/rfc/rfc9380#section-5.3.2\nexport function expand_message_xof(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  k: number,\n  H: CHash\n): Uint8Array {\n  isBytes(msg);\n  isBytes(DST);\n  isNum(lenInBytes);\n  // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n  // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n  if (DST.length > 255) {\n    const dkLen = Math.ceil((2 * k) / 8);\n    DST = H.create({ dkLen }).update(utf8ToBytes('H2C-OVERSIZE-DST-')).update(DST).digest();\n  }\n  if (lenInBytes > 65535 || DST.length > 255)\n    throw new Error('expand_message_xof: invalid lenInBytes');\n  return (\n    H.create({ dkLen: lenInBytes })\n      .update(msg)\n      .update(i2osp(lenInBytes, 2))\n      // 2. DST_prime = DST || I2OSP(len(DST), 1)\n      .update(DST)\n      .update(i2osp(DST.length, 1))\n      .digest()\n  );\n}\n\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F\n * https://www.rfc-editor.org/rfc/rfc9380#section-5.2\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nexport function hash_to_field(msg: Uint8Array, count: number, options: Opts): bigint[][] {\n  validateObject(options, {\n    DST: 'stringOrUint8Array',\n    p: 'bigint',\n    m: 'isSafeInteger',\n    k: 'isSafeInteger',\n    hash: 'hash',\n  });\n  const { p, k, m, hash, expand, DST: _DST } = options;\n  isBytes(msg);\n  isNum(count);\n  const DST = validateDST(_DST);\n  const log2p = p.toString(2).length;\n  const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n  const len_in_bytes = count * m * L;\n  let prb; // pseudo_random_bytes\n  if (expand === 'xmd') {\n    prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n  } else if (expand === 'xof') {\n    prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n  } else if (expand === '_internal_pass') {\n    // for internal tests only\n    prb = msg;\n  } else {\n    throw new Error('expand must be \"xmd\" or \"xof\"');\n  }\n  const u = new Array(count);\n  for (let i = 0; i < count; i++) {\n    const e = new Array(m);\n    for (let j = 0; j < m; j++) {\n      const elm_offset = L * (j + i * m);\n      const tv = prb.subarray(elm_offset, elm_offset + L);\n      e[j] = mod(os2ip(tv), p);\n    }\n    u[i] = e;\n  }\n  return u;\n}\n\nexport function isogenyMap<T, F extends IField<T>>(field: F, map: [T[], T[], T[], T[]]) {\n  // Make same order as in spec\n  const COEFF = map.map((i) => Array.from(i).reverse());\n  return (x: T, y: T) => {\n    const [xNum, xDen, yNum, yDen] = COEFF.map((val) =>\n      val.reduce((acc, i) => field.add(field.mul(acc, x), i))\n    );\n    x = field.div(xNum, xDen); // xNum / xDen\n    y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n    return { x, y };\n  };\n}\n\nexport interface H2CPoint<T> extends Group<H2CPoint<T>> {\n  add(rhs: H2CPoint<T>): H2CPoint<T>;\n  toAffine(iz?: bigint): AffinePoint<T>;\n  clearCofactor(): H2CPoint<T>;\n  assertValidity(): void;\n}\n\nexport interface H2CPointConstructor<T> extends GroupConstructor<H2CPoint<T>> {\n  fromAffine(ap: AffinePoint<T>): H2CPoint<T>;\n}\n\nexport type MapToCurve<T> = (scalar: bigint[]) => AffinePoint<T>;\n\n// Separated from initialization opts, so users won't accidentally change per-curve parameters\n// (changing DST is ok!)\nexport type htfBasicOpts = { DST: UnicodeOrBytes };\n\nexport function createHasher<T>(\n  Point: H2CPointConstructor<T>,\n  mapToCurve: MapToCurve<T>,\n  def: Opts & { encodeDST?: UnicodeOrBytes }\n) {\n  if (typeof mapToCurve !== 'function') throw new Error('mapToCurve() must be defined');\n  return {\n    // Encodes byte string to elliptic curve.\n    // hash_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n    hashToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options } as Opts);\n      const u0 = Point.fromAffine(mapToCurve(u[0]));\n      const u1 = Point.fromAffine(mapToCurve(u[1]));\n      const P = u0.add(u1).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n\n    // Encodes byte string to elliptic curve.\n    // encode_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n    encodeToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options } as Opts);\n      const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n  };\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass, CurveType } from './abstract/weierstrass.js';\nimport { CHash } from './abstract/utils.js';\n\n// connects noble-curves to noble-hashes\nexport function getHash(hash: CHash) {\n  return {\n    hash,\n    hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => hmac(hash, key, concatBytes(...msgs)),\n    randomBytes,\n  };\n}\n// Same API as @noble/hashes, with ability to create curve with custom hash\ntype CurveDef = Readonly<Omit<CurveType, 'hash' | 'hmac' | 'randomBytes'>>;\nexport function createCurve(curveDef: CurveDef, defHash: CHash) {\n  const create = (hash: CHash) => weierstrass({ ...curveDef, ...getHash(hash) });\n  return Object.freeze({ ...create(defHash), create });\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { ProjPointType as PointType, mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport type { Hex, PrivKey } from './abstract/utils.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\n\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a: bigint, b: bigint) => (a + b / _2n) / b;\n\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y: bigint): bigint {\n  const P = secp256k1P;\n  // prettier-ignore\n  const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n  // prettier-ignore\n  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n  const b2 = (y * y * y) % P; // x^3, 11\n  const b3 = (b2 * b2 * y) % P; // x^7\n  const b6 = (pow2(b3, _3n, P) * b3) % P;\n  const b9 = (pow2(b6, _3n, P) * b3) % P;\n  const b11 = (pow2(b9, _2n, P) * b2) % P;\n  const b22 = (pow2(b11, _11n, P) * b11) % P;\n  const b44 = (pow2(b22, _22n, P) * b22) % P;\n  const b88 = (pow2(b44, _44n, P) * b44) % P;\n  const b176 = (pow2(b88, _88n, P) * b88) % P;\n  const b220 = (pow2(b176, _44n, P) * b44) % P;\n  const b223 = (pow2(b220, _3n, P) * b3) % P;\n  const t1 = (pow2(b223, _23n, P) * b22) % P;\n  const t2 = (pow2(t1, _6n, P) * b2) % P;\n  const root = pow2(t2, _2n, P);\n  if (!Fp.eql(Fp.sqr(root), y)) throw new Error('Cannot find square root');\n  return root;\n}\n\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n\nexport const secp256k1 = createCurve(\n  {\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n      beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n      splitScalar: (k: bigint) => {\n        const n = secp256k1N;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg) k1 = n - k1;\n        if (k2neg) k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n          throw new Error('splitScalar: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n      },\n    },\n  },\n  sha256\n);\n\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES: { [tag: string]: Uint8Array } = {};\nfunction taggedHash(tag: string, ...messages: Uint8Array[]): Uint8Array {\n  let tagP = TAGGED_HASH_PREFIXES[tag];\n  if (tagP === undefined) {\n    const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n    tagP = concatBytes(tagH, tagH);\n    TAGGED_HASH_PREFIXES[tag] = tagP;\n  }\n  return sha256(concatBytes(tagP, ...messages));\n}\n\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point: PointType<bigint>) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n: bigint) => numberToBytesBE(n, 32);\nconst modP = (x: bigint) => mod(x, secp256k1P);\nconst modN = (x: bigint) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q: PointType<bigint>, a: bigint, b: bigint) =>\n  Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv: PrivKey) {\n  let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n  let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n  const scalar = p.hasEvenY() ? d_ : modN(-d_);\n  return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x: bigint): PointType<bigint> {\n  if (!fe(x)) throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n  const xx = modP(x * x);\n  const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n  let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n  if (y % _2n !== _0n) y = modP(-y); // Return the unique point P such that x(P) = x and\n  const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n  p.assertValidity();\n  return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args: Uint8Array[]): bigint {\n  return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey: Hex): Uint8Array {\n  return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(\n  message: Hex,\n  privateKey: PrivKey,\n  auxRand: Hex = randomBytes(32)\n): Uint8Array {\n  const m = ensureBytes('message', message);\n  const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n  const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n  const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n  const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n  const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n  if (k_ === _0n) throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n  const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n  const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n  const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n  sig.set(rx, 0);\n  sig.set(numTo32b(modN(k + e * d)), 32);\n  // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n  if (!schnorrVerify(sig, m, px)) throw new Error('sign: Invalid signature produced');\n  return sig;\n}\n\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature: Hex, message: Hex, publicKey: Hex): boolean {\n  const sig = ensureBytes('signature', signature, 64);\n  const m = ensureBytes('message', message);\n  const pub = ensureBytes('publicKey', publicKey, 32);\n  try {\n    const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n    const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n    if (!fe(r)) return false;\n    const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n    if (!ge(s)) return false;\n    const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n    const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n    if (!R || !R.hasEvenY() || R.toAffine().x !== r) return false; // -eP == (n-e)P\n    return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n  } catch (error) {\n    return false;\n  }\n}\n\nexport const schnorr = /* @__PURE__ */ (() => ({\n  getPublicKey: schnorrGetPublicKey,\n  sign: schnorrSign,\n  verify: schnorrVerify,\n  utils: {\n    randomPrivateKey: secp256k1.utils.randomPrivateKey,\n    lift_x,\n    pointToBytes,\n    numberToBytesBE,\n    bytesToNumberBE,\n    taggedHash,\n    mod,\n  },\n}))();\n\nconst isoMap = /* @__PURE__ */ (() =>\n  isogenyMap(\n    Fp,\n    [\n      // xNum\n      [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n      ],\n      // xDen\n      [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n      // yNum\n      [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n      ],\n      // yDen\n      [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n    ].map((i) => i.map((j) => BigInt(j))) as [bigint[], bigint[], bigint[], bigint[]]\n  ))();\nconst mapSWU = /* @__PURE__ */ (() =>\n  mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n  }))();\nconst htf = /* @__PURE__ */ (() =>\n  createHasher(\n    secp256k1.ProjectivePoint,\n    (scalars: bigint[]) => {\n      const { x, y } = mapSWU(Fp.create(scalars[0]));\n      return isoMap(x, y);\n    },\n    {\n      DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n      encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n      p: Fp.ORDER,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha256,\n    }\n  ))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n", "\n/**\n *  A constant for the zero address.\n *\n *  (**i.e.** ``\"0x0000000000000000000000000000000000000000\"``)\n */\nexport const ZeroAddress: string = \"0x0000000000000000000000000000000000000000\";\n\n", "/**\n *  A constant for the zero hash.\n *\n *  (**i.e.** ``\"0x0000000000000000000000000000000000000000000000000000000000000000\"``)\n */\nexport const ZeroHash: string = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n\n", "\n/**\n *  A constant for the order N for the secp256k1 curve.\n *\n *  (**i.e.** ``0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141n``)\n */\nexport const N: bigint = BigInt(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n\n/**\n *  A constant for the number of wei in a single ether.\n *\n *  (**i.e.** ``1000000000000000000n``)\n */\nexport const WeiPerEther: bigint = BigInt(\"1000000000000000000\");\n\n/**\n *  A constant for the maximum value for a ``uint256``.\n *\n *  (**i.e.** ``0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffn``)\n */\nexport const MaxUint256: bigint = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\n/**\n *  A constant for the minimum value for an ``int256``.\n *\n *  (**i.e.** ``-8000000000000000000000000000000000000000000000000000000000000000n``)\n */\nexport const MinInt256: bigint = BigInt(\"0x8000000000000000000000000000000000000000000000000000000000000000\") * BigInt(-1);\n\n/**\n *  A constant for the maximum value for an ``int256``.\n *\n *  (**i.e.** ``0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffn``)\n */\nexport const MaxInt256: bigint = BigInt(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n", "// NFKC (composed)             // (decomposed)\n\n/**\n *  A constant for the ether symbol (normalized using NFKC).\n *\n *  (**i.e.** ``\"\\\\u039e\"``)\n */\nexport const EtherSymbol: string = \"\\u039e\";  // \"\\uD835\\uDF63\";\n\n\n/**\n *  A constant for the [[link-eip-191]] personal message prefix.\n *\n *  (**i.e.** ``\"\\\\x19Ethereum Signed Message:\\\\n\"``)\n */\nexport const MessagePrefix: string = \"\\x19Ethereum Signed Message:\\n\";\n", "\nimport { ZeroHash } from \"../constants/index.js\";\nimport {\n    concat, dataLength, getBigInt, getBytes, getNumber, hexlify,\n    toBeArray, isHexString, zeroPadValue,\n    assertArgument, assertPrivate\n} from \"../utils/index.js\";\n\nimport type {\n    BigNumberish, BytesLike, Numeric\n} from \"../utils/index.js\";\n\n\n// Constants\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_2 = BigInt(2);\nconst BN_27 = BigInt(27);\nconst BN_28 = BigInt(28);\nconst BN_35 = BigInt(35);\n\n\nconst _guard = { };\n\n// @TODO: Allow Uint8Array\n\n/**\n *  A SignatureLike\n *\n *  @_docloc: api/crypto:Signing\n */\nexport type SignatureLike = Signature | string | {\n    r: string;\n    s: string;\n    v: BigNumberish;\n    yParity?: 0 | 1;\n    yParityAndS?: string;\n} | {\n    r: string;\n    yParityAndS: string;\n    yParity?: 0 | 1;\n    s?: string;\n    v?: number;\n} | {\n    r: string;\n    s: string;\n    yParity: 0 | 1;\n    v?: BigNumberish;\n    yParityAndS?: string;\n};\n\nfunction toUint256(value: BigNumberish): string {\n    return zeroPadValue(toBeArray(value), 32);\n}\n\n/**\n *  A Signature  @TODO\n *\n *\n *  @_docloc: api/crypto:Signing\n */\nexport class Signature {\n    #r: string;\n    #s: string;\n    #v: 27 | 28;\n    #networkV: null | bigint;\n\n    /**\n     *  The ``r`` value for a signautre.\n     *\n     *  This represents the ``x`` coordinate of a \"reference\" or\n     *  challenge point, from which the ``y`` can be computed.\n     */\n    get r(): string { return this.#r; }\n    set r(value: BytesLike) {\n        assertArgument(dataLength(value) === 32, \"invalid r\", \"value\", value);\n        this.#r = hexlify(value);\n    }\n\n    /**\n     *  The ``s`` value for a signature.\n     */\n    get s(): string { return this.#s; }\n    set s(_value: BytesLike) {\n        assertArgument(dataLength(_value) === 32, \"invalid s\", \"value\", _value);\n        const value = hexlify(_value);\n        assertArgument(parseInt(value.substring(0, 3)) < 8, \"non-canonical s\", \"value\", value);\n        this.#s = value;\n    }\n\n    /**\n     *  The ``v`` value for a signature.\n     *\n     *  Since a given ``x`` value for ``r`` has two possible values for\n     *  its correspondin ``y``, the ``v`` indicates which of the two ``y``\n     *  values to use.\n     *\n     *  It is normalized to the values ``27`` or ``28`` for legacy\n     *  purposes.\n     */\n    get v(): 27 | 28 { return this.#v; }\n    set v(value: BigNumberish) {\n        const v = getNumber(value, \"value\");\n        assertArgument(v === 27 || v === 28, \"invalid v\", \"v\", value);\n        this.#v = v;\n    }\n\n    /**\n     *  The EIP-155 ``v`` for legacy transactions. For non-legacy\n     *  transactions, this value is ``null``.\n     */\n    get networkV(): null | bigint { return this.#networkV; }\n\n    /**\n     *  The chain ID for EIP-155 legacy transactions. For non-legacy\n     *  transactions, this value is ``null``.\n     */\n    get legacyChainId(): null | bigint {\n        const v = this.networkV;\n        if (v == null) { return null; }\n        return Signature.getChainId(v);\n    }\n\n    /**\n     *  The ``yParity`` for the signature.\n     *\n     *  See ``v`` for more details on how this value is used.\n     */\n    get yParity(): 0 | 1 {\n        return (this.v === 27) ? 0: 1;\n    }\n\n    /**\n     *  The [[link-eip-2098]] compact representation of the ``yParity``\n     *  and ``s`` compacted into a single ``bytes32``.\n     */\n    get yParityAndS(): string {\n        // The EIP-2098 compact representation\n        const yParityAndS = getBytes(this.s);\n        if (this.yParity) { yParityAndS[0] |= 0x80; }\n        return hexlify(yParityAndS);\n    }\n\n    /**\n     *  The [[link-eip-2098]] compact representation.\n     */\n    get compactSerialized(): string {\n        return concat([ this.r, this.yParityAndS ]);\n    }\n\n    /**\n     *  The serialized representation.\n     */\n    get serialized(): string {\n        return concat([ this.r, this.s, (this.yParity ? \"0x1c\": \"0x1b\") ]);\n    }\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, r: string, s: string, v: 27 | 28) {\n        assertPrivate(guard, _guard, \"Signature\");\n        this.#r = r;\n        this.#s = s;\n        this.#v = v;\n        this.#networkV = null;\n    }\n\n    [Symbol.for('nodejs.util.inspect.custom')](): string {\n        return `Signature { r: \"${ this.r }\", s: \"${ this.s }\", yParity: ${ this.yParity }, networkV: ${ this.networkV } }`;\n    }\n\n    /**\n     *  Returns a new identical [[Signature]].\n     */\n    clone(): Signature {\n        const clone = new Signature(_guard, this.r, this.s, this.v);\n        if (this.networkV) { clone.#networkV = this.networkV; }\n        return clone;\n    }\n\n    /**\n     *  Returns a representation that is compatible with ``JSON.stringify``.\n     */\n    toJSON(): any {\n        const networkV = this.networkV;\n        return {\n            _type: \"signature\",\n            networkV: ((networkV != null) ? networkV.toString(): null),\n            r: this.r, s: this.s, v: this.v,\n        };\n    }\n\n    /**\n     *  Compute the chain ID from the ``v`` in a legacy EIP-155 transactions.\n     *\n     *  @example:\n     *    Signature.getChainId(45)\n     *    //_result:\n     *\n     *    Signature.getChainId(46)\n     *    //_result:\n     */\n    static getChainId(v: BigNumberish): bigint {\n        const bv = getBigInt(v, \"v\");\n\n        // The v is not an EIP-155 v, so it is the unspecified chain ID\n        if ((bv == BN_27) || (bv == BN_28)) { return BN_0; }\n\n        // Bad value for an EIP-155 v\n        assertArgument(bv >= BN_35, \"invalid EIP-155 v\", \"v\", v);\n\n        return (bv - BN_35) / BN_2;\n    }\n\n    /**\n     *  Compute the ``v`` for a chain ID for a legacy EIP-155 transactions.\n     *\n     *  Legacy transactions which use [[link-eip-155]] hijack the ``v``\n     *  property to include the chain ID.\n     *\n     *  @example:\n     *    Signature.getChainIdV(5, 27)\n     *    //_result:\n     *\n     *    Signature.getChainIdV(5, 28)\n     *    //_result:\n     *\n     */\n    static getChainIdV(chainId: BigNumberish, v: 27 | 28): bigint {\n        return (getBigInt(chainId) * BN_2) + BigInt(35 + v - 27);\n    }\n\n    /**\n     *  Compute the normalized legacy transaction ``v`` from a ``yParirty``,\n     *  a legacy transaction ``v`` or a legacy [[link-eip-155]] transaction.\n     *\n     *  @example:\n     *    // The values 0 and 1 imply v is actually yParity\n     *    Signature.getNormalizedV(0)\n     *    //_result:\n     *\n     *    // Legacy non-EIP-1559 transaction (i.e. 27 or 28)\n     *    Signature.getNormalizedV(27)\n     *    //_result:\n     *\n     *    // Legacy EIP-155 transaction (i.e. >= 35)\n     *    Signature.getNormalizedV(46)\n     *    //_result:\n     *\n     *    // Invalid values throw\n     *    Signature.getNormalizedV(5)\n     *    //_error:\n     */\n    static getNormalizedV(v: BigNumberish): 27 | 28 {\n        const bv = getBigInt(v);\n\n        if (bv === BN_0 || bv === BN_27) { return 27; }\n        if (bv === BN_1 || bv === BN_28) { return 28; }\n\n        assertArgument(bv >= BN_35, \"invalid v\", \"v\", v);\n\n        // Otherwise, EIP-155 v means odd is 27 and even is 28\n        return (bv & BN_1) ? 27: 28;\n    }\n\n    /**\n     *  Creates a new [[Signature]].\n     *\n     *  If no %%sig%% is provided, a new [[Signature]] is created\n     *  with default values.\n     *\n     *  If %%sig%% is a string, it is parsed.\n     */\n    static from(sig?: SignatureLike): Signature {\n        function assertError(check: unknown, message: string): asserts check {\n            assertArgument(check, message, \"signature\", sig);\n        };\n\n        if (sig == null) {\n            return new Signature(_guard, ZeroHash, ZeroHash, 27);\n        }\n\n        if (typeof(sig) === \"string\") {\n            const bytes = getBytes(sig, \"signature\");\n            if (bytes.length === 64) {\n                const r = hexlify(bytes.slice(0, 32));\n                const s = bytes.slice(32, 64);\n                const v = (s[0] & 0x80) ? 28: 27;\n                s[0] &= 0x7f;\n                return new Signature(_guard, r, hexlify(s), v);\n            }\n\n            if (bytes.length === 65) {\n                const r = hexlify(bytes.slice(0, 32));\n                const s = bytes.slice(32, 64);\n                assertError((s[0] & 0x80) === 0, \"non-canonical s\");\n                const v = Signature.getNormalizedV(bytes[64]);\n                return new Signature(_guard, r, hexlify(s), v);\n            }\n\n            assertError(false, \"invalid raw signature length\");\n        }\n\n        if (sig instanceof Signature) { return sig.clone(); }\n\n        // Get r\n        const _r = sig.r;\n        assertError(_r != null, \"missing r\");\n        const r = toUint256(_r);\n\n        // Get s; by any means necessary (we check consistency below)\n        const s = (function(s?: string, yParityAndS?: string) {\n            if (s != null) { return toUint256(s); }\n\n            if (yParityAndS != null) {\n                assertError(isHexString(yParityAndS, 32), \"invalid yParityAndS\");\n                const bytes = getBytes(yParityAndS);\n                bytes[0] &= 0x7f;\n                return hexlify(bytes);\n            }\n\n            assertError(false, \"missing s\");\n        })(sig.s, sig.yParityAndS);\n        assertError((getBytes(s)[0] & 0x80) == 0, \"non-canonical s\");\n\n        // Get v; by any means necessary (we check consistency below)\n        const { networkV, v } = (function(_v?: BigNumberish, yParityAndS?: string, yParity?: Numeric): { networkV?: bigint, v: 27 | 28 } {\n            if (_v != null) {\n                const v = getBigInt(_v);\n                return {\n                    networkV: ((v >= BN_35) ? v: undefined),\n                    v: Signature.getNormalizedV(v)\n                };\n            }\n\n            if (yParityAndS != null) {\n                assertError(isHexString(yParityAndS, 32), \"invalid yParityAndS\");\n                return { v: ((getBytes(yParityAndS)[0] & 0x80) ? 28: 27) };\n            }\n\n            if (yParity != null) {\n                switch (getNumber(yParity, \"sig.yParity\")) {\n                    case 0: return { v: 27 };\n                    case 1: return { v: 28 };\n                }\n                assertError(false, \"invalid yParity\");\n            }\n\n            assertError(false, \"missing v\");\n        })(sig.v, sig.yParityAndS, sig.yParity);\n\n        const result = new Signature(_guard, r, s, v);\n        if (networkV) { result.#networkV =  networkV; }\n\n        // If multiple of v, yParity, yParityAndS we given, check they match\n        assertError(sig.yParity == null || getNumber(sig.yParity, \"sig.yParity\") === result.yParity, \"yParity mismatch\");\n        assertError(sig.yParityAndS == null || sig.yParityAndS === result.yParityAndS, \"yParityAndS mismatch\");\n\n        return result;\n    }\n}\n\n", "/**\n *  Add details about signing here.\n *\n *  @_subsection: api/crypto:Signing  [about-signing]\n */\n\nimport { secp256k1 } from \"@noble/curves/secp256k1\";\n\nimport {\n    concat, dataLength, getBytes, getBytesCopy, hexlify, toBeHex,\n    assertArgument\n} from \"../utils/index.js\";\n\nimport { Signature } from \"./signature.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\nimport type { SignatureLike } from \"./index.js\";\n\n\n/**\n *  A **SigningKey** provides high-level access to the elliptic curve\n *  cryptography (ECC) operations and key management.\n */\nexport class SigningKey {\n    #privateKey: string;\n\n    /**\n     *  Creates a new **SigningKey** for %%privateKey%%.\n     */\n    constructor(privateKey: BytesLike) {\n        assertArgument(dataLength(privateKey) === 32, \"invalid private key\", \"privateKey\", \"[REDACTED]\");\n        this.#privateKey = hexlify(privateKey);\n    }\n\n    /**\n     *  The private key.\n     */\n    get privateKey(): string { return this.#privateKey; }\n\n    /**\n     *  The uncompressed public key.\n     *\n     * This will always begin with the prefix ``0x04`` and be 132\n     * characters long (the ``0x`` prefix and 130 hexadecimal nibbles).\n     */\n    get publicKey(): string { return SigningKey.computePublicKey(this.#privateKey); }\n\n    /**\n     *  The compressed public key.\n     *\n     *  This will always begin with either the prefix ``0x02`` or ``0x03``\n     *  and be 68 characters long (the ``0x`` prefix and 33 hexadecimal\n     *  nibbles)\n     */\n    get compressedPublicKey(): string { return SigningKey.computePublicKey(this.#privateKey, true); }\n\n    /**\n     *  Return the signature of the signed %%digest%%.\n     */\n    sign(digest: BytesLike): Signature {\n        assertArgument(dataLength(digest) === 32, \"invalid digest length\", \"digest\", digest);\n\n        const sig = secp256k1.sign(getBytesCopy(digest), getBytesCopy(this.#privateKey), {\n            lowS: true\n        });\n\n        return Signature.from({\n            r: toBeHex(sig.r, 32),\n            s: toBeHex(sig.s, 32),\n            v: (sig.recovery ? 0x1c: 0x1b)\n        });\n    }\n\n    /**\n     *  Returns the [[link-wiki-ecdh]] shared secret between this\n     *  private key and the %%other%% key.\n     *\n     *  The %%other%% key may be any type of key, a raw public key,\n     *  a compressed/uncompressed pubic key or aprivate key.\n     *\n     *  Best practice is usually to use a cryptographic hash on the\n     *  returned value before using it as a symetric secret.\n     *\n     *  @example:\n     *    sign1 = new SigningKey(id(\"some-secret-1\"))\n     *    sign2 = new SigningKey(id(\"some-secret-2\"))\n     *\n     *    // Notice that privA.computeSharedSecret(pubB)...\n     *    sign1.computeSharedSecret(sign2.publicKey)\n     *    //_result:\n     *\n     *    // ...is equal to privB.computeSharedSecret(pubA).\n     *    sign2.computeSharedSecret(sign1.publicKey)\n     *    //_result:\n     */\n    computeSharedSecret(other: BytesLike): string {\n        const pubKey = SigningKey.computePublicKey(other);\n        return hexlify(secp256k1.getSharedSecret(getBytesCopy(this.#privateKey), getBytes(pubKey), false));\n    }\n\n    /**\n     *  Compute the public key for %%key%%, optionally %%compressed%%.\n     *\n     *  The %%key%% may be any type of key, a raw public key, a\n     *  compressed/uncompressed public key or private key.\n     *\n     *  @example:\n     *    sign = new SigningKey(id(\"some-secret\"));\n     *\n     *    // Compute the uncompressed public key for a private key\n     *    SigningKey.computePublicKey(sign.privateKey)\n     *    //_result:\n     *\n     *    // Compute the compressed public key for a private key\n     *    SigningKey.computePublicKey(sign.privateKey, true)\n     *    //_result:\n     *\n     *    // Compute the uncompressed public key\n     *    SigningKey.computePublicKey(sign.publicKey, false);\n     *    //_result:\n     *\n     *    // Compute the Compressed a public key\n     *    SigningKey.computePublicKey(sign.publicKey, true);\n     *    //_result:\n     */\n    static computePublicKey(key: BytesLike, compressed?: boolean): string {\n        let bytes = getBytes(key, \"key\");\n\n        // private key\n        if (bytes.length === 32) {\n            const pubKey = secp256k1.getPublicKey(bytes, !!compressed);\n            return hexlify(pubKey);\n        }\n\n        // raw public key; use uncompressed key with 0x04 prefix\n        if (bytes.length === 64) {\n            const pub = new Uint8Array(65);\n            pub[0] = 0x04;\n            pub.set(bytes, 1);\n            bytes = pub;\n        }\n\n        const point = secp256k1.ProjectivePoint.fromHex(bytes);\n        return hexlify(point.toRawBytes(compressed));\n    }\n\n    /**\n     *  Returns the public key for the private key which produced the\n     *  %%signature%% for the given %%digest%%.\n     *\n     *  @example:\n     *    key = new SigningKey(id(\"some-secret\"))\n     *    digest = id(\"hello world\")\n     *    sig = key.sign(digest)\n     *\n     *    // Notice the signer public key...\n     *    key.publicKey\n     *    //_result:\n     *\n     *    // ...is equal to the recovered public key\n     *    SigningKey.recoverPublicKey(digest, sig)\n     *    //_result:\n     *\n     */\n    static recoverPublicKey(digest: BytesLike, signature: SignatureLike): string {\n        assertArgument(dataLength(digest) === 32, \"invalid digest length\", \"digest\", digest);\n\n        const sig = Signature.from(signature);\n\n        let secpSig = secp256k1.Signature.fromCompact(getBytesCopy(concat([ sig.r, sig.s ])));\n        secpSig = secpSig.addRecoveryBit(sig.yParity);\n\n        const pubKey = secpSig.recoverPublicKey(getBytesCopy(digest));\n        assertArgument(pubKey != null, \"invalid signautre for digest\", \"signature\", signature);\n\n        return \"0x\" + pubKey.toHex(false);\n    }\n\n    /**\n     *  Returns the point resulting from adding the ellipic curve points\n     *  %%p0%% and %%p1%%.\n     *\n     *  This is not a common function most developers should require, but\n     *  can be useful for certain privacy-specific techniques.\n     *\n     *  For example, it is used by [[HDNodeWallet]] to compute child\n     *  addresses from parent public keys and chain codes.\n     */\n    static addPoints(p0: BytesLike, p1: BytesLike, compressed?: boolean): string {\n        const pub0 = secp256k1.ProjectivePoint.fromHex(SigningKey.computePublicKey(p0).substring(2));\n        const pub1 = secp256k1.ProjectivePoint.fromHex(SigningKey.computePublicKey(p1).substring(2));\n        return \"0x\" + pub0.add(pub1).toHex(!!compressed)\n    }\n}\n\n", "import { keccak256 } from \"../crypto/index.js\";\nimport { getBytes, assertArgument } from \"../utils/index.js\";\n\n\nconst BN_0 = BigInt(0);\nconst BN_36 = BigInt(36);\n\nfunction getChecksumAddress(address: string): string {\n//    if (!isHexString(address, 20)) {\n//        logger.throwArgumentError(\"invalid address\", \"address\", address);\n//    }\n\n    address = address.toLowerCase();\n\n    const chars = address.substring(2).split(\"\");\n\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n\n    const hashed = getBytes(keccak256(expanded));\n\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n\n    return \"0x\" + chars.join(\"\");\n}\n\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n\n// Create lookup table\nconst ibanLookup: { [character: string]: string } = { };\nfor (let i = 0; i < 10; i++) { ibanLookup[String(i)] = String(i); }\nfor (let i = 0; i < 26; i++) { ibanLookup[String.fromCharCode(65 + i)] = String(10 + i); }\n\n// How many decimal digits can we process? (for 64-bit float, this is 15)\n// i.e. Math.floor(Math.log10(Number.MAX_SAFE_INTEGER));\nconst safeDigits = 15;\n\nfunction ibanChecksum(address: string): string {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits){\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) { checksum = \"0\" + checksum; }\n\n    return checksum;\n};\n\nconst Base36 = (function() {;\n    const result: Record<string, bigint> = { };\n    for (let i = 0; i < 36; i++) {\n        const key = \"0123456789abcdefghijklmnopqrstuvwxyz\"[i];\n        result[key] = BigInt(i);\n    }\n    return result;\n})();\n\nfunction fromBase36(value: string): bigint {\n    value = value.toLowerCase();\n\n    let result = BN_0;\n    for (let i = 0; i < value.length; i++) {\n        result = result * BN_36 + Base36[value[i]];\n    }\n    return result;\n}\n\n/**\n *  Returns a normalized and checksumed address for %%address%%.\n *  This accepts non-checksum addresses, checksum addresses and\n *  [[getIcapAddress]] formats.\n *\n *  The checksum in Ethereum uses the capitalization (upper-case\n *  vs lower-case) of the characters within an address to encode\n *  its checksum, which offers, on average, a checksum of 15-bits.\n *\n *  If %%address%% contains both upper-case and lower-case, it is\n *  assumed to already be a checksum address and its checksum is\n *  validated, and if the address fails its expected checksum an\n *  error is thrown.\n *\n *  If you wish the checksum of %%address%% to be ignore, it should\n *  be converted to lower-case (i.e. ``.toLowercase()``) before\n *  being passed in. This should be a very rare situation though,\n *  that you wish to bypass the safegaurds in place to protect\n *  against an address that has been incorrectly copied from another\n *  source.\n *\n *  @example:\n *    // Adds the checksum (via upper-casing specific letters)\n *    getAddress(\"0x8ba1f109551bd432803012645ac136ddd64dba72\")\n *    //_result:\n *\n *    // Converts ICAP address and adds checksum\n *    getAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\");\n *    //_result:\n *\n *    // Throws an error if an address contains mixed case,\n *    // but the checksum fails\n *    getAddress(\"0x8Ba1f109551bD432803012645Ac136ddd64DBA72\")\n *    //_error:\n */\nexport function getAddress(address: string): string {\n\n    assertArgument(typeof(address) === \"string\", \"invalid address\", \"address\", address);\n\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n\n        // Missing the 0x prefix\n        if (!address.startsWith(\"0x\")) { address = \"0x\" + address; }\n\n        const result = getChecksumAddress(address);\n\n        // It is a checksummed address with a bad checksum\n        assertArgument(!address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) || result === address,\n            \"bad address checksum\", \"address\", address);\n\n        return result;\n    }\n\n    // Maybe ICAP? (we only support direct mode)\n    if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        // It is an ICAP address with a bad checksum\n        assertArgument(address.substring(2, 4) === ibanChecksum(address), \"bad icap checksum\", \"address\", address);\n\n        let result = fromBase36(address.substring(4)).toString(16);\n        while (result.length < 40) { result = \"0\" + result; }\n        return  getChecksumAddress(\"0x\" + result);\n    }\n\n    assertArgument(false, \"invalid address\", \"address\", address);\n}\n\n/**\n *  The [ICAP Address format](link-icap) format is an early checksum\n *  format which attempts to be compatible with the banking\n *  industry [IBAN format](link-wiki-iban) for bank accounts.\n *\n *  It is no longer common or a recommended format.\n *\n *  @example:\n *    getIcapAddress(\"0x8ba1f109551bd432803012645ac136ddd64dba72\");\n *    //_result:\n *\n *    getIcapAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\");\n *    //_result:\n *\n *    // Throws an error if the ICAP checksum is wrong\n *    getIcapAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK37\");\n *    //_error:\n */\nexport function getIcapAddress(address: string): string {\n    //let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    let base36 = BigInt(getAddress(address)).toString(36).toUpperCase();\n    while (base36.length < 30) { base36 = \"0\" + base36; }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n", "import { assert, assertArgument } from \"../utils/index.js\";\n\nimport { getAddress } from \"./address.js\";\n\nimport type { Addressable, AddressLike, NameResolver } from \"./index.js\";\n\n\n/**\n *  Returns true if %%value%% is an object which implements the\n *  [[Addressable]] interface.\n *\n *  @example:\n *    // Wallets and AbstractSigner sub-classes\n *    isAddressable(Wallet.createRandom())\n *    //_result:\n *\n *    // Contracts\n *    contract = new Contract(\"dai.tokens.ethers.eth\", [ ], provider)\n *    isAddressable(contract)\n *    //_result:\n */\nexport function isAddressable(value: any): value is Addressable {\n    return (value && typeof(value.getAddress) === \"function\");\n}\n\n/**\n *  Returns true if %%value%% is a valid address.\n *\n *  @example:\n *    // Valid address\n *    isAddress(\"0x8ba1f109551bD432803012645Ac136ddd64DBA72\")\n *    //_result:\n *\n *    // Valid ICAP address\n *    isAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\")\n *    //_result:\n *\n *    // Invalid checksum\n *    isAddress(\"0x8Ba1f109551bD432803012645Ac136ddd64DBa72\")\n *    //_result:\n *\n *    // Invalid ICAP checksum\n *    isAddress(\"0x8Ba1f109551bD432803012645Ac136ddd64DBA72\")\n *    //_result:\n *\n *    // Not an address (an ENS name requires a provided and an\n *    // asynchronous API to access)\n *    isAddress(\"ricmoo.eth\")\n *    //_result:\n */\nexport function isAddress(value: any): value is string {\n    try {\n        getAddress(value);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nasync function checkAddress(target: any, promise: Promise<null | string>): Promise<string> {\n    const result = await promise;\n    if (result == null || result === \"0x0000000000000000000000000000000000000000\") {\n        assert(typeof(target) !== \"string\", \"unconfigured name\", \"UNCONFIGURED_NAME\", { value: target });\n        assertArgument(false, \"invalid AddressLike value; did not resolve to a value address\", \"target\", target);\n    }\n    return getAddress(result);\n}\n\n/**\n *  Resolves to an address for the %%target%%, which may be any\n *  supported address type, an [[Addressable]] or a Promise which\n *  resolves to an address.\n *\n *  If an ENS name is provided, but that name has not been correctly\n *  configured a [[UnconfiguredNameError]] is thrown.\n *\n *  @example:\n *    addr = \"0x6B175474E89094C44Da98b954EedeAC495271d0F\"\n *\n *    // Addresses are return synchronously\n *    resolveAddress(addr, provider)\n *    //_result:\n *\n *    // Address promises are resolved asynchronously\n *    resolveAddress(Promise.resolve(addr))\n *    //_result:\n *\n *    // ENS names are resolved asynchronously\n *    resolveAddress(\"dai.tokens.ethers.eth\", provider)\n *    //_result:\n *\n *    // Addressable objects are resolved asynchronously\n *    contract = new Contract(addr, [ ])\n *    resolveAddress(contract, provider)\n *    //_result:\n *\n *    // Unconfigured ENS names reject\n *    resolveAddress(\"nothing-here.ricmoo.eth\", provider)\n *    //_error:\n *\n *    // ENS names require a NameResolver object passed in\n *    // (notice the provider was omitted)\n *    resolveAddress(\"nothing-here.ricmoo.eth\")\n *    //_error:\n */\nexport function resolveAddress(target: AddressLike, resolver?: null | NameResolver): string | Promise<string> {\n\n    if (typeof(target) === \"string\") {\n        if (target.match(/^0x[0-9a-f]{40}$/i)) { return getAddress(target); }\n\n        assert(resolver != null, \"ENS resolution requires a provider\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"resolveName\" });\n\n        return checkAddress(target, resolver.resolveName(target));\n\n    } else if (isAddressable(target)) {\n        return checkAddress(target, target.getAddress());\n\n    } else if (target && typeof(target.then) === \"function\") {\n        return checkAddress(target, target);\n    }\n\n    assertArgument(false, \"unsupported addressable value\", \"target\", target);\n}\n", "/**\n *  A Typed object allows a value to have its type explicitly\n *  specified.\n *\n *  For example, in Solidity, the value ``45`` could represent a\n *  ``uint8`` or a ``uint256``. The value ``0x1234`` could represent\n *  a ``bytes2`` or ``bytes``.\n *\n *  Since JavaScript has no meaningful way to explicitly inform any\n *  APIs which what the type is, this allows transparent interoperation\n *  with Soldity.\n *\n *  @_subsection: api/abi:Typed Values\n */\n\nimport { assertPrivate, defineProperties } from \"../utils/index.js\";\n\nimport type { Addressable } from \"../address/index.js\";\nimport type { BigNumberish, BytesLike } from \"../utils/index.js\";\n\nimport type { Result } from \"./coders/abstract-coder.js\";\n\nconst _gaurd = { };\n\nfunction n(value: BigNumberish, width: number): Typed {\n    let signed = false;\n    if (width < 0) {\n        signed = true;\n        width *= -1;\n    }\n\n    // @TODO: Check range is valid for value\n    return new Typed(_gaurd, `${ signed ? \"\": \"u\" }int${ width }`, value, { signed, width });\n}\n\nfunction b(value: BytesLike, size?: number): Typed {\n    // @TODO: Check range is valid for value\n    return new Typed(_gaurd, `bytes${ (size) ? size: \"\" }`, value, { size });\n}\n\n// @TODO: Remove this in v7, it was replaced by TypedBigInt\n/**\n *  @_ignore:\n */\nexport interface TypedNumber extends Typed {\n    value: number;\n    defaultValue(): number;\n    minValue(): number;\n    maxValue(): number;\n}\n\n/**\n *  A **Typed** that represents a numeric value.\n */\nexport interface TypedBigInt extends Typed {\n    /**\n     *  The value.\n     */\n    value: bigint;\n\n    /**\n     *  The default value for all numeric types is ``0``.\n     */\n    defaultValue(): bigint;\n\n    /**\n     *  The minimum value for this type, accounting for bit-width and signed-ness.\n     */\n    minValue(): bigint;\n\n    /**\n     *  The minimum value for this type, accounting for bit-width.\n     */\n    maxValue(): bigint;\n}\n\n/**\n *  A **Typed** that represents a binary sequence of data as bytes.\n */\nexport interface TypedData extends Typed {\n    /**\n     *  The value.\n     */\n    value: string;\n\n    /**\n     *  The default value for this type.\n     */\n    defaultValue(): string;\n}\n\n/**\n *  A **Typed** that represents a UTF-8 sequence of bytes.\n */\nexport interface TypedString extends Typed {\n    /**\n     *  The value.\n     */\n    value: string;\n\n    /**\n     *  The default value for the string type is the empty string (i.e. ``\"\"``).\n     */\n    defaultValue(): string;\n}\n\nconst _typedSymbol = Symbol.for(\"_ethers_typed\");\n\n/**\n *  The **Typed** class to wrap values providing explicit type information.\n */\nexport class Typed {\n\n    /**\n     *  The type, as a Solidity-compatible type.\n     */\n    readonly type!: string;\n\n    /**\n     *  The actual value.\n     */\n    readonly value!: any;\n\n    readonly #options: any;\n\n    /**\n     *  @_ignore:\n     */\n    readonly _typedSymbol!: Symbol;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(gaurd: any, type: string, value: any, options?: any) {\n        if (options == null) { options = null; }\n        assertPrivate(_gaurd, gaurd, \"Typed\");\n        defineProperties<Typed>(this, { _typedSymbol, type, value });\n        this.#options = options;\n\n        // Check the value is valid\n        this.format();\n    }\n\n    /**\n     *  Format the type as a Human-Readable type.\n     */\n    format(): string {\n        if (this.type === \"array\") {\n            throw new Error(\"\");\n        } else if (this.type === \"dynamicArray\") {\n            throw new Error(\"\");\n        } else if (this.type === \"tuple\") {\n            return `tuple(${ this.value.map((v: Typed) => v.format()).join(\",\") })`\n        }\n\n        return this.type;\n    }\n\n    /**\n     *  The default value returned by this type.\n     */\n    defaultValue(): string | number | bigint | Result {\n        return 0;\n    }\n\n    /**\n     *  The minimum value for numeric types.\n     */\n    minValue(): string | number | bigint {\n        return 0;\n    }\n\n    /**\n     *  The maximum value for numeric types.\n     */\n    maxValue(): string | number | bigint {\n        return 0;\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard is this is a [[TypedBigInt]].\n     */\n    isBigInt(): this is TypedBigInt {\n        return !!(this.type.match(/^u?int[0-9]+$/));\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard is this is a [[TypedData]].\n     */\n    isData(): this is TypedData {\n        return this.type.startsWith(\"bytes\");\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard is this is a [[TypedString]].\n     */\n    isString(): this is TypedString {\n        return (this.type === \"string\");\n    }\n\n    /**\n     *  Returns the tuple name, if this is a tuple. Throws otherwise.\n     */\n    get tupleName(): null | string {\n        if (this.type !== \"tuple\") { throw TypeError(\"not a tuple\"); }\n        return this.#options;\n    }\n\n    // Returns the length of this type as an array\n    // - `null` indicates the length is unforced, it could be dynamic\n    // - `-1` indicates the length is dynamic\n    // - any other value indicates it is a static array and is its length\n\n    /**\n     *  Returns the length of the array type or ``-1`` if it is dynamic.\n     *\n     *  Throws if the type is not an array.\n     */\n    get arrayLength(): null | number {\n        if (this.type !== \"array\") { throw TypeError(\"not an array\"); }\n        if (this.#options === true) { return -1; }\n        if (this.#options === false) { return (<Array<any>>(this.value)).length; }\n        return null;\n    }\n\n    /**\n     *  Returns a new **Typed** of %%type%% with the %%value%%.\n     */\n    static from(type: string, value: any): Typed {\n        return new Typed(_gaurd, type, value);\n    }\n\n    /**\n     *  Return a new ``uint8`` type for %%v%%.\n     */\n    static uint8(v: BigNumberish): Typed { return n(v, 8); }\n\n    /**\n     *  Return a new ``uint16`` type for %%v%%.\n     */\n    static uint16(v: BigNumberish): Typed { return n(v, 16); }\n\n    /**\n     *  Return a new ``uint24`` type for %%v%%.\n     */\n    static uint24(v: BigNumberish): Typed { return n(v, 24); }\n\n    /**\n     *  Return a new ``uint32`` type for %%v%%.\n     */\n    static uint32(v: BigNumberish): Typed { return n(v, 32); }\n\n    /**\n     *  Return a new ``uint40`` type for %%v%%.\n     */\n    static uint40(v: BigNumberish): Typed { return n(v, 40); }\n\n    /**\n     *  Return a new ``uint48`` type for %%v%%.\n     */\n    static uint48(v: BigNumberish): Typed { return n(v, 48); }\n\n    /**\n     *  Return a new ``uint56`` type for %%v%%.\n     */\n    static uint56(v: BigNumberish): Typed { return n(v, 56); }\n\n    /**\n     *  Return a new ``uint64`` type for %%v%%.\n     */\n    static uint64(v: BigNumberish): Typed { return n(v, 64); }\n\n    /**\n     *  Return a new ``uint72`` type for %%v%%.\n     */\n    static uint72(v: BigNumberish): Typed { return n(v, 72); }\n\n    /**\n     *  Return a new ``uint80`` type for %%v%%.\n     */\n    static uint80(v: BigNumberish): Typed { return n(v, 80); }\n\n    /**\n     *  Return a new ``uint88`` type for %%v%%.\n     */\n    static uint88(v: BigNumberish): Typed { return n(v, 88); }\n\n    /**\n     *  Return a new ``uint96`` type for %%v%%.\n     */\n    static uint96(v: BigNumberish): Typed { return n(v, 96); }\n\n    /**\n     *  Return a new ``uint104`` type for %%v%%.\n     */\n    static uint104(v: BigNumberish): Typed { return n(v, 104); }\n\n    /**\n     *  Return a new ``uint112`` type for %%v%%.\n     */\n    static uint112(v: BigNumberish): Typed { return n(v, 112); }\n\n    /**\n     *  Return a new ``uint120`` type for %%v%%.\n     */\n    static uint120(v: BigNumberish): Typed { return n(v, 120); }\n\n    /**\n     *  Return a new ``uint128`` type for %%v%%.\n     */\n    static uint128(v: BigNumberish): Typed { return n(v, 128); }\n\n    /**\n     *  Return a new ``uint136`` type for %%v%%.\n     */\n    static uint136(v: BigNumberish): Typed { return n(v, 136); }\n\n    /**\n     *  Return a new ``uint144`` type for %%v%%.\n     */\n    static uint144(v: BigNumberish): Typed { return n(v, 144); }\n\n    /**\n     *  Return a new ``uint152`` type for %%v%%.\n     */\n    static uint152(v: BigNumberish): Typed { return n(v, 152); }\n\n    /**\n     *  Return a new ``uint160`` type for %%v%%.\n     */\n    static uint160(v: BigNumberish): Typed { return n(v, 160); }\n\n    /**\n     *  Return a new ``uint168`` type for %%v%%.\n     */\n    static uint168(v: BigNumberish): Typed { return n(v, 168); }\n\n    /**\n     *  Return a new ``uint176`` type for %%v%%.\n     */\n    static uint176(v: BigNumberish): Typed { return n(v, 176); }\n\n    /**\n     *  Return a new ``uint184`` type for %%v%%.\n     */\n    static uint184(v: BigNumberish): Typed { return n(v, 184); }\n\n    /**\n     *  Return a new ``uint192`` type for %%v%%.\n     */\n    static uint192(v: BigNumberish): Typed { return n(v, 192); }\n\n    /**\n     *  Return a new ``uint200`` type for %%v%%.\n     */\n    static uint200(v: BigNumberish): Typed { return n(v, 200); }\n\n    /**\n     *  Return a new ``uint208`` type for %%v%%.\n     */\n    static uint208(v: BigNumberish): Typed { return n(v, 208); }\n\n    /**\n     *  Return a new ``uint216`` type for %%v%%.\n     */\n    static uint216(v: BigNumberish): Typed { return n(v, 216); }\n\n    /**\n     *  Return a new ``uint224`` type for %%v%%.\n     */\n    static uint224(v: BigNumberish): Typed { return n(v, 224); }\n\n    /**\n     *  Return a new ``uint232`` type for %%v%%.\n     */\n    static uint232(v: BigNumberish): Typed { return n(v, 232); }\n\n    /**\n     *  Return a new ``uint240`` type for %%v%%.\n     */\n    static uint240(v: BigNumberish): Typed { return n(v, 240); }\n\n    /**\n     *  Return a new ``uint248`` type for %%v%%.\n     */\n    static uint248(v: BigNumberish): Typed { return n(v, 248); }\n\n    /**\n     *  Return a new ``uint256`` type for %%v%%.\n     */\n    static uint256(v: BigNumberish): Typed { return n(v, 256); }\n\n    /**\n     *  Return a new ``uint256`` type for %%v%%.\n     */\n    static uint(v: BigNumberish): Typed { return n(v, 256); }\n\n    /**\n     *  Return a new ``int8`` type for %%v%%.\n     */\n    static int8(v: BigNumberish): Typed { return n(v, -8); }\n\n    /**\n     *  Return a new ``int16`` type for %%v%%.\n     */\n    static int16(v: BigNumberish): Typed { return n(v, -16); }\n\n    /**\n     *  Return a new ``int24`` type for %%v%%.\n     */\n    static int24(v: BigNumberish): Typed { return n(v, -24); }\n\n    /**\n     *  Return a new ``int32`` type for %%v%%.\n     */\n    static int32(v: BigNumberish): Typed { return n(v, -32); }\n\n    /**\n     *  Return a new ``int40`` type for %%v%%.\n     */\n    static int40(v: BigNumberish): Typed { return n(v, -40); }\n\n    /**\n     *  Return a new ``int48`` type for %%v%%.\n     */\n    static int48(v: BigNumberish): Typed { return n(v, -48); }\n\n    /**\n     *  Return a new ``int56`` type for %%v%%.\n     */\n    static int56(v: BigNumberish): Typed { return n(v, -56); }\n\n    /**\n     *  Return a new ``int64`` type for %%v%%.\n     */\n    static int64(v: BigNumberish): Typed { return n(v, -64); }\n\n    /**\n     *  Return a new ``int72`` type for %%v%%.\n     */\n    static int72(v: BigNumberish): Typed { return n(v, -72); }\n\n    /**\n     *  Return a new ``int80`` type for %%v%%.\n     */\n    static int80(v: BigNumberish): Typed { return n(v, -80); }\n\n    /**\n     *  Return a new ``int88`` type for %%v%%.\n     */\n    static int88(v: BigNumberish): Typed { return n(v, -88); }\n\n    /**\n     *  Return a new ``int96`` type for %%v%%.\n     */\n    static int96(v: BigNumberish): Typed { return n(v, -96); }\n\n    /**\n     *  Return a new ``int104`` type for %%v%%.\n     */\n    static int104(v: BigNumberish): Typed { return n(v, -104); }\n\n    /**\n     *  Return a new ``int112`` type for %%v%%.\n     */\n    static int112(v: BigNumberish): Typed { return n(v, -112); }\n\n    /**\n     *  Return a new ``int120`` type for %%v%%.\n     */\n    static int120(v: BigNumberish): Typed { return n(v, -120); }\n\n    /**\n     *  Return a new ``int128`` type for %%v%%.\n     */\n    static int128(v: BigNumberish): Typed { return n(v, -128); }\n\n    /**\n     *  Return a new ``int136`` type for %%v%%.\n     */\n    static int136(v: BigNumberish): Typed { return n(v, -136); }\n\n    /**\n     *  Return a new ``int144`` type for %%v%%.\n     */\n    static int144(v: BigNumberish): Typed { return n(v, -144); }\n\n    /**\n     *  Return a new ``int52`` type for %%v%%.\n     */\n    static int152(v: BigNumberish): Typed { return n(v, -152); }\n\n    /**\n     *  Return a new ``int160`` type for %%v%%.\n     */\n    static int160(v: BigNumberish): Typed { return n(v, -160); }\n\n    /**\n     *  Return a new ``int168`` type for %%v%%.\n     */\n    static int168(v: BigNumberish): Typed { return n(v, -168); }\n\n    /**\n     *  Return a new ``int176`` type for %%v%%.\n     */\n    static int176(v: BigNumberish): Typed { return n(v, -176); }\n\n    /**\n     *  Return a new ``int184`` type for %%v%%.\n     */\n    static int184(v: BigNumberish): Typed { return n(v, -184); }\n\n    /**\n     *  Return a new ``int92`` type for %%v%%.\n     */\n    static int192(v: BigNumberish): Typed { return n(v, -192); }\n\n    /**\n     *  Return a new ``int200`` type for %%v%%.\n     */\n    static int200(v: BigNumberish): Typed { return n(v, -200); }\n\n    /**\n     *  Return a new ``int208`` type for %%v%%.\n     */\n    static int208(v: BigNumberish): Typed { return n(v, -208); }\n\n    /**\n     *  Return a new ``int216`` type for %%v%%.\n     */\n    static int216(v: BigNumberish): Typed { return n(v, -216); }\n\n    /**\n     *  Return a new ``int224`` type for %%v%%.\n     */\n    static int224(v: BigNumberish): Typed { return n(v, -224); }\n\n    /**\n     *  Return a new ``int232`` type for %%v%%.\n     */\n    static int232(v: BigNumberish): Typed { return n(v, -232); }\n\n    /**\n     *  Return a new ``int240`` type for %%v%%.\n     */\n    static int240(v: BigNumberish): Typed { return n(v, -240); }\n\n    /**\n     *  Return a new ``int248`` type for %%v%%.\n     */\n    static int248(v: BigNumberish): Typed { return n(v, -248); }\n\n    /**\n     *  Return a new ``int256`` type for %%v%%.\n     */\n    static int256(v: BigNumberish): Typed { return n(v, -256); }\n\n    /**\n     *  Return a new ``int256`` type for %%v%%.\n     */\n    static int(v: BigNumberish): Typed { return n(v, -256); }\n\n    /**\n     *  Return a new ``bytes1`` type for %%v%%.\n     */\n    static bytes1(v: BytesLike): Typed { return b(v, 1); }\n\n    /**\n     *  Return a new ``bytes2`` type for %%v%%.\n     */\n    static bytes2(v: BytesLike): Typed { return b(v, 2); }\n\n    /**\n     *  Return a new ``bytes3`` type for %%v%%.\n     */\n    static bytes3(v: BytesLike): Typed { return b(v, 3); }\n\n    /**\n     *  Return a new ``bytes4`` type for %%v%%.\n     */\n    static bytes4(v: BytesLike): Typed { return b(v, 4); }\n\n    /**\n     *  Return a new ``bytes5`` type for %%v%%.\n     */\n    static bytes5(v: BytesLike): Typed { return b(v, 5); }\n\n    /**\n     *  Return a new ``bytes6`` type for %%v%%.\n     */\n    static bytes6(v: BytesLike): Typed { return b(v, 6); }\n\n    /**\n     *  Return a new ``bytes7`` type for %%v%%.\n     */\n    static bytes7(v: BytesLike): Typed { return b(v, 7); }\n\n    /**\n     *  Return a new ``bytes8`` type for %%v%%.\n     */\n    static bytes8(v: BytesLike): Typed { return b(v, 8); }\n\n    /**\n     *  Return a new ``bytes9`` type for %%v%%.\n     */\n    static bytes9(v: BytesLike): Typed { return b(v, 9); }\n\n    /**\n     *  Return a new ``bytes10`` type for %%v%%.\n     */\n    static bytes10(v: BytesLike): Typed { return b(v, 10); }\n\n    /**\n     *  Return a new ``bytes11`` type for %%v%%.\n     */\n    static bytes11(v: BytesLike): Typed { return b(v, 11); }\n\n    /**\n     *  Return a new ``bytes12`` type for %%v%%.\n     */\n    static bytes12(v: BytesLike): Typed { return b(v, 12); }\n\n    /**\n     *  Return a new ``bytes13`` type for %%v%%.\n     */\n    static bytes13(v: BytesLike): Typed { return b(v, 13); }\n\n    /**\n     *  Return a new ``bytes14`` type for %%v%%.\n     */\n    static bytes14(v: BytesLike): Typed { return b(v, 14); }\n\n    /**\n     *  Return a new ``bytes15`` type for %%v%%.\n     */\n    static bytes15(v: BytesLike): Typed { return b(v, 15); }\n\n    /**\n     *  Return a new ``bytes16`` type for %%v%%.\n     */\n    static bytes16(v: BytesLike): Typed { return b(v, 16); }\n\n    /**\n     *  Return a new ``bytes17`` type for %%v%%.\n     */\n    static bytes17(v: BytesLike): Typed { return b(v, 17); }\n\n    /**\n     *  Return a new ``bytes18`` type for %%v%%.\n     */\n    static bytes18(v: BytesLike): Typed { return b(v, 18); }\n\n    /**\n     *  Return a new ``bytes19`` type for %%v%%.\n     */\n    static bytes19(v: BytesLike): Typed { return b(v, 19); }\n\n    /**\n     *  Return a new ``bytes20`` type for %%v%%.\n     */\n    static bytes20(v: BytesLike): Typed { return b(v, 20); }\n\n    /**\n     *  Return a new ``bytes21`` type for %%v%%.\n     */\n    static bytes21(v: BytesLike): Typed { return b(v, 21); }\n\n    /**\n     *  Return a new ``bytes22`` type for %%v%%.\n     */\n    static bytes22(v: BytesLike): Typed { return b(v, 22); }\n\n    /**\n     *  Return a new ``bytes23`` type for %%v%%.\n     */\n    static bytes23(v: BytesLike): Typed { return b(v, 23); }\n\n    /**\n     *  Return a new ``bytes24`` type for %%v%%.\n     */\n    static bytes24(v: BytesLike): Typed { return b(v, 24); }\n\n    /**\n     *  Return a new ``bytes25`` type for %%v%%.\n     */\n    static bytes25(v: BytesLike): Typed { return b(v, 25); }\n\n    /**\n     *  Return a new ``bytes26`` type for %%v%%.\n     */\n    static bytes26(v: BytesLike): Typed { return b(v, 26); }\n\n    /**\n     *  Return a new ``bytes27`` type for %%v%%.\n     */\n    static bytes27(v: BytesLike): Typed { return b(v, 27); }\n\n    /**\n     *  Return a new ``bytes28`` type for %%v%%.\n     */\n    static bytes28(v: BytesLike): Typed { return b(v, 28); }\n\n    /**\n     *  Return a new ``bytes29`` type for %%v%%.\n     */\n    static bytes29(v: BytesLike): Typed { return b(v, 29); }\n\n    /**\n     *  Return a new ``bytes30`` type for %%v%%.\n     */\n    static bytes30(v: BytesLike): Typed { return b(v, 30); }\n\n    /**\n     *  Return a new ``bytes31`` type for %%v%%.\n     */\n    static bytes31(v: BytesLike): Typed { return b(v, 31); }\n\n    /**\n     *  Return a new ``bytes32`` type for %%v%%.\n     */\n    static bytes32(v: BytesLike): Typed { return b(v, 32); }\n\n\n    /**\n     *  Return a new ``address`` type for %%v%%.\n     */\n    static address(v: string | Addressable): Typed { return new Typed(_gaurd, \"address\", v); }\n\n    /**\n     *  Return a new ``bool`` type for %%v%%.\n     */\n    static bool(v: any): Typed { return new Typed(_gaurd, \"bool\", !!v); }\n\n    /**\n     *  Return a new ``bytes`` type for %%v%%.\n     */\n    static bytes(v: BytesLike): Typed { return new Typed(_gaurd, \"bytes\", v); }\n\n    /**\n     *  Return a new ``string`` type for %%v%%.\n     */\n    static string(v: string): Typed { return new Typed(_gaurd, \"string\", v); }\n\n\n    /**\n     *  Return a new ``array`` type for %%v%%, allowing %%dynamic%% length.\n     */\n    static array(v: Array<any | Typed>, dynamic?: null | boolean): Typed {\n        throw new Error(\"not implemented yet\");\n        return new Typed(_gaurd, \"array\", v, dynamic);\n    }\n\n\n    /**\n     *  Return a new ``tuple`` type for %%v%%, with the optional %%name%%.\n     */\n    static tuple(v: Array<any | Typed> | Record<string, any | Typed>, name?: string): Typed {\n        throw new Error(\"not implemented yet\");\n        return new Typed(_gaurd, \"tuple\", v, name);\n    }\n\n\n    /**\n     *  Return a new ``uint8`` type for %%v%%.\n     */\n    static overrides(v: Record<string, any>): Typed {\n        return new Typed(_gaurd, \"overrides\", Object.assign({ }, v));\n    }\n\n    /**\n     *  Returns true only if %%value%% is a [[Typed]] instance.\n     */\n    static isTyped(value: any): value is Typed {\n        return (value\n            && typeof(value) === \"object\"\n            && \"_typedSymbol\" in value\n            && value._typedSymbol === _typedSymbol);\n    }\n\n    /**\n     *  If the value is a [[Typed]] instance, validates the underlying value\n     *  and returns it, otherwise returns value directly.\n     *\n     *  This is useful for functions that with to accept either a [[Typed]]\n     *  object or values.\n     */\n    static dereference<T>(value: Typed | T, type: string): T {\n        if (Typed.isTyped(value)) {\n            if (value.type !== type) {\n                throw new Error(`invalid type: expecetd ${ type }, got ${ value.type }`);\n            }\n            return value.value;\n        }\n        return value;\n    }\n}\n", "import { getAddress } from \"../../address/index.js\";\nimport { toBeHex } from \"../../utils/maths.js\";\n\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n\n/**\n *  @_ignore\n */\nexport class AddressCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"address\", \"address\", localName, false);\n    }\n\n    defaultValue(): string {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n\n    encode(writer: Writer, _value: string | Typed): number {\n        let value = Typed.dereference(_value, \"string\");\n        try {\n            value = getAddress(value);\n        } catch (error: any) {\n            return this._throwError(error.message, _value);\n        }\n        return writer.writeValue(value);\n    }\n\n    decode(reader: Reader): any {\n        return getAddress(toBeHex(reader.readValue(), 20));\n    }\n}\n", "import { Coder } from \"./abstract-coder.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n/**\n *  Clones the functionality of an existing Coder, but without a localName\n *\n *  @_ignore\n */\nexport class AnonymousCoder extends Coder {\n    private coder: Coder;\n\n    constructor(coder: Coder) {\n        super(coder.name, coder.type, \"_\", coder.dynamic);\n        this.coder = coder;\n    }\n\n    defaultValue(): any {\n        return this.coder.defaultValue();\n    }\n\n    encode(writer: Writer, value: any): number {\n        return this.coder.encode(writer, value);\n    }\n\n    decode(reader: Reader): any {\n        return this.coder.decode(reader);\n    }\n}\n", "import {\n    defineProperties, isError, assert, assertArgument, assertArgumentCount\n} from \"../../utils/index.js\";\n\nimport { Typed } from \"../typed.js\";\n\nimport { Coder, Result, WordSize, Writer } from \"./abstract-coder.js\";\nimport { AnonymousCoder } from \"./anonymous.js\";\n\nimport type { Reader } from \"./abstract-coder.js\";\n\n/**\n *  @_ignore\n */\nexport function pack(writer: Writer, coders: ReadonlyArray<Coder>, values: Array<any> | { [ name: string ]: any }): number {\n    let arrayValues: Array<any> = [ ];\n\n    if (Array.isArray(values)) {\n       arrayValues = values;\n\n    } else if (values && typeof(values) === \"object\") {\n        let unique: { [ name: string ]: boolean } = { };\n\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            assert(name, \"cannot encode object for signature with missing names\",\n                \"INVALID_ARGUMENT\", { argument: \"values\", info: { coder }, value: values });\n\n            assert(!unique[name], \"cannot encode object for signature with duplicate names\",\n                \"INVALID_ARGUMENT\", { argument: \"values\", info: { coder }, value: values });\n\n            unique[name] = true;\n\n            return values[name];\n        });\n\n    } else {\n        assertArgument(false, \"invalid tuple value\", \"tuple\", values);\n    }\n\n    assertArgument(coders.length === arrayValues.length, \"types/value length mismatch\", \"tuple\", values);\n\n    let staticWriter = new Writer();\n    let dynamicWriter = new Writer();\n\n    let updateFuncs: Array<(baseOffset: number) => void> = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset: number) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n\n        } else {\n            coder.encode(staticWriter, value);\n        }\n    });\n\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\n\n/**\n *  @_ignore\n */\nexport function unpack(reader: Reader, coders: ReadonlyArray<Coder>): Result {\n    let values: Array<any> = [];\n    let keys: Array<null | string> = [ ];\n\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n\n    coders.forEach((coder) => {\n        let value: any = null;\n\n        if (coder.dynamic) {\n            let offset = reader.readIndex();\n            let offsetReader = baseReader.subReader(offset);\n            try {\n                value = coder.decode(offsetReader);\n            } catch (error: any) {\n                // Cannot recover from this\n                if (isError(error, \"BUFFER_OVERRUN\")) {\n                    throw error;\n                }\n\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n\n        } else {\n            try {\n                value = coder.decode(reader);\n            } catch (error: any) {\n                // Cannot recover from this\n                if (isError(error, \"BUFFER_OVERRUN\")) {\n                    throw error;\n                }\n\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n\n        if (value == undefined) {\n            throw new Error(\"investigate\");\n        }\n\n        values.push(value);\n        keys.push(coder.localName || null);\n    });\n\n    return Result.fromItems(values, keys);\n}\n\n/**\n *  @_ignore\n */\nexport class ArrayCoder extends Coder {\n    readonly coder!: Coder;\n    readonly length!: number;\n\n    constructor(coder: Coder, length: number, localName: string) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length: \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n        defineProperties<ArrayCoder>(this, { coder, length });\n    }\n\n    defaultValue(): Array<any> {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n\n        const result: Array<any> = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n\n    encode(writer: Writer, _value: Array<any> | Typed): number {\n        const value = Typed.dereference(_value, \"array\");\n\n        if(!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n\n        let count = this.length;\n\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n\n        assertArgumentCount(value.length, count, \"coder array\" + (this.localName? (\" \"+ this.localName): \"\"));\n\n        let coders: Array<Coder> = [ ];\n        for (let i = 0; i < value.length; i++) { coders.push(this.coder); }\n\n        return pack(writer, coders, value);\n    }\n\n    decode(reader: Reader): any {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readIndex();\n\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            assert(count * WordSize <= reader.dataLength, \"insufficient data length\",\n                \"BUFFER_OVERRUN\", { buffer: reader.bytes, offset: count * WordSize, length: reader.dataLength });\n        }\n        let coders: Array<Coder> = [];\n        for (let i = 0; i < count; i++) { coders.push(new AnonymousCoder(this.coder)); }\n\n        return unpack(reader, coders);\n    }\n}\n\n", "import { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n/**\n *  @_ignore\n */\nexport class BooleanCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n\n    defaultValue(): boolean {\n        return false;\n    }\n\n    encode(writer: Writer, _value: boolean | Typed): number {\n        const value = Typed.dereference(_value, \"bool\");\n        return writer.writeValue(value ? 1: 0);\n    }\n\n    decode(reader: Reader): any {\n        return !!reader.readValue();\n    }\n}\n", "import { getBytesCopy, hexlify } from \"../../utils/index.js\";\n\nimport { Coder } from \"./abstract-coder.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n\n/**\n *  @_ignore\n */\nexport class DynamicBytesCoder extends Coder {\n    constructor(type: string, localName: string) {\n       super(type, type, localName, true);\n    }\n\n    defaultValue(): string {\n        return \"0x\";\n    }\n\n    encode(writer: Writer, value: any): number {\n        value = getBytesCopy(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n\n    decode(reader: Reader): any {\n        return reader.readBytes(reader.readIndex(), true);\n    }\n}\n\n/**\n *  @_ignore\n */\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName: string) {\n        super(\"bytes\", localName);\n    }\n\n    decode(reader: Reader): any {\n        return hexlify(super.decode(reader));\n    }\n}\n", "\nimport { defineProperties, getBytesCopy, hexlify } from \"../../utils/index.js\";\n\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n\nimport type { BytesLike } from \"../../utils/index.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n\n/**\n *  @_ignore\n */\nexport class FixedBytesCoder extends Coder {\n    readonly size!: number;\n\n    constructor(size: number, localName: string) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        defineProperties<FixedBytesCoder>(this, { size }, { size: \"number\" });\n    }\n\n    defaultValue(): string {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n\n    encode(writer: Writer, _value: BytesLike | Typed): number {\n        let data = getBytesCopy(Typed.dereference(_value, this.type));\n        if (data.length !== this.size) { this._throwError(\"incorrect data length\", _value); }\n        return writer.writeBytes(data);\n    }\n\n    decode(reader: Reader): any {\n        return hexlify(reader.readBytes(this.size));\n    }\n}\n", "import { Coder } from \"./abstract-coder.js\";\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\nconst Empty = new Uint8Array([ ]);\n\n/**\n *  @_ignore\n */\nexport class NullCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"null\", \"\", localName, false);\n    }\n\n    defaultValue(): null {\n        return null;\n    }\n\n    encode(writer: Writer, value: any): number {\n        if (value != null) { this._throwError(\"not null\", value); }\n        return writer.writeBytes(Empty);\n    }\n\n    decode(reader: Reader): any {\n        reader.readBytes(0);\n        return null;\n    }\n}\n", "import {\n    defineProperties, fromTwos, getBigInt, mask, toTwos\n} from \"../../utils/index.js\";\n\nimport { Typed } from \"../typed.js\";\nimport { Coder, WordSize } from \"./abstract-coder.js\";\n\nimport type { BigNumberish } from \"../../utils/index.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_MAX_UINT256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\n/**\n *  @_ignore\n */\nexport class NumberCoder extends Coder {\n    readonly size!: number;\n    readonly signed!: boolean;\n\n    constructor(size: number, signed: boolean, localName: string) {\n        const name = ((signed ? \"int\": \"uint\") + (size * 8));\n        super(name, name, localName, false);\n\n        defineProperties<NumberCoder>(this, { size, signed }, { size: \"number\", signed: \"boolean\" });\n    }\n\n    defaultValue(): number {\n        return 0;\n    }\n\n    encode(writer: Writer, _value: BigNumberish | Typed): number {\n        let value = getBigInt(Typed.dereference(_value, this.type));\n\n        // Check bounds are safe for encoding\n        let maxUintValue = mask(BN_MAX_UINT256, WordSize * 8);\n        if (this.signed) {\n            let bounds = mask(maxUintValue, (this.size * 8) - 1);\n            if (value > bounds || value < -(bounds + BN_1)) {\n                this._throwError(\"value out-of-bounds\", _value);\n            }\n            value = toTwos(value, 8 * WordSize);\n        } else if (value < BN_0 || value > mask(maxUintValue, this.size * 8)) {\n            this._throwError(\"value out-of-bounds\", _value);\n        }\n\n        return writer.writeValue(value);\n    }\n\n    decode(reader: Reader): any {\n        let value = mask(reader.readValue(), this.size * 8);\n\n        if (this.signed) {\n            value = fromTwos(value, this.size * 8);\n        }\n\n        return value;\n    }\n}\n\n", "import { toUtf8Bytes, toUtf8String } from \"../../utils/utf8.js\";\n\nimport { Typed } from \"../typed.js\";\nimport { DynamicBytesCoder } from \"./bytes.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n\n/**\n *  @_ignore\n */\nexport class StringCoder extends DynamicBytesCoder {\n\n    constructor(localName: string) {\n        super(\"string\", localName);\n    }\n\n    defaultValue(): string {\n        return \"\";\n    }\n\n    encode(writer: Writer, _value: string | Typed): number {\n        return super.encode(writer, toUtf8Bytes(Typed.dereference(_value, \"string\")));\n    }\n\n    decode(reader: Reader): any {\n        return toUtf8String(super.decode(reader));\n    }\n}\n", "import { defineProperties } from \"../../utils/properties.js\";\n\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n\nimport { pack, unpack } from \"./array.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n/**\n *  @_ignore\n */\nexport class TupleCoder extends Coder {\n    readonly coders!: ReadonlyArray<Coder>;\n\n    constructor(coders: Array<Coder>, localName: string) {\n        let dynamic = false;\n        const types: Array<string> = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) { dynamic = true; }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n\n        super(\"tuple\", type, localName, dynamic);\n        defineProperties<TupleCoder>(this, { coders: Object.freeze(coders.slice()) });\n    }\n\n    defaultValue(): any {\n        const values: any = [ ];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) { accum[name] = 0; }\n                accum[name]++;\n            }\n            return accum;\n        }, <{ [ name: string ]: number }>{ });\n\n        // Add named values\n        this.coders.forEach((coder: Coder, index: number) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) { return; }\n\n            if (name === \"length\") { name = \"_length\"; }\n\n            if (values[name] != null) { return; }\n\n            values[name] = values[index];\n        });\n\n        return Object.freeze(values);\n    }\n\n    encode(writer: Writer, _value: Array<any> | { [ name: string ]: any } | Typed): number {\n        const value = Typed.dereference(_value, \"tuple\");\n        return pack(writer, this.coders, value);\n    }\n\n    decode(reader: Reader): any {\n        return unpack(reader, this.coders);\n    }\n}\n\n", "import { keccak256 } from \"../crypto/index.js\";\nimport { toUtf8Bytes } from \"../utils/index.js\";\n\n/**\n *  A simple hashing function which operates on UTF-8 strings to\n *  compute an 32-byte identifier.\n *\n *  This simply computes the [UTF-8 bytes](toUtf8Bytes) and computes\n *  the [[keccak256]].\n *\n *  @example:\n *    id(\"hello world\")\n *    //_result:\n */\nexport function id(value: string): string {\n    return keccak256(toUtf8Bytes(value));\n}\n", "// created 2023-09-25T01:01:55.148Z\n// compressed base64-encoded blob for include-ens data\n// source: https://github.com/adraffy/ens-normalize.js/blob/main/src/make.js\n// see: https://github.com/adraffy/ens-normalize.js#security\n// SHA-256: 0565ed049b9cf1614bb9e11ba7d8ac6a6fb96c893253d890f7e2b2884b9ded32\nvar COMPRESSED$1 = '';\nconst FENCED = new Map([[8217,\"apostrophe\"],[8260,\"fraction slash\"],[12539,\"middle dot\"]]);\nconst NSM_MAX = 4;\n\nfunction decode_arithmetic(bytes) {\r\n\tlet pos = 0;\r\n\tfunction u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\r\n\t\r\n\t// decode the frequency table\r\n\tlet symbol_count = u16();\r\n\tlet total = 1;\r\n\tlet acc = [0, 1]; // first symbol has frequency 1\r\n\tfor (let i = 1; i < symbol_count; i++) {\r\n\t\tacc.push(total += u16());\r\n\t}\r\n\r\n\t// skip the sized-payload that the last 3 symbols index into\r\n\tlet skip = u16();\r\n\tlet pos_payload = pos;\r\n\tpos += skip;\r\n\r\n\tlet read_width = 0;\r\n\tlet read_buffer = 0; \r\n\tfunction read_bit() {\r\n\t\tif (read_width == 0) {\r\n\t\t\t// this will read beyond end of buffer\r\n\t\t\t// but (undefined|0) => zero pad\r\n\t\t\tread_buffer = (read_buffer << 8) | bytes[pos++];\r\n\t\t\tread_width = 8;\r\n\t\t}\r\n\t\treturn (read_buffer >> --read_width) & 1;\r\n\t}\r\n\r\n\tconst N = 31;\r\n\tconst FULL = 2**N;\r\n\tconst HALF = FULL >>> 1;\r\n\tconst QRTR = HALF >> 1;\r\n\tconst MASK = FULL - 1;\r\n\r\n\t// fill register\r\n\tlet register = 0;\r\n\tfor (let i = 0; i < N; i++) register = (register << 1) | read_bit();\r\n\r\n\tlet symbols = [];\r\n\tlet low = 0;\r\n\tlet range = FULL; // treat like a float\r\n\twhile (true) {\r\n\t\tlet value = Math.floor((((register - low + 1) * total) - 1) / range);\r\n\t\tlet start = 0;\r\n\t\tlet end = symbol_count;\r\n\t\twhile (end - start > 1) { // binary search\r\n\t\t\tlet mid = (start + end) >>> 1;\r\n\t\t\tif (value < acc[mid]) {\r\n\t\t\t\tend = mid;\r\n\t\t\t} else {\r\n\t\t\t\tstart = mid;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (start == 0) break; // first symbol is end mark\r\n\t\tsymbols.push(start);\r\n\t\tlet a = low + Math.floor(range * acc[start]   / total);\r\n\t\tlet b = low + Math.floor(range * acc[start+1] / total) - 1;\r\n\t\twhile (((a ^ b) & HALF) == 0) {\r\n\t\t\tregister = (register << 1) & MASK | read_bit();\r\n\t\t\ta = (a << 1) & MASK;\r\n\t\t\tb = (b << 1) & MASK | 1;\r\n\t\t}\r\n\t\twhile (a & ~b & QRTR) {\r\n\t\t\tregister = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\r\n\t\t\ta = (a << 1) ^ HALF;\r\n\t\t\tb = ((b ^ HALF) << 1) | HALF | 1;\r\n\t\t}\r\n\t\tlow = a;\r\n\t\trange = 1 + b - a;\r\n\t}\r\n\tlet offset = symbol_count - 4;\r\n\treturn symbols.map(x => { // index into payload\r\n\t\tswitch (x - offset) {\r\n\t\t\tcase 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\r\n\t\t\tcase 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\r\n\t\t\tcase 1: return offset + bytes[pos_payload++];\r\n\t\t\tdefault: return x - 1;\r\n\t\t}\r\n\t});\r\n}\t\r\n\r\n// returns an iterator which returns the next symbol\r\nfunction read_payload(v) {\r\n\tlet pos = 0;\r\n\treturn () => v[pos++];\r\n}\r\nfunction read_compressed_payload(s) {\r\n\treturn read_payload(decode_arithmetic(unsafe_atob(s)));\r\n}\r\n\r\n// unsafe in the sense:\r\n// expected well-formed Base64 w/o padding \r\n// 20220922: added for https://github.com/adraffy/ens-normalize.js/issues/4\r\nfunction unsafe_atob(s) {\r\n\tlet lookup = [];\r\n\t[...'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'].forEach((c, i) => lookup[c.charCodeAt(0)] = i);\r\n\tlet n = s.length;\r\n\tlet ret = new Uint8Array((6 * n) >> 3);\r\n\tfor (let i = 0, pos = 0, width = 0, carry = 0; i < n; i++) {\r\n\t\tcarry = (carry << 6) | lookup[s.charCodeAt(i)];\r\n\t\twidth += 6;\r\n\t\tif (width >= 8) {\r\n\t\t\tret[pos++] = (carry >> (width -= 8));\r\n\t\t}\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\r\nfunction signed(i) { \r\n\treturn (i & 1) ? (~i >> 1) : (i >> 1);\r\n}\r\n\r\nfunction read_deltas(n, next) {\r\n\tlet v = Array(n);\r\n\tfor (let i = 0, x = 0; i < n; i++) v[i] = x += signed(next());\r\n\treturn v;\r\n}\r\n\r\n// [123][5] => [0 3] [1 1] [0 0]\r\nfunction read_sorted(next, prev = 0) {\r\n\tlet ret = [];\r\n\twhile (true) {\r\n\t\tlet x = next();\r\n\t\tlet n = next();\r\n\t\tif (!n) break;\r\n\t\tprev += x;\r\n\t\tfor (let i = 0; i < n; i++) {\r\n\t\t\tret.push(prev + i);\r\n\t\t}\r\n\t\tprev += n + 1;\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction read_sorted_arrays(next) {\r\n\treturn read_array_while(() => { \r\n\t\tlet v = read_sorted(next);\r\n\t\tif (v.length) return v;\r\n\t});\r\n}\r\n\r\n// returns map of x => ys\r\nfunction read_mapped(next) {\r\n\tlet ret = [];\r\n\twhile (true) {\r\n\t\tlet w = next();\r\n\t\tif (w == 0) break;\r\n\t\tret.push(read_linear_table(w, next));\r\n\t}\r\n\twhile (true) {\r\n\t\tlet w = next() - 1;\r\n\t\tif (w < 0) break;\r\n\t\tret.push(read_replacement_table(w, next));\r\n\t}\r\n\treturn ret.flat();\r\n}\r\n\r\n// read until next is falsy\r\n// return array of read values\r\nfunction read_array_while(next) {\r\n\tlet v = [];\r\n\twhile (true) {\r\n\t\tlet x = next(v.length);\r\n\t\tif (!x) break;\r\n\t\tv.push(x);\r\n\t}\r\n\treturn v;\r\n}\r\n\r\n// read w columns of length n\r\n// return as n rows of length w\r\nfunction read_transposed(n, w, next) {\r\n\tlet m = Array(n).fill().map(() => []);\r\n\tfor (let i = 0; i < w; i++) {\r\n\t\tread_deltas(n, next).forEach((x, j) => m[j].push(x));\r\n\t}\r\n\treturn m;\r\n}\r\n \r\n// returns [[x, ys], [x+dx, ys+dy], [x+2*dx, ys+2*dy], ...]\r\n// where dx/dy = steps, n = run size, w = length of y\r\nfunction read_linear_table(w, next) {\r\n\tlet dx = 1 + next();\r\n\tlet dy = next();\r\n\tlet vN = read_array_while(next);\r\n\tlet m = read_transposed(vN.length, 1+w, next);\r\n\treturn m.flatMap((v, i) => {\r\n\t\tlet [x, ...ys] = v;\r\n\t\treturn Array(vN[i]).fill().map((_, j) => {\r\n\t\t\tlet j_dy = j * dy;\r\n\t\t\treturn [x + j * dx, ys.map(y => y + j_dy)];\r\n\t\t});\r\n\t});\r\n}\r\n\r\n// return [[x, ys...], ...]\r\n// where w = length of y\r\nfunction read_replacement_table(w, next) { \r\n\tlet n = 1 + next();\r\n\tlet m = read_transposed(n, 1+w, next);\r\n\treturn m.map(v => [v[0], v.slice(1)]);\r\n}\r\n\r\n\r\nfunction read_trie(next) {\r\n\tlet ret = [];\r\n\tlet sorted = read_sorted(next); \r\n\texpand(decode([]), []);\r\n\treturn ret; // not sorted\r\n\tfunction decode(Q) { // characters that lead into this node\r\n\t\tlet S = next(); // state: valid, save, check\r\n\t\tlet B = read_array_while(() => { // buckets leading to new nodes\r\n\t\t\tlet cps = read_sorted(next).map(i => sorted[i]);\r\n\t\t\tif (cps.length) return decode(cps);\r\n\t\t});\r\n\t\treturn {S, B, Q};\r\n\t}\r\n\tfunction expand({S, B}, cps, saved) {\r\n\t\tif (S & 4 && saved === cps[cps.length-1]) return;\r\n\t\tif (S & 2) saved = cps[cps.length-1];\r\n\t\tif (S & 1) ret.push(cps); \r\n\t\tfor (let br of B) {\r\n\t\t\tfor (let cp of br.Q) {\r\n\t\t\t\texpand(br, [...cps, cp], saved);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\n\nfunction hex_cp(cp) {\r\n\treturn cp.toString(16).toUpperCase().padStart(2, '0');\r\n}\r\n\r\nfunction quote_cp(cp) {\r\n\treturn `{${hex_cp(cp)}}`; // raffy convention: like \"\\u{X}\" w/o the \"\\u\"\r\n}\r\n\r\n/*\r\nexport function explode_cp(s) {\r\n\treturn [...s].map(c => c.codePointAt(0));\r\n}\r\n*/\r\nfunction explode_cp(s) { // this is about 2x faster\r\n\tlet cps = [];\r\n\tfor (let pos = 0, len = s.length; pos < len; ) {\r\n\t\tlet cp = s.codePointAt(pos);\r\n\t\tpos += cp < 0x10000 ? 1 : 2;\r\n\t\tcps.push(cp);\r\n\t}\r\n\treturn cps;\r\n}\r\n\r\nfunction str_from_cps(cps) {\r\n\tconst chunk = 4096;\r\n\tlet len = cps.length;\r\n\tif (len < chunk) return String.fromCodePoint(...cps);\r\n\tlet buf = [];\r\n\tfor (let i = 0; i < len; ) {\r\n\t\tbuf.push(String.fromCodePoint(...cps.slice(i, i += chunk)));\r\n\t}\r\n\treturn buf.join('');\r\n}\r\n\r\nfunction compare_arrays(a, b) {\r\n\tlet n = a.length;\r\n\tlet c = n - b.length;\r\n\tfor (let i = 0; c == 0 && i < n; i++) c = a[i] - b[i];\r\n\treturn c;\r\n}\n\n// created 2023-09-25T01:01:55.148Z\n// compressed base64-encoded blob for include-nf data\n// source: https://github.com/adraffy/ens-normalize.js/blob/main/src/make.js\n// see: https://github.com/adraffy/ens-normalize.js#security\n// SHA-256: a974b6f8541fc29d919bc85118af0a44015851fab5343f8679cb31be2bdb209e\nvar COMPRESSED = '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';\n\n// https://unicode.org/reports/tr15/\r\n// for reference implementation\r\n// see: /derive/nf.js\r\n\r\n\r\n// algorithmic hangul\r\n// https://www.unicode.org/versions/Unicode15.0.0/ch03.pdf (page 144)\r\nconst S0 = 0xAC00;\r\nconst L0 = 0x1100;\r\nconst V0 = 0x1161;\r\nconst T0 = 0x11A7;\r\nconst L_COUNT = 19;\r\nconst V_COUNT = 21;\r\nconst T_COUNT = 28;\r\nconst N_COUNT = V_COUNT * T_COUNT;\r\nconst S_COUNT = L_COUNT * N_COUNT;\r\nconst S1 = S0 + S_COUNT;\r\nconst L1 = L0 + L_COUNT;\r\nconst V1 = V0 + V_COUNT;\r\nconst T1 = T0 + T_COUNT;\r\n\r\nfunction unpack_cc(packed) {\r\n\treturn (packed >> 24) & 0xFF;\r\n}\r\nfunction unpack_cp(packed) {\r\n\treturn packed & 0xFFFFFF;\r\n}\r\n\r\nlet SHIFTED_RANK, EXCLUSIONS, DECOMP, RECOMP;\r\n\r\nfunction init$1() {\r\n\t//console.time('nf');\r\n\tlet r = read_compressed_payload(COMPRESSED);\r\n\tSHIFTED_RANK = new Map(read_sorted_arrays(r).flatMap((v, i) => v.map(x => [x, (i+1) << 24]))); // pre-shifted\r\n\tEXCLUSIONS = new Set(read_sorted(r));\r\n\tDECOMP = new Map();\r\n\tRECOMP = new Map();\r\n\tfor (let [cp, cps] of read_mapped(r)) {\r\n\t\tif (!EXCLUSIONS.has(cp) && cps.length == 2) {\r\n\t\t\tlet [a, b] = cps;\r\n\t\t\tlet bucket = RECOMP.get(a);\r\n\t\t\tif (!bucket) {\r\n\t\t\t\tbucket = new Map();\r\n\t\t\t\tRECOMP.set(a, bucket);\r\n\t\t\t}\r\n\t\t\tbucket.set(b, cp);\r\n\t\t}\r\n\t\tDECOMP.set(cp, cps.reverse()); // stored reversed\r\n\t}\r\n\t//console.timeEnd('nf');\r\n\t// 20230905: 11ms\r\n}\r\n\r\nfunction is_hangul(cp) {\r\n\treturn cp >= S0 && cp < S1;\r\n}\r\n\r\nfunction compose_pair(a, b) {\r\n\tif (a >= L0 && a < L1 && b >= V0 && b < V1) {\r\n\t\treturn S0 + (a - L0) * N_COUNT + (b - V0) * T_COUNT;\r\n\t} else if (is_hangul(a) && b > T0 && b < T1 && (a - S0) % T_COUNT == 0) {\r\n\t\treturn a + (b - T0);\r\n\t} else {\r\n\t\tlet recomp = RECOMP.get(a);\r\n\t\tif (recomp) {\r\n\t\t\trecomp = recomp.get(b);\r\n\t\t\tif (recomp) {\r\n\t\t\t\treturn recomp;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n}\r\n\r\nfunction decomposed(cps) {\r\n\tif (!SHIFTED_RANK) init$1();\r\n\tlet ret = [];\r\n\tlet buf = [];\r\n\tlet check_order = false;\r\n\tfunction add(cp) {\r\n\t\tlet cc = SHIFTED_RANK.get(cp);\r\n\t\tif (cc) {\r\n\t\t\tcheck_order = true;\r\n\t\t\tcp |= cc;\r\n\t\t}\r\n\t\tret.push(cp);\r\n\t}\r\n\tfor (let cp of cps) {\r\n\t\twhile (true) {\r\n\t\t\tif (cp < 0x80) {\r\n\t\t\t\tret.push(cp);\r\n\t\t\t} else if (is_hangul(cp)) {\r\n\t\t\t\tlet s_index = cp - S0;\r\n\t\t\t\tlet l_index = s_index / N_COUNT | 0;\r\n\t\t\t\tlet v_index = (s_index % N_COUNT) / T_COUNT | 0;\r\n\t\t\t\tlet t_index = s_index % T_COUNT;\r\n\t\t\t\tadd(L0 + l_index);\r\n\t\t\t\tadd(V0 + v_index);\r\n\t\t\t\tif (t_index > 0) add(T0 + t_index);\r\n\t\t\t} else {\r\n\t\t\t\tlet mapped = DECOMP.get(cp);\r\n\t\t\t\tif (mapped) {\r\n\t\t\t\t\tbuf.push(...mapped);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tadd(cp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!buf.length) break;\r\n\t\t\tcp = buf.pop();\r\n\t\t}\r\n\t}\r\n\tif (check_order && ret.length > 1) {\r\n\t\tlet prev_cc = unpack_cc(ret[0]);\r\n\t\tfor (let i = 1; i < ret.length; i++) {\r\n\t\t\tlet cc = unpack_cc(ret[i]);\r\n\t\t\tif (cc == 0 || prev_cc <= cc) {\r\n\t\t\t\tprev_cc = cc;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tlet j = i-1;\r\n\t\t\twhile (true) {\r\n\t\t\t\tlet tmp = ret[j+1];\r\n\t\t\t\tret[j+1] = ret[j];\r\n\t\t\t\tret[j] = tmp;\r\n\t\t\t\tif (!j) break;\r\n\t\t\t\tprev_cc = unpack_cc(ret[--j]);\r\n\t\t\t\tif (prev_cc <= cc) break;\r\n\t\t\t}\r\n\t\t\tprev_cc = unpack_cc(ret[i]);\r\n\t\t}\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction composed_from_decomposed(v) {\r\n\tlet ret = [];\r\n\tlet stack = [];\r\n\tlet prev_cp = -1;\r\n\tlet prev_cc = 0;\r\n\tfor (let packed of v) {\r\n\t\tlet cc = unpack_cc(packed);\r\n\t\tlet cp = unpack_cp(packed);\r\n\t\tif (prev_cp == -1) {\r\n\t\t\tif (cc == 0) {\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tret.push(cp);\r\n\t\t\t}\r\n\t\t} else if (prev_cc > 0 && prev_cc >= cc) {\r\n\t\t\tif (cc == 0) {\r\n\t\t\t\tret.push(prev_cp, ...stack);\r\n\t\t\t\tstack.length = 0;\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tstack.push(cp);\r\n\t\t\t}\r\n\t\t\tprev_cc = cc;\r\n\t\t} else {\r\n\t\t\tlet composed = compose_pair(prev_cp, cp);\r\n\t\t\tif (composed >= 0) {\r\n\t\t\t\tprev_cp = composed;\r\n\t\t\t} else if (prev_cc == 0 && cc == 0) {\r\n\t\t\t\tret.push(prev_cp);\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tstack.push(cp);\r\n\t\t\t\tprev_cc = cc;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (prev_cp >= 0) {\r\n\t\tret.push(prev_cp, ...stack);\t\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\n// note: cps can be iterable\r\nfunction nfd(cps) {\r\n\treturn decomposed(cps).map(unpack_cp);\r\n}\r\nfunction nfc(cps) {\r\n\treturn composed_from_decomposed(decomposed(cps));\r\n}\n\nconst HYPHEN = 0x2D;\r\nconst STOP = 0x2E;\r\nconst STOP_CH = '.';\r\nconst FE0F = 0xFE0F;\r\nconst UNIQUE_PH = 1;\r\n\r\n// 20230913: replace [...v] with Array_from(v) to avoid large spreads\r\nconst Array_from = x => Array.from(x); // Array.from.bind(Array);\r\n\r\nfunction group_has_cp(g, cp) {\r\n\t// 20230913: keep primary and secondary distinct instead of creating valid union\r\n\treturn g.P.has(cp) || g.Q.has(cp);\r\n}\r\n\r\nclass Emoji extends Array {\r\n\tget is_emoji() { return true; } // free tagging system\r\n}\r\n\r\nlet MAPPED, IGNORED, CM, NSM, ESCAPE, NFC_CHECK, GROUPS, WHOLE_VALID, WHOLE_MAP, VALID, EMOJI_LIST, EMOJI_ROOT;\r\n\r\nfunction init() {\r\n\tif (MAPPED) return;\r\n\t\r\n\tlet r = read_compressed_payload(COMPRESSED$1);\r\n\tconst read_sorted_array = () => read_sorted(r);\r\n\tconst read_sorted_set = () => new Set(read_sorted_array());\r\n\tconst set_add_many = (set, v) => v.forEach(x => set.add(x));\r\n\r\n\tMAPPED = new Map(read_mapped(r)); \r\n\tIGNORED = read_sorted_set(); // ignored characters are not valid, so just read raw codepoints\r\n\r\n\t/*\r\n\t// direct include from payload is smaller than the decompression code\r\n\tconst FENCED = new Map(read_array_while(() => {\r\n\t\tlet cp = r();\r\n\t\tif (cp) return [cp, read_str(r())];\r\n\t}));\r\n\t*/\r\n\t// 20230217: we still need all CM for proper error formatting\r\n\t// but norm only needs NSM subset that are potentially-valid\r\n\tCM = read_sorted_array();\r\n\tNSM = new Set(read_sorted_array().map(i => CM[i]));\r\n\tCM = new Set(CM);\r\n\t\r\n\tESCAPE = read_sorted_set(); // characters that should not be printed\r\n\tNFC_CHECK = read_sorted_set(); // only needed to illustrate ens_tokenize() transformations\r\n\r\n\tlet chunks = read_sorted_arrays(r);\r\n\tlet unrestricted = r();\r\n\t//const read_chunked = () => new Set(read_sorted_array().flatMap(i => chunks[i]).concat(read_sorted_array()));\r\n\tconst read_chunked = () => {\r\n\t\t// 20230921: build set in parts, 2x faster\r\n\t\tlet set = new Set();\r\n\t\tread_sorted_array().forEach(i => set_add_many(set, chunks[i]));\r\n\t\tset_add_many(set, read_sorted_array());\r\n\t\treturn set; \r\n\t};\r\n\tGROUPS = read_array_while(i => {\r\n\t\t// minifier property mangling seems unsafe\r\n\t\t// so these are manually renamed to single chars\r\n\t\tlet N = read_array_while(r).map(x => x+0x60);\r\n\t\tif (N.length) {\r\n\t\t\tlet R = i >= unrestricted; // unrestricted then restricted\r\n\t\t\tN[0] -= 32; // capitalize\r\n\t\t\tN = str_from_cps(N);\r\n\t\t\tif (R) N=`Restricted[${N}]`;\r\n\t\t\tlet P = read_chunked(); // primary\r\n\t\t\tlet Q = read_chunked(); // secondary\r\n\t\t\tlet M = !r(); // not-whitelisted, check for NSM\r\n\t\t\t// *** this code currently isn't needed ***\r\n\t\t\t/*\r\n\t\t\tlet V = [...P, ...Q].sort((a, b) => a-b); // derive: sorted valid\r\n\t\t\tlet M = r()-1; // number of combining mark\r\n\t\t\tif (M < 0) { // whitelisted\r\n\t\t\t\tM = new Map(read_array_while(() => {\r\n\t\t\t\t\tlet i = r();\r\n\t\t\t\t\tif (i) return [V[i-1], read_array_while(() => {\r\n\t\t\t\t\t\tlet v = read_array_while(r);\r\n\t\t\t\t\t\tif (v.length) return v.map(x => x-1);\r\n\t\t\t\t\t})];\r\n\t\t\t\t}));\r\n\t\t\t}*/\r\n\t\t\treturn {N, P, Q, M, R};\r\n\t\t}\r\n\t});\r\n\r\n\t// decode compressed wholes\r\n\tWHOLE_VALID = read_sorted_set();\r\n\tWHOLE_MAP = new Map();\r\n\tlet wholes = read_sorted_array().concat(Array_from(WHOLE_VALID)).sort((a, b) => a-b); // must be sorted\r\n\twholes.forEach((cp, i) => {\r\n\t\tlet d = r(); \r\n\t\tlet w = wholes[i] = d ? wholes[i-d] : {V: [], M: new Map()};\r\n\t\tw.V.push(cp); // add to member set\r\n\t\tif (!WHOLE_VALID.has(cp)) {\r\n\t\t\tWHOLE_MAP.set(cp, w);  // register with whole map\r\n\t\t}\r\n\t});\r\n\r\n\t// compute confusable-extent complements\r\n\t// usage: WHOLE_MAP.get(cp).M.get(cp) = complement set\r\n\tfor (let {V, M} of new Set(WHOLE_MAP.values())) {\r\n\t\t// connect all groups that have each whole character\r\n\t\tlet recs = [];\r\n\t\tfor (let cp of V) {\r\n\t\t\tlet gs = GROUPS.filter(g => group_has_cp(g, cp));\r\n\t\t\tlet rec = recs.find(({G}) => gs.some(g => G.has(g)));\r\n\t\t\tif (!rec) {\r\n\t\t\t\trec = {G: new Set(), V: []};\r\n\t\t\t\trecs.push(rec);\r\n\t\t\t}\r\n\t\t\trec.V.push(cp);\r\n\t\t\tset_add_many(rec.G, gs);\r\n\t\t}\r\n\t\t// per character cache groups which are not a member of the extent\r\n\t\tlet union = recs.flatMap(x => Array_from(x.G)); // all of the groups used by this whole\r\n\t\tfor (let {G, V} of recs) {\r\n\t\t\tlet complement = new Set(union.filter(g => !G.has(g))); // groups not covered by the extent\r\n\t\t\tfor (let cp of V) {\r\n\t\t\t\tM.set(cp, complement); // this is the same reference\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// compute valid set\r\n\t// 20230924: VALID was union but can be re-used\r\n\tVALID = new Set(); // exists in 1+ groups\r\n\tlet multi = new Set(); // exists in 2+ groups\r\n\tconst add_to_union = cp => VALID.has(cp) ? multi.add(cp) : VALID.add(cp);\r\n\tfor (let g of GROUPS) {\r\n\t\tfor (let cp of g.P) add_to_union(cp);\r\n\t\tfor (let cp of g.Q) add_to_union(cp);\r\n\t}\r\n\t// dual purpose WHOLE_MAP: return placeholder if unique non-confusable\r\n\tfor (let cp of VALID) {\r\n\t\tif (!WHOLE_MAP.has(cp) && !multi.has(cp)) {\r\n\t\t\tWHOLE_MAP.set(cp, UNIQUE_PH);\r\n\t\t}\r\n\t}\r\n\t// add all decomposed parts\r\n\t// see derive: \"Valid is Closed (via Brute-force)\"\r\n\tset_add_many(VALID, nfd(VALID));\r\n\t\r\n\t// decode emoji\r\n\t// 20230719: emoji are now fully-expanded to avoid quirk logic \r\n\tEMOJI_LIST = read_trie(r).map(v => Emoji.from(v)).sort(compare_arrays);\r\n\tEMOJI_ROOT = new Map(); // this has approx 7K nodes (2+ per emoji)\r\n\tfor (let cps of EMOJI_LIST) {\r\n\t\t// 20230719: change to *slightly* stricter algorithm which disallows \r\n\t\t// insertion of misplaced FE0F in emoji sequences (matching ENSIP-15)\r\n\t\t// example: beautified [A B] (eg. flag emoji) \r\n\t\t//  before: allow: [A FE0F B], error: [A FE0F FE0F B] \r\n\t\t//   after: error: both\r\n\t\t// note: this code now matches ENSNormalize.{cs,java} logic\r\n\t\tlet prev = [EMOJI_ROOT];\r\n\t\tfor (let cp of cps) {\r\n\t\t\tlet next = prev.map(node => {\r\n\t\t\t\tlet child = node.get(cp);\r\n\t\t\t\tif (!child) {\r\n\t\t\t\t\t// should this be object? \r\n\t\t\t\t\t// (most have 1-2 items, few have many)\r\n\t\t\t\t\t// 20230719: no, v8 default map is 4?\r\n\t\t\t\t\tchild = new Map();\r\n\t\t\t\t\tnode.set(cp, child);\r\n\t\t\t\t}\r\n\t\t\t\treturn child;\r\n\t\t\t});\r\n\t\t\tif (cp === FE0F) {\r\n\t\t\t\tprev.push(...next); // less than 20 elements\r\n\t\t\t} else {\r\n\t\t\t\tprev = next;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let x of prev) {\r\n\t\t\tx.V = cps;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// if escaped: {HEX}\r\n//       else: \"x\" {HEX}\r\nfunction quoted_cp(cp) {\r\n\treturn (should_escape(cp) ? '' : `${bidi_qq(safe_str_from_cps([cp]))} `) + quote_cp(cp);\r\n}\r\n\r\n// 20230211: some messages can be mixed-directional and result in spillover\r\n// use 200E after a quoted string to force the remainder of a string from \r\n// acquring the direction of the quote\r\n// https://www.w3.org/International/questions/qa-bidi-unicode-controls#exceptions\r\nfunction bidi_qq(s) {\r\n\treturn `\"${s}\"\\u200E`; // strong LTR\r\n}\r\n\r\nfunction check_label_extension(cps) {\r\n\tif (cps.length >= 4 && cps[2] == HYPHEN && cps[3] == HYPHEN) {\r\n\t\tthrow new Error(`invalid label extension: \"${str_from_cps(cps.slice(0, 4))}\"`); // this can only be ascii so cant be bidi\r\n\t}\r\n}\r\nfunction check_leading_underscore(cps) {\r\n\tconst UNDERSCORE = 0x5F;\r\n\tfor (let i = cps.lastIndexOf(UNDERSCORE); i > 0; ) {\r\n\t\tif (cps[--i] !== UNDERSCORE) {\r\n\t\t\tthrow new Error('underscore allowed only at start');\r\n\t\t}\r\n\t}\r\n}\r\n// check that a fenced cp is not leading, trailing, or touching another fenced cp\r\nfunction check_fenced(cps) {\r\n\tlet cp = cps[0];\r\n\tlet prev = FENCED.get(cp);\r\n\tif (prev) throw error_placement(`leading ${prev}`);\r\n\tlet n = cps.length;\r\n\tlet last = -1; // prevents trailing from throwing\r\n\tfor (let i = 1; i < n; i++) {\r\n\t\tcp = cps[i];\r\n\t\tlet match = FENCED.get(cp);\r\n\t\tif (match) {\r\n\t\t\t// since cps[0] isn't fenced, cps[1] cannot throw\r\n\t\t\tif (last == i) throw error_placement(`${prev} + ${match}`);\r\n\t\t\tlast = i + 1;\r\n\t\t\tprev = match;\r\n\t\t}\r\n\t}\r\n\tif (last == n) throw error_placement(`trailing ${prev}`);\r\n}\r\n\r\n// create a safe to print string \r\n// invisibles are escaped\r\n// leading cm uses placeholder\r\n// if cps exceed max, middle truncate with ellipsis\r\n// quoter(cp) => string, eg. 3000 => \"{3000}\"\r\n// note: in html, you'd call this function then replace [<>&] with entities\r\nfunction safe_str_from_cps(cps, max = Infinity, quoter = quote_cp) {\r\n\t//if (Number.isInteger(cps)) cps = [cps];\r\n\t//if (!Array.isArray(cps)) throw new TypeError(`expected codepoints`);\r\n\tlet buf = [];\r\n\tif (is_combining_mark(cps[0])) buf.push('◌');\r\n\tif (cps.length > max) {\r\n\t\tmax >>= 1;\r\n\t\tcps = [...cps.slice(0, max), 0x2026, ...cps.slice(-max)];\r\n\t}\r\n\tlet prev = 0;\r\n\tlet n = cps.length;\r\n\tfor (let i = 0; i < n; i++) {\r\n\t\tlet cp = cps[i];\r\n\t\tif (should_escape(cp)) {\r\n\t\t\tbuf.push(str_from_cps(cps.slice(prev, i)));\r\n\t\t\tbuf.push(quoter(cp));\r\n\t\t\tprev = i + 1;\r\n\t\t}\r\n\t}\r\n\tbuf.push(str_from_cps(cps.slice(prev, n)));\r\n\treturn buf.join('');\r\n}\r\n\r\n// note: set(s) cannot be exposed because they can be modified\r\n// note: Object.freeze() doesn't work\r\nfunction is_combining_mark(cp) {\r\n\tinit();\r\n\treturn CM.has(cp);\r\n}\r\nfunction should_escape(cp) {\r\n\tinit();\r\n\treturn ESCAPE.has(cp);\r\n}\r\n\r\n// return all supported emoji as fully-qualified emoji \r\n// ordered by length then lexicographic \r\nfunction ens_emoji() {\r\n\tinit();\r\n\treturn EMOJI_LIST.map(x => x.slice()); // emoji are exposed so copy\r\n}\r\n\r\nfunction ens_normalize_fragment(frag, decompose) {\r\n\tinit();\r\n\tlet nf = decompose ? nfd : nfc;\r\n\treturn frag.split(STOP_CH).map(label => str_from_cps(tokens_from_str(explode_cp(label), nf, filter_fe0f).flat())).join(STOP_CH);\r\n}\r\n\r\nfunction ens_normalize(name) {\r\n\treturn flatten(split(name, nfc, filter_fe0f));\r\n}\r\n\r\nfunction ens_beautify(name) {\r\n\tlet labels = split(name, nfc, x => x); // emoji not exposed\r\n\tfor (let {type, output, error} of labels) {\r\n\t\tif (error) break; // flatten will throw\r\n\r\n\t\t// replace leading/trailing hyphen\r\n\t\t// 20230121: consider beautifing all or leading/trailing hyphen to unicode variant\r\n\t\t// not exactly the same in every font, but very similar: \"-\" vs \"‐\"\r\n\t\t/*\r\n\t\tconst UNICODE_HYPHEN = 0x2010;\r\n\t\t// maybe this should replace all for visual consistancy?\r\n\t\t// `node tools/reg-count.js regex ^-\\{2,\\}` => 592\r\n\t\t//for (let i = 0; i < output.length; i++) if (output[i] == 0x2D) output[i] = 0x2010;\r\n\t\tif (output[0] == HYPHEN) output[0] = UNICODE_HYPHEN;\r\n\t\tlet end = output.length-1;\r\n\t\tif (output[end] == HYPHEN) output[end] = UNICODE_HYPHEN;\r\n\t\t*/\r\n\t\t// 20230123: WHATWG URL uses \"CheckHyphens\" false\r\n\t\t// https://url.spec.whatwg.org/#idna\r\n\r\n\t\t// update ethereum symbol\r\n\t\t// ξ => Ξ if not greek\r\n\t\tif (type !== 'Greek') array_replace(output, 0x3BE, 0x39E);\r\n\r\n\t\t// 20221213: fixes bidi subdomain issue, but breaks invariant (200E is disallowed)\r\n\t\t// could be fixed with special case for: 2D (.) + 200E (LTR)\r\n\t\t// https://discuss.ens.domains/t/bidi-label-ordering-spoof/15824\r\n\t\t//output.splice(0, 0, 0x200E);\r\n\t}\r\n\treturn flatten(labels);\r\n}\r\n\r\nfunction array_replace(v, a, b) {\r\n\tlet prev = 0;\r\n\twhile (true) {\r\n\t\tlet next = v.indexOf(a, prev);\r\n\t\tif (next < 0) break;\r\n\t\tv[next] = b; \r\n\t\tprev = next + 1;\r\n\t}\r\n}\r\n\r\nfunction ens_split(name, preserve_emoji) {\r\n\treturn split(name, nfc, preserve_emoji ? x => x.slice() : filter_fe0f); // emoji are exposed so copy\r\n}\r\n\r\nfunction split(name, nf, ef) {\r\n\tif (!name) return []; // 20230719: empty name allowance\r\n\tinit();\r\n\tlet offset = 0;\r\n\t// https://unicode.org/reports/tr46/#Validity_Criteria\r\n\t// 4.) \"The label must not contain a U+002E ( . ) FULL STOP.\"\r\n\treturn name.split(STOP_CH).map(label => {\r\n\t\tlet input = explode_cp(label);\r\n\t\tlet info = {\r\n\t\t\tinput,\r\n\t\t\toffset, // codepoint, not substring!\r\n\t\t};\r\n\t\toffset += input.length + 1; // + stop\r\n\t\ttry {\r\n\t\t\t// 1.) \"The label must be in Unicode Normalization Form NFC\"\r\n\t\t\tlet tokens = info.tokens = tokens_from_str(input, nf, ef);\r\n\t\t\tlet token_count = tokens.length;\r\n\t\t\tlet type;\r\n\t\t\tif (!token_count) { // the label was effectively empty (could of had ignored characters)\r\n\t\t\t\t//norm = [];\r\n\t\t\t\t//type = 'None'; // use this instead of next match, \"ASCII\"\r\n\t\t\t\t// 20230120: change to strict\r\n\t\t\t\t// https://discuss.ens.domains/t/ens-name-normalization-2nd/14564/59\r\n\t\t\t\tthrow new Error(`empty label`);\r\n\t\t\t} \r\n\t\t\tlet norm = info.output = tokens.flat();\r\n\t\t\tcheck_leading_underscore(norm);\r\n\t\t\tlet emoji = info.emoji = token_count > 1 || tokens[0].is_emoji; // same as: tokens.some(x => x.is_emoji);\r\n\t\t\tif (!emoji && norm.every(cp => cp < 0x80)) { // special case for ascii\r\n\t\t\t\t// 20230123: matches matches WHATWG, see note 3.3\r\n\t\t\t\tcheck_label_extension(norm); // only needed for ascii\r\n\t\t\t\t// cant have fenced\r\n\t\t\t\t// cant have cm\r\n\t\t\t\t// cant have wholes\r\n\t\t\t\t// see derive: \"Fastpath ASCII\"\r\n\t\t\t\ttype = 'ASCII';\r\n\t\t\t} else {\r\n\t\t\t\tlet chars = tokens.flatMap(x => x.is_emoji ? [] : x); // all of the nfc tokens concat together\r\n\t\t\t\tif (!chars.length) { // theres no text, just emoji\r\n\t\t\t\t\ttype = 'Emoji';\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 5.) \"The label must not begin with a combining mark, that is: General_Category=Mark.\"\r\n\t\t\t\t\tif (CM.has(norm[0])) throw error_placement('leading combining mark');\r\n\t\t\t\t\tfor (let i = 1; i < token_count; i++) { // we've already checked the first token\r\n\t\t\t\t\t\tlet cps = tokens[i];\r\n\t\t\t\t\t\tif (!cps.is_emoji && CM.has(cps[0])) { // every text token has emoji neighbors, eg. EtEEEtEt...\r\n\t\t\t\t\t\t\t// bidi_qq() not needed since emoji is LTR and cps is a CM\r\n\t\t\t\t\t\t\tthrow error_placement(`emoji + combining mark: \"${str_from_cps(tokens[i-1])} + ${safe_str_from_cps([cps[0]])}\"`); \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcheck_fenced(norm);\r\n\t\t\t\t\tlet unique = Array_from(new Set(chars));\r\n\t\t\t\t\tlet [g] = determine_group(unique); // take the first match\r\n\t\t\t\t\t// see derive: \"Matching Groups have Same CM Style\"\r\n\t\t\t\t\t// alternative: could form a hybrid type: Latin/Japanese/...\t\r\n\t\t\t\t\tcheck_group(g, chars); // need text in order\r\n\t\t\t\t\tcheck_whole(g, unique); // only need unique text (order would be required for multiple-char confusables)\r\n\t\t\t\t\ttype = g.N;\r\n\t\t\t\t\t// 20230121: consider exposing restricted flag\r\n\t\t\t\t\t// it's simpler to just check for 'Restricted'\r\n\t\t\t\t\t// or even better: type.endsWith(']')\r\n\t\t\t\t\t//if (g.R) info.restricted = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tinfo.type = type;\r\n\t\t} catch (err) {\r\n\t\t\tinfo.error = err; // use full error object\r\n\t\t}\r\n\t\treturn info;\r\n\t});\r\n}\r\n\r\nfunction check_whole(group, unique) {\r\n\tlet maker;\r\n\tlet shared = [];\r\n\tfor (let cp of unique) {\r\n\t\tlet whole = WHOLE_MAP.get(cp);\r\n\t\tif (whole === UNIQUE_PH) return; // unique, non-confusable\r\n\t\tif (whole) {\r\n\t\t\tlet set = whole.M.get(cp); // groups which have a character that look-like this character\r\n\t\t\tmaker = maker ? maker.filter(g => set.has(g)) : Array_from(set);\r\n\t\t\tif (!maker.length) return; // confusable intersection is empty\r\n\t\t} else {\r\n\t\t\tshared.push(cp); \r\n\t\t}\r\n\t}\r\n\tif (maker) {\r\n\t\t// we have 1+ confusable\r\n\t\t// check if any of the remaining groups\r\n\t\t// contain the shared characters too\r\n\t\tfor (let g of maker) {\r\n\t\t\tif (shared.every(cp => group_has_cp(g, cp))) {\r\n\t\t\t\tthrow new Error(`whole-script confusable: ${group.N}/${g.N}`);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// assumption: unique.size > 0\r\n// returns list of matching groups\r\nfunction determine_group(unique) {\r\n\tlet groups = GROUPS;\r\n\tfor (let cp of unique) {\r\n\t\t// note: we need to dodge CM that are whitelisted\r\n\t\t// but that code isn't currently necessary\r\n\t\tlet gs = groups.filter(g => group_has_cp(g, cp));\r\n\t\tif (!gs.length) {\r\n\t\t\tif (!GROUPS.some(g => group_has_cp(g, cp))) { \r\n\t\t\t\t// the character was composed of valid parts\r\n\t\t\t\t// but it's NFC form is invalid\r\n\t\t\t\t// 20230716: change to more exact statement, see: ENSNormalize.{cs,java}\r\n\t\t\t\t// note: this doesn't have to be a composition\r\n\t\t\t\t// 20230720: change to full check\r\n\t\t\t\tthrow error_disallowed(cp); // this should be rare\r\n\t\t\t} else {\r\n\t\t\t\t// there is no group that contains all these characters\r\n\t\t\t\t// throw using the highest priority group that matched\r\n\t\t\t\t// https://www.unicode.org/reports/tr39/#mixed_script_confusables\r\n\t\t\t\tthrow error_group_member(groups[0], cp);\r\n\t\t\t}\r\n\t\t}\r\n\t\tgroups = gs;\r\n\t\tif (gs.length == 1) break; // there is only one group left\r\n\t}\r\n\t// there are at least 1 group(s) with all of these characters\r\n\treturn groups;\r\n}\r\n\r\n// throw on first error\r\nfunction flatten(split) {\r\n\treturn split.map(({input, error, output}) => {\r\n\t\tif (error) {\r\n\t\t\t// don't print label again if just a single label\r\n\t\t\tlet msg = error.message;\r\n\t\t\t// bidi_qq() only necessary if msg is digits\r\n\t\t\tthrow new Error(split.length == 1 ? msg : `Invalid label ${bidi_qq(safe_str_from_cps(input, 63))}: ${msg}`); \r\n\t\t}\r\n\t\treturn str_from_cps(output);\r\n\t}).join(STOP_CH);\r\n}\r\n\r\nfunction error_disallowed(cp) {\r\n\t// TODO: add cp to error?\r\n\treturn new Error(`disallowed character: ${quoted_cp(cp)}`); \r\n}\r\nfunction error_group_member(g, cp) {\r\n\tlet quoted = quoted_cp(cp);\r\n\tlet gg = GROUPS.find(g => g.P.has(cp)); // only check primary\r\n\tif (gg) {\r\n\t\tquoted = `${gg.N} ${quoted}`;\r\n\t}\r\n\treturn new Error(`illegal mixture: ${g.N} + ${quoted}`);\r\n}\r\nfunction error_placement(where) {\r\n\treturn new Error(`illegal placement: ${where}`);\r\n}\r\n\r\n// assumption: cps.length > 0\r\n// assumption: cps[0] isn't a CM\r\n// assumption: the previous character isn't an emoji\r\nfunction check_group(g, cps) {\r\n\tfor (let cp of cps) {\r\n\t\tif (!group_has_cp(g, cp)) {\r\n\t\t\t// for whitelisted scripts, this will throw illegal mixture on invalid cm, eg. \"e{300}{300}\"\r\n\t\t\t// at the moment, it's unnecessary to introduce an extra error type\r\n\t\t\t// until there exists a whitelisted multi-character\r\n\t\t\t//   eg. if (M < 0 && is_combining_mark(cp)) { ... }\r\n\t\t\t// there are 3 cases:\r\n\t\t\t//   1. illegal cm for wrong group => mixture error\r\n\t\t\t//   2. illegal cm for same group => cm error\r\n\t\t\t//       requires set of whitelist cm per group: \r\n\t\t\t//        eg. new Set([...g.P, ...g.Q].flatMap(nfc).filter(cp => CM.has(cp)))\r\n\t\t\t//   3. wrong group => mixture error\r\n\t\t\tthrow error_group_member(g, cp);\r\n\t\t}\r\n\t}\r\n\t//if (M >= 0) { // we have a known fixed cm count\r\n\tif (g.M) { // we need to check for NSM\r\n\t\tlet decomposed = nfd(cps);\r\n\t\tfor (let i = 1, e = decomposed.length; i < e; i++) { // see: assumption\r\n\t\t\t// 20230210: bugfix: using cps instead of decomposed h/t Carbon225\r\n\t\t\t/*\r\n\t\t\tif (CM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\twhile (j < e && CM.has(decomposed[j])) j++;\r\n\t\t\t\tif (j - i > M) {\r\n\t\t\t\t\tthrow new Error(`too many combining marks: ${g.N} ${bidi_qq(str_from_cps(decomposed.slice(i-1, j)))} (${j-i}/${M})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\t// 20230217: switch to NSM counting\r\n\t\t\t// https://www.unicode.org/reports/tr39/#Optional_Detection\r\n\t\t\tif (NSM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\tfor (let cp; j < e && NSM.has(cp = decomposed[j]); j++) {\r\n\t\t\t\t\t// a. Forbid sequences of the same nonspacing mark.\r\n\t\t\t\t\tfor (let k = i; k < j; k++) { // O(n^2) but n < 100\r\n\t\t\t\t\t\tif (decomposed[k] == cp) {\r\n\t\t\t\t\t\t\tthrow new Error(`duplicate non-spacing marks: ${quoted_cp(cp)}`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// parse to end so we have full nsm count\r\n\t\t\t\t// b. Forbid sequences of more than 4 nonspacing marks (gc=Mn or gc=Me).\r\n\t\t\t\tif (j - i > NSM_MAX) {\r\n\t\t\t\t\t// note: this slice starts with a base char or spacing-mark cm\r\n\t\t\t\t\tthrow new Error(`excessive non-spacing marks: ${bidi_qq(safe_str_from_cps(decomposed.slice(i-1, j)))} (${j-i}/${NSM_MAX})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// *** this code currently isn't needed ***\r\n\t/*\r\n\tlet cm_whitelist = M instanceof Map;\r\n\tfor (let i = 0, e = cps.length; i < e; ) {\r\n\t\tlet cp = cps[i++];\r\n\t\tlet seqs = cm_whitelist && M.get(cp);\r\n\t\tif (seqs) { \r\n\t\t\t// list of codepoints that can follow\r\n\t\t\t// if this exists, this will always be 1+\r\n\t\t\tlet j = i;\r\n\t\t\twhile (j < e && CM.has(cps[j])) j++;\r\n\t\t\tlet cms = cps.slice(i, j);\r\n\t\t\tlet match = seqs.find(seq => !compare_arrays(seq, cms));\r\n\t\t\tif (!match) throw new Error(`disallowed combining mark sequence: \"${safe_str_from_cps([cp, ...cms])}\"`);\r\n\t\t\ti = j;\r\n\t\t} else if (!V.has(cp)) {\r\n\t\t\t// https://www.unicode.org/reports/tr39/#mixed_script_confusables\r\n\t\t\tlet quoted = quoted_cp(cp);\r\n\t\t\tfor (let cp of cps) {\r\n\t\t\t\tlet u = UNIQUE.get(cp);\r\n\t\t\t\tif (u && u !== g) {\r\n\t\t\t\t\t// if both scripts are restricted this error is confusing\r\n\t\t\t\t\t// because we don't differentiate RestrictedA from RestrictedB \r\n\t\t\t\t\tif (!u.R) quoted = `${quoted} is ${u.N}`;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthrow new Error(`disallowed ${g.N} character: ${quoted}`);\r\n\t\t\t//throw new Error(`disallowed character: ${quoted} (expected ${g.N})`);\r\n\t\t\t//throw new Error(`${g.N} does not allow: ${quoted}`);\r\n\t\t}\r\n\t}\r\n\tif (!cm_whitelist) {\r\n\t\tlet decomposed = nfd(cps);\r\n\t\tfor (let i = 1, e = decomposed.length; i < e; i++) { // we know it can't be cm leading\r\n\t\t\tif (CM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\twhile (j < e && CM.has(decomposed[j])) j++;\r\n\t\t\t\tif (j - i > M) {\r\n\t\t\t\t\tthrow new Error(`too many combining marks: \"${str_from_cps(decomposed.slice(i-1, j))}\" (${j-i}/${M})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t*/\r\n}\r\n\r\n// given a list of codepoints\r\n// returns a list of lists, where emoji are a fully-qualified (as Array subclass)\r\n// eg. explode_cp(\"abc💩d\") => [[61, 62, 63], Emoji[1F4A9, FE0F], [64]]\r\n// 20230818: rename for 'process' name collision h/t Javarome\r\n// https://github.com/adraffy/ens-normalize.js/issues/23\r\nfunction tokens_from_str(input, nf, ef) {\r\n\tlet ret = [];\r\n\tlet chars = [];\r\n\tinput = input.slice().reverse(); // flip so we can pop\r\n\twhile (input.length) {\r\n\t\tlet emoji = consume_emoji_reversed(input);\r\n\t\tif (emoji) {\r\n\t\t\tif (chars.length) {\r\n\t\t\t\tret.push(nf(chars));\r\n\t\t\t\tchars = [];\r\n\t\t\t}\r\n\t\t\tret.push(ef(emoji));\r\n\t\t} else {\r\n\t\t\tlet cp = input.pop();\r\n\t\t\tif (VALID.has(cp)) {\r\n\t\t\t\tchars.push(cp);\r\n\t\t\t} else {\r\n\t\t\t\tlet cps = MAPPED.get(cp);\r\n\t\t\t\tif (cps) {\r\n\t\t\t\t\tchars.push(...cps); // less than 10 elements\r\n\t\t\t\t} else if (!IGNORED.has(cp)) {\r\n\t\t\t\t\t// 20230912: unicode 15.1 changed the order of processing such that\r\n\t\t\t\t\t// disallowed parts are only rejected after NFC\r\n\t\t\t\t\t// https://unicode.org/reports/tr46/#Validity_Criteria\r\n\t\t\t\t\t// this doesn't impact normalization as of today\r\n\t\t\t\t\t// technically, this error can be removed as the group logic will apply similar logic\r\n\t\t\t\t\t// however the error type might be less clear\r\n\t\t\t\t\tthrow error_disallowed(cp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (chars.length) {\r\n\t\tret.push(nf(chars));\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction filter_fe0f(cps) {\r\n\treturn cps.filter(cp => cp != FE0F);\r\n}\r\n\r\n// given array of codepoints\r\n// returns the longest valid emoji sequence (or undefined if no match)\r\n// *MUTATES* the supplied array\r\n// disallows interleaved ignored characters\r\n// fills (optional) eaten array with matched codepoints\r\nfunction consume_emoji_reversed(cps, eaten) {\r\n\tlet node = EMOJI_ROOT;\r\n\tlet emoji;\r\n\tlet pos = cps.length;\r\n\twhile (pos) {\r\n\t\tnode = node.get(cps[--pos]);\r\n\t\tif (!node) break;\r\n\t\tlet {V} = node;\r\n\t\tif (V) { // this is a valid emoji (so far)\r\n\t\t\temoji = V;\r\n\t\t\tif (eaten) eaten.push(...cps.slice(pos).reverse()); // (optional) copy input, used for ens_tokenize()\r\n\t\t\tcps.length = pos; // truncate\r\n\t\t}\r\n\t}\r\n\treturn emoji;\r\n}\r\n\r\n// ************************************************************\r\n// tokenizer \r\n\r\nconst TY_VALID = 'valid';\r\nconst TY_MAPPED = 'mapped';\r\nconst TY_IGNORED = 'ignored';\r\nconst TY_DISALLOWED = 'disallowed';\r\nconst TY_EMOJI = 'emoji';\r\nconst TY_NFC = 'nfc';\r\nconst TY_STOP = 'stop';\r\n\r\nfunction ens_tokenize(name, {\r\n\tnf = true, // collapse unnormalized runs into a single token\r\n} = {}) {\r\n\tinit();\r\n\tlet input = explode_cp(name).reverse();\r\n\tlet eaten = [];\r\n\tlet tokens = [];\r\n\twhile (input.length) {\r\n\t\tlet emoji = consume_emoji_reversed(input, eaten);\r\n\t\tif (emoji) {\r\n\t\t\ttokens.push({\r\n\t\t\t\ttype: TY_EMOJI,\r\n\t\t\t\temoji: emoji.slice(), // copy emoji\r\n\t\t\t\tinput: eaten,\r\n\t\t\t\tcps: filter_fe0f(emoji)\r\n\t\t\t});\r\n\t\t\teaten = []; // reset buffer\r\n\t\t} else {\r\n\t\t\tlet cp = input.pop();\r\n\t\t\tif (cp == STOP) {\r\n\t\t\t\ttokens.push({type: TY_STOP, cp});\r\n\t\t\t} else if (VALID.has(cp)) {\r\n\t\t\t\ttokens.push({type: TY_VALID, cps: [cp]});\r\n\t\t\t} else if (IGNORED.has(cp)) {\r\n\t\t\t\ttokens.push({type: TY_IGNORED, cp});\r\n\t\t\t} else {\r\n\t\t\t\tlet cps = MAPPED.get(cp);\r\n\t\t\t\tif (cps) {\r\n\t\t\t\t\ttokens.push({type: TY_MAPPED, cp, cps: cps.slice()});\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttokens.push({type: TY_DISALLOWED, cp});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (nf) {\r\n\t\tfor (let i = 0, start = -1; i < tokens.length; i++) {\r\n\t\t\tlet token = tokens[i];\r\n\t\t\tif (is_valid_or_mapped(token.type)) {\r\n\t\t\t\tif (requires_check(token.cps)) { // normalization might be needed\r\n\t\t\t\t\tlet end = i + 1;\r\n\t\t\t\t\tfor (let pos = end; pos < tokens.length; pos++) { // find adjacent text\r\n\t\t\t\t\t\tlet {type, cps} = tokens[pos];\r\n\t\t\t\t\t\tif (is_valid_or_mapped(type)) {\r\n\t\t\t\t\t\t\tif (!requires_check(cps)) break;\r\n\t\t\t\t\t\t\tend = pos + 1;\r\n\t\t\t\t\t\t} else if (type !== TY_IGNORED) { // || type !== TY_DISALLOWED) { \r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (start < 0) start = i;\r\n\t\t\t\t\tlet slice = tokens.slice(start, end);\r\n\t\t\t\t\tlet cps0 = slice.flatMap(x => is_valid_or_mapped(x.type) ? x.cps : []); // strip junk tokens\r\n\t\t\t\t\tlet cps = nfc(cps0);\r\n\t\t\t\t\tif (compare_arrays(cps, cps0)) { // bundle into an nfc token\r\n\t\t\t\t\t\ttokens.splice(start, end - start, {\r\n\t\t\t\t\t\t\ttype: TY_NFC, \r\n\t\t\t\t\t\t\tinput: cps0, // there are 3 states: tokens0 ==(process)=> input ==(nfc)=> tokens/cps\r\n\t\t\t\t\t\t\tcps, \r\n\t\t\t\t\t\t\ttokens0: collapse_valid_tokens(slice),\r\n\t\t\t\t\t\t\ttokens: ens_tokenize(str_from_cps(cps), {nf: false})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\ti = start;\r\n\t\t\t\t\t} else { \r\n\t\t\t\t\t\ti = end - 1; // skip to end of slice\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstart = -1; // reset\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstart = i; // remember last\r\n\t\t\t\t}\r\n\t\t\t} else if (token.type !== TY_IGNORED) { // 20221024: is this correct?\r\n\t\t\t\tstart = -1; // reset\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn collapse_valid_tokens(tokens);\r\n}\r\n\r\nfunction is_valid_or_mapped(type) {\r\n\treturn type == TY_VALID || type == TY_MAPPED;\r\n}\r\n\r\nfunction requires_check(cps) {\r\n\treturn cps.some(cp => NFC_CHECK.has(cp));\r\n}\r\n\r\nfunction collapse_valid_tokens(tokens) {\r\n\tfor (let i = 0; i < tokens.length; i++) {\r\n\t\tif (tokens[i].type == TY_VALID) {\r\n\t\t\tlet j = i + 1;\r\n\t\t\twhile (j < tokens.length && tokens[j].type == TY_VALID) j++;\r\n\t\t\ttokens.splice(i, j - i, {type: TY_VALID, cps: tokens.slice(i, j).flatMap(x => x.cps)});\r\n\t\t}\r\n\t}\r\n\treturn tokens;\r\n}\n\nexport { ens_beautify, ens_emoji, ens_normalize, ens_normalize_fragment, ens_split, ens_tokenize, is_combining_mark, nfc, nfd, safe_str_from_cps, should_escape };\n", "\nimport { keccak256 } from \"../crypto/index.js\";\nimport {\n    concat, hexlify, assertArgument, toUtf8Bytes\n} from \"../utils/index.js\";\n\n\nimport { ens_normalize } from \"@adraffy/ens-normalize\";\n\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\n\nfunction checkComponent(comp: Uint8Array): Uint8Array {\n    assertArgument(comp.length !== 0, \"invalid ENS name; empty component\", \"comp\", comp)\n    return comp;\n}\n\nfunction ensNameSplit(name: string): Array<Uint8Array> {\n    const bytes = toUtf8Bytes(ensNormalize(name));\n    const comps: Array<Uint8Array> = [ ];\n\n    if (name.length === 0) { return comps; }\n\n    let last = 0;\n    for (let i = 0; i < bytes.length; i++) {\n        const d = bytes[i];\n\n        // A separator (i.e. \".\"); copy this component\n        if (d === 0x2e) {\n            comps.push(checkComponent(bytes.slice(last, i)));\n            last = i + 1;\n        }\n    }\n\n    // There was a stray separator at the end of the name\n    assertArgument(last < bytes.length, \"invalid ENS name; empty component\", \"name\", name);\n\n    comps.push(checkComponent(bytes.slice(last)));\n    return comps;\n}\n\n/**\n *  Returns the ENS %%name%% normalized.\n */\nexport function ensNormalize(name: string): string {\n    try {\n        if (name.length === 0) { throw new Error(\"empty label\"); }\n        return ens_normalize(name);\n    } catch (error: any) {\n        assertArgument(false, `invalid ENS name (${ error.message })`, \"name\", name);\n    }\n}\n\n/**\n *  Returns ``true`` if %%name%% is a valid ENS name.\n */\nexport function isValidName(name: string): name is string {\n    try {\n        return (ensNameSplit(name).length !== 0);\n    } catch (error) { }\n    return false;\n}\n\n/**\n *  Returns the [[link-namehash]] for %%name%%.\n */\nexport function namehash(name: string): string {\n    assertArgument(typeof(name) === \"string\", \"invalid ENS name; not a string\", \"name\", name);\n\n    assertArgument(name.length, `invalid ENS name (empty label)`, \"name\", name);\n\n    let result: string | Uint8Array = Zeros;\n\n    const comps = ensNameSplit(name);\n    while (comps.length) {\n        result = keccak256(concat([ result, keccak256(<Uint8Array>(comps.pop()))] ));\n    }\n\n    return hexlify(result);\n}\n\n/**\n *  Returns the DNS encoded %%name%%.\n *\n *  This is used for various parts of ENS name resolution, such\n *  as the wildcard resolution.\n */\nexport function dnsEncode(name: string, _maxLength?: number): string {\n    const length = (_maxLength != null) ? _maxLength: 63;\n\n    assertArgument(length <= 255, \"DNS encoded label cannot exceed 255\", \"length\", length);\n\n    return hexlify(concat(ensNameSplit(name).map((comp) => {\n        assertArgument(comp.length <= length, `label ${ JSON.stringify(name) } exceeds ${ length } bytes`, \"name\", name);\n\n        const bytes = new Uint8Array(comp.length + 1);\n        bytes.set(comp, 1);\n        bytes[0] = bytes.length - 1;\n        return bytes;\n    }))) + \"00\";\n}\n", "import { getAddress } from \"../address/index.js\";\nimport { assertArgument, isHexString } from \"../utils/index.js\";\n\nimport type { AccessList, AccessListish } from \"./index.js\";\n\n\nfunction accessSetify(addr: string, storageKeys: Array<string>): { address: string,storageKeys: Array<string> } {\n    return {\n        address: getAddress(addr),\n        storageKeys: storageKeys.map((storageKey, index) => {\n            assertArgument(isHexString(storageKey, 32), \"invalid slot\", `storageKeys[${ index }]`, storageKey);\n            return storageKey.toLowerCase();\n        })\n    };\n}\n\n/**\n *  Returns a [[AccessList]] from any ethers-supported access-list structure.\n */\nexport function accessListify(value: AccessListish): AccessList {\n    if (Array.isArray(value)) {\n        return (<Array<[ string, Array<string>] | { address: string, storageKeys: Array<string>}>>value).map((set, index) => {\n            if (Array.isArray(set)) {\n                assertArgument(set.length === 2, \"invalid slot set\", `value[${ index }]`, set);\n                return accessSetify(set[0], set[1])\n            }\n            assertArgument(set != null && typeof(set) === \"object\", \"invalid address-slot set\", \"value\", value);\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n\n    assertArgument(value != null && typeof(value) === \"object\", \"invalid access list\", \"value\", value);\n\n    const result: Array<{ address: string, storageKeys: Array<string> }> = Object.keys(value).map((addr) => {\n        const storageKeys: Record<string, true> = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, <Record<string, true>>{ });\n        return accessSetify(addr, Object.keys(storageKeys).sort())\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\n", "import { getAddress } from \"../address/index.js\";\nimport { keccak256, SigningKey } from \"../crypto/index.js\";\n\nimport type { SignatureLike } from \"../crypto/index.js\";\nimport type { BytesLike } from \"../utils/index.js\";\n\n/**\n *  Returns the address for the %%key%%.\n *\n *  The key may be any standard form of public key or a private key.\n */\nexport function computeAddress(key: string | SigningKey): string {\n    let pubkey: string;\n    if (typeof(key) === \"string\") {\n        pubkey = SigningKey.computePublicKey(key, false);\n    } else {\n        pubkey = key.publicKey;\n    }\n    return getAddress(keccak256(\"0x\" + pubkey.substring(4)).substring(26));\n}\n\n/**\n *  Returns the recovered address for the private key that was\n *  used to sign %%digest%% that resulted in %%signature%%.\n */\nexport function recoverAddress(digest: BytesLike, signature: SignatureLike): string {\n    return computeAddress(SigningKey.recoverPublicKey(digest, signature));\n}\n", "\nimport { getAddress } from \"../address/index.js\";\nimport { ZeroAddress } from \"../constants/addresses.js\";\nimport {\n    keccak256, sha256, Signature, SigningKey\n} from \"../crypto/index.js\";\nimport {\n    concat, decodeRlp, encodeRlp, getBytes, getBigInt, getNumber, hexlify,\n    assert, assertArgument, isBytesLike, isHexString, toBeArray, zeroPadValue\n} from \"../utils/index.js\";\n\nimport { accessListify } from \"./accesslist.js\";\nimport { recoverAddress } from \"./address.js\";\n\nimport type { BigNumberish, BytesLike } from \"../utils/index.js\";\nimport type { SignatureLike } from \"../crypto/index.js\";\n\nimport type { AccessList, AccessListish } from \"./index.js\";\n\n\nconst BN_0 = BigInt(0);\nconst BN_2 = BigInt(2);\nconst BN_27 = BigInt(27)\nconst BN_28 = BigInt(28)\nconst BN_35 = BigInt(35);\nconst BN_MAX_UINT = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\nconst BLOB_SIZE = 4096 * 32;\n\n// The BLS Modulo; each field within a BLOb must be less than this\n//const BLOB_BLS_MODULO = BigInt(\"0x73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001\");\n\n/**\n *  A **TransactionLike** is an object which is appropriate as a loose\n *  input for many operations which will populate missing properties of\n *  a transaction.\n */\nexport interface TransactionLike<A = string> {\n    /**\n     *  The type.\n     */\n    type?: null | number;\n\n    /**\n     *  The recipient address or ``null`` for an ``init`` transaction.\n     */\n    to?: null | A;\n\n    /**\n     *  The sender.\n     */\n    from?: null | A;\n\n    /**\n     *  The nonce.\n     */\n    nonce?: null | number;\n\n    /**\n     *  The maximum amount of gas that can be used.\n     */\n    gasLimit?: null | BigNumberish;\n\n    /**\n     *  The gas price for legacy and berlin transactions.\n     */\n    gasPrice?: null | BigNumberish;\n\n    /**\n     *  The maximum priority fee per gas for london transactions.\n     */\n    maxPriorityFeePerGas?: null | BigNumberish;\n\n    /**\n     *  The maximum total fee per gas for london transactions.\n     */\n    maxFeePerGas?: null | BigNumberish;\n\n    /**\n     *  The data.\n     */\n    data?: null | string;\n\n    /**\n     *  The value (in wei) to send.\n     */\n    value?: null | BigNumberish;\n\n    /**\n     *  The chain ID the transaction is valid on.\n     */\n    chainId?: null | BigNumberish;\n\n    /**\n     *  The transaction hash.\n     */\n    hash?: null | string;\n\n    /**\n     *  The signature provided by the sender.\n     */\n    signature?: null | SignatureLike;\n\n    /**\n     *  The access list for berlin and london transactions.\n     */\n    accessList?: null | AccessListish;\n\n    /**\n     *  The maximum fee per blob gas (see [[link-eip-4844]]).\n     */\n    maxFeePerBlobGas?: null | BigNumberish;\n\n    /**\n     *  The versioned hashes (see [[link-eip-4844]]).\n     */\n    blobVersionedHashes?: null | Array<string>;\n\n    /**\n     *  The blobs (if any) attached to this transaction (see [[link-eip-4844]]).\n     */\n    blobs?: null | Array<BlobLike>\n\n    /**\n     *  An external library for computing the KZG commitments and\n     *  proofs necessary for EIP-4844 transactions (see [[link-eip-4844]]).\n     *\n     *  This is generally ``null``, unless you are creating BLOb\n     *  transactions.\n     */\n    kzg?: null | KzgLibrary;\n}\n\n/**\n *  A full-valid BLOb object for [[link-eip-4844]] transactions.\n *\n *  The commitment and proof should have been computed using a\n *  KZG library.\n */\nexport interface Blob {\n    data: string;\n    proof: string;\n    commitment: string;\n}\n\n/**\n *  A BLOb object that can be passed for [[link-eip-4844]]\n *  transactions.\n *\n *  It may have had its commitment and proof already provided\n *  or rely on an attached [[KzgLibrary]] to compute them.\n */\nexport type BlobLike = BytesLike | {\n    data: BytesLike;\n    proof: BytesLike;\n    commitment: BytesLike;\n};\n\n/**\n *  A KZG Library with the necessary functions to compute\n *  BLOb commitments and proofs.\n */\nexport interface KzgLibrary {\n    blobToKzgCommitment: (blob: Uint8Array) => Uint8Array;\n    computeBlobKzgProof: (blob: Uint8Array, commitment: Uint8Array) => Uint8Array;\n}\n\nfunction getVersionedHash(version: number, hash: BytesLike): string {\n    let versioned = version.toString(16);\n    while (versioned.length < 2) { versioned = \"0\" + versioned; }\n    versioned += sha256(hash).substring(4);\n    return \"0x\" + versioned;\n}\n\nfunction handleAddress(value: string): null | string {\n    if (value === \"0x\") { return null; }\n    return getAddress(value);\n}\n\nfunction handleAccessList(value: any, param: string): AccessList {\n    try {\n        return accessListify(value);\n    } catch (error: any) {\n        assertArgument(false, error.message, param, value);\n    }\n}\n\nfunction handleNumber(_value: string, param: string): number {\n    if (_value === \"0x\") { return 0; }\n    return getNumber(_value, param);\n}\n\nfunction handleUint(_value: string, param: string): bigint {\n    if (_value === \"0x\") { return BN_0; }\n    const value = getBigInt(_value, param);\n    assertArgument(value <= BN_MAX_UINT, \"value exceeds uint size\", param, value);\n    return value;\n}\n\nfunction formatNumber(_value: BigNumberish, name: string): Uint8Array {\n    const value = getBigInt(_value, \"value\");\n    const result = toBeArray(value);\n    assertArgument(result.length <= 32, `value too large`, `tx.${ name }`, value);\n    return result;\n}\n\nfunction formatAccessList(value: AccessListish): Array<[ string, Array<string> ]> {\n    return accessListify(value).map((set) => [ set.address, set.storageKeys ]);\n}\n\nfunction formatHashes(value: Array<string>, param: string): Array<string> {\n    assertArgument(Array.isArray(value), `invalid ${ param }`, \"value\", value);\n    for (let i = 0; i < value.length; i++) {\n        assertArgument(isHexString(value[i], 32), \"invalid ${ param } hash\", `value[${ i }]`, value[i]);\n    }\n    return value;\n}\n\nfunction _parseLegacy(data: Uint8Array): TransactionLike {\n    const fields: any = decodeRlp(data);\n\n    assertArgument(Array.isArray(fields) && (fields.length === 9 || fields.length === 6),\n        \"invalid field count for legacy transaction\", \"data\", data);\n\n    const tx: TransactionLike = {\n        type:     0,\n        nonce:    handleNumber(fields[0], \"nonce\"),\n        gasPrice: handleUint(fields[1], \"gasPrice\"),\n        gasLimit: handleUint(fields[2], \"gasLimit\"),\n        to:       handleAddress(fields[3]),\n        value:    handleUint(fields[4], \"value\"),\n        data:     hexlify(fields[5]),\n        chainId:  BN_0\n    };\n\n    // Legacy unsigned transaction\n    if (fields.length === 6) { return tx; }\n\n    const v = handleUint(fields[6], \"v\");\n    const r = handleUint(fields[7], \"r\");\n    const s = handleUint(fields[8], \"s\");\n\n    if (r === BN_0 && s === BN_0) {\n        // EIP-155 unsigned transaction\n        tx.chainId = v;\n\n    } else {\n\n        // Compute the EIP-155 chain ID (or 0 for legacy)\n        let chainId = (v - BN_35) / BN_2;\n        if (chainId < BN_0) { chainId = BN_0; }\n        tx.chainId = chainId\n\n        // Signed Legacy Transaction\n        assertArgument(chainId !== BN_0 || (v === BN_27 || v === BN_28), \"non-canonical legacy v\", \"v\", fields[6]);\n\n        tx.signature = Signature.from({\n            r: zeroPadValue(fields[7], 32),\n            s: zeroPadValue(fields[8], 32),\n            v\n        });\n\n        //tx.hash = keccak256(data);\n    }\n\n    return tx;\n}\n\nfunction _serializeLegacy(tx: Transaction, sig: null | Signature): string {\n    const fields: Array<any> = [\n        formatNumber(tx.nonce, \"nonce\"),\n        formatNumber(tx.gasPrice || 0, \"gasPrice\"),\n        formatNumber(tx.gasLimit, \"gasLimit\"),\n        (tx.to || \"0x\"),\n        formatNumber(tx.value, \"value\"),\n        tx.data,\n    ];\n\n    let chainId = BN_0;\n    if (tx.chainId != BN_0) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = getBigInt(tx.chainId, \"tx.chainId\");\n\n        // We have a chainId in the tx and an EIP-155 v in the signature,\n        // make sure they agree with each other\n        assertArgument(!sig || sig.networkV == null || sig.legacyChainId === chainId,\n             \"tx.chainId/sig.v mismatch\", \"sig\", sig);\n\n    } else if (tx.signature) {\n        // No explicit chainId, but EIP-155 have a derived implicit chainId\n        const legacy = tx.signature.legacyChainId;\n        if (legacy != null) { chainId = legacy; }\n    }\n\n    // Requesting an unsigned transaction\n    if (!sig) {\n        // We have an EIP-155 transaction (chainId was specified and non-zero)\n        if (chainId !== BN_0) {\n            fields.push(toBeArray(chainId));\n            fields.push(\"0x\");\n            fields.push(\"0x\");\n        }\n\n        return encodeRlp(fields);\n    }\n\n    // @TODO: We should probably check that tx.signature, chainId, and sig\n    //        match but that logic could break existing code, so schedule\n    //        this for the next major bump.\n\n    // Compute the EIP-155 v\n    let v = BigInt(27 + sig.yParity);\n    if (chainId !== BN_0) {\n        v = Signature.getChainIdV(chainId, sig.v);\n    } else if (BigInt(sig.v) !== v) {\n        assertArgument(false, \"tx.chainId/sig.v mismatch\", \"sig\", sig);\n    }\n\n    // Add the signature\n    fields.push(toBeArray(v));\n    fields.push(toBeArray(sig.r));\n    fields.push(toBeArray(sig.s));\n\n    return encodeRlp(fields);\n}\n\nfunction _parseEipSignature(tx: TransactionLike, fields: Array<string>): void {\n    let yParity: number;\n    try {\n        yParity = handleNumber(fields[0], \"yParity\");\n        if (yParity !== 0 && yParity !== 1) { throw new Error(\"bad yParity\"); }\n    } catch (error) {\n        assertArgument(false, \"invalid yParity\", \"yParity\", fields[0]);\n    }\n\n    const r = zeroPadValue(fields[1], 32);\n    const s = zeroPadValue(fields[2], 32);\n\n    const signature = Signature.from({ r, s, yParity });\n    tx.signature = signature;\n}\n\nfunction _parseEip1559(data: Uint8Array): TransactionLike {\n    const fields: any = decodeRlp(getBytes(data).slice(1));\n\n    assertArgument(Array.isArray(fields) && (fields.length === 9 || fields.length === 12),\n        \"invalid field count for transaction type: 2\", \"data\", hexlify(data));\n\n    const tx: TransactionLike = {\n        type:                  2,\n        chainId:               handleUint(fields[0], \"chainId\"),\n        nonce:                 handleNumber(fields[1], \"nonce\"),\n        maxPriorityFeePerGas:  handleUint(fields[2], \"maxPriorityFeePerGas\"),\n        maxFeePerGas:          handleUint(fields[3], \"maxFeePerGas\"),\n        gasPrice:              null,\n        gasLimit:              handleUint(fields[4], \"gasLimit\"),\n        to:                    handleAddress(fields[5]),\n        value:                 handleUint(fields[6], \"value\"),\n        data:                  hexlify(fields[7]),\n        accessList:            handleAccessList(fields[8], \"accessList\"),\n    };\n\n    // Unsigned EIP-1559 Transaction\n    if (fields.length === 9) { return tx; }\n\n    //tx.hash = keccak256(data);\n\n    _parseEipSignature(tx, fields.slice(9));\n\n    return tx;\n}\n\nfunction _serializeEip1559(tx: Transaction, sig: null | Signature): string {\n    const fields: Array<any> = [\n        formatNumber(tx.chainId, \"chainId\"),\n        formatNumber(tx.nonce, \"nonce\"),\n        formatNumber(tx.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(tx.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(tx.gasLimit, \"gasLimit\"),\n        (tx.to || \"0x\"),\n        formatNumber(tx.value, \"value\"),\n        tx.data,\n        formatAccessList(tx.accessList || [ ])\n    ];\n\n    if (sig) {\n        fields.push(formatNumber(sig.yParity, \"yParity\"));\n        fields.push(toBeArray(sig.r));\n        fields.push(toBeArray(sig.s));\n    }\n\n    return concat([ \"0x02\", encodeRlp(fields)]);\n}\n\nfunction _parseEip2930(data: Uint8Array): TransactionLike {\n    const fields: any = decodeRlp(getBytes(data).slice(1));\n\n    assertArgument(Array.isArray(fields) && (fields.length === 8 || fields.length === 11),\n        \"invalid field count for transaction type: 1\", \"data\", hexlify(data));\n\n    const tx: TransactionLike = {\n        type:       1,\n        chainId:    handleUint(fields[0], \"chainId\"),\n        nonce:      handleNumber(fields[1], \"nonce\"),\n        gasPrice:   handleUint(fields[2], \"gasPrice\"),\n        gasLimit:   handleUint(fields[3], \"gasLimit\"),\n        to:         handleAddress(fields[4]),\n        value:      handleUint(fields[5], \"value\"),\n        data:       hexlify(fields[6]),\n        accessList: handleAccessList(fields[7], \"accessList\")\n    };\n\n    // Unsigned EIP-2930 Transaction\n    if (fields.length === 8) { return tx; }\n\n    //tx.hash = keccak256(data);\n\n    _parseEipSignature(tx, fields.slice(8));\n\n    return tx;\n}\n\nfunction _serializeEip2930(tx: Transaction, sig: null | Signature): string {\n    const fields: any = [\n        formatNumber(tx.chainId, \"chainId\"),\n        formatNumber(tx.nonce, \"nonce\"),\n        formatNumber(tx.gasPrice || 0, \"gasPrice\"),\n        formatNumber(tx.gasLimit, \"gasLimit\"),\n        (tx.to || \"0x\"),\n        formatNumber(tx.value, \"value\"),\n        tx.data,\n        formatAccessList(tx.accessList || [ ])\n    ];\n\n    if (sig) {\n        fields.push(formatNumber(sig.yParity, \"recoveryParam\"));\n        fields.push(toBeArray(sig.r));\n        fields.push(toBeArray(sig.s));\n    }\n\n    return concat([ \"0x01\", encodeRlp(fields)]);\n}\n\nfunction _parseEip4844(data: Uint8Array): TransactionLike {\n    let fields: any = decodeRlp(getBytes(data).slice(1));\n\n    let typeName = \"3\";\n\n    let blobs: null | Array<Blob> = null;\n\n    // Parse the network format\n    if (fields.length === 4 && Array.isArray(fields[0])) {\n        typeName = \"3 (network format)\";\n        const fBlobs = fields[1], fCommits = fields[2], fProofs = fields[3];\n        assertArgument(Array.isArray(fBlobs), \"invalid network format: blobs not an array\", \"fields[1]\", fBlobs);\n        assertArgument(Array.isArray(fCommits), \"invalid network format: commitments not an array\", \"fields[2]\", fCommits);\n        assertArgument(Array.isArray(fProofs), \"invalid network format: proofs not an array\", \"fields[3]\", fProofs);\n        assertArgument(fBlobs.length === fCommits.length, \"invalid network format: blobs/commitments length mismatch\", \"fields\", fields);\n        assertArgument(fBlobs.length === fProofs.length, \"invalid network format: blobs/proofs length mismatch\", \"fields\", fields);\n\n        blobs = [ ];\n        for (let i = 0; i < fields[1].length; i++) {\n            blobs.push({\n                data: fBlobs[i],\n                commitment: fCommits[i],\n                proof: fProofs[i],\n            });\n        }\n\n        fields = fields[0];\n    }\n\n    assertArgument(Array.isArray(fields) && (fields.length === 11 || fields.length === 14),\n        `invalid field count for transaction type: ${ typeName }`, \"data\", hexlify(data));\n\n    const tx: TransactionLike = {\n        type:                  3,\n        chainId:               handleUint(fields[0], \"chainId\"),\n        nonce:                 handleNumber(fields[1], \"nonce\"),\n        maxPriorityFeePerGas:  handleUint(fields[2], \"maxPriorityFeePerGas\"),\n        maxFeePerGas:          handleUint(fields[3], \"maxFeePerGas\"),\n        gasPrice:              null,\n        gasLimit:              handleUint(fields[4], \"gasLimit\"),\n        to:                    handleAddress(fields[5]),\n        value:                 handleUint(fields[6], \"value\"),\n        data:                  hexlify(fields[7]),\n        accessList:            handleAccessList(fields[8], \"accessList\"),\n        maxFeePerBlobGas:      handleUint(fields[9], \"maxFeePerBlobGas\"),\n        blobVersionedHashes:   fields[10]\n    };\n\n    if (blobs) { tx.blobs = blobs; }\n\n    assertArgument(tx.to != null, `invalid address for transaction type: ${ typeName }`, \"data\", data);\n\n    assertArgument(Array.isArray(tx.blobVersionedHashes), \"invalid blobVersionedHashes: must be an array\", \"data\", data);\n    for (let i = 0; i < tx.blobVersionedHashes.length; i++) {\n        assertArgument(isHexString(tx.blobVersionedHashes[i], 32), `invalid blobVersionedHash at index ${ i }: must be length 32`, \"data\", data);\n    }\n\n    // Unsigned EIP-4844 Transaction\n    if (fields.length === 11) { return tx; }\n\n    // @TODO: Do we need to do this? This is only called internally\n    // and used to verify hashes; it might save time to not do this\n    //tx.hash = keccak256(concat([ \"0x03\", encodeRlp(fields) ]));\n\n    _parseEipSignature(tx, fields.slice(11));\n\n    return tx;\n}\n\nfunction _serializeEip4844(tx: Transaction, sig: null | Signature, blobs: null | Array<Blob>): string {\n    const fields: Array<any> = [\n        formatNumber(tx.chainId, \"chainId\"),\n        formatNumber(tx.nonce, \"nonce\"),\n        formatNumber(tx.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(tx.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(tx.gasLimit, \"gasLimit\"),\n        (tx.to || ZeroAddress),\n        formatNumber(tx.value, \"value\"),\n        tx.data,\n        formatAccessList(tx.accessList || [ ]),\n        formatNumber(tx.maxFeePerBlobGas || 0, \"maxFeePerBlobGas\"),\n        formatHashes(tx.blobVersionedHashes || [ ], \"blobVersionedHashes\")\n    ];\n\n    if (sig) {\n        fields.push(formatNumber(sig.yParity, \"yParity\"));\n        fields.push(toBeArray(sig.r));\n        fields.push(toBeArray(sig.s));\n\n        // We have blobs; return the network wrapped format\n        if (blobs) {\n            return concat([\n                \"0x03\",\n                encodeRlp([\n                    fields,\n                    blobs.map((b) => b.data),\n                    blobs.map((b) => b.commitment),\n                    blobs.map((b) => b.proof),\n                ])\n            ]);\n        }\n\n    }\n\n    return concat([ \"0x03\", encodeRlp(fields)]);\n}\n\n/**\n *  A **Transaction** describes an operation to be executed on\n *  Ethereum by an Externally Owned Account (EOA). It includes\n *  who (the [[to]] address), what (the [[data]]) and how much (the\n *  [[value]] in ether) the operation should entail.\n *\n *  @example:\n *    tx = new Transaction()\n *    //_result:\n *\n *    tx.data = \"0x1234\";\n *    //_result:\n */\nexport class Transaction implements TransactionLike<string> {\n    #type: null | number;\n    #to: null | string;\n    #data: string;\n    #nonce: number;\n    #gasLimit: bigint;\n    #gasPrice: null | bigint;\n    #maxPriorityFeePerGas: null | bigint;\n    #maxFeePerGas: null | bigint;\n    #value: bigint;\n    #chainId: bigint;\n    #sig: null | Signature;\n    #accessList: null | AccessList;\n    #maxFeePerBlobGas: null | bigint;\n    #blobVersionedHashes: null | Array<string>;\n    #kzg: null | KzgLibrary;\n    #blobs: null | Array<Blob>;\n\n    /**\n     *  The transaction type.\n     *\n     *  If null, the type will be automatically inferred based on\n     *  explicit properties.\n     */\n    get type(): null | number { return this.#type; }\n    set type(value: null | number | string) {\n        switch (value) {\n            case null:\n                this.#type = null;\n                break;\n            case 0: case \"legacy\":\n                this.#type = 0;\n                break;\n            case 1: case \"berlin\": case \"eip-2930\":\n                this.#type = 1;\n                break;\n            case 2: case \"london\": case \"eip-1559\":\n                this.#type = 2;\n                break;\n            case 3: case \"cancun\": case \"eip-4844\":\n                this.#type = 3;\n                break;\n            default:\n                assertArgument(false, \"unsupported transaction type\", \"type\", value);\n        }\n    }\n\n    /**\n     *  The name of the transaction type.\n     */\n    get typeName(): null | string {\n        switch (this.type) {\n            case 0: return \"legacy\";\n            case 1: return \"eip-2930\";\n            case 2: return \"eip-1559\";\n            case 3: return \"eip-4844\";\n        }\n\n        return null;\n    }\n\n    /**\n     *  The ``to`` address for the transaction or ``null`` if the\n     *  transaction is an ``init`` transaction.\n     */\n    get to(): null | string {\n        const value = this.#to;\n        if (value == null && this.type === 3) { return ZeroAddress; }\n        return value;\n    }\n    set to(value: null | string) {\n        this.#to = (value == null) ? null: getAddress(value);\n    }\n\n    /**\n     *  The transaction nonce.\n     */\n    get nonce(): number { return this.#nonce; }\n    set nonce(value: BigNumberish) { this.#nonce = getNumber(value, \"value\"); }\n\n    /**\n     *  The gas limit.\n     */\n    get gasLimit(): bigint { return this.#gasLimit; }\n    set gasLimit(value: BigNumberish) { this.#gasLimit = getBigInt(value); }\n\n    /**\n     *  The gas price.\n     *\n     *  On legacy networks this defines the fee that will be paid. On\n     *  EIP-1559 networks, this should be ``null``.\n     */\n    get gasPrice(): null | bigint {\n        const value = this.#gasPrice;\n        if (value == null && (this.type === 0 || this.type === 1)) { return BN_0; }\n        return value;\n    }\n    set gasPrice(value: null | BigNumberish) {\n        this.#gasPrice = (value == null) ? null: getBigInt(value, \"gasPrice\");\n    }\n\n    /**\n     *  The maximum priority fee per unit of gas to pay. On legacy\n     *  networks this should be ``null``.\n     */\n    get maxPriorityFeePerGas(): null | bigint {\n        const value = this.#maxPriorityFeePerGas;\n        if (value == null) {\n            if (this.type === 2 || this.type === 3) { return BN_0; }\n            return null;\n        }\n        return value;\n    }\n    set maxPriorityFeePerGas(value: null | BigNumberish) {\n        this.#maxPriorityFeePerGas = (value == null) ? null: getBigInt(value, \"maxPriorityFeePerGas\");\n    }\n\n    /**\n     *  The maximum total fee per unit of gas to pay. On legacy\n     *  networks this should be ``null``.\n     */\n    get maxFeePerGas(): null | bigint {\n        const value = this.#maxFeePerGas;\n        if (value == null) {\n            if (this.type === 2 || this.type === 3) { return BN_0; }\n            return null;\n        }\n        return value;\n    }\n    set maxFeePerGas(value: null | BigNumberish) {\n        this.#maxFeePerGas = (value == null) ? null: getBigInt(value, \"maxFeePerGas\");\n    }\n\n    /**\n     *  The transaction data. For ``init`` transactions this is the\n     *  deployment code.\n     */\n    get data(): string { return this.#data; }\n    set data(value: BytesLike) { this.#data = hexlify(value); }\n\n    /**\n     *  The amount of ether (in wei) to send in this transactions.\n     */\n    get value(): bigint { return this.#value; }\n    set value(value: BigNumberish) {\n        this.#value = getBigInt(value, \"value\");\n    }\n\n    /**\n     *  The chain ID this transaction is valid on.\n     */\n    get chainId(): bigint { return this.#chainId; }\n    set chainId(value: BigNumberish) { this.#chainId = getBigInt(value); }\n\n    /**\n     *  If signed, the signature for this transaction.\n     */\n    get signature(): null | Signature { return this.#sig || null; }\n    set signature(value: null | SignatureLike) {\n        this.#sig = (value == null) ? null: Signature.from(value);\n    }\n\n    /**\n     *  The access list.\n     *\n     *  An access list permits discounted (but pre-paid) access to\n     *  bytecode and state variable access within contract execution.\n     */\n    get accessList(): null | AccessList {\n        const value = this.#accessList || null;\n        if (value == null) {\n            if (this.type === 1 || this.type === 2 || this.type === 3) {\n                // @TODO: in v7, this should assign the value or become\n                // a live object itself, otherwise mutation is inconsistent\n                return [ ];\n            }\n            return null;\n        }\n        return value;\n    }\n    set accessList(value: null | AccessListish) {\n        this.#accessList = (value == null) ? null: accessListify(value);\n    }\n\n    /**\n     *  The max fee per blob gas for Cancun transactions.\n     */\n    get maxFeePerBlobGas(): null | bigint {\n        const value = this.#maxFeePerBlobGas;\n        if (value == null && this.type === 3) { return BN_0; }\n        return value;\n    }\n    set maxFeePerBlobGas(value: null | BigNumberish) {\n        this.#maxFeePerBlobGas = (value == null) ? null: getBigInt(value, \"maxFeePerBlobGas\");\n    }\n\n    /**\n     *  The BLOb versioned hashes for Cancun transactions.\n     */\n    get blobVersionedHashes(): null | Array<string> {\n        // @TODO: Mutation is inconsistent; if unset, the returned value\n        // cannot mutate the object, if set it can\n        let value = this.#blobVersionedHashes;\n        if (value == null && this.type === 3) { return [ ]; }\n        return value;\n    }\n    set blobVersionedHashes(value: null | Array<string>) {\n        if (value != null) {\n            assertArgument(Array.isArray(value), \"blobVersionedHashes must be an Array\", \"value\", value);\n            value = value.slice();\n            for (let i = 0; i < value.length; i++) {\n                assertArgument(isHexString(value[i], 32), \"invalid blobVersionedHash\", `value[${ i }]`, value[i]);\n            }\n        }\n        this.#blobVersionedHashes = value;\n    }\n\n    /**\n     *  The BLObs for the Transaction, if any.\n     *\n     *  If ``blobs`` is non-``null``, then the [[seriailized]]\n     *  will return the network formatted sidecar, otherwise it\n     *  will return the standard [[link-eip-2718]] payload. The\n     *  [[unsignedSerialized]] is unaffected regardless.\n     *\n     *  When setting ``blobs``, either fully valid [[Blob]] objects\n     *  may be specified (i.e. correctly padded, with correct\n     *  committments and proofs) or a raw [[BytesLike]] may\n     *  be provided.\n     *\n     *  If raw [[BytesLike]] are provided, the [[kzg]] property **must**\n     *  be already set. The blob will be correctly padded and the\n     *  [[KzgLibrary]] will be used to compute the committment and\n     *  proof for the blob.\n     *\n     *  A BLOb is a sequence of field elements, each of which must\n     *  be within the BLS field modulo, so some additional processing\n     *  may be required to encode arbitrary data to ensure each 32 byte\n     *  field is within the valid range.\n     *\n     *  Setting this automatically populates [[blobVersionedHashes]],\n     *  overwriting any existing values. Setting this to ``null``\n     *  does **not** remove the [[blobVersionedHashes]], leaving them\n     *  present.\n     */\n    get blobs(): null | Array<Blob> {\n        if (this.#blobs == null) { return null; }\n        return this.#blobs.map((b) => Object.assign({ }, b));\n    }\n    set blobs(_blobs: null | Array<BlobLike>) {\n        if (_blobs == null) {\n            this.#blobs = null;\n            return;\n        }\n\n        const blobs: Array<Blob> = [ ];\n        const versionedHashes: Array<string> = [ ];\n        for (let i = 0; i < _blobs.length; i++) {\n            const blob = _blobs[i];\n\n            if (isBytesLike(blob)) {\n                assert(this.#kzg, \"adding a raw blob requires a KZG library\", \"UNSUPPORTED_OPERATION\", {\n                    operation: \"set blobs()\"\n                });\n\n                let data = getBytes(blob);\n                assertArgument(data.length <= BLOB_SIZE, \"blob is too large\", `blobs[${ i }]`, blob);\n\n                // Pad blob if necessary\n                if (data.length !== BLOB_SIZE) {\n                    const padded = new Uint8Array(BLOB_SIZE);\n                    padded.set(data);\n                    data = padded;\n                }\n\n                const commit = this.#kzg.blobToKzgCommitment(data);\n                const proof = hexlify(this.#kzg.computeBlobKzgProof(data, commit));\n\n                blobs.push({\n                    data: hexlify(data),\n                    commitment: hexlify(commit),\n                    proof\n                });\n                versionedHashes.push(getVersionedHash(1, commit));\n\n            } else {\n                const commit = hexlify(blob.commitment);\n                blobs.push({\n                    data: hexlify(blob.data),\n                    commitment: commit,\n                    proof: hexlify(blob.proof)\n                });\n                versionedHashes.push(getVersionedHash(1, commit));\n            }\n        }\n\n        this.#blobs = blobs;\n        this.#blobVersionedHashes = versionedHashes;\n    }\n\n    get kzg(): null | KzgLibrary { return this.#kzg; }\n    set kzg(kzg: null | KzgLibrary) {\n        this.#kzg = kzg;\n    }\n\n    /**\n     *  Creates a new Transaction with default values.\n     */\n    constructor() {\n        this.#type = null;\n        this.#to = null;\n        this.#nonce = 0;\n        this.#gasLimit = BN_0;\n        this.#gasPrice = null;\n        this.#maxPriorityFeePerGas = null;\n        this.#maxFeePerGas = null;\n        this.#data = \"0x\";\n        this.#value = BN_0;\n        this.#chainId = BN_0;\n        this.#sig = null;\n        this.#accessList = null;\n        this.#maxFeePerBlobGas = null;\n        this.#blobVersionedHashes = null;\n        this.#blobs = null;\n        this.#kzg = null;\n    }\n\n    /**\n     *  The transaction hash, if signed. Otherwise, ``null``.\n     */\n    get hash(): null | string {\n        if (this.signature == null) { return null; }\n        return keccak256(this.#getSerialized(true, false));\n    }\n\n    /**\n     *  The pre-image hash of this transaction.\n     *\n     *  This is the digest that a [[Signer]] must sign to authorize\n     *  this transaction.\n     */\n    get unsignedHash(): string {\n        return keccak256(this.unsignedSerialized);\n    }\n\n    /**\n     *  The sending address, if signed. Otherwise, ``null``.\n     */\n    get from(): null | string {\n        if (this.signature == null) { return null; }\n        return recoverAddress(this.unsignedHash, this.signature);\n    }\n\n    /**\n     *  The public key of the sender, if signed. Otherwise, ``null``.\n     */\n    get fromPublicKey(): null | string {\n        if (this.signature == null) { return null; }\n        return SigningKey.recoverPublicKey(this.unsignedHash, this.signature);\n    }\n\n    /**\n     *  Returns true if signed.\n     *\n     *  This provides a Type Guard that properties requiring a signed\n     *  transaction are non-null.\n     */\n    isSigned(): this is (Transaction & { type: number, typeName: string, from: string, signature: Signature }) {\n        return this.signature != null;\n    }\n\n    #getSerialized(signed: boolean, sidecar: boolean): string {\n        assert(!signed || this.signature != null, \"cannot serialize unsigned transaction; maybe you meant .unsignedSerialized\", \"UNSUPPORTED_OPERATION\", { operation: \".serialized\"});\n\n        const sig = signed ? this.signature: null;\n        switch (this.inferType()) {\n            case 0:\n                return _serializeLegacy(this, sig);\n            case 1:\n                return _serializeEip2930(this, sig);\n            case 2:\n                return _serializeEip1559(this, sig);\n            case 3:\n                return _serializeEip4844(this, sig, sidecar ? this.blobs: null);\n        }\n\n        assert(false, \"unsupported transaction type\", \"UNSUPPORTED_OPERATION\", { operation: \".serialized\" });\n    }\n\n    /**\n     *  The serialized transaction.\n     *\n     *  This throws if the transaction is unsigned. For the pre-image,\n     *  use [[unsignedSerialized]].\n     */\n    get serialized(): string {\n        return this.#getSerialized(true, true);\n    }\n\n    /**\n     *  The transaction pre-image.\n     *\n     *  The hash of this is the digest which needs to be signed to\n     *  authorize this transaction.\n     */\n    get unsignedSerialized(): string {\n        return this.#getSerialized(false, false);\n    }\n\n    /**\n     *  Return the most \"likely\" type; currently the highest\n     *  supported transaction type.\n     */\n    inferType(): number {\n        const types = this.inferTypes();\n\n        // Prefer London (EIP-1559) over Cancun (BLOb)\n        if (types.indexOf(2) >= 0) { return 2; }\n\n        // Return the highest inferred type\n        return <number>(types.pop());\n    }\n\n    /**\n     *  Validates the explicit properties and returns a list of compatible\n     *  transaction types.\n     */\n    inferTypes(): Array<number> {\n\n        // Checks that there are no conflicting properties set\n        const hasGasPrice = this.gasPrice != null;\n        const hasFee = (this.maxFeePerGas != null || this.maxPriorityFeePerGas != null);\n        const hasAccessList = (this.accessList != null);\n        const hasBlob = (this.#maxFeePerBlobGas != null || this.#blobVersionedHashes);\n\n        //if (hasGasPrice && hasFee) {\n        //    throw new Error(\"transaction cannot have gasPrice and maxFeePerGas\");\n        //}\n\n        if (this.maxFeePerGas != null && this.maxPriorityFeePerGas != null) {\n            assert(this.maxFeePerGas >= this.maxPriorityFeePerGas, \"priorityFee cannot be more than maxFee\", \"BAD_DATA\", { value: this });\n        }\n\n        //if (this.type === 2 && hasGasPrice) {\n        //    throw new Error(\"eip-1559 transaction cannot have gasPrice\");\n        //}\n\n        assert(!hasFee || (this.type !== 0 && this.type !== 1), \"transaction type cannot have maxFeePerGas or maxPriorityFeePerGas\", \"BAD_DATA\", { value: this });\n        assert(this.type !== 0 || !hasAccessList, \"legacy transaction cannot have accessList\", \"BAD_DATA\", { value: this })\n\n        const types: Array<number> = [ ];\n\n        // Explicit type\n        if (this.type != null) {\n            types.push(this.type);\n\n        } else {\n            if (hasFee) {\n                types.push(2);\n            } else if (hasGasPrice) {\n                types.push(1);\n                if (!hasAccessList) { types.push(0); }\n            } else if (hasAccessList) {\n                types.push(1);\n                types.push(2);\n            } else if (hasBlob && this.to) {\n                types.push(3);\n            } else {\n                types.push(0);\n                types.push(1);\n                types.push(2);\n                types.push(3);\n            }\n        }\n\n        types.sort();\n\n        return types;\n    }\n\n    /**\n     *  Returns true if this transaction is a legacy transaction (i.e.\n     *  ``type === 0``).\n     *\n     *  This provides a Type Guard that the related properties are\n     *  non-null.\n     */\n    isLegacy(): this is (Transaction & { type: 0, gasPrice: bigint }) {\n        return (this.type === 0);\n    }\n\n    /**\n     *  Returns true if this transaction is berlin hardform transaction (i.e.\n     *  ``type === 1``).\n     *\n     *  This provides a Type Guard that the related properties are\n     *  non-null.\n     */\n    isBerlin(): this is (Transaction & { type: 1, gasPrice: bigint, accessList: AccessList }) {\n        return (this.type === 1);\n    }\n\n    /**\n     *  Returns true if this transaction is london hardform transaction (i.e.\n     *  ``type === 2``).\n     *\n     *  This provides a Type Guard that the related properties are\n     *  non-null.\n     */\n    isLondon(): this is (Transaction & { type: 2, accessList: AccessList, maxFeePerGas: bigint, maxPriorityFeePerGas: bigint }) {\n        return (this.type === 2);\n    }\n\n    /**\n     *  Returns true if this transaction is an [[link-eip-4844]] BLOB\n     *  transaction.\n     *\n     *  This provides a Type Guard that the related properties are\n     *  non-null.\n     */\n    isCancun(): this is (Transaction & { type: 3, to: string, accessList: AccessList, maxFeePerGas: bigint, maxPriorityFeePerGas: bigint, maxFeePerBlobGas: bigint, blobVersionedHashes: Array<string> }) {\n        return (this.type === 3);\n    }\n\n    /**\n     *  Create a copy of this transaciton.\n     */\n    clone(): Transaction {\n        return Transaction.from(this);\n    }\n\n    /**\n     *  Return a JSON-friendly object.\n     */\n    toJSON(): any {\n        const s = (v: null | bigint) => {\n            if (v == null) { return null; }\n            return v.toString();\n        };\n\n        return {\n            type: this.type,\n            to: this.to,\n//            from: this.from,\n            data: this.data,\n            nonce: this.nonce,\n            gasLimit: s(this.gasLimit),\n            gasPrice: s(this.gasPrice),\n            maxPriorityFeePerGas: s(this.maxPriorityFeePerGas),\n            maxFeePerGas: s(this.maxFeePerGas),\n            value: s(this.value),\n            chainId: s(this.chainId),\n            sig: this.signature ? this.signature.toJSON(): null,\n            accessList: this.accessList\n        };\n    }\n\n    /**\n     *  Create a **Transaction** from a serialized transaction or a\n     *  Transaction-like object.\n     */\n    static from(tx?: string | TransactionLike<string>): Transaction {\n        if (tx == null) { return new Transaction(); }\n\n        if (typeof(tx) === \"string\") {\n            const payload = getBytes(tx);\n\n            if (payload[0] >= 0x7f) { // @TODO: > vs >= ??\n                return Transaction.from(_parseLegacy(payload));\n            }\n\n            switch(payload[0]) {\n                case 1: return Transaction.from(_parseEip2930(payload));\n                case 2: return Transaction.from(_parseEip1559(payload));\n                case 3: return Transaction.from(_parseEip4844(payload));\n            }\n            assert(false, \"unsupported transaction type\", \"UNSUPPORTED_OPERATION\", { operation: \"from\" });\n        }\n\n        const result = new Transaction();\n        if (tx.type != null) { result.type = tx.type; }\n        if (tx.to != null) { result.to = tx.to; }\n        if (tx.nonce != null) { result.nonce = tx.nonce; }\n        if (tx.gasLimit != null) { result.gasLimit = tx.gasLimit; }\n        if (tx.gasPrice != null) { result.gasPrice = tx.gasPrice; }\n        if (tx.maxPriorityFeePerGas != null) { result.maxPriorityFeePerGas = tx.maxPriorityFeePerGas; }\n        if (tx.maxFeePerGas != null) { result.maxFeePerGas = tx.maxFeePerGas; }\n        if (tx.maxFeePerBlobGas != null) { result.maxFeePerBlobGas = tx.maxFeePerBlobGas; }\n        if (tx.data != null) { result.data = tx.data; }\n        if (tx.value != null) { result.value = tx.value; }\n        if (tx.chainId != null) { result.chainId = tx.chainId; }\n        if (tx.signature != null) { result.signature = Signature.from(tx.signature); }\n        if (tx.accessList != null) { result.accessList = tx.accessList; }\n\n        // This will get overwritten by blobs, if present\n        if (tx.blobVersionedHashes != null) { result.blobVersionedHashes = tx.blobVersionedHashes; }\n\n        // Make sure we assign the kzg before assigning blobs, which\n        // require the library in the event raw blob data is provided.\n        if (tx.kzg != null) { result.kzg = tx.kzg; }\n        if (tx.blobs != null) { result.blobs = tx.blobs; }\n\n        if (tx.hash != null) {\n            assertArgument(result.isSigned(), \"unsigned transaction cannot define '.hash'\", \"tx\", tx);\n            assertArgument(result.hash === tx.hash, \"hash mismatch\", \"tx\", tx);\n        }\n\n        if (tx.from != null) {\n            assertArgument(result.isSigned(), \"unsigned transaction cannot define '.from'\", \"tx\", tx);\n            assertArgument(result.from.toLowerCase() === (tx.from || \"\").toLowerCase(), \"from mismatch\", \"tx\", tx);\n        }\n\n        return result;\n    }\n}\n", "import { keccak256 } from \"../crypto/index.js\";\nimport { MessagePrefix } from \"../constants/index.js\";\nimport { recoverAddress } from \"../transaction/index.js\";\nimport { concat, toUtf8Bytes } from \"../utils/index.js\";\n\nimport type { SignatureLike } from \"../crypto/index.js\";\n/**\n *  Computes the [[link-eip-191]] personal-sign message digest to sign.\n *\n *  This prefixes the message with [[MessagePrefix]] and the decimal length\n *  of %%message%% and computes the [[keccak256]] digest.\n *\n *  If %%message%% is a string, it is converted to its UTF-8 bytes\n *  first. To compute the digest of a [[DataHexString]], it must be converted\n *  to [bytes](getBytes).\n *\n *  @example:\n *    hashMessage(\"Hello World\")\n *    //_result:\n *\n *    // Hashes the SIX (6) string characters, i.e.\n *    // [ \"0\", \"x\", \"4\", \"2\", \"4\", \"3\" ]\n *    hashMessage(\"0x4243\")\n *    //_result:\n *\n *    // Hashes the TWO (2) bytes [ 0x42, 0x43 ]...\n *    hashMessage(getBytes(\"0x4243\"))\n *    //_result:\n *\n *    // ...which is equal to using data\n *    hashMessage(new Uint8Array([ 0x42, 0x43 ]))\n *    //_result:\n *\n */\nexport function hashMessage(message: Uint8Array | string): string {\n    if (typeof(message) === \"string\") { message = toUtf8Bytes(message); }\n    return keccak256(concat([\n        toUtf8Bytes(MessagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n\n/**\n *  Return the address of the private key that produced\n *  the signature %%sig%% during signing for %%message%%.\n */\nexport function verifyMessage(message: Uint8Array | string, sig: SignatureLike): string {\n    const digest = hashMessage(message);\n    return recoverAddress(digest, sig);\n}\n", "import { getAddress } from \"../address/index.js\";\nimport {\n    keccak256 as _keccak256, sha256 as _sha256\n} from \"../crypto/index.js\";\nimport {\n    concat, dataLength, getBytes, hexlify, toBeArray, toTwos, toUtf8Bytes, zeroPadBytes, zeroPadValue,\n    assertArgument\n} from \"../utils/index.js\";\n\n\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\n\n\nfunction _pack(type: string, value: any, isArray?: boolean): Uint8Array {\n    switch(type) {\n        case \"address\":\n            if (isArray) { return getBytes(zeroPadValue(value, 32)); }\n            return getBytes(getAddress(value));\n        case \"string\":\n            return toUtf8Bytes(value);\n        case \"bytes\":\n            return getBytes(value);\n        case \"bool\":\n            value = (!!value ? \"0x01\": \"0x00\");\n            if (isArray) { return getBytes(zeroPadValue(value, 32)); }\n            return getBytes(value);\n    }\n\n    let match =  type.match(regexNumber);\n    if (match) {\n        let signed = (match[1] === \"int\");\n        let size = parseInt(match[2] || \"256\")\n\n        assertArgument((!match[2] || match[2] === String(size)) && (size % 8 === 0) && size !== 0 && size <= 256, \"invalid number type\", \"type\", type);\n\n        if (isArray) { size = 256; }\n\n        if (signed) { value = toTwos(value, size); }\n\n        return getBytes(zeroPadValue(toBeArray(value), size / 8));\n    }\n\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n\n        assertArgument(String(size) === match[1] && size !== 0 && size <= 32, \"invalid bytes type\", \"type\", type);\n        assertArgument(dataLength(value) === size, `invalid value for ${ type }`, \"value\", value);\n\n        if (isArray) { return getBytes(zeroPadBytes(value, 32)); }\n        return value;\n    }\n\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        assertArgument(count === value.length, `invalid array length for ${ type }`, \"value\", value);\n\n        const result: Array<Uint8Array> = [];\n        value.forEach(function(value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return getBytes(concat(result));\n    }\n\n    assertArgument(false, \"invalid type\", \"type\", type)\n}\n\n// @TODO: Array Enum\n\n/**\n *   Computes the [[link-solc-packed]] representation of %%values%%\n *   respectively to their %%types%%.\n *\n *   @example:\n *       addr = \"0x8ba1f109551bd432803012645ac136ddd64dba72\"\n *       solidityPacked([ \"address\", \"uint\" ], [ addr, 45 ]);\n *       //_result:\n */\nexport function solidityPacked(types: ReadonlyArray<string>, values: ReadonlyArray<any>): string {\n    assertArgument(types.length === values.length, \"wrong number of values; expected ${ types.length }\", \"values\", values);\n\n    const tight: Array<Uint8Array> = [];\n    types.forEach(function(type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return hexlify(concat(tight));\n}\n\n/**\n *   Computes the [[link-solc-packed]] [[keccak256]] hash of %%values%%\n *   respectively to their %%types%%.\n *\n *   @example:\n *       addr = \"0x8ba1f109551bd432803012645ac136ddd64dba72\"\n *       solidityPackedKeccak256([ \"address\", \"uint\" ], [ addr, 45 ]);\n *       //_result:\n */\nexport function solidityPackedKeccak256(types: ReadonlyArray<string>, values: ReadonlyArray<any>): string {\n    return _keccak256(solidityPacked(types, values));\n}\n\n/**\n *   Computes the [[link-solc-packed]] [[sha256]] hash of %%values%%\n *   respectively to their %%types%%.\n *\n *   @example:\n *       addr = \"0x8ba1f109551bd432803012645ac136ddd64dba72\"\n *       solidityPackedSha256([ \"address\", \"uint\" ], [ addr, 45 ]);\n *       //_result:\n */\nexport function solidityPackedSha256(types: ReadonlyArray<string>, values: ReadonlyArray<any>): string {\n    return _sha256(solidityPacked(types, values));\n}\n", "//import { TypedDataDomain, TypedDataField } from \"@ethersproject/providerabstract-signer\";\nimport { getAddress } from \"../address/index.js\";\nimport { keccak256 } from \"../crypto/index.js\";\nimport { recoverAddress } from \"../transaction/index.js\";\nimport {\n    concat, defineProperties, getBigInt, getBytes, hexlify, isHexString, mask, toBeHex, toQuantity, toTwos, zeroPadValue,\n    assertArgument\n} from \"../utils/index.js\";\n\nimport { id } from \"./id.js\";\n\nimport type { SignatureLike } from \"../crypto/index.js\";\nimport type { BigNumberish, BytesLike } from \"../utils/index.js\";\n\n\nconst padding = new Uint8Array(32);\npadding.fill(0);\n\nconst BN__1 = BigInt(-1);\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_MAX_UINT256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\n// @TODO: in v7, verifyingContract should be an AddressLike and use resolveAddress\n\n/**\n *  The domain for an [[link-eip-712]] payload.\n */\nexport interface TypedDataDomain {\n    /**\n     *  The human-readable name of the signing domain.\n     */\n    name?: null | string;\n\n    /**\n     *  The major version of the signing domain.\n     */\n    version?: null | string;\n\n    /**\n     *  The chain ID of the signing domain.\n     */\n    chainId?: null | BigNumberish;\n\n    /**\n     *  The the address of the contract that will verify the signature.\n     */\n    verifyingContract?: null | string;\n\n    /**\n     *  A salt used for purposes decided by the specific domain.\n     */\n    salt?: null | BytesLike;\n};\n\n/**\n *  A specific field of a structured [[link-eip-712]] type.\n */\nexport interface TypedDataField {\n    /**\n     *  The field name.\n     */\n    name: string;\n\n    /**\n     *  The type of the field.\n     */\n    type: string;\n};\n\nfunction hexPadRight(value: BytesLike): string {\n    const bytes = getBytes(value);\n    const padOffset = bytes.length % 32\n    if (padOffset) {\n        return concat([ bytes, padding.slice(padOffset) ]);\n    }\n    return hexlify(bytes);\n}\n\nconst hexTrue = toBeHex(BN_1, 32);\nconst hexFalse = toBeHex(BN_0, 32);\n\nconst domainFieldTypes: Record<string, string> = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\n\nconst domainFieldNames: Array<string> = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\n\nfunction checkString(key: string): (value: any) => string {\n    return function (value: any){\n        assertArgument(typeof(value) === \"string\", `invalid domain value for ${ JSON.stringify(key) }`, `domain.${ key }`, value);\n        return value;\n    }\n}\n\nconst domainChecks: Record<string, (value: any) => any> = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function(_value: any) {\n        const value = getBigInt(_value, \"domain.chainId\");\n        assertArgument(value >= 0, \"invalid chain ID\", \"domain.chainId\", _value);\n        if (Number.isSafeInteger(value)) { return Number(value); }\n        return toQuantity(value);\n    },\n    verifyingContract: function(value: any) {\n        try {\n            return getAddress(value).toLowerCase();\n        } catch (error) { }\n        assertArgument(false, `invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function(value: any) {\n        const bytes = getBytes(value, \"domain.salt\");\n        assertArgument(bytes.length === 32, `invalid domain value \"salt\"`, \"domain.salt\", value);\n        return hexlify(bytes);\n    }\n}\n\nfunction getBaseEncoder(type: string): null | ((value: any) => string) {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d+)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n\n            const width = parseInt(match[2]);\n            assertArgument(width % 8 === 0 && width !== 0 && width <= 256 && match[2] === String(width), \"invalid numeric width\", \"type\", type);\n\n            const boundsUpper = mask(BN_MAX_UINT256, signed ? (width - 1): width);\n            const boundsLower = signed ? ((boundsUpper + BN_1) * BN__1): BN_0;\n\n            return function(_value: BigNumberish) {\n                const value = getBigInt(_value, \"value\");\n\n                assertArgument(value >= boundsLower && value <= boundsUpper, `value out-of-bounds for ${ type }`, \"value\", value);\n\n                return toBeHex(signed ? toTwos(value, 256): value, 32);\n            };\n        }\n    }\n\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            assertArgument(width !== 0 && width <= 32 && match[1] === String(width), \"invalid bytes width\", \"type\", type);\n\n            return function(value: BytesLike) {\n                const bytes = getBytes(value);\n                assertArgument(bytes.length === width, `invalid length for ${ type }`, \"value\", value);\n                return hexPadRight(value);\n            };\n        }\n    }\n\n    switch (type) {\n        case \"address\": return function(value: string) {\n            return zeroPadValue(getAddress(value), 32);\n        };\n        case \"bool\": return function(value: boolean) {\n            return ((!value) ? hexFalse: hexTrue);\n        };\n        case \"bytes\": return function(value: BytesLike) {\n            return keccak256(value);\n        };\n        case \"string\": return function(value: string) {\n            return id(value);\n        };\n    }\n\n    return null;\n}\n\nfunction encodeType(name: string, fields: Array<TypedDataField>): string {\n    return `${ name }(${ fields.map(({ name, type }) => (type + \" \" + name)).join(\",\") })`;\n}\n\ntype ArrayResult = {\n    base: string;         // The base type\n    index?: string;       // the full Index (if any)\n    array?: {             // The Array... (if index)\n        base: string;     // ...base type (same as above)\n        prefix: string;   // ...sans the final Index\n        count: number;    // ...the final Index (-1 for dynamic)\n    }\n};\n\n// foo[][3] => { base: \"foo\", index: \"[][3]\", array: {\n//     base: \"foo\", prefix: \"foo[]\", count: 3 } }\nfunction splitArray(type: string): ArrayResult {\n    const match = type.match(/^([^\\x5b]*)((\\x5b\\d*\\x5d)*)(\\x5b(\\d*)\\x5d)$/);\n    if (match) {\n        return {\n            base: match[1],\n            index: (match[2] + match[4]),\n            array: {\n                base: match[1],\n                prefix: (match[1] + match[2]),\n                count: (match[5] ? parseInt(match[5]): -1),\n            }\n        };\n    }\n\n    return { base: type };\n}\n\n/**\n *  A **TypedDataEncode** prepares and encodes [[link-eip-712]] payloads\n *  for signed typed data.\n *\n *  This is useful for those that wish to compute various components of a\n *  typed data hash, primary types, or sub-components, but generally the\n *  higher level [[Signer-signTypedData]] is more useful.\n */\nexport class TypedDataEncoder {\n    /**\n     *  The primary type for the structured [[types]].\n     *\n     *  This is derived automatically from the [[types]], since no\n     *  recursion is possible, once the DAG for the types is consturcted\n     *  internally, the primary type must be the only remaining type with\n     *  no parent nodes.\n     */\n    readonly primaryType!: string;\n\n    readonly #types: string;\n\n    /**\n     *  The types.\n     */\n    get types(): Record<string, Array<TypedDataField>> {\n        return JSON.parse(this.#types);\n    }\n\n    readonly #fullTypes: Map<string, string>\n\n    readonly #encoderCache: Map<string, (value: any) => string>;\n\n    /**\n     *  Create a new **TypedDataEncoder** for %%types%%.\n     *\n     *  This performs all necessary checking that types are valid and\n     *  do not violate the [[link-eip-712]] structural constraints as\n     *  well as computes the [[primaryType]].\n     */\n    constructor(_types: Record<string, Array<TypedDataField>>) {\n        this.#fullTypes = new Map();\n        this.#encoderCache = new Map();\n\n        // Link struct types to their direct child structs\n        const links: Map<string, Set<string>> = new Map();\n\n        // Link structs to structs which contain them as a child\n        const parents: Map<string, Array<string>> = new Map();\n\n        // Link all subtypes within a given struct\n        const subtypes: Map<string, Set<string>> = new Map();\n\n        const types: Record<string, Array<TypedDataField>> = { };\n        Object.keys(_types).forEach((type) => {\n            types[type] = _types[type].map(({ name, type }) => {\n\n                // Normalize the base type (unless name conflict)\n                let { base, index } = splitArray(type);\n                if (base === \"int\" && !_types[\"int\"]) { base = \"int256\"; }\n                if (base === \"uint\" && !_types[\"uint\"]) { base = \"uint256\"; }\n\n                return { name, type: (base + (index || \"\")) };\n            });\n\n            links.set(type, new Set());\n            parents.set(type, [ ]);\n            subtypes.set(type, new Set());\n        });\n        this.#types = JSON.stringify(types);\n\n        for (const name in types) {\n            const uniqueNames: Set<string> = new Set();\n\n            for (const field of types[name]) {\n\n                // Check each field has a unique name\n                assertArgument(!uniqueNames.has(field.name), `duplicate variable name ${ JSON.stringify(field.name) } in ${ JSON.stringify(name) }`, \"types\", _types);\n                uniqueNames.add(field.name);\n\n                // Get the base type (drop any array specifiers)\n                const baseType = splitArray(field.type).base;\n                assertArgument(baseType !== name, `circular type reference to ${ JSON.stringify(baseType) }`, \"types\", _types);\n\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) { continue; }\n\n                assertArgument(parents.has(baseType), `unknown type ${ JSON.stringify(baseType) }`, \"types\", _types);\n\n                // Add linkage\n                (parents.get(baseType) as Array<string>).push(name);\n                (links.get(name) as Set<string>).add(baseType);\n            }\n        }\n\n        // Deduce the primary type\n        const primaryTypes = Array.from(parents.keys()).filter((n) => ((parents.get(n) as Array<string>).length === 0));\n        assertArgument(primaryTypes.length !== 0, \"missing primary type\", \"types\", _types);\n        assertArgument(primaryTypes.length === 1, `ambiguous primary types or unused types: ${ primaryTypes.map((t) => (JSON.stringify(t))).join(\", \") }`, \"types\", _types);\n\n        defineProperties<TypedDataEncoder>(this, { primaryType: primaryTypes[0] });\n\n        // Check for circular type references\n        function checkCircular(type: string, found: Set<string>) {\n            assertArgument(!found.has(type), `circular type reference to ${ JSON.stringify(type) }`, \"types\", _types);\n\n            found.add(type);\n\n            for (const child of (links.get(type) as Set<string>)) {\n                if (!parents.has(child)) { continue; }\n\n                // Recursively check children\n                checkCircular(child, found);\n\n                // Mark all ancestors as having this decendant\n                for (const subtype of found) {\n                    (subtypes.get(subtype) as Set<string>).add(child);\n                }\n            }\n\n            found.delete(type);\n        }\n        checkCircular(this.primaryType, new Set());\n\n        // Compute each fully describe type\n        for (const [ name, set ] of subtypes) {\n            const st = Array.from(set);\n            st.sort();\n            this.#fullTypes.set(name, encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\"));\n        }\n    }\n\n    /**\n     *  Returnthe encoder for the specific %%type%%.\n     */\n    getEncoder(type: string): (value: any) => string {\n        let encoder = this.#encoderCache.get(type);\n        if (!encoder) {\n            encoder = this.#getEncoder(type);\n            this.#encoderCache.set(type, encoder);\n        }\n        return encoder;\n    }\n\n    #getEncoder(type: string): (value: any) => string {\n\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return encoder; }\n        }\n\n        // Array\n        const array = splitArray(type).array;\n        if (array) {\n            const subtype = array.prefix;\n            const subEncoder = this.getEncoder(subtype);\n            return (value: Array<any>) => {\n                assertArgument(array.count === -1 || array.count === value.length, `array length mismatch; expected length ${ array.count }`, \"value\", value);\n\n                let result = value.map(subEncoder);\n                if (this.#fullTypes.has(subtype)) {\n                    result = result.map(keccak256);\n                }\n\n                return keccak256(concat(result));\n            };\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this.#fullTypes.get(type) as string);\n            return (value: Record<string, any>) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this.#fullTypes.has(type)) { return keccak256(result); }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return concat(values);\n            }\n        }\n\n        assertArgument(false, `unknown type: ${ type }`, \"type\", type);\n    }\n\n    /**\n     *  Return the full type for %%name%%.\n     */\n    encodeType(name: string): string {\n        const result = this.#fullTypes.get(name);\n        assertArgument(result, `unknown type: ${ JSON.stringify(name) }`, \"name\", name);\n        return result;\n    }\n\n    /**\n     *  Return the encoded %%value%% for the %%type%%.\n     */\n    encodeData(type: string, value: any): string {\n        return this.getEncoder(type)(value);\n    }\n\n    /**\n     *  Returns the hash of %%value%% for the type of %%name%%.\n     */\n    hashStruct(name: string, value: Record<string, any>): string {\n        return keccak256(this.encodeData(name, value));\n    }\n\n    /**\n     *  Return the fulled encoded %%value%% for the [[types]].\n     */\n    encode(value: Record<string, any>): string {\n        return this.encodeData(this.primaryType, value);\n    }\n\n    /**\n     *  Return the hash of the fully encoded %%value%% for the [[types]].\n     */\n    hash(value: Record<string, any>): string {\n        return this.hashStruct(this.primaryType, value);\n    }\n\n    /**\n     *  @_ignore:\n     */\n    _visit(type: string, value: any, callback: (type: string, data: any) => any): any {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return callback(type, value); }\n        }\n\n        // Array\n        const array = splitArray(type).array;\n        if (array) {\n            assertArgument(array.count === -1 || array.count === value.length, `array length mismatch; expected length ${ array.count }`, \"value\", value);\n            return value.map((v: any) => this._visit(array.prefix, v, callback));\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, <Record<string, any>>{});\n        }\n\n        assertArgument(false, `unknown type: ${ type }`, \"type\", type);\n    }\n\n    /**\n     *  Call %%calback%% for each value in %%value%%, passing the type and\n     *  component within %%value%%.\n     *\n     *  This is useful for replacing addresses or other transformation that\n     *  may be desired on each component, based on its type.\n     */\n    visit(value: Record<string, any>, callback: (type: string, data: any) => any): any {\n        return this._visit(this.primaryType, value, callback);\n    }\n\n    /**\n     *  Create a new **TypedDataEncoder** for %%types%%.\n     */\n    static from(types: Record<string, Array<TypedDataField>>): TypedDataEncoder {\n        return new TypedDataEncoder(types);\n    }\n\n    /**\n     *  Return the primary type for %%types%%.\n     */\n    static getPrimaryType(types: Record<string, Array<TypedDataField>>): string {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n\n    /**\n     *  Return the hashed struct for %%value%% using %%types%% and %%name%%.\n     */\n    static hashStruct(name: string, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n\n    /**\n     *  Return the domain hash for %%domain%%.\n     */\n    static hashDomain(domain: TypedDataDomain): string {\n        const domainFields: Array<TypedDataField> = [ ];\n        for (const name in domain) {\n            if ((<Record<string, any>>domain)[name] == null) { continue; }\n            const type = domainFieldTypes[name];\n            assertArgument(type, `invalid typed-data domain key: ${ JSON.stringify(name) }`, \"domain\", domain);\n            domainFields.push({ name, type });\n        }\n\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n\n    /**\n     *  Return the fully encoded [[link-eip-712]] %%value%% for %%types%% with %%domain%%.\n     */\n    static encode(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return concat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n\n    /**\n     *  Return the hash of the fully encoded [[link-eip-712]] %%value%% for %%types%% with %%domain%%.\n     */\n    static hash(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n\n    // Replaces all address types with ENS names with their looked up address\n    /**\n     * Resolves to the value from resolving all addresses in %%value%% for\n     * %%types%% and the %%domain%%.\n     */\n    static async resolveNames(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, resolveName: (name: string) => Promise<string>): Promise<{ domain: TypedDataDomain, value: any }> {\n        // Make a copy to isolate it from the object passed in\n        domain = Object.assign({ }, domain);\n\n        // Allow passing null to ignore value\n        for (const key in domain) {\n            if ((<Record<string, any>>domain)[key] == null) {\n                delete (<Record<string, any>>domain)[key];\n            }\n        }\n\n        // Look up all ENS names\n        const ensCache: Record<string, string> = { };\n\n        // Do we need to look up the domain's verifyingContract?\n        if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n            ensCache[domain.verifyingContract] = \"0x\";\n        }\n\n        // We are going to use the encoder to visit all the base values\n        const encoder = TypedDataEncoder.from(types);\n\n        // Get a list of all the addresses\n        encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && !isHexString(value, 20)) {\n                ensCache[value] = \"0x\";\n            }\n            return value;\n        });\n\n        // Lookup each name\n        for (const name in ensCache) {\n            ensCache[name] = await resolveName(name);\n        }\n\n        // Replace the domain verifyingContract if needed\n        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n            domain.verifyingContract = ensCache[domain.verifyingContract];\n        }\n\n        // Replace all ENS names with their address\n        value = encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && ensCache[value]) { return ensCache[value]; }\n            return value;\n        });\n\n        return { domain, value };\n    }\n\n    /**\n     *  Returns the JSON-encoded payload expected by nodes which implement\n     *  the JSON-RPC [[link-eip-712]] method.\n     */\n    static getPayload(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): any {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n\n        // Derive the EIP712Domain Struct reference type\n        const domainValues: Record<string, any> = { };\n        const domainTypes: Array<{ name: string, type:string }> = [ ];\n\n        domainFieldNames.forEach((name) => {\n            const value = (<any>domain)[name];\n            if (value == null) { return; }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n\n        const encoder = TypedDataEncoder.from(types);\n\n        // Get the normalized types\n        types = encoder.types;\n\n        const typesWithDomain = Object.assign({ }, types);\n        assertArgument(typesWithDomain.EIP712Domain == null, \"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n\n        typesWithDomain.EIP712Domain = domainTypes;\n\n        // Validate the data structures and types\n        encoder.encode(value);\n\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type: string, value: any) => {\n\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(getBytes(value));\n                }\n\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return getBigInt(value).toString();\n                }\n\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        assertArgument(typeof(value) === \"string\", \"invalid string\", \"value\", value);\n                        return value;\n                }\n\n                assertArgument(false, \"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n\n/**\n *  Compute the address used to sign the typed data for the %%signature%%.\n */\nexport function verifyTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, signature: SignatureLike): string {\n    return recoverAddress(TypedDataEncoder.hash(domain, types, value), signature);\n}\n", "/**\n *  A fragment is a single item from an ABI, which may represent any of:\n *\n *  - [Functions](FunctionFragment)\n *  - [Events](EventFragment)\n *  - [Constructors](ConstructorFragment)\n *  - Custom [Errors](ErrorFragment)\n *  - [Fallback or Receive](FallbackFragment) functions\n *\n *  @_subsection api/abi/abi-coder:Fragments  [about-fragments]\n */\n\nimport {\n    defineProperties, getBigInt, getNumber,\n    assert, assertPrivate, assertArgument\n} from \"../utils/index.js\";\nimport { id } from \"../hash/index.js\";\n\n/**\n *  A Type description in a [JSON ABI format](link-solc-jsonabi).\n */\nexport interface JsonFragmentType {\n    /**\n     *  The parameter name.\n     */\n    readonly name?: string;\n\n    /**\n     *  If the parameter is indexed.\n     */\n    readonly indexed?: boolean;\n\n    /**\n     *  The type of the parameter.\n     */\n    readonly type?: string;\n\n    /**\n     *  The internal Solidity type.\n     */\n    readonly internalType?: string;\n\n    /**\n     *  The components for a tuple.\n     */\n    readonly components?: ReadonlyArray<JsonFragmentType>;\n}\n\n/**\n *  A fragment for a method, event or error in a [JSON ABI format](link-solc-jsonabi).\n */\nexport interface JsonFragment {\n    /**\n     *  The name of the error, event, function, etc.\n     */\n    readonly name?: string;\n\n    /**\n     *  The type of the fragment (e.g. ``event``, ``\"function\"``, etc.)\n     */\n    readonly type?: string;\n\n    /**\n     *  If the event is anonymous.\n     */\n    readonly anonymous?: boolean;\n\n    /**\n     *  If the function is payable.\n     */\n    readonly payable?: boolean;\n\n    /**\n     *  If the function is constant.\n     */\n    readonly constant?: boolean;\n\n    /**\n     *  The mutability state of the function.\n     */\n    readonly stateMutability?: string;\n\n    /**\n     *  The input parameters.\n     */\n    readonly inputs?: ReadonlyArray<JsonFragmentType>;\n\n    /**\n     *  The output parameters.\n     */\n    readonly outputs?: ReadonlyArray<JsonFragmentType>;\n\n    /**\n     *  The gas limit to use when sending a transaction for this function.\n     */\n    readonly gas?: string;\n};\n\n/**\n *  The format to serialize the output as.\n *\n *  **``\"sighash\"``** - the bare formatting, used to compute the selector\n *  or topic hash; this format cannot be reversed (as it discards ``indexed``)\n *  so cannot by used to export an [[Interface]].\n *\n *  **``\"minimal\"``** - Human-Readable ABI with minimal spacing and without\n *  names, so it is compact, but will result in Result objects that cannot\n *  be accessed by name.\n *\n *  **``\"full\"``** - Full Human-Readable ABI, with readable spacing and names\n *  intact; this is generally the recommended format.\n *\n *  **``\"json\"``** - The [JSON ABI format](link-solc-jsonabi).\n */\nexport type FormatType = \"sighash\" | \"minimal\" | \"full\" | \"json\";\n\n// [ \"a\", \"b\" ] => { \"a\": 1, \"b\": 1 }\nfunction setify(items: Array<string>): ReadonlySet<string> {\n    const result: Set<string> = new Set();\n    items.forEach((k) => result.add(k));\n    return Object.freeze(result);\n}\n\nconst _kwVisibDeploy = \"external public payable override\";\nconst KwVisibDeploy = setify(_kwVisibDeploy.split(\" \"));\n\n// Visibility Keywords\nconst _kwVisib = \"constant external internal payable private public pure view override\";\nconst KwVisib = setify(_kwVisib.split(\" \"));\n\nconst _kwTypes = \"constructor error event fallback function receive struct\";\nconst KwTypes = setify(_kwTypes.split(\" \"));\n\nconst _kwModifiers = \"calldata memory storage payable indexed\";\nconst KwModifiers = setify(_kwModifiers.split(\" \"));\n\nconst _kwOther = \"tuple returns\";\n\n// All Keywords\nconst _keywords = [ _kwTypes, _kwModifiers, _kwOther, _kwVisib ].join(\" \");\nconst Keywords = setify(_keywords.split(\" \"));\n\n// Single character tokens\nconst SimpleTokens: Record<string, string> = {\n  \"(\": \"OPEN_PAREN\", \")\": \"CLOSE_PAREN\",\n  \"[\": \"OPEN_BRACKET\", \"]\": \"CLOSE_BRACKET\",\n  \",\": \"COMMA\", \"@\": \"AT\"\n};\n\n// Parser regexes to consume the next token\nconst regexWhitespacePrefix = new RegExp(\"^(\\\\s*)\");\nconst regexNumberPrefix = new RegExp(\"^([0-9]+)\");\nconst regexIdPrefix = new RegExp(\"^([a-zA-Z$_][a-zA-Z0-9$_]*)\");\n\n// Parser regexs to check validity\nconst regexId = new RegExp(\"^([a-zA-Z$_][a-zA-Z0-9$_]*)$\");\nconst regexType = new RegExp(\"^(address|bool|bytes([0-9]*)|string|u?int([0-9]*))$\");\n\n/**\n *  @ignore:\n */\ntype Token = Readonly<{\n    // Type of token (e.g. TYPE, KEYWORD, NUMBER, etc)\n    type: string;\n\n    // Offset into the original source code\n    offset: number;\n\n    // Actual text content of the token\n    text: string;\n\n    // The parenthesis depth\n    depth: number;\n\n    // If a parenthesis, the offset (in tokens) that balances it\n    match: number;\n\n    // For parenthesis and commas, the offset (in tokens) to the\n    // previous/next parenthesis or comma in the list\n    linkBack: number;\n    linkNext: number;\n\n    // If a BRACKET, the value inside\n    value: number;\n}>;\n\nclass TokenString {\n    #offset: number;\n    #tokens: ReadonlyArray<Token>;\n\n    get offset(): number { return this.#offset; }\n    get length(): number { return this.#tokens.length - this.#offset; }\n\n    constructor(tokens: ReadonlyArray<Token>) {\n        this.#offset = 0;\n        this.#tokens = tokens.slice();\n    }\n\n    clone(): TokenString { return new TokenString(this.#tokens); }\n    reset(): void { this.#offset = 0; }\n\n    #subTokenString(from: number = 0, to: number = 0): TokenString {\n        return new TokenString(this.#tokens.slice(from, to).map((t) => {\n            return Object.freeze(Object.assign({ }, t, {\n                match: (t.match - from),\n                linkBack: (t.linkBack - from),\n                linkNext: (t.linkNext - from),\n            }));\n        }));\n    }\n\n    // Pops and returns the value of the next token, if it is a keyword in allowed; throws if out of tokens\n    popKeyword(allowed: ReadonlySet<string>): string {\n        const top = this.peek();\n        if (top.type !== \"KEYWORD\" || !allowed.has(top.text)) { throw new Error(`expected keyword ${ top.text }`); }\n        return this.pop().text;\n    }\n\n    // Pops and returns the value of the next token if it is `type`; throws if out of tokens\n    popType(type: string): string {\n        if (this.peek().type !== type) {\n            const top = this.peek();\n            throw new Error(`expected ${ type }; got ${ top.type } ${ JSON.stringify(top.text) }`);\n        }\n        return this.pop().text;\n    }\n\n    // Pops and returns a \"(\" TOKENS \")\"\n    popParen(): TokenString {\n        const top = this.peek();\n        if (top.type !== \"OPEN_PAREN\") { throw new Error(\"bad start\"); }\n        const result = this.#subTokenString(this.#offset + 1, top.match + 1);\n        this.#offset = top.match + 1;\n        return result;\n    }\n\n    // Pops and returns the items within \"(\" ITEM1 \",\" ITEM2 \",\" ... \")\"\n    popParams(): Array<TokenString> {\n        const top = this.peek();\n\n        if (top.type !== \"OPEN_PAREN\") { throw new Error(\"bad start\"); }\n\n        const result: Array<TokenString> = [ ];\n\n        while(this.#offset < top.match - 1) {\n            const link = this.peek().linkNext;\n            result.push(this.#subTokenString(this.#offset + 1, link));\n            this.#offset = link;\n        }\n\n        this.#offset = top.match + 1;\n\n        return result;\n    }\n\n    // Returns the top Token, throwing if out of tokens\n    peek(): Token {\n        if (this.#offset >= this.#tokens.length) {\n            throw new Error(\"out-of-bounds\");\n        }\n        return this.#tokens[this.#offset];\n    }\n\n    // Returns the next value, if it is a keyword in `allowed`\n    peekKeyword(allowed: ReadonlySet<string>): null | string {\n        const top = this.peekType(\"KEYWORD\");\n        return (top != null && allowed.has(top)) ? top: null;\n    }\n\n    // Returns the value of the next token if it is `type`\n    peekType(type: string): null | string {\n        if (this.length === 0) { return null; }\n        const top = this.peek();\n        return (top.type === type) ? top.text: null;\n    }\n\n    // Returns the next token; throws if out of tokens\n    pop(): Token {\n        const result = this.peek();\n        this.#offset++;\n        return result;\n    }\n\n    toString(): string {\n        const tokens: Array<string> = [ ];\n        for (let i = this.#offset; i < this.#tokens.length; i++) {\n            const token = this.#tokens[i];\n            tokens.push(`${ token.type }:${ token.text }`);\n        }\n        return `<TokenString ${ tokens.join(\" \") }>`\n    }\n}\n\ntype Writeable<T> = { -readonly [P in keyof T]: T[P] };\n\nfunction lex(text: string): TokenString {\n    const tokens: Array<Token> = [ ];\n\n    const throwError = (message: string) => {\n        const token = (offset < text.length) ? JSON.stringify(text[offset]): \"$EOI\";\n        throw new Error(`invalid token ${ token } at ${ offset }: ${ message }`);\n    };\n\n    let brackets: Array<number> = [ ];\n    let commas: Array<number> = [ ];\n\n    let offset = 0;\n    while (offset < text.length) {\n\n        // Strip off any leading whitespace\n        let cur = text.substring(offset);\n        let match = cur.match(regexWhitespacePrefix);\n        if (match) {\n            offset += match[1].length;\n            cur = text.substring(offset);\n        }\n\n        const token = { depth: brackets.length, linkBack: -1, linkNext: -1, match: -1, type: \"\", text: \"\", offset, value: -1 };\n        tokens.push(token);\n\n        let type = (SimpleTokens[cur[0]] || \"\");\n        if (type) {\n            token.type = type;\n            token.text = cur[0];\n            offset++;\n\n            if (type === \"OPEN_PAREN\") {\n                brackets.push(tokens.length - 1);\n                commas.push(tokens.length - 1);\n\n            } else if (type == \"CLOSE_PAREN\") {\n                if (brackets.length === 0) { throwError(\"no matching open bracket\"); }\n\n                token.match = brackets.pop() as number;\n                (<Writeable<Token>>(tokens[token.match])).match = tokens.length - 1;\n                token.depth--;\n\n                token.linkBack = commas.pop() as number;\n                (<Writeable<Token>>(tokens[token.linkBack])).linkNext = tokens.length - 1;\n\n            } else if (type === \"COMMA\") {\n                token.linkBack = commas.pop() as number;\n                (<Writeable<Token>>(tokens[token.linkBack])).linkNext = tokens.length - 1;\n                commas.push(tokens.length - 1);\n\n            } else if (type === \"OPEN_BRACKET\") {\n                token.type = \"BRACKET\";\n\n            } else if (type === \"CLOSE_BRACKET\") {\n                // Remove the CLOSE_BRACKET\n                let suffix = (tokens.pop() as Token).text;\n                if (tokens.length > 0 && tokens[tokens.length - 1].type === \"NUMBER\") {\n                    const value = (tokens.pop() as Token).text;\n                    suffix = value + suffix;\n                    (<Writeable<Token>>(tokens[tokens.length - 1])).value = getNumber(value);\n                }\n                if (tokens.length === 0 || tokens[tokens.length - 1].type !== \"BRACKET\") {\n                    throw new Error(\"missing opening bracket\");\n                }\n                (<Writeable<Token>>(tokens[tokens.length - 1])).text += suffix;\n            }\n\n            continue;\n        }\n\n        match = cur.match(regexIdPrefix);\n        if (match) {\n            token.text = match[1];\n            offset += token.text.length;\n\n            if (Keywords.has(token.text)) {\n                token.type = \"KEYWORD\";\n                continue;\n            }\n\n            if (token.text.match(regexType)) {\n                token.type = \"TYPE\";\n                continue;\n            }\n\n            token.type = \"ID\";\n            continue;\n        }\n\n        match = cur.match(regexNumberPrefix);\n        if (match) {\n            token.text = match[1];\n            token.type = \"NUMBER\";\n            offset += token.text.length;\n            continue;\n        }\n\n        throw new Error(`unexpected token ${ JSON.stringify(cur[0]) } at position ${ offset }`);\n    }\n\n    return new TokenString(tokens.map((t) => Object.freeze(t)));\n}\n\n// Check only one of `allowed` is in `set`\nfunction allowSingle(set: ReadonlySet<string>, allowed: ReadonlySet<string>): void {\n    let included: Array<string> = [ ];\n    for (const key in allowed.keys()) {\n        if (set.has(key)) { included.push(key); }\n    }\n    if (included.length > 1) { throw new Error(`conflicting types: ${ included.join(\", \") }`); }\n}\n\n// Functions to process a Solidity Signature TokenString from left-to-right for...\n\n// ...the name with an optional type, returning the name\nfunction consumeName(type: string, tokens: TokenString): string {\n    if (tokens.peekKeyword(KwTypes)) {\n        const keyword = tokens.pop().text;\n        if (keyword !== type) {\n            throw new Error(`expected ${ type }, got ${ keyword }`);\n        }\n    }\n\n    return tokens.popType(\"ID\");\n}\n\n// ...all keywords matching allowed, returning the keywords\nfunction consumeKeywords(tokens: TokenString, allowed?: ReadonlySet<string>): ReadonlySet<string> {\n    const keywords: Set<string> = new Set();\n    while (true) {\n        const keyword = tokens.peekType(\"KEYWORD\");\n\n        if (keyword == null || (allowed && !allowed.has(keyword))) { break; }\n        tokens.pop();\n\n        if (keywords.has(keyword)) { throw new Error(`duplicate keywords: ${ JSON.stringify(keyword) }`); }\n        keywords.add(keyword);\n    }\n\n    return Object.freeze(keywords);\n}\n\n// ...all visibility keywords, returning the coalesced mutability\nfunction consumeMutability(tokens: TokenString): \"payable\" | \"nonpayable\" | \"view\" | \"pure\" {\n    let modifiers = consumeKeywords(tokens, KwVisib);\n\n    // Detect conflicting modifiers\n    allowSingle(modifiers, setify(\"constant payable nonpayable\".split(\" \")));\n    allowSingle(modifiers, setify(\"pure view payable nonpayable\".split(\" \")));\n\n    // Process mutability states\n    if (modifiers.has(\"view\")) { return \"view\"; }\n    if (modifiers.has(\"pure\")) { return \"pure\"; }\n    if (modifiers.has(\"payable\")) { return \"payable\"; }\n    if (modifiers.has(\"nonpayable\")) { return \"nonpayable\"; }\n\n    // Process legacy `constant` last\n    if (modifiers.has(\"constant\")) { return \"view\"; }\n\n    return \"nonpayable\";\n}\n\n// ...a parameter list, returning the ParamType list\nfunction consumeParams(tokens: TokenString, allowIndexed?: boolean): Array<ParamType> {\n    return tokens.popParams().map((t) => ParamType.from(t, allowIndexed));\n}\n\n// ...a gas limit, returning a BigNumber or null if none\nfunction consumeGas(tokens: TokenString): null | bigint {\n    if (tokens.peekType(\"AT\")) {\n        tokens.pop();\n        if (tokens.peekType(\"NUMBER\")) {\n            return getBigInt(tokens.pop().text);\n        }\n        throw new Error(\"invalid gas\");\n    }\n    return null;\n}\n\nfunction consumeEoi(tokens: TokenString): void {\n    if (tokens.length) {\n        throw new Error(`unexpected tokens at offset ${ tokens.offset }: ${ tokens.toString() }`);\n    }\n}\n\nconst regexArrayType = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\n\nfunction verifyBasicType(type: string): string {\n    const match = type.match(regexType);\n    assertArgument(match, \"invalid type\", \"type\", type);\n    if (type === \"uint\") { return \"uint256\"; }\n    if (type === \"int\") { return \"int256\"; }\n\n    if (match[2]) {\n        // bytesXX\n        const length = parseInt(match[2]);\n        assertArgument(length !== 0 && length <= 32, \"invalid bytes length\", \"type\", type);\n\n    } else if (match[3]) {\n        // intXX or uintXX\n        const size = parseInt(match[3] as string);\n        assertArgument(size !== 0 && size <= 256 && (size % 8) === 0, \"invalid numeric width\", \"type\", type);\n    }\n\n    return type;\n}\n\n// Make the Fragment constructors effectively private\nconst _guard = { };\n\n\n/**\n *  When [walking](ParamType-walk) a [[ParamType]], this is called\n *  on each component.\n */\nexport type ParamTypeWalkFunc = (type: string, value: any) => any;\n\n/**\n *  When [walking asynchronously](ParamType-walkAsync) a [[ParamType]],\n *  this is called on each component.\n */\nexport type ParamTypeWalkAsyncFunc = (type: string, value: any) => any | Promise<any>;\n\nconst internal = Symbol.for(\"_ethers_internal\");\n\nconst ParamTypeInternal = \"_ParamTypeInternal\";\nconst ErrorFragmentInternal = \"_ErrorInternal\";\nconst EventFragmentInternal = \"_EventInternal\";\nconst ConstructorFragmentInternal = \"_ConstructorInternal\";\nconst FallbackFragmentInternal = \"_FallbackInternal\";\nconst FunctionFragmentInternal = \"_FunctionInternal\";\nconst StructFragmentInternal = \"_StructInternal\";\n\n/**\n *  Each input and output of a [[Fragment]] is an Array of **ParamType**.\n */\nexport class ParamType {\n\n    /**\n     *  The local name of the parameter (or ``\"\"`` if unbound)\n     */\n    readonly name!: string;\n\n    /**\n     *  The fully qualified type (e.g. ``\"address\"``, ``\"tuple(address)\"``,\n     *  ``\"uint256[3][]\"``)\n     */\n    readonly type!: string;\n\n    /**\n     *  The base type (e.g. ``\"address\"``, ``\"tuple\"``, ``\"array\"``)\n     */\n    readonly baseType!: string;\n\n    /**\n     *  True if the parameters is indexed.\n     *\n     *  For non-indexable types this is ``null``.\n     */\n    readonly indexed!: null | boolean;\n\n    /**\n     *  The components for the tuple.\n     *\n     *  For non-tuple types this is ``null``.\n     */\n    readonly components!: null | ReadonlyArray<ParamType>;\n\n    /**\n     *  The array length, or ``-1`` for dynamic-lengthed arrays.\n     *\n     *  For non-array types this is ``null``.\n     */\n    readonly arrayLength!: null | number;\n\n    /**\n     *  The type of each child in the array.\n     *\n     *  For non-array types this is ``null``.\n     */\n    readonly arrayChildren!: null | ParamType;\n\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, name: string, type: string, baseType: string, indexed: null | boolean, components: null | ReadonlyArray<ParamType>, arrayLength: null | number, arrayChildren: null | ParamType) {\n        assertPrivate(guard, _guard, \"ParamType\");\n        Object.defineProperty(this, internal, { value: ParamTypeInternal });\n\n        if (components) { components = Object.freeze(components.slice()); }\n\n        if (baseType === \"array\") {\n            if (arrayLength == null || arrayChildren == null) {\n                throw new Error(\"\");\n            }\n        } else if (arrayLength != null || arrayChildren != null) {\n            throw new Error(\"\");\n        }\n\n        if (baseType === \"tuple\") {\n            if (components == null) { throw new Error(\"\"); }\n        } else if (components != null) {\n            throw new Error(\"\");\n        }\n\n        defineProperties<ParamType>(this, {\n            name, type, baseType, indexed, components, arrayLength, arrayChildren\n        });\n    }\n\n    /**\n     *  Return a string representation of this type.\n     *\n     *  For example,\n     *\n     *  ``sighash\" => \"(uint256,address)\"``\n     *\n     *  ``\"minimal\" => \"tuple(uint256,address) indexed\"``\n     *\n     *  ``\"full\" => \"tuple(uint256 foo, address bar) indexed baz\"``\n     */\n    format(format?: FormatType): string {\n        if (format == null) { format = \"sighash\"; }\n        if (format === \"json\") {\n            const name = this.name || \"\";\n\n            if (this.isArray()) {\n                const result = JSON.parse(this.arrayChildren.format(\"json\"));\n                result.name = name;\n                result.type += `[${ (this.arrayLength < 0 ? \"\": String(this.arrayLength)) }]`;\n                return JSON.stringify(result);\n            }\n\n            const result: any = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\": this.type),\n                name\n            };\n\n\n            if (typeof(this.indexed) === \"boolean\") { result.indexed = this.indexed; }\n            if (this.isTuple()) {\n                result.components = this.components.map((c) => JSON.parse(c.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n\n        let result = \"\";\n\n        // Array\n        if (this.isArray()) {\n            result += this.arrayChildren.format(format);\n            result += `[${ (this.arrayLength < 0 ? \"\": String(this.arrayLength)) }]`;\n        } else {\n            if (this.isTuple()) {\n                result += \"(\" + this.components.map(\n                    (comp) => comp.format(format)\n                ).join((format === \"full\") ? \", \": \",\") + \")\";\n            } else {\n                result += this.type;\n            }\n        }\n\n        if (format !== \"sighash\") {\n            if (this.indexed === true) { result += \" indexed\"; }\n            if (format === \"full\" && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     *  Returns true if %%this%% is an Array type.\n     *\n     *  This provides a type gaurd ensuring that [[arrayChildren]]\n     *  and [[arrayLength]] are non-null.\n     */\n    isArray(): this is (ParamType & { arrayChildren: ParamType, arrayLength: number }) {\n        return (this.baseType === \"array\")\n    }\n\n    /**\n     *  Returns true if %%this%% is a Tuple type.\n     *\n     *  This provides a type gaurd ensuring that [[components]]\n     *  is non-null.\n     */\n    isTuple(): this is (ParamType & { components: ReadonlyArray<ParamType> }) {\n        return (this.baseType === \"tuple\");\n    }\n\n    /**\n     *  Returns true if %%this%% is an Indexable type.\n     *\n     *  This provides a type gaurd ensuring that [[indexed]]\n     *  is non-null.\n     */\n    isIndexable(): this is (ParamType & { indexed: boolean }) {\n        return (this.indexed != null);\n    }\n\n    /**\n     *  Walks the **ParamType** with %%value%%, calling %%process%%\n     *  on each type, destructing the %%value%% recursively.\n     */\n    walk(value: any, process: ParamTypeWalkFunc): any {\n        if (this.isArray()) {\n            if (!Array.isArray(value)) { throw new Error(\"invalid array value\"); }\n            if (this.arrayLength !== -1 && value.length !== this.arrayLength) {\n                throw new Error(\"array is wrong length\");\n            }\n            const _this = this;\n            return value.map((v) => (_this.arrayChildren.walk(v, process)));\n        }\n\n        if (this.isTuple()) {\n            if (!Array.isArray(value)) { throw new Error(\"invalid tuple value\"); }\n            if (value.length !== this.components.length) {\n                throw new Error(\"array is wrong length\");\n            }\n            const _this = this;\n            return value.map((v, i) => (_this.components[i].walk(v, process)));\n        }\n\n        return process(this.type, value);\n    }\n\n    #walkAsync(promises: Array<Promise<void>>, value: any, process: ParamTypeWalkAsyncFunc, setValue: (value: any) => void): void {\n\n        if (this.isArray()) {\n            if (!Array.isArray(value)) { throw new Error(\"invalid array value\"); }\n            if (this.arrayLength !== -1 && value.length !== this.arrayLength) {\n                throw new Error(\"array is wrong length\");\n            }\n            const childType = this.arrayChildren;\n\n            const result = value.slice();\n            result.forEach((value, index) => {\n                childType.#walkAsync(promises, value, process, (value: any) => {\n                    result[index] = value;\n                });\n            });\n            setValue(result);\n            return;\n        }\n\n        if (this.isTuple()) {\n            const components = this.components;\n\n            // Convert the object into an array\n            let result: Array<any>;\n            if (Array.isArray(value)) {\n                result = value.slice();\n\n            } else {\n                if (value == null || typeof(value) !== \"object\") {\n                    throw new Error(\"invalid tuple value\");\n                }\n\n                result = components.map((param) => {\n                    if (!param.name) { throw new Error(\"cannot use object value with unnamed components\"); }\n                    if (!(param.name in value)) {\n                        throw new Error(`missing value for component ${ param.name }`);\n                    }\n                    return value[param.name];\n                });\n            }\n\n            if (result.length !== this.components.length) {\n                throw new Error(\"array is wrong length\");\n            }\n\n            result.forEach((value, index) => {\n                components[index].#walkAsync(promises, value, process, (value: any) => {\n                    result[index] = value;\n                });\n            });\n            setValue(result);\n            return;\n        }\n\n        const result = process(this.type, value);\n        if (result.then) {\n            promises.push((async function() { setValue(await result); })());\n        } else {\n            setValue(result);\n        }\n    }\n\n    /**\n     *  Walks the **ParamType** with %%value%%, asynchronously calling\n     *  %%process%% on each type, destructing the %%value%% recursively.\n     *\n     *  This can be used to resolve ENS names by walking and resolving each\n     *  ``\"address\"`` type.\n     */\n    async walkAsync(value: any, process: ParamTypeWalkAsyncFunc): Promise<any> {\n        const promises: Array<Promise<void>> = [ ];\n        const result: [ any ] = [ value ];\n        this.#walkAsync(promises, value, process, (value: any) => {\n            result[0] = value;\n        });\n        if (promises.length) { await Promise.all(promises); }\n        return result[0];\n    }\n\n    /**\n     *  Creates a new **ParamType** for %%obj%%.\n     *\n     *  If %%allowIndexed%% then the ``indexed`` keyword is permitted,\n     *  otherwise the ``indexed`` keyword will throw an error.\n     */\n    static from(obj: any, allowIndexed?: boolean): ParamType {\n        if (ParamType.isParamType(obj)) { return obj; }\n\n        if (typeof(obj) === \"string\") {\n            try {\n                return ParamType.from(lex(obj), allowIndexed);\n            } catch (error) {\n                assertArgument(false, \"invalid param type\", \"obj\", obj);\n            }\n\n        } else if (obj instanceof TokenString) {\n            let type = \"\", baseType = \"\";\n            let comps: null | Array<ParamType> = null;\n\n            if (consumeKeywords(obj, setify([ \"tuple\" ])).has(\"tuple\") || obj.peekType(\"OPEN_PAREN\")) {\n                // Tuple\n                baseType = \"tuple\";\n                comps = obj.popParams().map((t) => ParamType.from(t));\n                type = `tuple(${ comps.map((c) => c.format()).join(\",\") })`;\n            } else {\n                // Normal\n                type = verifyBasicType(obj.popType(\"TYPE\"));\n                baseType = type;\n            }\n\n            // Check for Array\n            let arrayChildren: null | ParamType  = null;\n            let arrayLength: null | number = null;\n\n            while (obj.length && obj.peekType(\"BRACKET\")) {\n                const bracket = obj.pop(); //arrays[i];\n                arrayChildren = new ParamType(_guard, \"\", type, baseType, null, comps, arrayLength, arrayChildren);\n                arrayLength = bracket.value;\n                type += bracket.text;\n                baseType = \"array\";\n                comps = null;\n            }\n\n            let indexed: null | boolean = null;\n            const keywords = consumeKeywords(obj, KwModifiers);\n            if (keywords.has(\"indexed\")) {\n                if (!allowIndexed) { throw new Error(\"\"); }\n                indexed = true;\n            }\n\n            const name = (obj.peekType(\"ID\") ? obj.pop().text: \"\");\n\n            if (obj.length) { throw new Error(\"leftover tokens\"); }\n\n            return new ParamType(_guard, name, type, baseType, indexed, comps, arrayLength, arrayChildren);\n        }\n\n        const name = obj.name;\n        assertArgument(!name || (typeof(name) === \"string\" && name.match(regexId)),\n            \"invalid name\", \"obj.name\", name);\n\n        let indexed = obj.indexed;\n        if (indexed != null) {\n            assertArgument(allowIndexed, \"parameter cannot be indexed\", \"obj.indexed\", obj.indexed);\n            indexed = !!indexed;\n        }\n\n        let type = obj.type;\n\n        let arrayMatch = type.match(regexArrayType);\n        if (arrayMatch) {\n            const arrayLength = parseInt(arrayMatch[2] || \"-1\");\n            const arrayChildren = ParamType.from({\n                type: arrayMatch[1],\n                components: obj.components\n            });\n\n            return new ParamType(_guard, name || \"\", type, \"array\", indexed, null, arrayLength, arrayChildren);\n        }\n\n        if (type === \"tuple\" || type.startsWith(\"tuple(\"/* fix: ) */) || type.startsWith(\"(\" /* fix: ) */)) {\n            const comps = (obj.components != null) ? obj.components.map((c: any) => ParamType.from(c)): null;\n            const tuple = new ParamType(_guard, name || \"\", type, \"tuple\", indexed, comps, null, null);\n            // @TODO: use lexer to validate and normalize type\n            return tuple;\n        }\n\n        type = verifyBasicType(obj.type);\n\n        return new ParamType(_guard, name || \"\", type, type, indexed, null, null, null);\n    }\n\n    /**\n     *  Returns true if %%value%% is a **ParamType**.\n     */\n    static isParamType(value: any): value is ParamType {\n        return (value && value[internal] === ParamTypeInternal);\n    }\n}\n\n/**\n *  The type of a [[Fragment]].\n */\nexport type FragmentType = \"constructor\" | \"error\" | \"event\" | \"fallback\" | \"function\" | \"struct\";\n\n/**\n *  An abstract class to represent An individual fragment from a parse ABI.\n */\nexport abstract class Fragment {\n    /**\n     *  The type of the fragment.\n     */\n    readonly type!: FragmentType;\n\n    /**\n     *  The inputs for the fragment.\n     */\n    readonly inputs!: ReadonlyArray<ParamType>;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, type: FragmentType, inputs: ReadonlyArray<ParamType>) {\n        assertPrivate(guard, _guard, \"Fragment\");\n        inputs = Object.freeze(inputs.slice());\n        defineProperties<Fragment>(this, { type, inputs });\n    }\n\n    /**\n     *  Returns a string representation of this fragment as %%format%%.\n     */\n    abstract format(format?: FormatType): string;\n\n    /**\n     *  Creates a new **Fragment** for %%obj%%, wich can be any supported\n     *  ABI frgament type.\n     */\n    static from(obj: any): Fragment {\n        if (typeof(obj) === \"string\") {\n\n            // Try parsing JSON...\n            try {\n                Fragment.from(JSON.parse(obj));\n            } catch (e) { }\n\n            // ...otherwise, use the human-readable lexer\n            return Fragment.from(lex(obj));\n        }\n\n        if (obj instanceof TokenString) {\n            // Human-readable ABI (already lexed)\n\n            const type = obj.peekKeyword(KwTypes);\n\n            switch (type) {\n                case \"constructor\": return ConstructorFragment.from(obj);\n                case \"error\": return ErrorFragment.from(obj);\n                case \"event\": return EventFragment.from(obj);\n                case \"fallback\": case \"receive\":\n                    return FallbackFragment.from(obj);\n                case \"function\": return FunctionFragment.from(obj);\n                case \"struct\": return StructFragment.from(obj);\n            }\n\n        } else if (typeof(obj) === \"object\") {\n            // JSON ABI\n\n            switch (obj.type) {\n                case \"constructor\": return ConstructorFragment.from(obj);\n                case \"error\": return ErrorFragment.from(obj);\n                case \"event\": return EventFragment.from(obj);\n                case \"fallback\": case \"receive\":\n                    return FallbackFragment.from(obj);\n                case \"function\": return FunctionFragment.from(obj);\n                case \"struct\": return StructFragment.from(obj);\n            }\n\n            assert(false, `unsupported type: ${ obj.type }`, \"UNSUPPORTED_OPERATION\", {\n                operation: \"Fragment.from\"\n            });\n        }\n\n        assertArgument(false, \"unsupported frgament object\", \"obj\", obj);\n    }\n\n    /**\n     *  Returns true if %%value%% is a [[ConstructorFragment]].\n     */\n    static isConstructor(value: any): value is ConstructorFragment {\n        return ConstructorFragment.isFragment(value);\n    }\n\n    /**\n     *  Returns true if %%value%% is an [[ErrorFragment]].\n     */\n    static isError(value: any): value is ErrorFragment {\n        return ErrorFragment.isFragment(value);\n    }\n\n    /**\n     *  Returns true if %%value%% is an [[EventFragment]].\n     */\n    static isEvent(value: any): value is EventFragment {\n        return EventFragment.isFragment(value);\n    }\n\n    /**\n     *  Returns true if %%value%% is a [[FunctionFragment]].\n     */\n    static isFunction(value: any): value is FunctionFragment {\n        return FunctionFragment.isFragment(value);\n    }\n\n    /**\n     *  Returns true if %%value%% is a [[StructFragment]].\n     */\n    static isStruct(value: any): value is StructFragment {\n        return StructFragment.isFragment(value);\n    }\n}\n\n/**\n *  An abstract class to represent An individual fragment\n *  which has a name from a parse ABI.\n */\nexport abstract class NamedFragment extends Fragment {\n    /**\n     *  The name of the fragment.\n     */\n    readonly name!: string;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, type: FragmentType, name: string, inputs: ReadonlyArray<ParamType>) {\n        super(guard, type, inputs);\n        assertArgument(typeof(name) === \"string\" && name.match(regexId),\n            \"invalid identifier\", \"name\", name);\n        inputs = Object.freeze(inputs.slice());\n        defineProperties<NamedFragment>(this, { name });\n    }\n}\n\nfunction joinParams(format: FormatType, params: ReadonlyArray<ParamType>): string { \n    return \"(\" + params.map((p) => p.format(format)).join((format === \"full\") ? \", \": \",\") + \")\";\n}\n\n/**\n *  A Fragment which represents a //Custom Error//.\n */\nexport class ErrorFragment extends NamedFragment {\n    /**\n     *  @private\n     */\n    constructor(guard: any, name: string, inputs: ReadonlyArray<ParamType>) {\n        super(guard, \"error\", name, inputs);\n        Object.defineProperty(this, internal, { value: ErrorFragmentInternal });\n    }\n\n    /**\n     *  The Custom Error selector.\n     */\n    get selector(): string {\n        return id(this.format(\"sighash\")).substring(0, 10);\n    }\n\n    /**\n     *  Returns a string representation of this fragment as %%format%%.\n     */\n    format(format?: FormatType): string {\n        if (format == null) { format = \"sighash\"; }\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n\n        const result: Array<string> = [ ];\n        if (format !== \"sighash\") { result.push(\"error\"); }\n        result.push(this.name + joinParams(format, this.inputs));\n        return result.join(\" \");\n    }\n\n    /**\n     *  Returns a new **ErrorFragment** for %%obj%%.\n     */\n    static from(obj: any): ErrorFragment {\n        if (ErrorFragment.isFragment(obj)) { return obj; }\n\n        if (typeof(obj) === \"string\") {\n            return ErrorFragment.from(lex(obj));\n\n        } else if (obj instanceof TokenString) {\n            const name = consumeName(\"error\", obj);\n            const inputs = consumeParams(obj);\n            consumeEoi(obj);\n\n            return new ErrorFragment(_guard, name, inputs);\n        }\n\n        return new ErrorFragment(_guard, obj.name,\n            obj.inputs ? obj.inputs.map(ParamType.from): [ ]);\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is an\n     *  **ErrorFragment**.\n     */\n    static isFragment(value: any): value is ErrorFragment {\n        return (value && value[internal] === ErrorFragmentInternal);\n    }\n}\n\n/**\n *  A Fragment which represents an Event.\n */\nexport class EventFragment extends NamedFragment {\n    /**\n     *  Whether this event is anonymous.\n     */\n    readonly anonymous!: boolean;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, name: string, inputs: ReadonlyArray<ParamType>, anonymous: boolean) {\n        super(guard, \"event\", name, inputs);\n        Object.defineProperty(this, internal, { value: EventFragmentInternal });\n        defineProperties<EventFragment>(this, { anonymous });\n    }\n\n    /**\n     *  The Event topic hash.\n     */\n    get topicHash(): string {\n        return id(this.format(\"sighash\"));\n    }\n\n    /**\n     *  Returns a string representation of this event as %%format%%.\n     */\n    format(format?: FormatType): string {\n        if (format == null) { format = \"sighash\"; }\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format)))\n            });\n        }\n\n        const result: Array<string> = [ ];\n        if (format !== \"sighash\") { result.push(\"event\"); }\n        result.push(this.name + joinParams(format, this.inputs));\n        if (format !== \"sighash\" && this.anonymous) { result.push(\"anonymous\"); }\n        return result.join(\" \");\n    }\n\n    /**\n     *  Return the topic hash for an event with %%name%% and %%params%%.\n     */\n    static getTopicHash(name: string, params?: Array<any>): string {\n        params = (params || []).map((p) => ParamType.from(p));\n        const fragment = new EventFragment(_guard, name, params, false);\n        return fragment.topicHash;\n    }\n\n    /**\n     *  Returns a new **EventFragment** for %%obj%%.\n     */\n    static from(obj: any): EventFragment {\n        if (EventFragment.isFragment(obj)) { return obj; }\n\n        if (typeof(obj) === \"string\") {\n            try {\n                return EventFragment.from(lex(obj));\n            } catch (error) {\n                assertArgument(false, \"invalid event fragment\", \"obj\", obj);\n            }\n\n        } else if (obj instanceof TokenString) {\n            const name = consumeName(\"event\", obj);\n            const inputs = consumeParams(obj, true);\n            const anonymous = !!consumeKeywords(obj, setify([ \"anonymous\" ])).has(\"anonymous\");\n            consumeEoi(obj);\n\n            return new EventFragment(_guard, name, inputs, anonymous);\n        }\n\n        return new EventFragment(_guard, obj.name,\n            obj.inputs ? obj.inputs.map((p: any) => ParamType.from(p, true)): [ ], !!obj.anonymous);\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is an\n     *  **EventFragment**.\n     */\n    static isFragment(value: any): value is EventFragment {\n        return (value && value[internal] === EventFragmentInternal);\n    }\n}\n\n/**\n *  A Fragment which represents a constructor.\n */\nexport class ConstructorFragment extends Fragment {\n\n    /**\n     *  Whether the constructor can receive an endowment.\n     */\n    readonly payable!: boolean;\n\n    /**\n     *  The recommended gas limit for deployment or ``null``.\n     */\n    readonly gas!: null | bigint;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, type: FragmentType, inputs: ReadonlyArray<ParamType>, payable: boolean, gas: null | bigint) {\n        super(guard, type, inputs);\n        Object.defineProperty(this, internal, { value: ConstructorFragmentInternal });\n        defineProperties<ConstructorFragment>(this, { payable, gas });\n    }\n\n    /**\n     *  Returns a string representation of this constructor as %%format%%.\n     */\n    format(format?: FormatType): string {\n        assert(format != null && format !== \"sighash\", \"cannot format a constructor for sighash\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"format(sighash)\" });\n\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: (this.payable ? \"payable\": \"undefined\"),\n                payable: this.payable,\n                gas: ((this.gas != null) ? this.gas: undefined),\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format)))\n            });\n        }\n\n        const result = [ `constructor${ joinParams(format, this.inputs) }` ];\n        if (this.payable) { result.push(\"payable\"); }\n        if (this.gas != null) { result.push(`@${ this.gas.toString() }`); }\n        return result.join(\" \");\n    }\n\n    /**\n     *  Returns a new **ConstructorFragment** for %%obj%%.\n     */\n    static from(obj: any): ConstructorFragment {\n        if (ConstructorFragment.isFragment(obj)) { return obj; }\n\n        if (typeof(obj) === \"string\") {\n            try {\n                return ConstructorFragment.from(lex(obj));\n            } catch (error) {\n                assertArgument(false, \"invalid constuctor fragment\", \"obj\", obj);\n            }\n\n        } else if (obj instanceof TokenString) {\n            consumeKeywords(obj, setify([ \"constructor\" ]));\n            const inputs = consumeParams(obj);\n            const payable = !!consumeKeywords(obj, KwVisibDeploy).has(\"payable\");\n            const gas = consumeGas(obj);\n            consumeEoi(obj);\n\n            return new ConstructorFragment(_guard, \"constructor\", inputs, payable, gas);\n        }\n\n        return new ConstructorFragment(_guard, \"constructor\",\n            obj.inputs ? obj.inputs.map(ParamType.from): [ ],\n            !!obj.payable, (obj.gas != null) ? obj.gas: null);\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is a\n     *  **ConstructorFragment**.\n     */\n    static isFragment(value: any): value is ConstructorFragment {\n        return (value && value[internal] === ConstructorFragmentInternal);\n    }\n}\n\n/**\n *  A Fragment which represents a method.\n */\nexport class FallbackFragment extends Fragment {\n\n    /**\n     *  If the function can be sent value during invocation.\n     */\n    readonly payable!: boolean;\n\n    constructor(guard: any, inputs: ReadonlyArray<ParamType>, payable: boolean) {\n        super(guard, \"fallback\", inputs);\n        Object.defineProperty(this, internal, { value: FallbackFragmentInternal });\n        defineProperties<FallbackFragment>(this, { payable });\n    }\n\n    /**\n     *  Returns a string representation of this fallback as %%format%%.\n     */\n    format(format?: FormatType): string {\n        const type = ((this.inputs.length === 0) ? \"receive\": \"fallback\");\n\n        if (format === \"json\") {\n            const stateMutability = (this.payable ? \"payable\": \"nonpayable\");\n            return JSON.stringify({ type, stateMutability });\n        }\n\n        return `${ type }()${ this.payable ? \" payable\": \"\" }`;\n    }\n\n    /**\n     *  Returns a new **FallbackFragment** for %%obj%%.\n     */\n    static from(obj: any): FallbackFragment {\n        if (FallbackFragment.isFragment(obj)) { return obj; }\n\n        if (typeof(obj) === \"string\") {\n            try {\n                return FallbackFragment.from(lex(obj));\n            } catch (error) {\n                assertArgument(false, \"invalid fallback fragment\", \"obj\", obj);\n            }\n\n        } else if (obj instanceof TokenString) {\n            const errorObj = obj.toString();\n\n            const topIsValid = obj.peekKeyword(setify([ \"fallback\", \"receive\" ]));\n            assertArgument(topIsValid, \"type must be fallback or receive\", \"obj\", errorObj);\n\n            const type = obj.popKeyword(setify([ \"fallback\", \"receive\" ]));\n\n            // receive()\n            if (type === \"receive\") {\n                const inputs = consumeParams(obj);\n                assertArgument(inputs.length === 0, `receive cannot have arguments`, \"obj.inputs\", inputs);\n                consumeKeywords(obj, setify([ \"payable\" ]));\n                consumeEoi(obj);\n                return new FallbackFragment(_guard, [ ], true);\n            }\n\n            // fallback() [payable]\n            // fallback(bytes) [payable] returns (bytes)\n            let inputs = consumeParams(obj);\n            if (inputs.length) {\n                assertArgument(inputs.length === 1 && inputs[0].type === \"bytes\",\n                    \"invalid fallback inputs\", \"obj.inputs\",\n                    inputs.map((i) => i.format(\"minimal\")).join(\", \"));\n            } else {\n                inputs = [ ParamType.from(\"bytes\") ];\n            }\n\n            const mutability = consumeMutability(obj);\n            assertArgument(mutability === \"nonpayable\" || mutability === \"payable\", \"fallback cannot be constants\", \"obj.stateMutability\", mutability);\n\n            if (consumeKeywords(obj, setify([ \"returns\" ])).has(\"returns\")) {\n                const outputs = consumeParams(obj);\n                assertArgument(outputs.length === 1 && outputs[0].type === \"bytes\",\n                    \"invalid fallback outputs\", \"obj.outputs\",\n                    outputs.map((i) => i.format(\"minimal\")).join(\", \"));\n            }\n\n            consumeEoi(obj);\n\n            return new FallbackFragment(_guard, inputs, mutability === \"payable\");\n        }\n\n        if (obj.type === \"receive\") {\n            return new FallbackFragment(_guard, [ ], true);\n        }\n\n        if (obj.type === \"fallback\") {\n            const inputs = [ ParamType.from(\"bytes\") ];\n            const payable = (obj.stateMutability === \"payable\");\n            return new FallbackFragment(_guard, inputs, payable);\n        }\n\n        assertArgument(false, \"invalid fallback description\", \"obj\", obj);\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is a\n     *  **FallbackFragment**.\n     */\n    static isFragment(value: any): value is FallbackFragment {\n        return (value && value[internal] === FallbackFragmentInternal);\n    }\n}\n\n\n/**\n *  A Fragment which represents a method.\n */\nexport class FunctionFragment extends NamedFragment {\n    /**\n     *  If the function is constant (e.g. ``pure`` or ``view`` functions).\n     */\n    readonly constant!: boolean;\n\n    /**\n     *  The returned types for the result of calling this function.\n     */\n    readonly outputs!: ReadonlyArray<ParamType>;\n\n    /**\n     *  The state mutability (e.g. ``payable``, ``nonpayable``, ``view``\n     *  or ``pure``)\n     */\n    readonly stateMutability!: \"payable\" | \"nonpayable\" | \"view\" | \"pure\";\n\n    /**\n     *  If the function can be sent value during invocation.\n     */\n    readonly payable!: boolean;\n\n    /**\n     *  The recommended gas limit to send when calling this function.\n     */\n    readonly gas!: null | bigint;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, name: string, stateMutability: \"payable\" | \"nonpayable\" | \"view\" | \"pure\", inputs: ReadonlyArray<ParamType>, outputs: ReadonlyArray<ParamType>, gas: null | bigint) {\n        super(guard, \"function\", name, inputs);\n        Object.defineProperty(this, internal, { value: FunctionFragmentInternal });\n        outputs = Object.freeze(outputs.slice());\n        const constant = (stateMutability === \"view\" || stateMutability === \"pure\");\n        const payable = (stateMutability === \"payable\");\n        defineProperties<FunctionFragment>(this, { constant, gas, outputs, payable, stateMutability });\n    }\n\n    /**\n     *  The Function selector.\n     */\n    get selector(): string {\n        return id(this.format(\"sighash\")).substring(0, 10);\n    }\n\n    /**\n     *  Returns a string representation of this function as %%format%%.\n     */\n    format(format?: FormatType): string {\n        if (format == null) { format = \"sighash\"; }\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability: undefined),\n                payable: this.payable,\n                gas: ((this.gas != null) ? this.gas: undefined),\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format))),\n                outputs: this.outputs.map((o) => JSON.parse(o.format(format))),\n            });\n        }\n\n        const result: Array<string> = [];\n\n        if (format !== \"sighash\") { result.push(\"function\"); }\n\n        result.push(this.name + joinParams(format, this.inputs));\n\n        if (format !== \"sighash\") {\n            if (this.stateMutability !== \"nonpayable\") {\n                result.push(this.stateMutability);\n            }\n\n            if (this.outputs && this.outputs.length) {\n                result.push(\"returns\");\n                result.push(joinParams(format, this.outputs));\n            }\n\n            if (this.gas != null) { result.push(`@${ this.gas.toString() }`); }\n        }\n        return result.join(\" \");\n    }\n\n    /**\n     *  Return the selector for a function with %%name%% and %%params%%.\n     */\n    static getSelector(name: string, params?: Array<any>): string {\n        params = (params || []).map((p) => ParamType.from(p));\n        const fragment = new FunctionFragment(_guard, name, \"view\", params, [ ], null);\n        return fragment.selector;\n    }\n\n    /**\n     *  Returns a new **FunctionFragment** for %%obj%%.\n     */\n    static from(obj: any): FunctionFragment {\n        if (FunctionFragment.isFragment(obj)) { return obj; }\n\n        if (typeof(obj) === \"string\") {\n            try {\n                return FunctionFragment.from(lex(obj));\n            } catch (error) {\n                assertArgument(false, \"invalid function fragment\", \"obj\", obj);\n            }\n\n        } else if (obj instanceof TokenString) {\n            const name = consumeName(\"function\", obj);\n            const inputs = consumeParams(obj);\n            const mutability = consumeMutability(obj);\n\n            let outputs: Array<ParamType> = [ ];\n            if (consumeKeywords(obj, setify([ \"returns\" ])).has(\"returns\")) {\n                outputs = consumeParams(obj);\n            }\n\n            const gas = consumeGas(obj);\n\n            consumeEoi(obj);\n\n            return new FunctionFragment(_guard, name, mutability, inputs, outputs, gas);\n        }\n\n        let stateMutability = obj.stateMutability;\n\n        // Use legacy Solidity ABI logic if stateMutability is missing\n        if (stateMutability == null) {\n            stateMutability = \"payable\";\n\n            if (typeof(obj.constant) === \"boolean\") {\n                stateMutability = \"view\";\n                if (!obj.constant) {\n                    stateMutability = \"payable\"\n                    if (typeof(obj.payable) === \"boolean\" && !obj.payable) {\n                        stateMutability = \"nonpayable\";\n                    }\n                }\n            } else if (typeof(obj.payable) === \"boolean\" && !obj.payable) {\n                stateMutability = \"nonpayable\";\n            }\n        }\n\n        // @TODO: verifyState for stateMutability (e.g. throw if\n        //        payable: false but stateMutability is \"nonpayable\")\n\n        return new FunctionFragment(_guard, obj.name, stateMutability,\n             obj.inputs ? obj.inputs.map(ParamType.from): [ ],\n             obj.outputs ? obj.outputs.map(ParamType.from): [ ],\n             (obj.gas != null) ? obj.gas: null);\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is a\n     *  **FunctionFragment**.\n     */\n    static isFragment(value: any): value is FunctionFragment {\n        return (value && value[internal] === FunctionFragmentInternal);\n    }\n}\n\n/**\n *  A Fragment which represents a structure.\n */\nexport class StructFragment extends NamedFragment {\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, name: string, inputs: ReadonlyArray<ParamType>) {\n        super(guard, \"struct\", name, inputs);\n        Object.defineProperty(this, internal, { value: StructFragmentInternal });\n    }\n\n    /**\n     *  Returns a string representation of this struct as %%format%%.\n     */\n    format(): string {\n        throw new Error(\"@TODO\");\n    }\n\n    /**\n     *  Returns a new **StructFragment** for %%obj%%.\n     */\n    static from(obj: any): StructFragment {\n        if (typeof(obj) === \"string\") {\n            try {\n                return StructFragment.from(lex(obj));\n            } catch (error) {\n                assertArgument(false, \"invalid struct fragment\", \"obj\", obj);\n            }\n\n        } else if (obj instanceof TokenString) {\n            const name = consumeName(\"struct\", obj);\n            const inputs = consumeParams(obj);\n            consumeEoi(obj);\n            return new StructFragment(_guard, name, inputs);\n        }\n\n        return new StructFragment(_guard, obj.name, obj.inputs ? obj.inputs.map(ParamType.from): [ ]);\n    }\n\n// @TODO: fix this return type\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is a\n     *  **StructFragment**.\n     */\n    static isFragment(value: any): value is FunctionFragment {\n        return (value && value[internal] === StructFragmentInternal);\n    }\n}\n\n", "/**\n *  When sending values to or receiving values from a [[Contract]], the\n *  data is generally encoded using the [ABI standard](link-solc-abi).\n *\n *  The AbiCoder provides a utility to encode values to ABI data and\n *  decode values from ABI data.\n *\n *  Most of the time, developers should favour the [[Contract]] class,\n *  which further abstracts a lot of the finer details of ABI data.\n *\n *  @_section api/abi/abi-coder:ABI Encoding\n */\n\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\n\nimport { assertArgumentCount, assertArgument } from \"../utils/index.js\";\n\nimport { Coder, Reader, Result, Writer } from \"./coders/abstract-coder.js\";\nimport { AddressCoder } from \"./coders/address.js\";\nimport { ArrayCoder } from \"./coders/array.js\";\nimport { BooleanCoder } from \"./coders/boolean.js\";\nimport { BytesCoder } from \"./coders/bytes.js\";\nimport { FixedBytesCoder } from \"./coders/fixed-bytes.js\";\nimport { NullCoder } from \"./coders/null.js\";\nimport { NumberCoder } from \"./coders/number.js\";\nimport { StringCoder } from \"./coders/string.js\";\nimport { TupleCoder } from \"./coders/tuple.js\";\nimport { ParamType } from \"./fragments.js\";\n\nimport { getAddress } from \"../address/index.js\";\nimport { getBytes, hexlify, makeError } from \"../utils/index.js\";\n\nimport type {\n    BytesLike,\n    CallExceptionAction, CallExceptionError, CallExceptionTransaction\n} from \"../utils/index.js\";\n\n// https://docs.soliditylang.org/en/v0.8.17/control-structures.html\nconst PanicReasons: Map<number, string> = new Map();\nPanicReasons.set(0x00, \"GENERIC_PANIC\");\nPanicReasons.set(0x01, \"ASSERT_FALSE\");\nPanicReasons.set(0x11, \"OVERFLOW\");\nPanicReasons.set(0x12, \"DIVIDE_BY_ZERO\");\nPanicReasons.set(0x21, \"ENUM_RANGE_ERROR\");\nPanicReasons.set(0x22, \"BAD_STORAGE_DATA\");\nPanicReasons.set(0x31, \"STACK_UNDERFLOW\");\nPanicReasons.set(0x32, \"ARRAY_RANGE_ERROR\");\nPanicReasons.set(0x41, \"OUT_OF_MEMORY\");\nPanicReasons.set(0x51, \"UNINITIALIZED_FUNCTION_CALL\");\n\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\n\n\nlet defaultCoder: null | AbiCoder = null;\nlet defaultMaxInflation = 1024;\n\nfunction getBuiltinCallException(action: CallExceptionAction, tx: { to?: null | string, from?: null | string, data?: string }, data: null | BytesLike, abiCoder: AbiCoder): CallExceptionError {\n    let message = \"missing revert data\";\n\n    let reason: null | string = null;\n    const invocation = null;\n    let revert: null | { signature: string, name: string, args: Array<any> } = null;\n\n    if (data) {\n        message = \"execution reverted\";\n\n        const bytes = getBytes(data);\n        data = hexlify(data);\n\n        if (bytes.length === 0) {\n            message += \" (no data present; likely require(false) occurred\";\n            reason = \"require(false)\";\n\n        } else if (bytes.length % 32 !== 4) {\n            message += \" (could not decode reason; invalid data length)\";\n\n        } else if (hexlify(bytes.slice(0, 4)) === \"0x08c379a0\") {\n            // Error(string)\n            try {\n                reason = abiCoder.decode([ \"string\" ], bytes.slice(4))[0]\n                revert = {\n                    signature: \"Error(string)\",\n                    name: \"Error\",\n                    args: [ reason ]\n                };\n                message += `: ${ JSON.stringify(reason) }`;\n\n            } catch (error) {\n                message += \" (could not decode reason; invalid string data)\";\n            }\n\n        } else if (hexlify(bytes.slice(0, 4)) === \"0x4e487b71\") {\n            // Panic(uint256)\n            try {\n                const code = Number(abiCoder.decode([ \"uint256\" ], bytes.slice(4))[0]);\n                revert = {\n                    signature: \"Panic(uint256)\",\n                    name: \"Panic\",\n                    args: [ code ]\n                };\n                reason = `Panic due to ${ PanicReasons.get(code) || \"UNKNOWN\" }(${ code })`;\n                message += `: ${ reason }`;\n            } catch (error) {\n                message += \" (could not decode panic code)\";\n            }\n        } else {\n            message += \" (unknown custom error)\";\n        }\n    }\n\n    const transaction: CallExceptionTransaction = {\n        to: (tx.to ? getAddress(tx.to): null),\n        data: (tx.data || \"0x\")\n    };\n    if (tx.from) { transaction.from = getAddress(tx.from); }\n\n    return makeError(message, \"CALL_EXCEPTION\", {\n        action, data, reason, transaction, invocation, revert\n    });\n}\n\n/**\n *  The **AbiCoder** is a low-level class responsible for encoding JavaScript\n *  values into binary data and decoding binary data into JavaScript values.\n */\nexport class AbiCoder {\n\n    #getCoder(param: ParamType): Coder {\n        if (param.isArray()) {\n            return new ArrayCoder(this.#getCoder(param.arrayChildren), param.arrayLength, param.name);\n        }\n\n        if (param.isTuple()) {\n            return new TupleCoder(param.components.map((c) => this.#getCoder(c)), param.name);\n        }\n\n        switch (param.baseType) {\n            case \"address\":\n                return new AddressCoder(param.name);\n            case \"bool\":\n                return new BooleanCoder(param.name);\n            case \"string\":\n                return new StringCoder(param.name);\n            case \"bytes\":\n                return new BytesCoder(param.name);\n            case \"\":\n                return new NullCoder(param.name);\n        }\n\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            assertArgument(size !== 0 && size <= 256 && (size % 8) === 0,\n                \"invalid \" + match[1] + \" bit length\", \"param\", param);\n            return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            assertArgument(size !== 0 && size <= 32, \"invalid bytes length\", \"param\", param);\n            return new FixedBytesCoder(size, param.name);\n        }\n\n        assertArgument(false, \"invalid type\", \"type\", param.type);\n    }\n\n    /**\n     *  Get the default values for the given %%types%%.\n     *\n     *  For example, a ``uint`` is by default ``0`` and ``bool``\n     *  is by default ``false``.\n     */\n    getDefaultValue(types: ReadonlyArray<string | ParamType>): Result {\n        const coders: Array<Coder> = types.map((type) => this.#getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n\n    /**\n     *  Encode the %%values%% as the %%types%% into ABI data.\n     *\n     *  @returns DataHexstring\n     */\n    encode(types: ReadonlyArray<string | ParamType>, values: ReadonlyArray<any>): string {\n        assertArgumentCount(values.length, types.length, \"types/values length mismatch\");\n\n        const coders = types.map((type) => this.#getCoder(ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n\n        const writer = new Writer();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n\n    /**\n     *  Decode the ABI %%data%% as the %%types%% into values.\n     *\n     *  If %%loose%% decoding is enabled, then strict padding is\n     *  not enforced. Some older versions of Solidity incorrectly\n     *  padded event data emitted from ``external`` functions.\n     */\n    decode(types: ReadonlyArray<string | ParamType>, data: BytesLike, loose?: boolean): Result {\n        const coders: Array<Coder> = types.map((type) => this.#getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(new Reader(data, loose, defaultMaxInflation));\n    }\n\n    static _setDefaultMaxInflation(value: number): void {\n        assertArgument(typeof(value) === \"number\" && Number.isInteger(value), \"invalid defaultMaxInflation factor\", \"value\", value);\n        defaultMaxInflation = value;\n    }\n\n    /**\n     *  Returns the shared singleton instance of a default [[AbiCoder]].\n     *\n     *  On the first call, the instance is created internally.\n     */\n    static defaultAbiCoder(): AbiCoder {\n        if (defaultCoder == null) {\n            defaultCoder = new AbiCoder();\n        }\n        return defaultCoder;\n    }\n\n    /**\n     *  Returns an ethers-compatible [[CallExceptionError]] Error for the given\n     *  result %%data%% for the [[CallExceptionAction]] %%action%% against\n     *  the Transaction %%tx%%.\n     */\n    static getBuiltinCallException(action: CallExceptionAction, tx: { to?: null | string, from?: null | string, data?: string }, data: null | BytesLike): CallExceptionError {\n        return getBuiltinCallException(action, tx, data, AbiCoder.defaultAbiCoder());\n    }\n}\n", "/**\n *  The Interface class is a low-level class that accepts an\n *  ABI and provides all the necessary functionality to encode\n *  and decode paramaters to and results from methods, events\n *  and errors.\n *\n *  It also provides several convenience methods to automatically\n *  search and find matching transactions and events to parse them.\n *\n *  @_subsection api/abi:Interfaces  [interfaces]\n */\n\nimport { keccak256 } from \"../crypto/index.js\"\nimport { id } from \"../hash/index.js\"\nimport {\n    concat, dataSlice, getBigInt, getBytes, getBytesCopy,\n    hexlify, zeroPadBytes, zeroPadValue, isHexString, defineProperties,\n    assertArgument, toBeHex, assert\n} from \"../utils/index.js\";\n\nimport { AbiCoder } from \"./abi-coder.js\";\nimport { checkResultErrors, Result } from \"./coders/abstract-coder.js\";\nimport {\n    ConstructorFragment, ErrorFragment, EventFragment, FallbackFragment,\n    Fragment, FunctionFragment, ParamType\n} from \"./fragments.js\";\nimport { Typed } from \"./typed.js\";\n\nimport type { BigNumberish, BytesLike, CallExceptionError, CallExceptionTransaction } from \"../utils/index.js\";\n\nimport type { JsonFragment } from \"./fragments.js\";\n\n\nexport { checkResultErrors, Result };\n\n/**\n *  When using the [[Interface-parseLog]] to automatically match a Log to its event\n *  for parsing, a **LogDescription** is returned.\n */\nexport class LogDescription {\n    /**\n     *  The matching fragment for the ``topic0``.\n     */\n    readonly fragment!: EventFragment;\n\n    /**\n     *  The name of the Event.\n     */\n    readonly name!: string;\n\n    /**\n     *  The full Event signature.\n     */\n    readonly signature!: string;\n\n    /**\n     *  The topic hash for the Event.\n     */\n    readonly topic!: string;\n\n    /**\n     *  The arguments passed into the Event with ``emit``.\n     */\n    readonly args!: Result\n\n    /**\n     *  @_ignore:\n     */\n    constructor(fragment: EventFragment, topic: string, args: Result) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties<LogDescription>(this, {\n            fragment, name, signature, topic, args\n        });\n    }\n}\n\n/**\n *  When using the [[Interface-parseTransaction]] to automatically match\n *  a transaction data to its function for parsing,\n *  a **TransactionDescription** is returned.\n */\nexport class TransactionDescription {\n    /**\n     *  The matching fragment from the transaction ``data``.\n     */\n    readonly fragment!: FunctionFragment;\n\n    /**\n     *  The name of the Function from the transaction ``data``.\n     */\n    readonly name!: string;\n\n    /**\n     *  The arguments passed to the Function from the transaction ``data``.\n     */\n    readonly args!: Result;\n\n    /**\n     *  The full Function signature from the transaction ``data``.\n     */\n    readonly signature!: string;\n\n    /**\n     *  The selector for the Function from the transaction ``data``.\n     */\n    readonly selector!: string;\n\n    /**\n     *  The ``value`` (in wei) from the transaction.\n     */\n    readonly value!: bigint;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(fragment: FunctionFragment, selector: string, args: Result, value: bigint) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties<TransactionDescription>(this, {\n            fragment, name, args, signature, selector, value\n        });\n    }\n}\n\n/**\n *  When using the [[Interface-parseError]] to automatically match an\n *  error for a call result for parsing, an **ErrorDescription** is returned.\n */\nexport class ErrorDescription {\n    /**\n     *  The matching fragment.\n     */\n    readonly fragment!: ErrorFragment;\n\n    /**\n     *  The name of the Error.\n     */\n    readonly name!: string;\n\n    /**\n     *  The arguments passed to the Error with ``revert``.\n     */\n    readonly args!: Result;\n\n    /**\n     *  The full Error signature.\n     */\n    readonly signature!: string;\n\n    /**\n     *  The selector for the Error.\n     */\n    readonly selector!: string;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(fragment: ErrorFragment, selector: string, args: Result) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties<ErrorDescription>(this, {\n            fragment, name, args, signature, selector\n        });\n    }\n}\n\n/**\n *  An **Indexed** is used as a value when a value that does not\n *  fit within a topic (i.e. not a fixed-length, 32-byte type). It\n *  is the ``keccak256`` of the value, and used for types such as\n *  arrays, tuples, bytes and strings.\n */\nexport class Indexed {\n    /**\n     *  The ``keccak256`` of the value logged.\n     */\n    readonly hash!: null | string;\n\n    /**\n     *  @_ignore:\n     */\n    readonly _isIndexed!: boolean;\n\n    /**\n     *  Returns ``true`` if %%value%% is an **Indexed**.\n     *\n     *  This provides a Type Guard for property access.\n     */\n    static isIndexed(value: any): value is Indexed {\n        return !!(value && value._isIndexed);\n    }\n\n    /**\n     *  @_ignore:\n     */\n    constructor(hash: null | string) {\n        defineProperties<Indexed>(this, { hash, _isIndexed: true })\n    }\n}\n\ntype ErrorInfo = {\n    signature: string,\n    inputs: Array<string>,\n    name: string,\n    reason: (...args: Array<any>) => string;\n};\n\n// https://docs.soliditylang.org/en/v0.8.13/control-structures.html?highlight=panic#panic-via-assert-and-error-via-require\nconst PanicReasons: Record<string, string> = {\n    \"0\": \"generic panic\",\n    \"1\": \"assert(false)\",\n    \"17\": \"arithmetic overflow\",\n    \"18\": \"division or modulo by zero\",\n    \"33\": \"enum overflow\",\n    \"34\": \"invalid encoded storage byte array accessed\",\n    \"49\": \"out-of-bounds array access; popping on an empty array\",\n    \"50\": \"out-of-bounds access of an array or bytesN\",\n    \"65\": \"out of memory\",\n    \"81\": \"uninitialized function\",\n}\n\nconst BuiltinErrors: Record<string, ErrorInfo> = {\n    \"0x08c379a0\": {\n        signature: \"Error(string)\",\n        name: \"Error\",\n        inputs: [ \"string\" ],\n        reason: (message: string) => {\n            return `reverted with reason string ${ JSON.stringify(message) }`;\n        }\n    },\n    \"0x4e487b71\": {\n        signature: \"Panic(uint256)\",\n        name: \"Panic\",\n        inputs: [ \"uint256\" ],\n        reason: (code: bigint) => {\n            let reason = \"unknown panic code\";\n            if (code >= 0 && code <= 0xff && PanicReasons[code.toString()]) {\n                reason = PanicReasons[code.toString()];\n            }\n            return `reverted with panic code 0x${ code.toString(16) } (${ reason })`;\n        }\n    }\n}\n\n/*\nfunction wrapAccessError(property: string, error: Error): Error {\n    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${ property }`);\n    (<any>wrap).error = error;\n    return wrap;\n}\n*/\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\n\n/**\n *  An **InterfaceAbi** may be any supported ABI format.\n *\n *  A string is expected to be a JSON string, which will be parsed\n *  using ``JSON.parse``. This means that the value **must** be a valid\n *  JSON string, with no stray commas, etc.\n *\n *  An array may contain any combination of:\n *  - Human-Readable fragments\n *  - Parsed JSON fragment\n *  - [[Fragment]] instances\n *\n *  A **Human-Readable Fragment** is a string which resembles a Solidity\n *  signature and is introduced in [this blog entry](link-ricmoo-humanreadableabi).\n *  For example, ``function balanceOf(address) view returns (uint)``.\n *\n *  A **Parsed JSON Fragment** is a JavaScript Object desribed in the\n *  [Solidity documentation](link-solc-jsonabi).\n */\nexport type InterfaceAbi = string | ReadonlyArray<Fragment | JsonFragment | string>;\n\n/**\n *  An Interface abstracts many of the low-level details for\n *  encoding and decoding the data on the blockchain.\n *\n *  An ABI provides information on how to encode data to send to\n *  a Contract, how to decode the results and events and how to\n *  interpret revert errors.\n *\n *  The ABI can be specified by [any supported format](InterfaceAbi).\n */\nexport class Interface {\n\n    /**\n     *  All the Contract ABI members (i.e. methods, events, errors, etc).\n     */\n    readonly fragments!: ReadonlyArray<Fragment>;\n\n    /**\n     *  The Contract constructor.\n     */\n    readonly deploy!: ConstructorFragment;\n\n    /**\n     *  The Fallback method, if any.\n     */\n    readonly fallback!: null | FallbackFragment;\n\n    /**\n     *  If receiving ether is supported.\n     */\n    readonly receive!: boolean;\n\n    #errors: Map<string, ErrorFragment>;\n    #events: Map<string, EventFragment>;\n    #functions: Map<string, FunctionFragment>;\n//    #structs: Map<string, StructFragment>;\n\n    #abiCoder: AbiCoder;\n\n    /**\n     *  Create a new Interface for the %%fragments%%.\n     */\n    constructor(fragments: InterfaceAbi) {\n        let abi: ReadonlyArray<Fragment | JsonFragment | string> = [ ];\n        if (typeof(fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        } else {\n            abi = fragments;\n        }\n\n        this.#functions = new Map();\n        this.#errors = new Map();\n        this.#events = new Map();\n//        this.#structs = new Map();\n\n\n        const frags: Array<Fragment> = [ ];\n        for (const a of abi) {\n            try {\n                frags.push(Fragment.from(a));\n            } catch (error: any) {\n                console.log(`[Warning] Invalid Fragment ${ JSON.stringify(a) }:`, error.message);\n            }\n        }\n\n        defineProperties<Interface>(this, {\n            fragments: Object.freeze(frags)\n        });\n\n        let fallback: null | FallbackFragment = null;\n        let receive = false;\n\n        this.#abiCoder = this.getAbiCoder();\n\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment, index) => {\n            let bucket: Map<string, Fragment>;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        console.log(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineProperties<Interface>(this, { deploy: <ConstructorFragment>fragment });\n                    return;\n\n                case \"fallback\":\n                    if (fragment.inputs.length === 0) {\n                        receive = true;\n                    } else {\n                        assertArgument(!fallback || (<FallbackFragment>fragment).payable !== fallback.payable,\n                            \"conflicting fallback fragments\", `fragments[${ index }]`, fragment);\n                        fallback = <FallbackFragment>fragment;\n                        receive = fallback.payable;\n                    }\n                    return;\n\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.#functions;\n                    break;\n\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.#events;\n                    break;\n\n                case \"error\":\n                    bucket = this.#errors;\n                    break;\n\n                default:\n                    return;\n            }\n\n            // Two identical entries; ignore it\n            const signature = fragment.format();\n            if (bucket.has(signature)) { return; }\n\n            bucket.set(signature, fragment);\n        });\n\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineProperties<Interface>(this, {\n                deploy: ConstructorFragment.from(\"constructor()\")\n            });\n        }\n\n        defineProperties<Interface>(this, { fallback, receive });\n    }\n\n    /**\n     *  Returns the entire Human-Readable ABI, as an array of\n     *  signatures, optionally as %%minimal%% strings, which\n     *  removes parameter names and unneceesary spaces.\n     */\n    format(minimal?: boolean): Array<string> {\n        const format = (minimal ? \"minimal\": \"full\");\n        const abi = this.fragments.map((f) => f.format(format));\n        return abi;\n    }\n\n    /**\n     *  Return the JSON-encoded ABI. This is the format Solidiy\n     *  returns.\n     */\n    formatJson(): string {\n        const abi = this.fragments.map((f) => f.format(\"json\"));\n\n        // We need to re-bundle the JSON fragments a bit\n        return JSON.stringify(abi.map((j) => JSON.parse(j)));\n    }\n\n    /**\n     *  The ABI coder that will be used to encode and decode binary\n     *  data.\n     */\n    getAbiCoder(): AbiCoder {\n        return AbiCoder.defaultAbiCoder();\n    }\n\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    #getFunction(key: string, values: null | Array<any | Typed>, forceUnique: boolean): null | FunctionFragment {\n\n        // Selector\n        if (isHexString(key)) {\n            const selector = key.toLowerCase();\n            for (const fragment of this.#functions.values()) {\n                if (selector === fragment.selector) { return fragment; }\n            }\n            return null;\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf(\"(\") === -1) {\n            const matching: Array<FunctionFragment> = [ ];\n            for (const [ name, fragment ] of this.#functions) {\n                if (name.split(\"(\"/* fix:) */)[0] === key) { matching.push(fragment); }\n            }\n\n            if (values) {\n                const lastValue = (values.length > 0) ? values[values.length - 1]: null;\n\n                let valueLength = values.length;\n                let allowOptions = true;\n                if (Typed.isTyped(lastValue) && lastValue.type === \"overrides\") {\n                    allowOptions = false;\n                    valueLength--;\n                }\n\n                // Remove all matches that don't have a compatible length. The args\n                // may contain an overrides, so the match may have n or n - 1 parameters\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs.length;\n                    if (inputs !== valueLength && (!allowOptions || inputs !== valueLength - 1)) {\n                        matching.splice(i, 1);\n                    }\n                }\n\n                // Remove all matches that don't match the Typed signature\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs;\n                    for (let j = 0; j < values.length; j++) {\n                        // Not a typed value\n                        if (!Typed.isTyped(values[j])) { continue; }\n\n                        // We are past the inputs\n                        if (j >= inputs.length) {\n                            if (values[j].type === \"overrides\") { continue; }\n                            matching.splice(i, 1);\n                            break;\n                        }\n\n                        // Make sure the value type matches the input type\n                        if (values[j].type !== inputs[j].baseType) {\n                            matching.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            }\n\n            // We found a single matching signature with an overrides, but the\n            // last value is something that cannot possibly be an options\n            if (matching.length === 1 && values && values.length !== matching[0].inputs.length) {\n                const lastArg = values[values.length - 1];\n                if (lastArg == null || Array.isArray(lastArg) || typeof(lastArg) !== \"object\") {\n                    matching.splice(0, 1);\n                }\n            }\n\n            if (matching.length === 0) { return null; }\n\n            if (matching.length > 1 && forceUnique) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(\", \");\n                assertArgument(false, `ambiguous function description (i.e. matches ${ matchStr })`, \"key\", key);\n            }\n\n            return matching[0];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.#functions.get(FunctionFragment.from(key).format());\n        if (result) { return result; }\n\n        return null;\n    }\n\n    /**\n     *  Get the function name for %%key%%, which may be a function selector,\n     *  function name or function signature that belongs to the ABI.\n     */\n    getFunctionName(key: string): string {\n        const fragment = this.#getFunction(key, null, false);\n        assertArgument(fragment, \"no matching function\", \"key\", key);\n        return fragment.name;\n    }\n\n    /**\n     *  Returns true if %%key%% (a function selector, function name or\n     *  function signature) is present in the ABI.\n     *\n     *  In the case of a function name, the name may be ambiguous, so\n     *  accessing the [[FunctionFragment]] may require refinement.\n     */\n    hasFunction(key: string): boolean {\n        return !!this.#getFunction(key, null, false);\n    }\n\n    /**\n     *  Get the [[FunctionFragment]] for %%key%%, which may be a function\n     *  selector, function name or function signature that belongs to the ABI.\n     *\n     *  If %%values%% is provided, it will use the Typed API to handle\n     *  ambiguous cases where multiple functions match by name.\n     *\n     *  If the %%key%% and %%values%% do not refine to a single function in\n     *  the ABI, this will throw.\n     */\n    getFunction(key: string, values?: Array<any | Typed>): null | FunctionFragment {\n        return this.#getFunction(key, values || null, true);\n    }\n\n    /**\n     *  Iterate over all functions, calling %%callback%%, sorted by their name.\n     */\n    forEachFunction(callback: (func: FunctionFragment, index: number) => void): void {\n        const names = Array.from(this.#functions.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback(<FunctionFragment>(this.#functions.get(name)), i);\n        }\n    }\n\n\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    #getEvent(key: string, values: null | Array<null | any | Typed>, forceUnique: boolean): null | EventFragment {\n\n        // EventTopic\n        if (isHexString(key)) {\n            const eventTopic = key.toLowerCase();\n            for (const fragment of this.#events.values()) {\n                if (eventTopic === fragment.topicHash) { return fragment; }\n            }\n            return null;\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf(\"(\") === -1) {\n            const matching: Array<EventFragment> = [ ];\n            for (const [ name, fragment ] of this.#events) {\n                if (name.split(\"(\"/* fix:) */)[0] === key) { matching.push(fragment); }\n            }\n\n            if (values) {\n                // Remove all matches that don't have a compatible length.\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    if (matching[i].inputs.length < values.length) {\n                        matching.splice(i, 1);\n                    }\n                }\n\n                // Remove all matches that don't match the Typed signature\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs;\n                    for (let j = 0; j < values.length; j++) {\n                        // Not a typed value\n                        if (!Typed.isTyped(values[j])) { continue; }\n\n                        // Make sure the value type matches the input type\n                        if (values[j].type !== inputs[j].baseType) {\n                            matching.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            }\n\n            if (matching.length === 0) { return null; }\n\n            if (matching.length > 1 && forceUnique) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(\", \");\n                assertArgument(false, `ambiguous event description (i.e. matches ${ matchStr })`, \"key\", key);\n            }\n\n            return matching[0];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.#events.get(EventFragment.from(key).format());\n        if (result) { return result; }\n\n        return null;\n    }\n\n    /**\n     *  Get the event name for %%key%%, which may be a topic hash,\n     *  event name or event signature that belongs to the ABI.\n     */\n    getEventName(key: string): string {\n        const fragment = this.#getEvent(key, null, false);\n        assertArgument(fragment, \"no matching event\", \"key\", key);\n\n        return fragment.name;\n    }\n\n    /**\n     *  Returns true if %%key%% (an event topic hash, event name or\n     *  event signature) is present in the ABI.\n     *\n     *  In the case of an event name, the name may be ambiguous, so\n     *  accessing the [[EventFragment]] may require refinement.\n     */\n    hasEvent(key: string): boolean {\n        return !!this.#getEvent(key, null, false);\n    }\n\n    /**\n     *  Get the [[EventFragment]] for %%key%%, which may be a topic hash,\n     *  event name or event signature that belongs to the ABI.\n     *\n     *  If %%values%% is provided, it will use the Typed API to handle\n     *  ambiguous cases where multiple events match by name.\n     *\n     *  If the %%key%% and %%values%% do not refine to a single event in\n     *  the ABI, this will throw.\n     */\n    getEvent(key: string, values?: Array<any | Typed>): null | EventFragment {\n        return this.#getEvent(key, values || null, true)\n    }\n\n    /**\n     *  Iterate over all events, calling %%callback%%, sorted by their name.\n     */\n    forEachEvent(callback: (func: EventFragment, index: number) => void): void {\n        const names = Array.from(this.#events.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback(<EventFragment>(this.#events.get(name)), i);\n        }\n    }\n\n    /**\n     *  Get the [[ErrorFragment]] for %%key%%, which may be an error\n     *  selector, error name or error signature that belongs to the ABI.\n     *\n     *  If %%values%% is provided, it will use the Typed API to handle\n     *  ambiguous cases where multiple errors match by name.\n     *\n     *  If the %%key%% and %%values%% do not refine to a single error in\n     *  the ABI, this will throw.\n     */\n    getError(key: string, values?: Array<any | Typed>): null | ErrorFragment {\n        if (isHexString(key)) {\n            const selector = key.toLowerCase();\n\n            if (BuiltinErrors[selector]) {\n                return ErrorFragment.from(BuiltinErrors[selector].signature);\n            }\n\n            for (const fragment of this.#errors.values()) {\n                if (selector === fragment.selector) { return fragment; }\n            }\n\n            return null;\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf(\"(\") === -1) {\n            const matching: Array<ErrorFragment> = [ ];\n            for (const [ name, fragment ] of this.#errors) {\n                if (name.split(\"(\"/* fix:) */)[0] === key) { matching.push(fragment); }\n            }\n\n            if (matching.length === 0) {\n                if (key === \"Error\") { return ErrorFragment.from(\"error Error(string)\"); }\n                if (key === \"Panic\") { return ErrorFragment.from(\"error Panic(uint256)\"); }\n                return null;\n            } else if (matching.length > 1) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(\", \");\n                assertArgument(false, `ambiguous error description (i.e. ${ matchStr })`, \"name\", key);\n            }\n\n            return matching[0];\n        }\n\n        // Normalize the signature and lookup the function\n        key = ErrorFragment.from(key).format()\n        if (key === \"Error(string)\") { return ErrorFragment.from(\"error Error(string)\"); }\n        if (key === \"Panic(uint256)\") { return ErrorFragment.from(\"error Panic(uint256)\"); }\n\n        const result = this.#errors.get(key);\n        if (result) { return result; }\n\n        return null;\n    }\n\n    /**\n     *  Iterate over all errors, calling %%callback%%, sorted by their name.\n     */\n    forEachError(callback: (func: ErrorFragment, index: number) => void): void {\n        const names = Array.from(this.#errors.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback(<ErrorFragment>(this.#errors.get(name)), i);\n        }\n    }\n\n    // Get the 4-byte selector used by Solidity to identify a function\n        /*\n    getSelector(fragment: ErrorFragment | FunctionFragment): string {\n        if (typeof(fragment) === \"string\") {\n            const matches: Array<Fragment> = [ ];\n\n            try { matches.push(this.getFunction(fragment)); } catch (error) { }\n            try { matches.push(this.getError(<string>fragment)); } catch (_) { }\n\n            if (matches.length === 0) {\n                logger.throwArgumentError(\"unknown fragment\", \"key\", fragment);\n            } else if (matches.length > 1) {\n                logger.throwArgumentError(\"ambiguous fragment matches function and error\", \"key\", fragment);\n            }\n\n            fragment = matches[0];\n        }\n\n        return dataSlice(id(fragment.format()), 0, 4);\n    }\n        */\n\n    // Get the 32-byte topic hash used by Solidity to identify an event\n    /*\n    getEventTopic(fragment: EventFragment): string {\n        //if (typeof(fragment) === \"string\") { fragment = this.getEvent(eventFragment); }\n        return id(fragment.format());\n    }\n    */\n\n\n    _decodeParams(params: ReadonlyArray<ParamType>, data: BytesLike): Result {\n        return this.#abiCoder.decode(params, data)\n    }\n\n    _encodeParams(params: ReadonlyArray<ParamType>, values: ReadonlyArray<any>): string {\n        return this.#abiCoder.encode(params, values)\n    }\n\n    /**\n     *  Encodes a ``tx.data`` object for deploying the Contract with\n     *  the %%values%% as the constructor arguments.\n     */\n    encodeDeploy(values?: ReadonlyArray<any>): string {\n        return this._encodeParams(this.deploy.inputs, values || [ ]);\n    }\n\n    /**\n     *  Decodes the result %%data%% (e.g. from an ``eth_call``) for the\n     *  specified error (see [[getError]] for valid values for\n     *  %%key%%).\n     *\n     *  Most developers should prefer the [[parseCallResult]] method instead,\n     *  which will automatically detect a ``CALL_EXCEPTION`` and throw the\n     *  corresponding error.\n     */\n    decodeErrorResult(fragment: ErrorFragment | string, data: BytesLike): Result {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getError(fragment);\n            assertArgument(f, \"unknown error\", \"fragment\", fragment);\n            fragment = f;\n        }\n\n        assertArgument(dataSlice(data, 0, 4) === fragment.selector,\n            `data signature does not match error ${ fragment.name }.`, \"data\", data);\n\n        return this._decodeParams(fragment.inputs, dataSlice(data, 4));\n    }\n\n    /**\n     *  Encodes the transaction revert data for a call result that\n     *  reverted from the the Contract with the sepcified %%error%%\n     *  (see [[getError]] for valid values for %%fragment%%) with the %%values%%.\n     *\n     *  This is generally not used by most developers, unless trying to mock\n     *  a result from a Contract.\n     */\n    encodeErrorResult(fragment: ErrorFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getError(fragment);\n            assertArgument(f, \"unknown error\", \"fragment\", fragment);\n            fragment = f;\n        }\n\n        return concat([\n            fragment.selector,\n            this._encodeParams(fragment.inputs, values || [ ])\n        ]);\n    }\n\n    /**\n     *  Decodes the %%data%% from a transaction ``tx.data`` for\n     *  the function specified (see [[getFunction]] for valid values\n     *  for %%fragment%%).\n     *\n     *  Most developers should prefer the [[parseTransaction]] method\n     *  instead, which will automatically detect the fragment.\n     */\n    decodeFunctionData(fragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n\n        assertArgument(dataSlice(data, 0, 4) === fragment.selector,\n            `data signature does not match function ${ fragment.name }.`, \"data\", data);\n\n        return this._decodeParams(fragment.inputs, dataSlice(data, 4));\n    }\n\n    /**\n     *  Encodes the ``tx.data`` for a transaction that calls the function\n     *  specified (see [[getFunction]] for valid values for %%fragment%%) with\n     *  the %%values%%.\n     */\n    encodeFunctionData(fragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n\n        return concat([\n            fragment.selector,\n            this._encodeParams(fragment.inputs, values || [ ])\n        ]);\n    }\n\n    /**\n     *  Decodes the result %%data%% (e.g. from an ``eth_call``) for the\n     *  specified function (see [[getFunction]] for valid values for\n     *  %%key%%).\n     *\n     *  Most developers should prefer the [[parseCallResult]] method instead,\n     *  which will automatically detect a ``CALL_EXCEPTION`` and throw the\n     *  corresponding error.\n     */\n    decodeFunctionResult(fragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n\n        let message = \"invalid length for result data\";\n\n        const bytes = getBytesCopy(data);\n        if ((bytes.length % 32) === 0) {\n            try {\n                return this.#abiCoder.decode(fragment.outputs, bytes);\n            } catch (error) {\n                message = \"could not decode result data\";\n            }\n        }\n\n        // Call returned data with no error, but the data is junk\n        assert(false, message, \"BAD_DATA\", {\n            value: hexlify(bytes),\n            info: { method: fragment.name, signature: fragment.format() }\n        });\n    }\n\n    makeError(_data: BytesLike, tx: CallExceptionTransaction): CallExceptionError {\n        const data = getBytes(_data, \"data\");\n\n        const error = AbiCoder.getBuiltinCallException(\"call\", tx, data);\n\n        // Not a built-in error; try finding a custom error\n        const customPrefix = \"execution reverted (unknown custom error)\";\n        if (error.message.startsWith(customPrefix)) {\n            const selector = hexlify(data.slice(0, 4));\n\n            const ef = this.getError(selector);\n            if (ef) {\n                try {\n                    const args = this.#abiCoder.decode(ef.inputs, data.slice(4));\n                    error.revert = {\n                        name: ef.name, signature: ef.format(), args\n                    };\n                    error.reason = error.revert.signature;\n                    error.message = `execution reverted: ${ error.reason }`\n                 } catch (e) {\n                    error.message = `execution reverted (coult not decode custom error)`\n                }\n            }\n        }\n\n        // Add the invocation, if available\n        const parsed = this.parseTransaction(tx);\n        if (parsed) {\n            error.invocation = {\n                method: parsed.name,\n                signature: parsed.signature,\n                args: parsed.args\n            };\n        }\n\n        return error;\n    }\n\n    /**\n     *  Encodes the result data (e.g. from an ``eth_call``) for the\n     *  specified function (see [[getFunction]] for valid values\n     *  for %%fragment%%) with %%values%%.\n     *\n     *  This is generally not used by most developers, unless trying to mock\n     *  a result from a Contract.\n     */\n    encodeFunctionResult(fragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n        return hexlify(this.#abiCoder.encode(fragment.outputs, values || [ ]));\n    }\n/*\n    spelunk(inputs: Array<ParamType>, values: ReadonlyArray<any>, processfunc: (type: string, value: any) => Promise<any>): Promise<Array<any>> {\n        const promises: Array<Promise<>> = [ ];\n        const process = function(type: ParamType, value: any): any {\n            if (type.baseType === \"array\") {\n                return descend(type.child\n            }\n            if (type. === \"address\") {\n            }\n        };\n\n        const descend = function (inputs: Array<ParamType>, values: ReadonlyArray<any>) {\n            if (inputs.length !== values.length) { throw new Error(\"length mismatch\"); }\n            \n        };\n\n        const result: Array<any> = [ ];\n        values.forEach((value, index) => {\n            if (value == null) {\n                topics.push(null);\n            } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            } else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            } else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n    }\n*/\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(fragment: EventFragment | string, values: ReadonlyArray<any>): Array<null | string | Array<string>> {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getEvent(fragment);\n            assertArgument(f, \"unknown event\", \"eventFragment\", fragment);\n            fragment = f;\n        }\n\n        assert(values.length <= fragment.inputs.length, `too many arguments for ${ fragment.format() }`,\n            \"UNEXPECTED_ARGUMENT\", { count: values.length, expectedCount: fragment.inputs.length })\n\n        const topics: Array<null | string | Array<string>> = [];\n        if (!fragment.anonymous) { topics.push(fragment.topicHash); }\n\n        // @TODO: Use the coders for this; to properly support tuples, etc.\n        const encodeTopic = (param: ParamType, value: any): string => {\n            if (param.type === \"string\") {\n                 return id(value);\n            } else if (param.type === \"bytes\") {\n                 return keccak256(hexlify(value));\n            }\n\n            if (param.type === \"bool\" && typeof(value) === \"boolean\") {\n                value = (value ? \"0x01\": \"0x00\");\n            } else if (param.type.match(/^u?int/)) {\n                value = toBeHex(value);  // @TODO: Should this toTwos??\n            } else if (param.type.match(/^bytes/)) {\n                value = zeroPadBytes(value, 32);\n            } else if (param.type === \"address\") {\n                // Check addresses are valid\n                this.#abiCoder.encode( [ \"address\" ], [ value ]);\n            }\n\n            return zeroPadValue(hexlify(value), 32);\n        };\n\n        values.forEach((value, index) => {\n\n            const param = (<EventFragment>fragment).inputs[index];\n\n            if (!param.indexed) {\n                assertArgument(value == null,\n                    \"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                return;\n            }\n\n            if (value == null) {\n                topics.push(null);\n            } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                assertArgument(false, \"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            } else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            } else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n\n        return topics;\n    }\n\n    encodeEventLog(fragment: EventFragment | string, values: ReadonlyArray<any>): { data: string, topics: Array<string> } {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getEvent(fragment);\n            assertArgument(f, \"unknown event\", \"eventFragment\", fragment);\n            fragment = f;\n        }\n\n        const topics: Array<string> = [ ];\n\n        const dataTypes: Array<ParamType> = [ ];\n        const dataValues: Array<string> = [ ];\n\n        if (!fragment.anonymous) {\n            topics.push(fragment.topicHash);\n        }\n\n        assertArgument(values.length === fragment.inputs.length,\n            \"event arguments/values mismatch\", \"values\", values);\n\n        fragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value))\n                } else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value))\n                } else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TODO\n                    throw new Error(\"not implemented\");\n                } else {\n                    topics.push(this.#abiCoder.encode([ param.type] , [ value ]));\n                }\n            } else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n\n        return {\n            data: this.#abiCoder.encode(dataTypes , dataValues),\n            topics: topics\n        };\n    }\n\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(fragment: EventFragment | string, data: BytesLike, topics?: ReadonlyArray<string>): Result {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getEvent(fragment);\n            assertArgument(f, \"unknown event\", \"eventFragment\", fragment);\n            fragment = f;\n        }\n\n        if (topics != null && !fragment.anonymous) {\n            const eventTopic = fragment.topicHash;\n            assertArgument(isHexString(topics[0], 32) && topics[0].toLowerCase() === eventTopic,\n                \"fragment/topic mismatch\", \"topics[0]\", topics[0]);\n            topics = topics.slice(1);\n        }\n\n        const indexed: Array<ParamType> = [];\n        const nonIndexed: Array<ParamType> = [];\n        const dynamic: Array<boolean> = [];\n\n        fragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.from({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                } else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            } else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n\n        const resultIndexed = (topics != null) ? this.#abiCoder.decode(indexed, concat(topics)): null;\n        const resultNonIndexed = this.#abiCoder.decode(nonIndexed, data, true);\n\n        //const result: (Array<any> & { [ key: string ]: any }) = [ ];\n        const values: Array<any> = [ ];\n        const keys: Array<null | string> = [ ];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        fragment.inputs.forEach((param, index) => {\n            let value: null | Indexed | Error = null;\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    value = new Indexed(null);\n\n                } else if (dynamic[index]) {\n                    value = new Indexed(resultIndexed[indexedIndex++]);\n\n                } else {\n                    try {\n                        value = resultIndexed[indexedIndex++];\n                    } catch (error: any) {\n                        value = error;\n                    }\n                }\n            } else {\n                try {\n                    value = resultNonIndexed[nonIndexedIndex++];\n                } catch (error: any) {\n                    value = error;\n                }\n            }\n\n            values.push(value);\n            keys.push(param.name || null);\n        });\n\n        return Result.fromItems(values, keys);\n    }\n\n    /**\n     *  Parses a transaction, finding the matching function and extracts\n     *  the parameter values along with other useful function details.\n     *\n     *  If the matching function cannot be found, return null.\n     */\n    parseTransaction(tx: { data: string, value?: BigNumberish }): null | TransactionDescription {\n        const data = getBytes(tx.data, \"tx.data\");\n        const value = getBigInt((tx.value != null) ? tx.value: 0, \"tx.value\");\n\n        const fragment = this.getFunction(hexlify(data.slice(0, 4)));\n\n        if (!fragment) { return null; }\n\n        const args = this.#abiCoder.decode(fragment.inputs, data.slice(4));\n        return new TransactionDescription(fragment, fragment.selector, args, value);\n    }\n\n    parseCallResult(data: BytesLike): Result {\n        throw new Error(\"@TODO\");\n    }\n\n    /**\n     *  Parses a receipt log, finding the matching event and extracts\n     *  the parameter values along with other useful event details.\n     *\n     *  If the matching event cannot be found, returns null.\n     */\n    parseLog(log: { topics: ReadonlyArray<string>, data: string}): null | LogDescription {\n        const fragment = this.getEvent(log.topics[0]);\n\n        if (!fragment || fragment.anonymous) { return null; }\n\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n\n\n       return new LogDescription(fragment, fragment.topicHash, this.decodeEventLog(fragment, log.data, log.topics));\n    }\n\n    /**\n     *  Parses a revert data, finding the matching error and extracts\n     *  the parameter values along with other useful error details.\n     *\n     *  If the matching error cannot be found, returns null.\n     */\n    parseError(data: BytesLike): null | ErrorDescription {\n        const hexData = hexlify(data);\n\n        const fragment = this.getError(dataSlice(hexData, 0, 4));\n\n        if (!fragment) { return null; }\n\n        const args = this.#abiCoder.decode(fragment.inputs, dataSlice(hexData, 4));\n        return new ErrorDescription(fragment, fragment.selector, args);\n    }\n\n    /**\n     *  Creates a new [[Interface]] from the ABI %%value%%.\n     *\n     *  The %%value%% may be provided as an existing [[Interface]] object,\n     *  a JSON-encoded ABI or any Human-Readable ABI format.\n     */\n    static from(value: InterfaceAbi | Interface): Interface {\n        // Already an Interface, which is immutable\n        if (value instanceof Interface) { return value; }\n\n        // JSON\n        if (typeof(value) === \"string\") { return new Interface(JSON.parse(value)); }\n\n        // An Interface; possibly from another v6 instance\n        if (typeof((<any>value).formatJson) === \"function\") {\n            return new Interface((<any>value).formatJson());\n        }\n\n        // A legacy Interface; from an older version\n        if (typeof((<any>value).format) === \"function\") {\n            return new Interface((<any>value).format(\"json\"));\n        }\n\n        // Array of fragments\n        return new Interface(value);\n    }\n}\n", "//import { resolveAddress } from \"@ethersproject/address\";\nimport {\n    defineProperties, getBigInt, getNumber, hexlify, isBytesLike,\n    resolveProperties,\n    assert, assertArgument, isError, makeError\n} from \"../utils/index.js\";\nimport { accessListify } from \"../transaction/index.js\";\n\nimport type { AddressLike, NameResolver } from \"../address/index.js\";\nimport type { BigNumberish, EventEmitterable } from \"../utils/index.js\";\nimport type { Signature } from \"../crypto/index.js\";\nimport type {\n    AccessList, AccessListish, BlobLike, KzgLibrary, TransactionLike\n} from \"../transaction/index.js\";\n\nimport type { ContractRunner } from \"./contracts.js\";\nimport type { Network } from \"./network.js\";\n\n\nconst BN_0 = BigInt(0);\n\n/**\n *  A **BlockTag** specifies a specific block.\n *\n *  **numeric value** - specifies the block height, where\n *  the genesis block is block 0; many operations accept a negative\n *  value which indicates the block number should be deducted from\n *  the most recent block. A numeric value may be a ``number``, ``bigint``,\n *  or a decimal of hex string.\n *\n *  **blockhash** - specifies a specific block by its blockhash; this allows\n *  potentially orphaned blocks to be specifed, without ambiguity, but many\n *  backends do not support this for some operations.\n */\nexport type BlockTag = BigNumberish | string;\n\nimport {\n    BlockParams, LogParams, TransactionReceiptParams,\n    TransactionResponseParams\n} from \"./formatting.js\";\n\n// -----------------------\n\nfunction getValue<T>(value: undefined | null | T): null | T {\n    if (value == null) { return null; }\n    return value;\n}\n\nfunction toJson(value: null | bigint): null | string {\n    if (value == null) { return null; }\n    return value.toString();\n}\n\n// @TODO? <T extends FeeData = { }> implements Required<T>\n\n/**\n *  A **FeeData** wraps all the fee-related values associated with\n *  the network.\n */\nexport class FeeData {\n    /**\n     *  The gas price for legacy networks.\n     */\n    readonly gasPrice!: null | bigint;\n\n    /**\n     *  The maximum fee to pay per gas.\n     *\n     *  The base fee per gas is defined by the network and based on\n     *  congestion, increasing the cost during times of heavy load\n     *  and lowering when less busy.\n     *\n     *  The actual fee per gas will be the base fee for the block\n     *  and the priority fee, up to the max fee per gas.\n     *\n     *  This will be ``null`` on legacy networks (i.e. [pre-EIP-1559](link-eip-1559))\n     */\n    readonly maxFeePerGas!: null | bigint;\n\n    /**\n     *  The additional amout to pay per gas to encourage a validator\n     *  to include the transaction.\n     *\n     *  The purpose of this is to compensate the validator for the\n     *  adjusted risk for including a given transaction.\n     *\n     *  This will be ``null`` on legacy networks (i.e. [pre-EIP-1559](link-eip-1559))\n     */\n    readonly maxPriorityFeePerGas!: null | bigint;\n\n    /**\n     *  Creates a new FeeData for %%gasPrice%%, %%maxFeePerGas%% and\n     *  %%maxPriorityFeePerGas%%.\n     */\n    constructor(gasPrice?: null | bigint, maxFeePerGas?: null | bigint, maxPriorityFeePerGas?: null | bigint) {\n        defineProperties<FeeData>(this, {\n            gasPrice: getValue(gasPrice),\n            maxFeePerGas: getValue(maxFeePerGas),\n            maxPriorityFeePerGas: getValue(maxPriorityFeePerGas)\n        });\n    }\n\n    /**\n     *  Returns a JSON-friendly value.\n     */\n    toJSON(): any {\n        const {\n            gasPrice, maxFeePerGas, maxPriorityFeePerGas\n        } = this;\n        return {\n            _type: \"FeeData\",\n            gasPrice: toJson(gasPrice),\n            maxFeePerGas: toJson(maxFeePerGas),\n            maxPriorityFeePerGas: toJson(maxPriorityFeePerGas),\n        };\n    }\n}\n\n\n/**\n *  A **TransactionRequest** is a transactions with potentially various\n *  properties not defined, or with less strict types for its values.\n *\n *  This is used to pass to various operations, which will internally\n *  coerce any types and populate any necessary values.\n */\nexport interface TransactionRequest {\n    /**\n     *  The transaction type.\n     */\n    type?: null | number;\n\n    /**\n     *  The target of the transaction.\n     */\n    to?: null | AddressLike;\n\n    /**\n     *  The sender of the transaction.\n     */\n    from?: null | AddressLike;\n\n    /**\n     *  The nonce of the transaction, used to prevent replay attacks.\n     */\n    nonce?: null | number;\n\n    /**\n     *  The maximum amount of gas to allow this transaction to consume.\n     */\n    gasLimit?: null | BigNumberish;\n\n    /**\n     *  The gas price to use for legacy transactions or transactions on\n     *  legacy networks.\n     *\n     *  Most of the time the ``max*FeePerGas`` is preferred.\n     */\n    gasPrice?: null | BigNumberish;\n\n    /**\n     *  The [[link-eip-1559]] maximum priority fee to pay per gas.\n     */\n    maxPriorityFeePerGas?: null | BigNumberish;\n\n    /**\n     *  The [[link-eip-1559]] maximum total fee to pay per gas. The actual\n     *  value used is protocol enforced to be the block's base fee.\n     */\n    maxFeePerGas?: null | BigNumberish;\n\n    /**\n     *  The transaction data.\n     */\n    data?: null | string;\n\n    /**\n     *  The transaction value (in wei).\n     */\n    value?: null | BigNumberish;\n\n    /**\n     *  The chain ID for the network this transaction is valid on.\n     */\n    chainId?: null | BigNumberish;\n\n    /**\n     *  The [[link-eip-2930]] access list. Storage slots included in the access\n     *  list are //warmed// by pre-loading them, so their initial cost to\n     *  fetch is guaranteed, but then each additional access is cheaper.\n     */\n    accessList?: null | AccessListish;\n\n    /**\n     *  A custom object, which can be passed along for network-specific\n     *  values.\n     */\n    customData?: any;\n\n    // Only meaningful when used for call\n\n    /**\n     *  When using ``call`` or ``estimateGas``, this allows a specific\n     *  block to be queried. Many backends do not support this and when\n     *  unsupported errors are silently squelched and ``\"latest\"`` is used. \n     */\n    blockTag?: BlockTag;\n\n    /**\n     *  When using ``call``, this enables CCIP-read, which permits the\n     *  provider to be redirected to web-based content during execution,\n     *  which is then further validated by the contract.\n     *\n     *  There are potential security implications allowing CCIP-read, as\n     *  it could be used to expose the IP address or user activity during\n     *  the fetch to unexpected parties.\n     */\n    enableCcipRead?: boolean;\n\n    /**\n     *  The blob versioned hashes (see [[link-eip-4844]]).\n     */\n    blobVersionedHashes?: null | Array<string>\n\n    /**\n     *  The maximum fee per blob gas (see [[link-eip-4844]]).\n     */\n    maxFeePerBlobGas?: null | BigNumberish;\n\n    /**\n     *  Any blobs to include in the transaction (see [[link-eip-4844]]).\n     */\n    blobs?: null | Array<BlobLike>;\n\n    /**\n     *  An external library for computing the KZG commitments and\n     *  proofs necessary for EIP-4844 transactions (see [[link-eip-4844]]).\n     *\n     *  This is generally ``null``, unless you are creating BLOb\n     *  transactions.\n     */\n    kzg?: null | KzgLibrary;\n\n    // Todo?\n    //gasMultiplier?: number;\n};\n\n/**\n *  A **PreparedTransactionRequest** is identical to a [[TransactionRequest]]\n *  except all the property types are strictly enforced.\n */\nexport interface PreparedTransactionRequest {\n    /**\n     *  The transaction type.\n     */\n    type?: number;\n\n\n    /**\n     *  The target of the transaction.\n     */\n    to?: AddressLike;\n\n    /**\n     *  The sender of the transaction.\n     */\n    from?: AddressLike;\n\n    /**\n     *  The nonce of the transaction, used to prevent replay attacks.\n     */\n\n    nonce?: number;\n\n    /**\n     *  The maximum amount of gas to allow this transaction to consime.\n     */\n    gasLimit?: bigint;\n\n    /**\n     *  The gas price to use for legacy transactions or transactions on\n     *  legacy networks.\n     *\n     *  Most of the time the ``max*FeePerGas`` is preferred.\n     */\n    gasPrice?: bigint;\n\n    /**\n     *  The [[link-eip-1559]] maximum priority fee to pay per gas.\n     */\n    maxPriorityFeePerGas?: bigint;\n\n    /**\n     *  The [[link-eip-1559]] maximum total fee to pay per gas. The actual\n     *  value used is protocol enforced to be the block's base fee.\n     */\n    maxFeePerGas?: bigint;\n\n    /**\n     *  The transaction data.\n     */\n    data?: string;\n\n\n    /**\n     *  The transaction value (in wei).\n     */\n    value?: bigint;\n\n    /**\n     *  The chain ID for the network this transaction is valid on.\n     */\n    chainId?: bigint;\n\n    /**\n     *  The [[link-eip-2930]] access list. Storage slots included in the access\n     *  list are //warmed// by pre-loading them, so their initial cost to\n     *  fetch is guaranteed, but then each additional access is cheaper.\n     */\n    accessList?: AccessList;\n\n    /**\n     *  A custom object, which can be passed along for network-specific\n     *  values.\n     */\n    customData?: any;\n\n\n\n    /**\n     *  When using ``call`` or ``estimateGas``, this allows a specific\n     *  block to be queried. Many backends do not support this and when\n     *  unsupported errors are silently squelched and ``\"latest\"`` is used. \n     */\n    blockTag?: BlockTag;\n\n    /**\n     *  When using ``call``, this enables CCIP-read, which permits the\n     *  provider to be redirected to web-based content during execution,\n     *  which is then further validated by the contract.\n     *\n     *  There are potential security implications allowing CCIP-read, as\n     *  it could be used to expose the IP address or user activity during\n     *  the fetch to unexpected parties.\n     */\n    enableCcipRead?: boolean;\n}\n\n/**\n *  Returns a copy of %%req%% with all properties coerced to their strict\n *  types.\n */\nexport function copyRequest(req: TransactionRequest): PreparedTransactionRequest {\n    const result: any = { };\n\n    // These could be addresses, ENS names or Addressables\n    if (req.to) { result.to = req.to; }\n    if (req.from) { result.from = req.from; }\n\n    if (req.data) { result.data = hexlify(req.data); }\n\n    const bigIntKeys = \"chainId,gasLimit,gasPrice,maxFeePerBlobGas,maxFeePerGas,maxPriorityFeePerGas,value\".split(/,/);\n    for (const key of bigIntKeys) {\n        if (!(key in req) || (<any>req)[key] == null) { continue; }\n        result[key] = getBigInt((<any>req)[key], `request.${ key }`);\n    }\n\n    const numberKeys = \"type,nonce\".split(/,/);\n    for (const key of numberKeys) {\n        if (!(key in req) || (<any>req)[key] == null) { continue; }\n        result[key] = getNumber((<any>req)[key], `request.${ key }`);\n    }\n\n    if (req.accessList) {\n        result.accessList = accessListify(req.accessList);\n    }\n\n    if (\"blockTag\" in req) { result.blockTag = req.blockTag; }\n\n    if (\"enableCcipRead\" in req) {\n        result.enableCcipRead = !!req.enableCcipRead\n    }\n\n    if (\"customData\" in req) {\n        result.customData = req.customData;\n    }\n\n    if (\"blobVersionedHashes\" in req && req.blobVersionedHashes) {\n        result.blobVersionedHashes = req.blobVersionedHashes.slice();\n    }\n\n    if (\"kzg\" in req) { result.kzg = req.kzg; }\n\n    if (\"blobs\" in req && req.blobs) {\n        result.blobs = req.blobs.map((b) => {\n            if (isBytesLike(b)) { return hexlify(b); }\n            return Object.assign({ }, b);\n        });\n    }\n\n    return result;\n}\n\n//////////////////////\n// Block\n\n/**\n *  An Interface to indicate a [[Block]] has been included in the\n *  blockchain. This asserts a Type Guard that necessary properties\n *  are non-null.\n *\n *  Before a block is included, it is a //pending// block.\n */\nexport interface MinedBlock extends Block {\n    /**\n     *  The block number also known as the block height.\n     */\n    readonly number: number;\n\n    /**\n     *  The block hash.\n     */\n    readonly hash: string;\n\n    /**\n     *  The block timestamp, in seconds from epoch.\n     */\n    readonly timestamp: number;\n\n    /**\n     *  The block date, created from the [[timestamp]].\n     */\n    readonly date: Date;\n\n    /**\n     *  The miner of the block, also known as the ``author`` or\n     *  block ``producer``.\n     */\n    readonly miner: string;\n}\n\n/**\n *  A **Block** represents the data associated with a full block on\n *  Ethereum.\n */\nexport class Block implements BlockParams, Iterable<string> {\n\n    /**\n     *  The provider connected to the block used to fetch additional details\n     *  if necessary.\n     */\n    readonly provider!: Provider;\n\n    /**\n     *  The block number, sometimes called the block height. This is a\n     *  sequential number that is one higher than the parent block.\n     */\n    readonly number!: number;\n\n    /**\n     *  The block hash.\n     *\n     *  This hash includes all properties, so can be safely used to identify\n     *  an exact set of block properties.\n     */\n    readonly hash!: null | string;\n\n    /**\n     *  The timestamp for this block, which is the number of seconds since\n     *  epoch that this block was included.\n     */\n    readonly timestamp!: number;\n\n    /**\n     *  The block hash of the parent block.\n     */\n    readonly parentHash!: string;\n\n    /**\n     *  The hash tree root of the parent beacon block for the given\n     *  execution block. See [[link-eip-4788]].\n     */\n    parentBeaconBlockRoot!: null | string;\n\n    /**\n     *  The nonce.\n     *\n     *  On legacy networks, this is the random number inserted which\n     *  permitted the difficulty target to be reached.\n     */\n    readonly nonce!: string;\n\n    /**\n     *  The difficulty target.\n     *\n     *  On legacy networks, this is the proof-of-work target required\n     *  for a block to meet the protocol rules to be included.\n     *\n     *  On modern networks, this is a random number arrived at using\n     *  randao.  @TODO: Find links?\n     */\n    readonly difficulty!: bigint;\n\n\n    /**\n     *  The total gas limit for this block.\n     */\n    readonly gasLimit!: bigint;\n\n    /**\n     *  The total gas used in this block.\n     */\n    readonly gasUsed!: bigint;\n\n\n    /**\n     *  The root hash for the global state after applying changes\n     *  in this block.\n     */\n    readonly stateRoot!: null | string;\n\n    /**\n     *  The hash of the transaction receipts trie.\n     */\n    readonly receiptsRoot!: null | string;\n\n    /**\n     *  The total amount of blob gas consumed by the transactions\n     *  within the block. See [[link-eip-4844]].\n     */\n    readonly blobGasUsed!: null | bigint;\n\n    /**\n     *  The running total of blob gas consumed in excess of the\n     *  target, prior to the block. See [[link-eip-4844]].\n     */\n    readonly excessBlobGas!: null | bigint;\n\n    /**\n     *  The miner coinbase address, wihch receives any subsidies for\n     *  including this block.\n     */\n    readonly miner!: string;\n\n    /**\n     *  The latest RANDAO mix of the post beacon state of\n     *  the previous block.\n     */\n    readonly prevRandao!: null | string;\n\n    /**\n     *  Any extra data the validator wished to include.\n     */\n    readonly extraData!: string;\n\n    /**\n     *  The base fee per gas that all transactions in this block were\n     *  charged.\n     *\n     *  This adjusts after each block, depending on how congested the network\n     *  is.\n     */\n    readonly baseFeePerGas!: null | bigint;\n\n    readonly #transactions: Array<string | TransactionResponse>;\n\n    /**\n     *  Create a new **Block** object.\n     *\n     *  This should generally not be necessary as the unless implementing a\n     *  low-level library.\n     */\n    constructor(block: BlockParams, provider: Provider) {\n\n        this.#transactions = block.transactions.map((tx) => {\n            if (typeof(tx) !== \"string\") {\n                return new TransactionResponse(tx, provider);\n            }\n            return tx;\n        });\n\n        defineProperties<Block>(this, {\n            provider,\n\n            hash: getValue(block.hash),\n\n            number: block.number,\n            timestamp: block.timestamp,\n\n            parentHash: block.parentHash,\n            parentBeaconBlockRoot: block.parentBeaconBlockRoot,\n\n            nonce: block.nonce,\n            difficulty: block.difficulty,\n\n            gasLimit: block.gasLimit,\n            gasUsed: block.gasUsed,\n            blobGasUsed: block.blobGasUsed,\n            excessBlobGas: block.excessBlobGas,\n            miner: block.miner,\n            prevRandao: getValue(block.prevRandao),\n            extraData: block.extraData,\n\n            baseFeePerGas: getValue(block.baseFeePerGas),\n\n            stateRoot: block.stateRoot,\n            receiptsRoot: block.receiptsRoot,\n        });\n    }\n\n    /**\n     *  Returns the list of transaction hashes, in the order\n     *  they were executed within the block.\n     */\n    get transactions(): ReadonlyArray<string> {\n        return this.#transactions.map((tx) => {\n            if (typeof(tx) === \"string\") { return tx; }\n            return tx.hash;\n        });\n    }\n\n    /**\n     *  Returns the complete transactions, in the order they\n     *  were executed within the block.\n     *\n     *  This is only available for blocks which prefetched\n     *  transactions, by passing ``true`` to %%prefetchTxs%%\n     *  into [[Provider-getBlock]].\n     */\n    get prefetchedTransactions(): Array<TransactionResponse> {\n        const txs = this.#transactions.slice();\n\n        // Doesn't matter...\n        if (txs.length === 0) { return [ ]; }\n\n        // Make sure we prefetched the transactions\n        assert(typeof(txs[0]) === \"object\", \"transactions were not prefetched with block request\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"transactionResponses()\"\n        });\n\n        return <Array<TransactionResponse>>txs;\n    }\n\n    /**\n     *  Returns a JSON-friendly value.\n     */\n    toJSON(): any {\n        const {\n            baseFeePerGas, difficulty, extraData, gasLimit, gasUsed, hash,\n            miner, prevRandao, nonce, number, parentHash, parentBeaconBlockRoot,\n            stateRoot, receiptsRoot, timestamp, transactions\n        } = this;\n\n        return {\n            _type: \"Block\",\n            baseFeePerGas: toJson(baseFeePerGas),\n            difficulty: toJson(difficulty),\n            extraData,\n            gasLimit: toJson(gasLimit),\n            gasUsed: toJson(gasUsed),\n            blobGasUsed: toJson(this.blobGasUsed),\n            excessBlobGas: toJson(this.excessBlobGas),\n            hash, miner, prevRandao, nonce, number, parentHash, timestamp,\n            parentBeaconBlockRoot, stateRoot, receiptsRoot,\n            transactions,\n        };\n    }\n\n    [Symbol.iterator](): Iterator<string> {\n        let index = 0;\n        const txs = this.transactions;\n        return {\n            next: () => {\n                if (index < this.length) {\n                    return {\n                        value: txs[index++], done: false\n                    }\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n\n    /**\n     *  The number of transactions in this block.\n     */\n    get length(): number { return this.#transactions.length; }\n\n    /**\n     *  The [[link-js-date]] this block was included at.\n     */\n    get date(): null | Date {\n        if (this.timestamp == null) { return null; }\n        return new Date(this.timestamp * 1000);\n    }\n\n    /**\n     *  Get the transaction at %%indexe%% within this block.\n     */\n    async getTransaction(indexOrHash: number | string): Promise<TransactionResponse> {\n        // Find the internal value by its index or hash\n        let tx: string | TransactionResponse | undefined = undefined;\n        if (typeof(indexOrHash) === \"number\") {\n            tx = this.#transactions[indexOrHash];\n\n        } else {\n            const hash = indexOrHash.toLowerCase();\n            for (const v of this.#transactions) {\n                if (typeof(v) === \"string\") {\n                    if (v !== hash) { continue; }\n                    tx = v;\n                    break;\n                } else {\n                    if (v.hash !== hash) { continue; }\n                    tx = v;\n                    break;\n                }\n            }\n        }\n        if (tx == null) { throw new Error(\"no such tx\"); }\n\n        if (typeof(tx) === \"string\") {\n            return <TransactionResponse>(await this.provider.getTransaction(tx));\n        } else {\n            return tx;\n        }\n    }\n\n    /**\n     *  If a **Block** was fetched with a request to include the transactions\n     *  this will allow synchronous access to those transactions.\n     *\n     *  If the transactions were not prefetched, this will throw.\n     */\n    getPrefetchedTransaction(indexOrHash: number | string): TransactionResponse {\n        const txs = this.prefetchedTransactions;\n        if (typeof(indexOrHash) === \"number\") {\n            return txs[indexOrHash];\n        }\n\n        indexOrHash = indexOrHash.toLowerCase();\n        for (const tx of txs) {\n            if (tx.hash === indexOrHash) { return tx; }\n        }\n\n        assertArgument(false, \"no matching transaction\", \"indexOrHash\", indexOrHash);\n    }\n\n    /**\n     *  Returns true if this block been mined. This provides a type guard\n     *  for all properties on a [[MinedBlock]].\n     */\n    isMined(): this is MinedBlock { return !!this.hash; }\n\n    /**\n     *  Returns true if this block is an [[link-eip-2930]] block.\n     */\n    isLondon(): this is (Block & { baseFeePerGas: bigint }) {\n        return !!this.baseFeePerGas;\n    }\n\n    /**\n     *  @_ignore:\n     */\n    orphanedEvent(): OrphanFilter {\n        if (!this.isMined()) { throw new Error(\"\"); }\n        return createOrphanedBlockFilter(this);\n    }\n}\n\n//////////////////////\n// Log\n\n/**\n *  A **Log** in Ethereum represents an event that has been included in a\n *  transaction using the ``LOG*`` opcodes, which are most commonly used by\n *  Solidity's emit for announcing events.\n */\nexport class Log implements LogParams {\n\n    /**\n     *  The provider connected to the log used to fetch additional details\n     *  if necessary.\n     */\n    readonly provider: Provider;\n\n    /**\n     *  The transaction hash of the transaction this log occurred in. Use the\n     *  [[Log-getTransaction]] to get the [[TransactionResponse]].\n     */\n    readonly transactionHash!: string;\n\n    /**\n     *  The block hash of the block this log occurred in. Use the\n     *  [[Log-getBlock]] to get the [[Block]].\n     */\n    readonly blockHash!: string;\n\n    /**\n     *  The block number of the block this log occurred in. It is preferred\n     *  to use the [[Block-hash]] when fetching the related [[Block]],\n     *  since in the case of an orphaned block, the block at that height may\n     *  have changed.\n     */\n    readonly blockNumber!: number;\n\n    /**\n     *  If the **Log** represents a block that was removed due to an orphaned\n     *  block, this will be true.\n     *\n     *  This can only happen within an orphan event listener.\n     */\n    readonly removed!: boolean;\n\n    /**\n     *  The address of the contract that emitted this log.\n     */\n    readonly address!: string;\n\n    /**\n     *  The data included in this log when it was emitted.\n     */\n    readonly data!: string;\n\n    /**\n     *  The indexed topics included in this log when it was emitted.\n     *\n     *  All topics are included in the bloom filters, so they can be\n     *  efficiently filtered using the [[Provider-getLogs]] method.\n     */\n    readonly topics!: ReadonlyArray<string>;\n\n    /**\n     *  The index within the block this log occurred at. This is generally\n     *  not useful to developers, but can be used with the various roots\n     *  to proof inclusion within a block.\n     */\n    readonly index!: number;\n\n    /**\n     *  The index within the transaction of this log.\n     */\n    readonly transactionIndex!: number;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(log: LogParams, provider: Provider) {\n        this.provider = provider;\n\n        const topics = Object.freeze(log.topics.slice());\n        defineProperties<Log>(this, {\n            transactionHash: log.transactionHash,\n            blockHash: log.blockHash,\n            blockNumber: log.blockNumber,\n\n            removed: log.removed,\n\n            address: log.address,\n            data: log.data,\n\n            topics,\n\n            index: log.index,\n            transactionIndex: log.transactionIndex,\n        });\n    }\n\n    /**\n     *  Returns a JSON-compatible object.\n     */\n    toJSON(): any {\n        const {\n            address, blockHash, blockNumber, data, index,\n            removed, topics, transactionHash, transactionIndex\n        } = this;\n\n        return {\n            _type: \"log\",\n            address, blockHash, blockNumber, data, index,\n            removed, topics, transactionHash, transactionIndex\n        };\n    }\n\n    /**\n     *  Returns the block that this log occurred in.\n     */\n    async getBlock(): Promise<Block> {\n        const block = await this.provider.getBlock(this.blockHash);\n        assert(!!block, \"failed to find transaction\", \"UNKNOWN_ERROR\", { });\n        return block;\n    }\n\n    /**\n     *  Returns the transaction that this log occurred in.\n     */\n    async getTransaction(): Promise<TransactionResponse> {\n        const tx = await this.provider.getTransaction(this.transactionHash);\n        assert(!!tx, \"failed to find transaction\", \"UNKNOWN_ERROR\", { });\n        return tx;\n    }\n\n    /**\n     *  Returns the transaction receipt fot the transaction that this\n     *  log occurred in.\n     */\n    async getTransactionReceipt(): Promise<TransactionReceipt> {\n        const receipt = await this.provider.getTransactionReceipt(this.transactionHash);\n        assert(!!receipt, \"failed to find transaction receipt\", \"UNKNOWN_ERROR\", { });\n        return receipt;\n    }\n\n    /**\n     *  @_ignore:\n     */\n    removedEvent(): OrphanFilter {\n        return createRemovedLogFilter(this);\n    }\n}\n\n//////////////////////\n// Transaction Receipt\n\n/*\nexport interface LegacyTransactionReceipt {\n    byzantium: false;\n    status: null;\n    root: string;\n}\n\nexport interface ByzantiumTransactionReceipt {\n    byzantium: true;\n    status: number;\n    root: null;\n}\n*/\n\n/**\n *  A **TransactionReceipt** includes additional information about a\n *  transaction that is only available after it has been mined.\n */\nexport class TransactionReceipt implements TransactionReceiptParams, Iterable<Log> {\n    /**\n     *  The provider connected to the log used to fetch additional details\n     *  if necessary.\n     */\n    readonly provider!: Provider;\n\n    /**\n     *  The address the transaction was sent to.\n     */\n    readonly to!: null | string;\n\n    /**\n     *  The sender of the transaction.\n     */\n    readonly from!: string;\n\n    /**\n     *  The address of the contract if the transaction was directly\n     *  responsible for deploying one.\n     *\n     *  This is non-null **only** if the ``to`` is empty and the ``data``\n     *  was successfully executed as initcode.\n     */\n    readonly contractAddress!: null | string;\n\n    /**\n     *  The transaction hash.\n     */\n    readonly hash!: string;\n\n    /**\n     *  The index of this transaction within the block transactions.\n     */\n    readonly index!: number;\n\n    /**\n     *  The block hash of the [[Block]] this transaction was included in.\n     */\n    readonly blockHash!: string;\n\n    /**\n     *  The block number of the [[Block]] this transaction was included in.\n     */\n    readonly blockNumber!: number;\n\n    /**\n     *  The bloom filter bytes that represent all logs that occurred within\n     *  this transaction. This is generally not useful for most developers,\n     *  but can be used to validate the included logs.\n     */\n    readonly logsBloom!: string;\n\n    /**\n     *  The actual amount of gas used by this transaction.\n     *\n     *  When creating a transaction, the amount of gas that will be used can\n     *  only be approximated, but the sender must pay the gas fee for the\n     *  entire gas limit. After the transaction, the difference is refunded.\n     */\n    readonly gasUsed!: bigint;\n\n    /**\n     *  The gas used for BLObs. See [[link-eip-4844]].\n     */\n    readonly blobGasUsed!: null | bigint;\n\n    /**\n     *  The amount of gas used by all transactions within the block for this\n     *  and all transactions with a lower ``index``.\n     *\n     *  This is generally not useful for developers but can be used to\n     *  validate certain aspects of execution.\n     */\n    readonly cumulativeGasUsed!: bigint;\n\n    /**\n     *  The actual gas price used during execution.\n     *\n     *  Due to the complexity of [[link-eip-1559]] this value can only\n     *  be caluclated after the transaction has been mined, snce the base\n     *  fee is protocol-enforced.\n     */\n    readonly gasPrice!: bigint;\n\n    /**\n     *  The price paid per BLOB in gas. See [[link-eip-4844]].\n     */\n    readonly blobGasPrice!: null | bigint;\n\n    /**\n     *  The [[link-eip-2718]] transaction type.\n     */\n    readonly type!: number;\n    //readonly byzantium!: boolean;\n\n    /**\n     *  The status of this transaction, indicating success (i.e. ``1``) or\n     *  a revert (i.e. ``0``).\n     *\n     *  This is available in post-byzantium blocks, but some backends may\n     *  backfill this value.\n     */\n    readonly status!: null | number;\n\n    /**\n     *  The root hash of this transaction.\n     *\n     *  This is no present and was only included in pre-byzantium blocks, but\n     *  could be used to validate certain parts of the receipt.\n     */\n    readonly root!: null | string;\n\n    readonly #logs: ReadonlyArray<Log>;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(tx: TransactionReceiptParams, provider: Provider) {\n        this.#logs = Object.freeze(tx.logs.map((log) => {\n            return new Log(log, provider);\n        }));\n\n        let gasPrice = BN_0;\n        if (tx.effectiveGasPrice != null) {\n            gasPrice = tx.effectiveGasPrice;\n        } else if (tx.gasPrice != null) {\n            gasPrice = tx.gasPrice;\n        }\n\n        defineProperties<TransactionReceipt>(this, {\n            provider,\n\n            to: tx.to,\n            from: tx.from,\n            contractAddress: tx.contractAddress,\n\n            hash: tx.hash,\n            index: tx.index,\n\n            blockHash: tx.blockHash,\n            blockNumber: tx.blockNumber,\n\n            logsBloom: tx.logsBloom,\n\n            gasUsed: tx.gasUsed,\n            cumulativeGasUsed: tx.cumulativeGasUsed,\n            blobGasUsed: tx.blobGasUsed,\n            gasPrice,\n            blobGasPrice: tx.blobGasPrice,\n\n            type: tx.type,\n            //byzantium: tx.byzantium,\n            status: tx.status,\n            root: tx.root\n        });\n    }\n\n    /**\n     *  The logs for this transaction.\n     */\n    get logs(): ReadonlyArray<Log> { return this.#logs; }\n\n    /**\n     *  Returns a JSON-compatible representation.\n     */\n    toJSON(): any {\n        const {\n            to, from, contractAddress, hash, index,\n            blockHash, blockNumber, logsBloom,\n            logs, //byzantium, \n            status, root\n        } = this;\n\n        return {\n            _type: \"TransactionReceipt\",\n            blockHash, blockNumber,\n            //byzantium, \n            contractAddress,\n            cumulativeGasUsed: toJson(this.cumulativeGasUsed),\n            from,\n            gasPrice: toJson(this.gasPrice),\n            blobGasUsed: toJson(this.blobGasUsed),\n            blobGasPrice: toJson(this.blobGasPrice),\n            gasUsed: toJson(this.gasUsed),\n            hash, index, logs, logsBloom, root, status, to\n        };\n    }\n\n    /**\n     *  @_ignore:\n     */\n    get length(): number { return this.logs.length; }\n\n    [Symbol.iterator](): Iterator<Log> {\n        let index = 0;\n        return {\n            next: () => {\n                if (index < this.length) {\n                    return { value: this.logs[index++], done: false }\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n\n    /**\n     *  The total fee for this transaction, in wei.\n     */\n    get fee(): bigint {\n        return this.gasUsed * this.gasPrice;\n    }\n\n    /**\n     *  Resolves to the block this transaction occurred in.\n     */\n    async getBlock(): Promise<Block> {\n        const block = await this.provider.getBlock(this.blockHash);\n        if (block == null) { throw new Error(\"TODO\"); }\n        return block;\n    }\n\n    /**\n     *  Resolves to the transaction this transaction occurred in.\n     */\n    async getTransaction(): Promise<TransactionResponse> {\n        const tx = await this.provider.getTransaction(this.hash);\n        if (tx == null) { throw new Error(\"TODO\"); }\n        return tx;\n    }\n\n    /**\n     *  Resolves to the return value of the execution of this transaction.\n     *\n     *  Support for this feature is limited, as it requires an archive node\n     *  with the ``debug_`` or ``trace_`` API enabled.\n     */\n    async getResult(): Promise<string> {\n        return <string>(await this.provider.getTransactionResult(this.hash));\n    }\n\n    /**\n     *  Resolves to the number of confirmations this transaction has.\n     */\n    async confirmations(): Promise<number> {\n        return (await this.provider.getBlockNumber()) - this.blockNumber + 1;\n    }\n\n    /**\n     *  @_ignore:\n     */\n    removedEvent(): OrphanFilter {\n        return createRemovedTransactionFilter(this);\n    }\n\n    /**\n     *  @_ignore:\n     */\n    reorderedEvent(other?: TransactionResponse): OrphanFilter {\n        assert(!other || other.isMined(), \"unmined 'other' transction cannot be orphaned\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"reorderedEvent(other)\" });\n        return createReorderedTransactionFilter(this, other);\n    }\n}\n\n\n//////////////////////\n// Transaction Response\n\n/**\n *  A **MinedTransactionResponse** is an interface representing a\n *  transaction which has been mined and allows for a type guard for its\n *  property values being defined.\n */\nexport interface MinedTransactionResponse extends TransactionResponse {\n    /**\n     *  The block number this transaction occurred in.\n     */\n    blockNumber: number;\n\n    /**\n     *  The block hash this transaction occurred in.\n     */\n    blockHash: string;\n\n    /**\n     *  The date this transaction occurred on.\n     */\n    date: Date;\n}\n\n\n/**\n *  A **TransactionResponse** includes all properties about a transaction\n *  that was sent to the network, which may or may not be included in a\n *  block.\n *\n *  The [[TransactionResponse-isMined]] can be used to check if the\n *  transaction has been mined as well as type guard that the otherwise\n *  possibly ``null`` properties are defined.\n */\nexport class TransactionResponse implements TransactionLike<string>, TransactionResponseParams {\n    /**\n     *  The provider this is connected to, which will influence how its\n     *  methods will resolve its async inspection methods.\n     */\n    readonly provider: Provider;\n\n    /**\n     *  The block number of the block that this transaction was included in.\n     *\n     *  This is ``null`` for pending transactions.\n     */\n    readonly blockNumber: null | number;\n\n    /**\n     *  The blockHash of the block that this transaction was included in.\n     *\n     *  This is ``null`` for pending transactions.\n     */\n    readonly blockHash: null | string;\n\n    /**\n     *  The index within the block that this transaction resides at.\n     */\n    readonly index!: number;\n\n    /**\n     *  The transaction hash.\n     */\n    readonly hash!: string;\n\n    /**\n     *  The [[link-eip-2718]] transaction envelope type. This is\n     *  ``0`` for legacy transactions types.\n     */\n    readonly type!: number;\n\n    /**\n     *  The receiver of this transaction.\n     *\n     *  If ``null``, then the transaction is an initcode transaction.\n     *  This means the result of executing the [[data]] will be deployed\n     *  as a new contract on chain (assuming it does not revert) and the\n     *  address may be computed using [[getCreateAddress]].\n     */\n    readonly to!: null | string;\n\n    /**\n     *  The sender of this transaction. It is implicitly computed\n     *  from the transaction pre-image hash (as the digest) and the\n     *  [[signature]] using ecrecover.\n     */\n    readonly from!: string;\n\n    /**\n     *  The nonce, which is used to prevent replay attacks and offer\n     *  a method to ensure transactions from a given sender are explicitly\n     *  ordered.\n     *\n     *  When sending a transaction, this must be equal to the number of\n     *  transactions ever sent by [[from]].\n     */\n    readonly nonce!: number;\n\n    /**\n     *  The maximum units of gas this transaction can consume. If execution\n     *  exceeds this, the entries transaction is reverted and the sender\n     *  is charged for the full amount, despite not state changes being made.\n     */\n    readonly gasLimit!: bigint;\n\n    /**\n     *  The gas price can have various values, depending on the network.\n     *\n     *  In modern networks, for transactions that are included this is\n     *  the //effective gas price// (the fee per gas that was actually\n     *  charged), while for transactions that have not been included yet\n     *  is the [[maxFeePerGas]].\n     *\n     *  For legacy transactions, or transactions on legacy networks, this\n     *  is the fee that will be charged per unit of gas the transaction\n     *  consumes.\n     */\n    readonly gasPrice!: bigint;\n\n    /**\n     *  The maximum priority fee (per unit of gas) to allow a\n     *  validator to charge the sender. This is inclusive of the\n     *  [[maxFeeFeePerGas]].\n     */\n    readonly maxPriorityFeePerGas!: null | bigint;\n\n    /**\n     *  The maximum fee (per unit of gas) to allow this transaction\n     *  to charge the sender.\n     */\n    readonly maxFeePerGas!: null | bigint;\n\n    /**\n     *  The [[link-eip-4844]] max fee per BLOb gas.\n     */\n    readonly maxFeePerBlobGas!: null | bigint;\n\n    /**\n     *  The data.\n     */\n    readonly data!: string;\n\n    /**\n     *  The value, in wei. Use [[formatEther]] to format this value\n     *  as ether.\n     */\n    readonly value!: bigint;\n\n    /**\n     *  The chain ID.\n     */\n    readonly chainId!: bigint;\n\n    /**\n     *  The signature.\n     */\n    readonly signature!: Signature;\n\n    /**\n     *  The [[link-eip-2930]] access list for transaction types that\n     *  support it, otherwise ``null``.\n     */\n    readonly accessList!: null | AccessList;\n\n    /**\n     *  The [[link-eip-4844]] BLOb versioned hashes.\n     */\n    readonly blobVersionedHashes!: null | Array<string>;\n\n    #startBlock: number;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(tx: TransactionResponseParams, provider: Provider) {\n        this.provider = provider;\n\n        this.blockNumber = (tx.blockNumber != null) ? tx.blockNumber: null;\n        this.blockHash = (tx.blockHash != null) ? tx.blockHash: null;\n\n        this.hash = tx.hash;\n        this.index = tx.index;\n\n        this.type = tx.type;\n\n        this.from = tx.from;\n        this.to = tx.to || null;\n\n        this.gasLimit = tx.gasLimit;\n        this.nonce = tx.nonce;\n        this.data = tx.data;\n        this.value = tx.value;\n\n        this.gasPrice = tx.gasPrice;\n        this.maxPriorityFeePerGas = (tx.maxPriorityFeePerGas != null) ? tx.maxPriorityFeePerGas: null;\n        this.maxFeePerGas = (tx.maxFeePerGas != null) ? tx.maxFeePerGas: null;\n        this.maxFeePerBlobGas = (tx.maxFeePerBlobGas != null) ? tx.maxFeePerBlobGas: null;\n\n        this.chainId = tx.chainId;\n        this.signature = tx.signature;\n\n        this.accessList = (tx.accessList != null) ? tx.accessList: null;\n        this.blobVersionedHashes = (tx.blobVersionedHashes != null) ? tx.blobVersionedHashes: null;\n\n        this.#startBlock = -1;\n    }\n\n    /**\n     *  Returns a JSON-compatible representation of this transaction.\n     */\n    toJSON(): any {\n        const {\n            blockNumber, blockHash, index, hash, type, to, from, nonce,\n            data, signature, accessList, blobVersionedHashes\n        } = this;\n\n        return {\n            _type: \"TransactionResponse\",\n            accessList, blockNumber, blockHash,\n            blobVersionedHashes,\n            chainId: toJson(this.chainId),\n            data, from,\n            gasLimit: toJson(this.gasLimit),\n            gasPrice: toJson(this.gasPrice),\n            hash,\n            maxFeePerGas: toJson(this.maxFeePerGas),\n            maxPriorityFeePerGas: toJson(this.maxPriorityFeePerGas),\n            maxFeePerBlobGas: toJson(this.maxFeePerBlobGas),\n            nonce, signature, to, index, type,\n            value: toJson(this.value),\n        };\n    }\n\n    /**\n     *  Resolves to the Block that this transaction was included in.\n     *\n     *  This will return null if the transaction has not been included yet.\n     */\n    async getBlock(): Promise<null | Block> {\n        let blockNumber = this.blockNumber;\n        if (blockNumber == null) {\n            const tx = await this.getTransaction();\n            if (tx) { blockNumber = tx.blockNumber; }\n        }\n        if (blockNumber == null) { return null; }\n        const block = this.provider.getBlock(blockNumber);\n        if (block == null) { throw new Error(\"TODO\"); }\n        return block;\n    }\n\n    /**\n     *  Resolves to this transaction being re-requested from the\n     *  provider. This can be used if you have an unmined transaction\n     *  and wish to get an up-to-date populated instance.\n     */\n    async getTransaction(): Promise<null | TransactionResponse> {\n        return this.provider.getTransaction(this.hash);\n    }\n\n    /**\n     *  Resolve to the number of confirmations this transaction has.\n     */\n    async confirmations(): Promise<number> {\n        if (this.blockNumber == null) {\n            const { tx, blockNumber } = await resolveProperties({\n                tx: this.getTransaction(),\n                blockNumber: this.provider.getBlockNumber()\n            });\n\n            // Not mined yet...\n            if (tx == null || tx.blockNumber == null) { return 0; }\n\n            return blockNumber - tx.blockNumber + 1;\n        }\n\n        const blockNumber = await this.provider.getBlockNumber();\n        return blockNumber - this.blockNumber + 1;\n    }\n\n    /**\n     *  Resolves once this transaction has been mined and has\n     *  %%confirms%% blocks including it (default: ``1``) with an\n     *  optional %%timeout%%.\n     *\n     *  This can resolve to ``null`` only if %%confirms%% is ``0``\n     *  and the transaction has not been mined, otherwise this will\n     *  wait until enough confirmations have completed.\n     */\n    async wait(_confirms?: number, _timeout?: number): Promise<null | TransactionReceipt> {\n        const confirms = (_confirms == null) ? 1: _confirms;\n        const timeout = (_timeout == null) ? 0: _timeout;\n\n        let startBlock = this.#startBlock\n        let nextScan = -1;\n        let stopScanning = (startBlock === -1) ? true: false;\n        const checkReplacement = async () => {\n            // Get the current transaction count for this sender\n            if (stopScanning) { return null; }\n            const { blockNumber, nonce } = await resolveProperties({\n                blockNumber: this.provider.getBlockNumber(),\n                nonce: this.provider.getTransactionCount(this.from)\n            });\n\n            // No transaction or our nonce has not been mined yet; but we\n            // can start scanning later when we do start\n            if (nonce < this.nonce) {\n                startBlock = blockNumber;\n                return;\n            }\n\n            // We were mined; no replacement\n            if (stopScanning) { return null; }\n            const mined = await this.getTransaction();\n            if (mined && mined.blockNumber != null) { return; }\n\n            // We were replaced; start scanning for that transaction\n\n            // Starting to scan; look back a few extra blocks for safety\n            if (nextScan === -1) {\n                nextScan = startBlock - 3;\n                if (nextScan < this.#startBlock) { nextScan = this.#startBlock; }\n            }\n\n            while (nextScan <= blockNumber) {\n                // Get the next block to scan\n                if (stopScanning) { return null; }\n                const block = await this.provider.getBlock(nextScan, true);\n\n                // This should not happen; but we'll try again shortly\n                if (block == null) { return; }\n\n                // We were mined; no replacement\n                for (const hash of block) {\n                    if (hash === this.hash) { return; }\n                }\n\n                // Search for the transaction that replaced us\n                for (let i = 0; i < block.length; i++) {\n                    const tx: TransactionResponse = await block.getTransaction(i);\n\n                    if (tx.from === this.from && tx.nonce === this.nonce) {\n                        // Get the receipt\n                        if (stopScanning) { return null; }\n                        const receipt = await this.provider.getTransactionReceipt(tx.hash);\n\n                        // This should not happen; but we'll try again shortly\n                        if (receipt == null) { return; }\n\n                        // We will retry this on the next block (this case could be optimized)\n                        if ((blockNumber - receipt.blockNumber + 1) < confirms) { return; }\n\n                        // The reason we were replaced\n                        let reason: \"replaced\" | \"repriced\" | \"cancelled\" = \"replaced\";\n                        if (tx.data === this.data && tx.to === this.to && tx.value === this.value) {\n                            reason = \"repriced\";\n                        } else  if (tx.data === \"0x\" && tx.from === tx.to && tx.value === BN_0) {\n                            reason = \"cancelled\"\n                        }\n\n                        assert(false, \"transaction was replaced\", \"TRANSACTION_REPLACED\", {\n                            cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                            reason,\n                            replacement: tx.replaceableTransaction(startBlock),\n                            hash: tx.hash,\n                            receipt\n                        });\n                    }\n                }\n\n                nextScan++;\n            }\n            return;\n        };\n\n        const checkReceipt = (receipt: null | TransactionReceipt) => {\n            if (receipt == null || receipt.status !== 0) { return receipt; }\n            assert(false, \"transaction execution reverted\", \"CALL_EXCEPTION\", {\n                action: \"sendTransaction\",\n                data: null, reason: null, invocation: null, revert: null,\n                transaction: {\n                    to: receipt.to,\n                    from: receipt.from,\n                    data: \"\" // @TODO: in v7, split out sendTransaction properties\n                }, receipt\n            });\n        };\n\n        const receipt = await this.provider.getTransactionReceipt(this.hash);\n\n        if (confirms === 0) { return checkReceipt(receipt); }\n\n        if (receipt) {\n            if ((await receipt.confirmations()) >= confirms) {\n                return checkReceipt(receipt);\n            }\n\n        } else {\n            // Check for a replacement; throws if a replacement was found\n            await checkReplacement();\n\n            // Allow null only when the confirms is 0\n            if (confirms === 0) { return null; }\n        }\n\n        const waiter = new Promise((resolve, reject) => {\n            // List of things to cancel when we have a result (one way or the other)\n            const cancellers: Array<() => void> = [ ];\n            const cancel = () => { cancellers.forEach((c) => c()); };\n\n            // On cancel, stop scanning for replacements\n            cancellers.push(() => { stopScanning = true; });\n\n            // Set up any timeout requested\n            if (timeout > 0) {\n                const timer = setTimeout(() => {\n                    cancel();\n                    reject(makeError(\"wait for transaction timeout\", \"TIMEOUT\"));\n                }, timeout);\n                cancellers.push(() => { clearTimeout(timer); });\n            }\n\n            const txListener = async (receipt: TransactionReceipt) => {\n                // Done; return it!\n                if ((await receipt.confirmations()) >= confirms) {\n                    cancel();\n                    try {\n                        resolve(checkReceipt(receipt));\n                    } catch (error) { reject(error); }\n                }\n            };\n            cancellers.push(() => { this.provider.off(this.hash, txListener); });\n            this.provider.on(this.hash, txListener);\n            // We support replacement detection; start checking\n            if (startBlock >= 0) {\n                const replaceListener = async () => {\n                    try {\n                        // Check for a replacement; this throws only if one is found\n                        await checkReplacement();\n\n                    } catch (error) {\n                        // We were replaced (with enough confirms); re-throw the error\n                        if (isError(error, \"TRANSACTION_REPLACED\")) {\n                            cancel();\n                            reject(error);\n                            return;\n                        }\n                    }\n\n                    // Rescheudle a check on the next block\n                    if (!stopScanning) {\n                        this.provider.once(\"block\", replaceListener);\n                    }\n                };\n                cancellers.push(() => { this.provider.off(\"block\", replaceListener); });\n                this.provider.once(\"block\", replaceListener);\n            }\n        });\n\n        return await <Promise<TransactionReceipt>>waiter;\n    }\n\n    /**\n     *  Returns ``true`` if this transaction has been included.\n     *\n     *  This is effective only as of the time the TransactionResponse\n     *  was instantiated. To get up-to-date information, use\n     *  [[getTransaction]].\n     *\n     *  This provides a Type Guard that this transaction will have\n     *  non-null property values for properties that are null for\n     *  unmined transactions.\n     */\n    isMined(): this is MinedTransactionResponse {\n        return (this.blockHash != null);\n    }\n\n    /**\n     *  Returns true if the transaction is a legacy (i.e. ``type == 0``)\n     *  transaction.\n     *\n     *  This provides a Type Guard that this transaction will have\n     *  the ``null``-ness for hardfork-specific properties set correctly.\n     */\n    isLegacy(): this is (TransactionResponse & { accessList: null, maxFeePerGas: null, maxPriorityFeePerGas: null }) {\n        return (this.type === 0)\n    }\n\n    /**\n     *  Returns true if the transaction is a Berlin (i.e. ``type == 1``)\n     *  transaction. See [[link-eip-2070]].\n     *\n     *  This provides a Type Guard that this transaction will have\n     *  the ``null``-ness for hardfork-specific properties set correctly.\n     */\n    isBerlin(): this is (TransactionResponse & { accessList: AccessList, maxFeePerGas: null, maxPriorityFeePerGas: null }) {\n        return (this.type === 1);\n    }\n\n    /**\n     *  Returns true if the transaction is a London (i.e. ``type == 2``)\n     *  transaction. See [[link-eip-1559]].\n     *\n     *  This provides a Type Guard that this transaction will have\n     *  the ``null``-ness for hardfork-specific properties set correctly.\n     */\n    isLondon(): this is (TransactionResponse & { accessList: AccessList, maxFeePerGas: bigint, maxPriorityFeePerGas: bigint }){\n        return (this.type === 2);\n    }\n\n    /**\n     *  Returns true if hte transaction is a Cancun (i.e. ``type == 3``)\n     *  transaction. See [[link-eip-4844]].\n     */\n    isCancun(): this is (TransactionResponse & { accessList: AccessList, maxFeePerGas: bigint, maxPriorityFeePerGas: bigint, maxFeePerBlobGas: bigint, blobVersionedHashes: Array<string> }){\n        return (this.type === 3);\n    }\n\n    /**\n     *  Returns a filter which can be used to listen for orphan events\n     *  that evict this transaction.\n     */\n    removedEvent(): OrphanFilter {\n        assert(this.isMined(), \"unmined transaction canot be orphaned\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"removeEvent()\" });\n        return createRemovedTransactionFilter(this);\n    }\n\n    /**\n     *  Returns a filter which can be used to listen for orphan events\n     *  that re-order this event against %%other%%.\n     */\n    reorderedEvent(other?: TransactionResponse): OrphanFilter {\n        assert(this.isMined(), \"unmined transaction canot be orphaned\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"removeEvent()\" });\n\n        assert(!other || other.isMined(), \"unmined 'other' transaction canot be orphaned\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"removeEvent()\" });\n\n        return createReorderedTransactionFilter(this, other);\n    }\n\n    /**\n     *  Returns a new TransactionResponse instance which has the ability to\n     *  detect (and throw an error) if the transaction is replaced, which\n     *  will begin scanning at %%startBlock%%.\n     *\n     *  This should generally not be used by developers and is intended\n     *  primarily for internal use. Setting an incorrect %%startBlock%% can\n     *  have devastating performance consequences if used incorrectly.\n     */\n    replaceableTransaction(startBlock: number): TransactionResponse {\n        assertArgument(Number.isInteger(startBlock) && startBlock >= 0, \"invalid startBlock\", \"startBlock\", startBlock);\n        const tx = new TransactionResponse(this, this.provider);\n        tx.#startBlock = startBlock;\n        return tx;\n    }\n}\n\n\n//////////////////////\n// OrphanFilter\n\n/**\n *  An Orphan Filter allows detecting when an orphan block has\n *  resulted in dropping a block or transaction or has resulted\n *  in transactions changing order.\n *\n *  Not currently fully supported.\n */\nexport type OrphanFilter = {\n    orphan: \"drop-block\",\n    hash: string,\n    number: number\n} | {\n    orphan: \"drop-transaction\",\n    tx: { hash: string, blockHash: string, blockNumber: number },\n    other?: { hash: string, blockHash: string, blockNumber: number }\n} | {\n    orphan: \"reorder-transaction\",\n    tx: { hash: string, blockHash: string, blockNumber: number },\n    other?: { hash: string, blockHash: string, blockNumber: number }\n} | {\n    orphan: \"drop-log\",\n    log: {\n        transactionHash: string,\n        blockHash: string,\n        blockNumber: number,\n        address: string,\n        data: string,\n        topics: ReadonlyArray<string>,\n        index: number\n    }\n};\n\nfunction createOrphanedBlockFilter(block: { hash: string, number: number }): OrphanFilter {\n    return { orphan: \"drop-block\", hash: block.hash, number: block.number };\n}\n\nfunction createReorderedTransactionFilter(tx: { hash: string, blockHash: string, blockNumber: number }, other?: { hash: string, blockHash: string, blockNumber: number }): OrphanFilter {\n    return { orphan: \"reorder-transaction\", tx, other };\n}\n\nfunction createRemovedTransactionFilter(tx: { hash: string, blockHash: string, blockNumber: number }): OrphanFilter {\n    return { orphan: \"drop-transaction\", tx };\n}\n\nfunction createRemovedLogFilter(log: { blockHash: string, transactionHash: string, blockNumber: number, address: string, data: string, topics: ReadonlyArray<string>, index: number }): OrphanFilter {\n    return { orphan: \"drop-log\", log: {\n        transactionHash: log.transactionHash,\n        blockHash: log.blockHash,\n        blockNumber: log.blockNumber,\n        address: log.address,\n        data: log.data,\n        topics: Object.freeze(log.topics.slice()),\n        index: log.index\n    } };\n}\n\n//////////////////////\n// EventFilter\n\n/**\n *  A **TopicFilter** provides a struture to define bloom-filter\n *  queries.\n *\n *  Each field that is ``null`` matches **any** value, a field that is\n *  a ``string`` must match exactly that value and ``array`` is\n *  effectively an ``OR``-ed set, where any one of those values must\n *  match.\n */\nexport type TopicFilter = Array<null | string | Array<string>>;\n\n// @TODO:\n//export type DeferableTopicFilter = Array<null | string | Promise<string> | Array<string | Promise<string>>>;\n\n/**\n *  An **EventFilter** allows efficiently filtering logs (also known as\n *  events) using bloom filters included within blocks.\n */\nexport interface EventFilter {\n    address?: AddressLike | Array<AddressLike>;\n    topics?: TopicFilter;\n}\n\n/**\n *  A **Filter** allows searching a specific range of blocks for mathcing\n *  logs.\n */\nexport interface Filter extends EventFilter {\n\n    /**\n     *  The start block for the filter (inclusive).\n     */\n    fromBlock?: BlockTag;\n\n    /**\n     *  The end block for the filter (inclusive).\n     */\n    toBlock?: BlockTag;\n}\n\n/**\n *  A **FilterByBlockHash** allows searching a specific block for mathcing\n *  logs.\n */\nexport interface FilterByBlockHash extends EventFilter {\n    /**\n     *  The blockhash of the specific block for the filter.\n     */\n    blockHash?: string;\n}\n\n\n//////////////////////\n// ProviderEvent\n\n/**\n *  A **ProviderEvent** provides the types of events that can be subscribed\n *  to on a [[Provider]].\n *\n *  Each provider may include additional possible events it supports, but\n *  the most commonly supported are:\n *\n *  **``\"block\"``** - calls the listener with the current block number on each\n *  new block.\n *\n *  **``\"error\"``** - calls the listener on each async error that occurs during\n *  the event loop, with the error.\n *\n *  **``\"debug\"``** - calls the listener on debug events, which can be used to\n *  troubleshoot network errors, provider problems, etc.\n *\n *  **``transaction hash``** - calls the listener on each block after the\n *  transaction has been mined; generally ``.once`` is more appropriate for\n *  this event.\n *\n *  **``Array``** - calls the listener on each log that matches the filter.\n *\n *  [[EventFilter]] - calls the listener with each matching log\n */\nexport type ProviderEvent = string | Array<string | Array<string>> | EventFilter | OrphanFilter;\n\n\n//////////////////////\n// Provider\n\n/**\n *  A **Provider** is the primary method to interact with the read-only\n *  content on Ethereum.\n *\n *  It allows access to details about accounts, blocks and transactions\n *  and the ability to query event logs and simulate contract execution.\n *\n *  Account data includes the [balance](getBalance),\n *  [transaction count](getTransactionCount), [code](getCode) and\n *  [state trie storage](getStorage).\n *\n *  Simulating execution can be used to [call](call),\n *  [estimate gas](estimateGas) and\n *  [get transaction results](getTransactionResult).\n *\n *  The [[broadcastTransaction]] is the only method which allows updating\n *  the blockchain, but it is usually accessed by a [[Signer]], since a\n *  private key must be used to sign the transaction before it can be\n *  broadcast.\n */\nexport interface Provider extends ContractRunner, EventEmitterable<ProviderEvent>, NameResolver {\n\n    /**\n     *  The provider iteself.\n     *\n     *  This is part of the necessary API for executing a contract, as\n     *  it provides a common property on any [[ContractRunner]] that\n     *  can be used to access the read-only portion of the runner.\n     */\n    provider: this;\n\n    /**\n     *  Shutdown any resources this provider is using. No additional\n     *  calls should be made to this provider after calling this.\n     */\n    destroy(): void;\n\n    ////////////////////\n    // State\n\n    /**\n     *  Get the current block number.\n     */\n    getBlockNumber(): Promise<number>;\n\n    /**\n     *  Get the connected [[Network]].\n     */\n    getNetwork(): Promise<Network>;\n\n    /**\n     *  Get the best guess at the recommended [[FeeData]].\n     */\n    getFeeData(): Promise<FeeData>;\n\n\n    ////////////////////\n    // Account\n\n    /**\n     *  Get the account balance (in wei) of %%address%%. If %%blockTag%%\n     *  is specified and the node supports archive access for that\n     *  %%blockTag%%, the balance is as of that [[BlockTag]].\n     *\n     *  @note On nodes without archive access enabled, the %%blockTag%% may be\n     *        **silently ignored** by the node, which may cause issues if relied on.\n     */\n    getBalance(address: AddressLike, blockTag?: BlockTag): Promise<bigint>;\n\n    /**\n     *  Get the number of transactions ever sent for %%address%%, which\n     *  is used as the ``nonce`` when sending a transaction. If\n     *  %%blockTag%% is specified and the node supports archive access\n     *  for that %%blockTag%%, the transaction count is as of that\n     *  [[BlockTag]].\n     *\n     *  @note On nodes without archive access enabled, the %%blockTag%% may be\n     *        **silently ignored** by the node, which may cause issues if relied on.\n     */\n    getTransactionCount(address: AddressLike, blockTag?: BlockTag): Promise<number>;\n\n    /**\n     *  Get the bytecode for %%address%%.\n     *\n     *  @note On nodes without archive access enabled, the %%blockTag%% may be\n     *        **silently ignored** by the node, which may cause issues if relied on.\n     */\n    getCode(address: AddressLike, blockTag?: BlockTag): Promise<string>\n\n    /**\n     *  Get the storage slot value for %%address%% at slot %%position%%.\n     *\n     *  @note On nodes without archive access enabled, the %%blockTag%% may be\n     *        **silently ignored** by the node, which may cause issues if relied on.\n     */\n    getStorage(address: AddressLike, position: BigNumberish, blockTag?: BlockTag): Promise<string>\n\n\n    ////////////////////\n    // Execution\n\n    /**\n     *  Estimates the amount of gas required to execute %%tx%%.\n     */\n    estimateGas(tx: TransactionRequest): Promise<bigint>;\n\n    /**\n     *  Simulate the execution of %%tx%%. If the call reverts, it will\n     *  throw a [[CallExceptionError]] which includes the revert data.\n     */\n    call(tx: TransactionRequest): Promise<string>\n\n    /**\n     *  Broadcasts the %%signedTx%% to the network, adding it to the\n     *  memory pool of any node for which the transaction meets the\n     *  rebroadcast requirements.\n     */\n    broadcastTransaction(signedTx: string): Promise<TransactionResponse>;\n\n\n    ////////////////////\n    // Queries\n\n    /**\n     *  Resolves to the block for %%blockHashOrBlockTag%%.\n     *\n     *  If %%prefetchTxs%%, and the backend supports including transactions\n     *  with block requests, all transactions will be included and the\n     *  [[Block]] object will not need to make remote calls for getting\n     *  transactions.\n     */\n    getBlock(blockHashOrBlockTag: BlockTag | string, prefetchTxs?: boolean): Promise<null | Block>;\n\n    /**\n     *  Resolves to the transaction for %%hash%%.\n     *\n     *  If the transaction is unknown or on pruning nodes which\n     *  discard old transactions this resolves to ``null``.\n     */\n    getTransaction(hash: string): Promise<null | TransactionResponse>;\n\n    /**\n     *  Resolves to the transaction receipt for %%hash%%, if mined.\n     *\n     *  If the transaction has not been mined, is unknown or on\n     *  pruning nodes which discard old transactions this resolves to\n     *  ``null``.\n     */\n    getTransactionReceipt(hash: string): Promise<null | TransactionReceipt>;\n\n    /**\n     *  Resolves to the result returned by the executions of %%hash%%.\n     *\n     *  This is only supported on nodes with archive access and with\n     *  the necessary debug APIs enabled.\n     */\n    getTransactionResult(hash: string): Promise<null | string>;\n\n\n    ////////////////////\n    // Bloom-filter Queries\n\n    /**\n     *  Resolves to the list of Logs that match %%filter%%\n     */\n    getLogs(filter: Filter | FilterByBlockHash): Promise<Array<Log>>;\n\n\n    ////////////////////\n    // ENS\n\n    /**\n     *  Resolves to the address configured for the %%ensName%% or\n     *  ``null`` if unconfigured.\n     */\n    resolveName(ensName: string): Promise<null | string>;\n\n    /**\n     *  Resolves to the ENS name associated for the %%address%% or\n     *  ``null`` if the //primary name// is not configured.\n     *\n     *  Users must perform additional steps to configure a //primary name//,\n     *  which is not currently common.\n     */\n    lookupAddress(address: string): Promise<null | string>;\n\n    /**\n     *  Waits until the transaction %%hash%% is mined and has %%confirms%%\n     *  confirmations.\n     */\n    waitForTransaction(hash: string, confirms?: number, timeout?: number): Promise<null | TransactionReceipt>;\n\n    /**\n     *  Resolves to the block at %%blockTag%% once it has been mined.\n     *\n     *  This can be useful for waiting some number of blocks by using\n     *  the ``currentBlockNumber + N``.\n     */\n    waitForBlock(blockTag?: BlockTag): Promise<Block>;\n}\n", "// import from provider.ts instead of index.ts to prevent circular dep\n// from EtherscanProvider\nimport {\n    Block, Log, TransactionReceipt, TransactionResponse\n} from \"../providers/provider.js\";\nimport { defineProperties, EventPayload } from \"../utils/index.js\";\n\nimport type { EventFragment, Interface, Result } from \"../abi/index.js\";\nimport type { Listener } from \"../utils/index.js\";\nimport type {\n    Provider\n} from \"../providers/index.js\";\n\nimport type { BaseContract } from \"./contract.js\";\nimport type { ContractEventName } from \"./types.js\";\n\n/**\n *  An **EventLog** contains additional properties parsed from the [[Log]].\n */\nexport class EventLog extends Log {\n    /**\n     *  The Contract Interface.\n     */\n    readonly interface!: Interface;\n\n    /**\n     *  The matching event.\n     */\n    readonly fragment!: EventFragment;\n\n    /**\n     *  The parsed arguments passed to the event by ``emit``.\n     */\n    readonly args!: Result;\n\n    /**\n     * @_ignore:\n     */\n    constructor(log: Log, iface: Interface, fragment: EventFragment) {\n        super(log, log.provider);\n        const args = iface.decodeEventLog(fragment, log.data, log.topics);\n        defineProperties<EventLog>(this, { args, fragment, interface: iface });\n    }\n\n    /**\n     *  The name of the event.\n     */\n    get eventName(): string { return this.fragment.name; }\n\n    /**\n     *  The signature of the event.\n     */\n    get eventSignature(): string { return this.fragment.format(); }\n}\n\n/**\n *  An **EventLog** contains additional properties parsed from the [[Log]].\n */\nexport class UndecodedEventLog extends Log {\n\n    /**\n     *  The error encounted when trying to decode the log.\n     */\n    readonly error!: Error;\n\n    /**\n     * @_ignore:\n     */\n    constructor(log: Log, error: Error) {\n        super(log, log.provider);\n        defineProperties<UndecodedEventLog>(this, { error });\n    }\n}\n\n/**\n *  A **ContractTransactionReceipt** includes the parsed logs from a\n *  [[TransactionReceipt]].\n */\nexport class ContractTransactionReceipt extends TransactionReceipt {\n    readonly #iface: Interface;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(iface: Interface, provider: Provider, tx: TransactionReceipt) {\n        super(tx, provider);\n        this.#iface = iface;\n    }\n\n    /**\n     *  The parsed logs for any [[Log]] which has a matching event in the\n     *  Contract ABI.\n     */\n    get logs(): Array<EventLog | Log> {\n        return super.logs.map((log) => {\n            const fragment = log.topics.length ? this.#iface.getEvent(log.topics[0]): null;\n            if (fragment) {\n                try {\n                    return new EventLog(log, this.#iface, fragment)\n                } catch (error: any) {\n                    return new UndecodedEventLog(log, error);\n                }\n            }\n\n            return log;\n        });\n    }\n\n}\n\n/**\n *  A **ContractTransactionResponse** will return a\n *  [[ContractTransactionReceipt]] when waited on.\n */\nexport class ContractTransactionResponse extends TransactionResponse {\n    readonly #iface: Interface;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(iface: Interface, provider: Provider, tx: TransactionResponse) {\n        super(tx, provider);\n        this.#iface = iface;\n    }\n\n    /**\n     *  Resolves once this transaction has been mined and has\n     *  %%confirms%% blocks including it (default: ``1``) with an\n     *  optional %%timeout%%.\n     *\n     *  This can resolve to ``null`` only if %%confirms%% is ``0``\n     *  and the transaction has not been mined, otherwise this will\n     *  wait until enough confirmations have completed.\n     */\n    async wait(confirms?: number, timeout?: number): Promise<null | ContractTransactionReceipt> {\n        const receipt = await super.wait(confirms, timeout);\n        if (receipt == null) { return null; }\n        return new ContractTransactionReceipt(this.#iface, this.provider, receipt);\n    }\n}\n\n/**\n *  A **ContractUnknownEventPayload** is included as the last parameter to\n *  Contract Events when the event does not match any events in the ABI.\n */\nexport  class ContractUnknownEventPayload extends EventPayload<ContractEventName> {\n    /**\n     *  The log with no matching events.\n     */\n    readonly log!: Log;\n\n    /**\n     *  @_event:\n     */\n    constructor(contract: BaseContract, listener: null | Listener, filter: ContractEventName, log: Log) {\n        super(contract, listener, filter);\n        defineProperties<ContractUnknownEventPayload>(this, { log });\n    }\n\n    /**\n     *  Resolves to the block the event occured in.\n     */\n    async getBlock(): Promise<Block> {\n        return await this.log.getBlock();\n    }\n\n    /**\n     *  Resolves to the transaction the event occured in.\n     */\n    async getTransaction(): Promise<TransactionResponse> {\n        return await this.log.getTransaction();\n    }\n\n    /**\n     *  Resolves to the transaction receipt the event occured in.\n     */\n    async getTransactionReceipt(): Promise<TransactionReceipt> {\n        return await this.log.getTransactionReceipt();\n    }\n}\n\n/**\n *  A **ContractEventPayload** is included as the last parameter to\n *  Contract Events when the event is known.\n */\nexport class ContractEventPayload extends ContractUnknownEventPayload {\n\n    /**\n     *  The matching event.\n     */\n    declare readonly fragment: EventFragment;\n\n    /**\n     *  The log, with parsed properties.\n     */\n    declare readonly log: EventLog;\n\n    /**\n     *  The parsed arguments passed to the event by ``emit``.\n     */\n    declare readonly args: Result;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(contract: BaseContract, listener: null | Listener, filter: ContractEventName, fragment: EventFragment, _log: Log) {\n        super(contract, listener, filter, new EventLog(_log, contract.interface, fragment));\n        const args = contract.interface.decodeEventLog(fragment, this.log.data, this.log.topics);\n        defineProperties<ContractEventPayload>(this, { args, fragment });\n    }\n\n    /**\n     *  The event name.\n     */\n    get eventName(): string {\n        return this.fragment.name;\n    }\n\n    /**\n     *  The event signature.\n     */\n    get eventSignature(): string {\n        return this.fragment.format();\n    }\n}\n", "import { Interface, Typed } from \"../abi/index.js\";\nimport { isAddressable, resolveAddress } from \"../address/index.js\";\n// import from provider.ts instead of index.ts to prevent circular dep\n// from EtherscanProvider\nimport { copyRequest, Log, TransactionResponse } from \"../providers/provider.js\";\nimport {\n    defineProperties, getBigInt, isCallException, isHexString, resolveProperties,\n    isError, makeError, assert, assertArgument\n} from \"../utils/index.js\";\n\nimport {\n    ContractEventPayload, ContractUnknownEventPayload,\n    ContractTransactionResponse,\n    EventLog, UndecodedEventLog\n} from \"./wrappers.js\";\n\nimport type { EventFragment, FunctionFragment, InterfaceAbi, ParamType, Result } from \"../abi/index.js\";\nimport type { Addressable, NameResolver } from \"../address/index.js\";\nimport type { EventEmitterable, Listener } from \"../utils/index.js\";\nimport type {\n    BlockTag, ContractRunner, Provider, TransactionRequest, TopicFilter\n} from \"../providers/index.js\";\n\nimport type {\n    BaseContractMethod,\n    ContractEventName,\n    ContractInterface,\n    ContractMethodArgs,\n    ContractMethod,\n    ContractEventArgs,\n    ContractEvent,\n    ContractTransaction,\n    DeferredTopicFilter,\n    WrappedFallback\n} from \"./types.js\";\n\nconst BN_0 = BigInt(0);\n\ninterface ContractRunnerCaller extends ContractRunner {\n    call: (tx: TransactionRequest) => Promise<string>;\n}\n\ninterface ContractRunnerEstimater extends ContractRunner {\n    estimateGas: (tx: TransactionRequest) => Promise<bigint>;\n}\n\ninterface ContractRunnerSender extends ContractRunner {\n    sendTransaction: (tx: TransactionRequest) => Promise<TransactionResponse>;\n}\n\ninterface ContractRunnerResolver extends ContractRunner {\n    resolveName: (name: string | Addressable) => Promise<null | string>;\n}\n\nfunction canCall(value: any): value is ContractRunnerCaller {\n    return (value && typeof(value.call) === \"function\");\n}\n\nfunction canEstimate(value: any): value is ContractRunnerEstimater {\n    return (value && typeof(value.estimateGas) === \"function\");\n}\n\nfunction canResolve(value: any): value is ContractRunnerResolver {\n    return (value && typeof(value.resolveName) === \"function\");\n}\n\nfunction canSend(value: any): value is ContractRunnerSender {\n    return (value && typeof(value.sendTransaction) === \"function\");\n}\n\nfunction getResolver(value: any): undefined | NameResolver {\n    if (value != null) {\n        if (canResolve(value)) { return value; }\n        if (value.provider) { return value.provider; }\n    }\n    return undefined;\n}\n\nclass PreparedTopicFilter implements DeferredTopicFilter {\n    #filter: Promise<TopicFilter>;\n    readonly fragment!: EventFragment;\n\n    constructor(contract: BaseContract, fragment: EventFragment, args: Array<any>) {\n        defineProperties<PreparedTopicFilter>(this, { fragment });\n        if (fragment.inputs.length < args.length) {\n            throw new Error(\"too many arguments\");\n        }\n\n        // Recursively descend into args and resolve any addresses\n        const runner = getRunner(contract.runner, \"resolveName\");\n        const resolver = canResolve(runner) ? runner: null;\n        this.#filter = (async function() {\n            const resolvedArgs = await Promise.all(fragment.inputs.map((param, index) => {\n                const arg = args[index];\n                if (arg == null) { return null; }\n\n                return param.walkAsync(args[index], (type, value) => {\n                    if (type === \"address\") {\n                        if (Array.isArray(value)) {\n                            return Promise.all(value.map((v) => resolveAddress(v, resolver)));\n                        }\n                        return resolveAddress(value, resolver);\n                    }\n                    return value;\n                });\n            }));\n\n            return contract.interface.encodeFilterTopics(fragment, resolvedArgs);\n        })();\n    }\n\n    getTopicFilter(): Promise<TopicFilter> {\n        return this.#filter;\n    }\n}\n\n\n// A = Arguments passed in as a tuple\n// R = The result type of the call (i.e. if only one return type,\n//     the qualified type, otherwise Result)\n// D = The type the default call will return (i.e. R for view/pure,\n//     TransactionResponse otherwise)\n//export interface ContractMethod<A extends Array<any> = Array<any>, R = any, D extends R | ContractTransactionResponse = ContractTransactionResponse> {\n\nfunction getRunner<T extends ContractRunner>(value: any, feature: keyof ContractRunner): null | T {\n    if (value == null) { return null; }\n    if (typeof(value[feature]) === \"function\") { return value; }\n    if (value.provider && typeof(value.provider[feature]) === \"function\") {\n        return value.provider;\n    }\n    return null;\n}\n\nfunction getProvider(value: null | ContractRunner): null | Provider {\n    if (value == null) { return null; }\n    return value.provider || null;\n}\n\n/**\n *  @_ignore:\n */\nexport async function copyOverrides<O extends string = \"data\" | \"to\">(arg: any, allowed?: Array<string>): Promise<Omit<ContractTransaction, O>> {\n\n    // Make sure the overrides passed in are a valid overrides object\n    const _overrides = Typed.dereference(arg, \"overrides\");\n    assertArgument(typeof(_overrides) === \"object\", \"invalid overrides parameter\", \"overrides\", arg);\n\n    // Create a shallow copy (we'll deep-ify anything needed during normalizing)\n    const overrides = copyRequest(_overrides);\n\n    assertArgument(overrides.to == null || (allowed || [ ]).indexOf(\"to\") >= 0,\n      \"cannot override to\", \"overrides.to\", overrides.to);\n    assertArgument(overrides.data == null || (allowed || [ ]).indexOf(\"data\") >= 0,\n      \"cannot override data\", \"overrides.data\", overrides.data);\n\n    // Resolve any from\n    if (overrides.from) { overrides.from = overrides.from; }\n\n    return <Omit<ContractTransaction, O>>overrides;\n}\n\n/**\n *  @_ignore:\n */\nexport async function resolveArgs(_runner: null | ContractRunner, inputs: ReadonlyArray<ParamType>, args: Array<any>): Promise<Array<any>> {\n    // Recursively descend into args and resolve any addresses\n    const runner = getRunner(_runner, \"resolveName\");\n    const resolver = canResolve(runner) ? runner: null;\n    return await Promise.all(inputs.map((param, index) => {\n        return param.walkAsync(args[index], (type, value) => {\n            value = Typed.dereference(value, type);\n            if (type === \"address\") { return resolveAddress(value, resolver); }\n            return value;\n        });\n    }));\n}\n\nfunction buildWrappedFallback(contract: BaseContract): WrappedFallback {\n\n    const populateTransaction = async function(overrides?: Omit<TransactionRequest, \"to\">): Promise<ContractTransaction> {\n        // If an overrides was passed in, copy it and normalize the values\n\n        const tx: ContractTransaction = <any>(await copyOverrides<\"data\">(overrides, [ \"data\" ]));\n        tx.to = await contract.getAddress();\n\n        if (tx.from) {\n            tx.from = await resolveAddress(tx.from, getResolver(contract.runner));\n        }\n\n        const iface = contract.interface;\n\n        const noValue = (getBigInt((tx.value || BN_0), \"overrides.value\") === BN_0);\n        const noData = ((tx.data || \"0x\") === \"0x\");\n\n        if (iface.fallback && !iface.fallback.payable && iface.receive && !noData && !noValue) {\n            assertArgument(false, \"cannot send data to receive or send value to non-payable fallback\", \"overrides\", overrides);\n        }\n\n        assertArgument(iface.fallback || noData,\n          \"cannot send data to receive-only contract\", \"overrides.data\", tx.data);\n\n        // Only allow payable contracts to set non-zero value\n        const payable = iface.receive || (iface.fallback && iface.fallback.payable);\n        assertArgument(payable || noValue,\n          \"cannot send value to non-payable fallback\", \"overrides.value\", tx.value);\n\n        // Only allow fallback contracts to set non-empty data\n        assertArgument(iface.fallback || noData,\n          \"cannot send data to receive-only contract\", \"overrides.data\", tx.data);\n\n        return tx;\n    }\n\n    const staticCall = async function(overrides?: Omit<TransactionRequest, \"to\">): Promise<string> {\n        const runner = getRunner(contract.runner, \"call\");\n        assert(canCall(runner), \"contract runner does not support calling\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"call\" });\n\n        const tx = await populateTransaction(overrides);\n\n        try {\n            return await runner.call(tx);\n        } catch (error: any) {\n            if (isCallException(error) && error.data) {\n                throw contract.interface.makeError(error.data, tx);\n            }\n            throw error;\n        }\n    }\n\n    const send = async function(overrides?: Omit<TransactionRequest, \"to\">): Promise<ContractTransactionResponse> {\n        const runner = contract.runner;\n        assert(canSend(runner), \"contract runner does not support sending transactions\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"sendTransaction\" });\n\n        const tx = await runner.sendTransaction(await populateTransaction(overrides));\n        const provider = getProvider(contract.runner);\n        // @TODO: the provider can be null; make a custom dummy provider that will throw a\n        // meaningful error\n        return new ContractTransactionResponse(contract.interface, <Provider>provider, tx);\n    }\n\n    const estimateGas = async function(overrides?: Omit<TransactionRequest, \"to\">): Promise<bigint> {\n        const runner = getRunner(contract.runner, \"estimateGas\");\n        assert(canEstimate(runner), \"contract runner does not support gas estimation\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"estimateGas\" });\n\n        return await runner.estimateGas(await populateTransaction(overrides));\n    }\n\n    const method = async (overrides?: Omit<TransactionRequest, \"to\">) => {\n        return await send(overrides);\n    };\n\n    defineProperties<any>(method, {\n        _contract: contract,\n\n        estimateGas,\n        populateTransaction,\n        send, staticCall\n    });\n\n    return <WrappedFallback>method;\n}\n\nfunction buildWrappedMethod<A extends Array<any> = Array<any>, R = any, D extends R | ContractTransactionResponse = ContractTransactionResponse>(contract: BaseContract, key: string): BaseContractMethod<A, R, D> {\n\n    const getFragment = function(...args: ContractMethodArgs<A>): FunctionFragment {\n        const fragment = contract.interface.getFunction(key, args);\n        assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"fragment\",\n            info: { key, args }\n        });\n        return fragment;\n    }\n\n    const populateTransaction = async function(...args: ContractMethodArgs<A>): Promise<ContractTransaction> {\n        const fragment = getFragment(...args);\n\n        // If an overrides was passed in, copy it and normalize the values\n        let overrides: Omit<ContractTransaction, \"data\" | \"to\"> = { };\n        if (fragment.inputs.length + 1 === args.length) {\n            overrides = await copyOverrides(args.pop());\n\n            if (overrides.from) {\n                overrides.from = await resolveAddress(overrides.from, getResolver(contract.runner));\n            }\n        }\n\n        if (fragment.inputs.length !== args.length) {\n            throw new Error(\"internal error: fragment inputs doesn't match arguments; should not happen\");\n        }\n\n        const resolvedArgs = await resolveArgs(contract.runner, fragment.inputs, args);\n\n        return Object.assign({ }, overrides, await resolveProperties({\n            to: contract.getAddress(),\n            data: contract.interface.encodeFunctionData(fragment, resolvedArgs)\n        }));\n    }\n\n    const staticCall = async function(...args: ContractMethodArgs<A>): Promise<R> {\n        const result = await staticCallResult(...args);\n        if (result.length === 1) { return result[0]; }\n        return <R><unknown>result;\n    }\n\n    const send = async function(...args: ContractMethodArgs<A>): Promise<ContractTransactionResponse> {\n        const runner = contract.runner;\n        assert(canSend(runner), \"contract runner does not support sending transactions\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"sendTransaction\" });\n\n        const tx = await runner.sendTransaction(await populateTransaction(...args));\n        const provider = getProvider(contract.runner);\n        // @TODO: the provider can be null; make a custom dummy provider that will throw a\n        // meaningful error\n        return new ContractTransactionResponse(contract.interface, <Provider>provider, tx);\n    }\n\n    const estimateGas = async function(...args: ContractMethodArgs<A>): Promise<bigint> {\n        const runner = getRunner(contract.runner, \"estimateGas\");\n        assert(canEstimate(runner), \"contract runner does not support gas estimation\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"estimateGas\" });\n\n        return await runner.estimateGas(await populateTransaction(...args));\n    }\n\n    const staticCallResult = async function(...args: ContractMethodArgs<A>): Promise<Result> {\n        const runner = getRunner(contract.runner, \"call\");\n        assert(canCall(runner), \"contract runner does not support calling\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"call\" });\n\n        const tx = await populateTransaction(...args);\n\n        let result = \"0x\";\n        try {\n            result = await runner.call(tx);\n        } catch (error: any) {\n            if (isCallException(error) && error.data) {\n                throw contract.interface.makeError(error.data, tx);\n            }\n            throw error;\n        }\n\n        const fragment = getFragment(...args);\n        return contract.interface.decodeFunctionResult(fragment, result);\n    };\n\n    const method = async (...args: ContractMethodArgs<A>) => {\n        const fragment = getFragment(...args);\n        if (fragment.constant) { return await staticCall(...args); }\n        return await send(...args);\n    };\n\n    defineProperties<any>(method, {\n        name: contract.interface.getFunctionName(key),\n        _contract: contract, _key: key,\n\n        getFragment,\n\n        estimateGas,\n        populateTransaction,\n        send, staticCall, staticCallResult,\n    });\n\n    // Only works on non-ambiguous keys (refined fragment is always non-ambiguous)\n    Object.defineProperty(method, \"fragment\", {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n            const fragment = contract.interface.getFunction(key);\n            assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"fragment\",\n                info: { key }\n            });\n            return fragment;\n        }\n    });\n\n    return <BaseContractMethod<A, R, D>>method;\n}\n\nfunction buildWrappedEvent<A extends Array<any> = Array<any>>(contract: BaseContract, key: string): ContractEvent<A> {\n\n    const getFragment = function(...args: ContractEventArgs<A>): EventFragment {\n        const fragment = contract.interface.getEvent(key, args);\n\n        assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"fragment\",\n            info: { key, args }\n        });\n\n        return fragment;\n    }\n\n    const method = function(...args: ContractMethodArgs<A>): PreparedTopicFilter {\n        return new PreparedTopicFilter(contract, getFragment(...args), args);\n    };\n\n    defineProperties<any>(method, {\n        name: contract.interface.getEventName(key),\n        _contract: contract, _key: key,\n\n        getFragment\n    });\n\n    // Only works on non-ambiguous keys (refined fragment is always non-ambiguous)\n    Object.defineProperty(method, \"fragment\", {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n            const fragment = contract.interface.getEvent(key);\n\n            assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"fragment\",\n                info: { key }\n            });\n\n            return fragment;\n        }\n    });\n\n    return <ContractEvent<A>><unknown>method;\n}\n\ntype Sub = {\n    tag: string;\n    listeners: Array<{ listener: Listener, once: boolean }>,\n    start: () => void;\n    stop: () => void;\n};\n\n\n// The combination of TypeScrype, Private Fields and Proxies makes\n// the world go boom; so we hide variables with some trickery keeping\n// a symbol attached to each BaseContract which its sub-class (even\n// via a Proxy) can reach and use to look up its internal values.\n\nconst internal = Symbol.for(\"_ethersInternal_contract\");\ntype Internal = {\n    addrPromise: Promise<string>;\n    addr: null | string;\n\n    deployTx: null | ContractTransactionResponse;\n\n    subs: Map<string, Sub>;\n};\n\nconst internalValues: WeakMap<BaseContract, Internal> = new WeakMap();\n\nfunction setInternal(contract: BaseContract, values: Internal): void {\n    internalValues.set(contract[internal], values);\n}\n\nfunction getInternal(contract: BaseContract): Internal {\n    return internalValues.get(contract[internal]) as Internal;\n}\n\nfunction isDeferred(value: any): value is DeferredTopicFilter {\n    return (value && typeof(value) === \"object\" && (\"getTopicFilter\" in value) &&\n      (typeof(value.getTopicFilter) === \"function\") && value.fragment);\n}\n\nasync function getSubInfo(contract: BaseContract, event: ContractEventName): Promise<{ fragment: null | EventFragment, tag: string, topics: TopicFilter }> {\n    let topics: Array<null | string | Array<string>>;\n    let fragment: null | EventFragment = null;\n\n    // Convert named events to topicHash and get the fragment for\n    // events which need deconstructing.\n\n    if (Array.isArray(event)) {\n        const topicHashify = function(name: string): string {\n            if (isHexString(name, 32)) { return name; }\n            const fragment = contract.interface.getEvent(name);\n            assertArgument(fragment, \"unknown fragment\", \"name\", name);\n            return fragment.topicHash;\n        }\n\n        // Array of Topics and Names; e.g. `[ \"0x1234...89ab\", \"Transfer(address)\" ]`\n        topics = event.map((e) => {\n            if (e == null) { return null; }\n            if (Array.isArray(e)) { return e.map(topicHashify); }\n            return topicHashify(e);\n        });\n\n    } else if (event === \"*\") {\n        topics = [ null ];\n\n    } else if (typeof(event) === \"string\") {\n        if (isHexString(event, 32)) {\n            // Topic Hash\n            topics = [ event ];\n        } else {\n           // Name or Signature; e.g. `\"Transfer\", `\"Transfer(address)\"`\n            fragment = contract.interface.getEvent(event);\n            assertArgument(fragment, \"unknown fragment\", \"event\", event);\n            topics = [ fragment.topicHash ];\n        }\n\n    } else if (isDeferred(event)) {\n        // Deferred Topic Filter; e.g. `contract.filter.Transfer(from)`\n        topics = await event.getTopicFilter();\n\n    } else if (\"fragment\" in event) {\n        // ContractEvent; e.g. `contract.filter.Transfer`\n        fragment = event.fragment;\n        topics = [ fragment.topicHash ];\n\n    } else {\n        assertArgument(false, \"unknown event name\", \"event\", event);\n    }\n\n    // Normalize topics and sort TopicSets\n    topics = topics.map((t) => {\n        if (t == null) { return null; }\n        if (Array.isArray(t)) {\n            const items = Array.from(new Set(t.map((t) => t.toLowerCase())).values());\n            if (items.length === 1) { return items[0]; }\n            items.sort();\n            return items;\n        }\n        return t.toLowerCase();\n    });\n\n    const tag = topics.map((t) => {\n        if (t == null) { return \"null\"; }\n        if (Array.isArray(t)) { return t.join(\"|\"); }\n        return t;\n    }).join(\"&\");\n\n    return { fragment, tag, topics }\n}\n\nasync function hasSub(contract: BaseContract, event: ContractEventName): Promise<null | Sub> {\n    const { subs } = getInternal(contract);\n    return subs.get((await getSubInfo(contract, event)).tag) || null;\n}\n\nasync function getSub(contract: BaseContract, operation: string, event: ContractEventName): Promise<Sub> {\n    // Make sure our runner can actually subscribe to events\n    const provider = getProvider(contract.runner);\n    assert(provider, \"contract runner does not support subscribing\",\n        \"UNSUPPORTED_OPERATION\", { operation });\n\n    const { fragment, tag, topics } = await getSubInfo(contract, event);\n\n    const { addr, subs } = getInternal(contract);\n\n    let sub = subs.get(tag);\n    if (!sub) {\n        const address: string | Addressable = (addr ? addr: contract);\n        const filter = { address, topics };\n        const listener = (log: Log) => {\n            let foundFragment = fragment;\n            if (foundFragment == null) {\n                try {\n                    foundFragment = contract.interface.getEvent(log.topics[0]);\n                } catch (error) { }\n            }\n\n            // If fragment is null, we do not deconstruct the args to emit\n\n            if (foundFragment) {\n                const _foundFragment = foundFragment;\n                const args = fragment ? contract.interface.decodeEventLog(fragment, log.data, log.topics): [ ];\n                emit(contract, event, args, (listener: null | Listener) => {\n                    return new ContractEventPayload(contract, listener, event, _foundFragment, log);\n                });\n            } else {\n                emit(contract, event, [ ], (listener: null | Listener) => {\n                    return new ContractUnknownEventPayload(contract, listener, event, log);\n                });\n            }\n        };\n\n        let starting: Array<Promise<any>> = [ ];\n        const start = () => {\n            if (starting.length) { return; }\n            starting.push(provider.on(filter, listener));\n        };\n\n        const stop = async () => {\n            if (starting.length == 0) { return; }\n\n            let started = starting;\n            starting = [ ];\n            await Promise.all(started);\n            provider.off(filter, listener);\n        };\n\n        sub = { tag, listeners: [ ], start, stop };\n        subs.set(tag, sub);\n    }\n    return sub;\n}\n\n// We use this to ensure one emit resolves before firing the next to\n// ensure correct ordering (note this cannot throw and just adds the\n// notice to the event queu using setTimeout).\nlet lastEmit: Promise<any> = Promise.resolve();\n\ntype PayloadFunc = (listener: null | Listener) => ContractUnknownEventPayload;\n\nasync function _emit(contract: BaseContract, event: ContractEventName, args: Array<any>, payloadFunc: null | PayloadFunc): Promise<boolean> {\n    await lastEmit;\n\n    const sub = await hasSub(contract, event);\n    if (!sub) { return false; }\n\n    const count = sub.listeners.length;\n    sub.listeners = sub.listeners.filter(({ listener, once }) => {\n        const passArgs = Array.from(args);\n        if (payloadFunc) {\n            passArgs.push(payloadFunc(once ? null: listener));\n        }\n        try {\n            listener.call(contract, ...passArgs);\n        } catch (error) { }\n        return !once;\n    });\n\n    if (sub.listeners.length === 0) {\n        sub.stop();\n        getInternal(contract).subs.delete(sub.tag);\n    }\n\n    return (count > 0);\n}\n\nasync function emit(contract: BaseContract, event: ContractEventName, args: Array<any>, payloadFunc: null | PayloadFunc): Promise<boolean> {\n    try {\n        await lastEmit;\n    } catch (error) { }\n\n    const resultPromise = _emit(contract, event, args, payloadFunc);\n    lastEmit = resultPromise;\n    return await resultPromise;\n}\n\nconst passProperties = [ \"then\" ];\nexport class BaseContract implements Addressable, EventEmitterable<ContractEventName> {\n    /**\n     *  The target to connect to.\n     *\n     *  This can be an address, ENS name or any [[Addressable]], such as\n     *  another contract. To get the resovled address, use the ``getAddress``\n     *  method.\n     */\n    readonly target!: string | Addressable;\n\n    /**\n     *  The contract Interface.\n     */\n    readonly interface!: Interface;\n\n    /**\n     *  The connected runner. This is generally a [[Provider]] or a\n     *  [[Signer]], which dictates what operations are supported.\n     *\n     *  For example, a **Contract** connected to a [[Provider]] may\n     *  only execute read-only operations.\n     */\n    readonly runner!: null | ContractRunner;\n\n    /**\n     *  All the Events available on this contract.\n     */\n    readonly filters!: Record<string, ContractEvent>;\n\n    /**\n     *  @_ignore:\n     */\n    readonly [internal]: any;\n\n    /**\n     *  The fallback or receive function if any.\n     */\n    readonly fallback!: null | WrappedFallback;\n\n    /**\n     *  Creates a new contract connected to %%target%% with the %%abi%% and\n     *  optionally connected to a %%runner%% to perform operations on behalf\n     *  of.\n     */\n    constructor(target: string | Addressable, abi: Interface | InterfaceAbi, runner?: null | ContractRunner, _deployTx?: null | TransactionResponse) {\n        assertArgument(typeof(target) === \"string\" || isAddressable(target),\n            \"invalid value for Contract target\", \"target\", target);\n\n        if (runner == null) { runner = null; }\n        const iface = Interface.from(abi);\n        defineProperties<BaseContract>(this, { target, runner, interface: iface });\n\n        Object.defineProperty(this, internal, { value: { } });\n\n        let addrPromise;\n        let addr: null | string = null;\n\n        let deployTx: null | ContractTransactionResponse = null;\n        if (_deployTx) {\n            const provider = getProvider(runner);\n            // @TODO: the provider can be null; make a custom dummy provider that will throw a\n            // meaningful error\n            deployTx = new ContractTransactionResponse(this.interface, <Provider>provider, _deployTx);\n        }\n\n        let subs = new Map();\n\n        // Resolve the target as the address\n        if (typeof(target) === \"string\") {\n            if (isHexString(target)) {\n                addr = target;\n                addrPromise = Promise.resolve(target);\n\n            } else {\n                const resolver = getRunner(runner, \"resolveName\");\n                if (!canResolve(resolver)) {\n                    throw makeError(\"contract runner does not support name resolution\", \"UNSUPPORTED_OPERATION\", {\n                        operation: \"resolveName\"\n                    });\n                }\n\n                addrPromise = resolver.resolveName(target).then((addr) => {\n                    if (addr == null) {\n                        throw makeError(\"an ENS name used for a contract target must be correctly configured\", \"UNCONFIGURED_NAME\", {\n                            value: target\n                        });\n                    }\n                    getInternal(this).addr = addr;\n                    return addr;\n                });\n            }\n        } else {\n            addrPromise = target.getAddress().then((addr) => {\n                if (addr == null) { throw new Error(\"TODO\"); }\n                getInternal(this).addr = addr;\n                return addr;\n            });\n        }\n\n        // Set our private values\n        setInternal(this, { addrPromise, addr, deployTx, subs });\n\n        // Add the event filters\n        const filters = new Proxy({ }, {\n            get: (target, prop, receiver) => {\n                // Pass important checks (like `then` for Promise) through\n                if (typeof(prop) === \"symbol\" || passProperties.indexOf(prop) >= 0) {\n                    return Reflect.get(target, prop, receiver);\n                }\n\n                try {\n                    return this.getEvent(prop);\n                } catch (error) {\n                    if (!isError(error, \"INVALID_ARGUMENT\") || error.argument !== \"key\") {\n                        throw error;\n                    }\n                }\n\n                return undefined;\n            },\n            has: (target, prop) => {\n                // Pass important checks (like `then` for Promise) through\n                if (passProperties.indexOf(<string>prop) >= 0) {\n                    return Reflect.has(target, prop);\n                }\n\n                return Reflect.has(target, prop) || this.interface.hasEvent(String(prop));\n            }\n        });\n        defineProperties<BaseContract>(this, { filters });\n\n        defineProperties<BaseContract>(this, {\n            fallback: ((iface.receive || iface.fallback) ? (buildWrappedFallback(this)): null)\n        });\n\n        // Return a Proxy that will respond to functions\n        return new Proxy(this, {\n            get: (target, prop, receiver) => {\n                if (typeof(prop) === \"symbol\" || prop in target || passProperties.indexOf(prop) >= 0) {\n                    return Reflect.get(target, prop, receiver);\n                }\n\n                // Undefined properties should return undefined\n                try {\n                    return target.getFunction(prop);\n                } catch (error) {\n                    if (!isError(error, \"INVALID_ARGUMENT\") || error.argument !== \"key\") {\n                        throw error;\n                    }\n                }\n\n                return undefined;\n            },\n            has: (target, prop) => {\n                if (typeof(prop) === \"symbol\" || prop in target || passProperties.indexOf(prop) >= 0) {\n                    return Reflect.has(target, prop);\n                }\n\n                return target.interface.hasFunction(prop);\n            }\n        });\n\n    }\n\n    /**\n     *  Return a new Contract instance with the same target and ABI, but\n     *  a different %%runner%%.\n     */\n    connect(runner: null | ContractRunner): BaseContract {\n        return new BaseContract(this.target, this.interface, runner);\n    }\n\n    /**\n     *  Return a new Contract instance with the same ABI and runner, but\n     *  a different %%target%%.\n     */\n    attach(target: string | Addressable): BaseContract {\n        return new BaseContract(target, this.interface, this.runner);\n    }\n\n    /**\n     *  Return the resolved address of this Contract.\n     */\n    async getAddress(): Promise<string> { return await getInternal(this).addrPromise; }\n\n    /**\n     *  Return the deployed bytecode or null if no bytecode is found.\n     */\n    async getDeployedCode(): Promise<null | string> {\n        const provider = getProvider(this.runner);\n        assert(provider, \"runner does not support .provider\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"getDeployedCode\" });\n\n        const code = await provider.getCode(await this.getAddress());\n        if (code === \"0x\") { return null; }\n        return code;\n    }\n\n    /**\n     *  Resolve to this Contract once the bytecode has been deployed, or\n     *  resolve immediately if already deployed.\n     */\n    async waitForDeployment(): Promise<this> {\n        // We have the deployement transaction; just use that (throws if deployement fails)\n        const deployTx = this.deploymentTransaction();\n        if (deployTx) {\n            await deployTx.wait();\n            return this;\n        }\n\n        // Check for code\n        const code = await this.getDeployedCode();\n        if (code != null) { return this; }\n\n        // Make sure we can subscribe to a provider event\n        const provider = getProvider(this.runner);\n        assert(provider != null, \"contract runner does not support .provider\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"waitForDeployment\" });\n\n        return new Promise((resolve, reject) => {\n            const checkCode = async () => {\n                try {\n                    const code = await this.getDeployedCode();\n                    if (code != null) { return resolve(this); }\n                    provider.once(\"block\", checkCode);\n                } catch (error) {\n                    reject(error);\n                }\n            };\n            checkCode();\n        });\n    }\n\n    /**\n     *  Return the transaction used to deploy this contract.\n     *\n     *  This is only available if this instance was returned from a\n     *  [[ContractFactory]].\n     */\n    deploymentTransaction(): null | ContractTransactionResponse {\n        return getInternal(this).deployTx;\n    }\n\n    /**\n     *  Return the function for a given name. This is useful when a contract\n     *  method name conflicts with a JavaScript name such as ``prototype`` or\n     *  when using a Contract programatically.\n     */\n    getFunction<T extends ContractMethod = ContractMethod>(key: string | FunctionFragment): T {\n        if (typeof(key) !== \"string\") { key = key.format(); }\n        const func = buildWrappedMethod(this, key);\n        return <T>func;\n    }\n\n    /**\n     *  Return the event for a given name. This is useful when a contract\n     *  event name conflicts with a JavaScript name such as ``prototype`` or\n     *  when using a Contract programatically.\n     */\n    getEvent(key: string | EventFragment): ContractEvent {\n        if (typeof(key) !== \"string\") { key = key.format(); }\n        return buildWrappedEvent(this, key);\n    }\n\n    /**\n     *  @_ignore:\n     */\n    async queryTransaction(hash: string): Promise<Array<EventLog>> {\n        throw new Error(\"@TODO\");\n    }\n\n    /*\n    // @TODO: this is a non-backwards compatible change, but will be added\n    //        in v7 and in a potential SmartContract class in an upcoming\n    //        v6 release\n    async getTransactionReceipt(hash: string): Promise<null | ContractTransactionReceipt> {\n        const provider = getProvider(this.runner);\n        assert(provider, \"contract runner does not have a provider\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"queryTransaction\" });\n\n        const receipt = await provider.getTransactionReceipt(hash);\n        if (receipt == null) { return null; }\n\n        return new ContractTransactionReceipt(this.interface, provider, receipt);\n    }\n    */\n\n    /**\n     *  Provide historic access to event data for %%event%% in the range\n     *  %%fromBlock%% (default: ``0``) to %%toBlock%% (default: ``\"latest\"``)\n     *  inclusive.\n     */\n    async queryFilter(event: ContractEventName, fromBlock?: BlockTag, toBlock?: BlockTag): Promise<Array<EventLog | Log>> {\n        if (fromBlock == null) { fromBlock = 0; }\n        if (toBlock == null) { toBlock = \"latest\"; }\n        const { addr, addrPromise } = getInternal(this);\n        const address = (addr ? addr: (await addrPromise));\n        const { fragment, topics } = await getSubInfo(this, event);\n        const filter = { address, topics, fromBlock, toBlock };\n\n        const provider = getProvider(this.runner);\n        assert(provider, \"contract runner does not have a provider\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"queryFilter\" });\n\n        return (await provider.getLogs(filter)).map((log) => {\n            let foundFragment = fragment;\n            if (foundFragment == null) {\n                try {\n                    foundFragment = this.interface.getEvent(log.topics[0]);\n                } catch (error) { }\n            }\n\n            if (foundFragment) {\n                try {\n                    return new EventLog(log, this.interface, foundFragment);\n                } catch (error: any) {\n                    return new UndecodedEventLog(log, error);\n                }\n            }\n\n            return new Log(log, provider);\n        });\n    }\n\n    /**\n     *  Add an event %%listener%% for the %%event%%.\n     */\n    async on(event: ContractEventName, listener: Listener): Promise<this> {\n        const sub = await getSub(this, \"on\", event);\n        sub.listeners.push({ listener, once: false });\n        sub.start();\n        return this;\n    }\n\n    /**\n     *  Add an event %%listener%% for the %%event%%, but remove the listener\n     *  after it is fired once.\n     */\n    async once(event: ContractEventName, listener: Listener): Promise<this> {\n        const sub = await getSub(this, \"once\", event);\n        sub.listeners.push({ listener, once: true });\n        sub.start();\n        return this;\n    }\n\n    /**\n     *  Emit an %%event%% calling all listeners with %%args%%.\n     *\n     *  Resolves to ``true`` if any listeners were called.\n     */\n    async emit(event: ContractEventName, ...args: Array<any>): Promise<boolean> {\n        return await emit(this, event, args, null);\n    }\n\n    /**\n     *  Resolves to the number of listeners of %%event%% or the total number\n     *  of listeners if unspecified.\n     */\n    async listenerCount(event?: ContractEventName): Promise<number> {\n        if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) { return 0; }\n            return sub.listeners.length;\n        }\n\n        const { subs } = getInternal(this);\n\n        let total = 0;\n        for (const { listeners } of subs.values()) {\n            total += listeners.length;\n        }\n        return total;\n    }\n\n    /**\n     *  Resolves to the listeners subscribed to %%event%% or all listeners\n     *  if unspecified.\n     */\n    async listeners(event?: ContractEventName): Promise<Array<Listener>> {\n        if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) { return [ ]; }\n            return sub.listeners.map(({ listener }) => listener);\n        }\n\n        const { subs } = getInternal(this);\n\n        let result: Array<Listener> = [ ];\n        for (const { listeners } of subs.values()) {\n            result = result.concat(listeners.map(({ listener }) => listener));\n        }\n        return result;\n    }\n\n    /**\n     *  Remove the %%listener%% from the listeners for %%event%% or remove\n     *  all listeners if unspecified.\n     */\n    async off(event: ContractEventName, listener?: Listener): Promise<this> {\n        const sub = await hasSub(this, event);\n        if (!sub) { return this; }\n\n        if (listener) {\n            const index = sub.listeners.map(({ listener }) => listener).indexOf(listener);\n            if (index >= 0) { sub.listeners.splice(index, 1); }\n        }\n\n        if (listener == null || sub.listeners.length === 0) {\n            sub.stop();\n            getInternal(this).subs.delete(sub.tag);\n        }\n\n        return this;\n    }\n\n    /**\n     *  Remove all the listeners for %%event%% or remove all listeners if\n     *  unspecified.\n     */\n    async removeAllListeners(event?: ContractEventName): Promise<this> {\n        if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) { return this; }\n            sub.stop();\n            getInternal(this).subs.delete(sub.tag);\n        } else {\n            const { subs } = getInternal(this);\n            for (const { tag, stop } of subs.values()) {\n                stop();\n                subs.delete(tag);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     *  Alias for [on].\n     */\n    async addListener(event: ContractEventName, listener: Listener): Promise<this> {\n        return await this.on(event, listener);\n    }\n\n    /**\n     *  Alias for [off].\n     */\n    async removeListener(event: ContractEventName, listener: Listener): Promise<this> {\n        return await this.off(event, listener);\n    }\n\n    /**\n     *  Create a new Class for the %%abi%%.\n     */\n    static buildClass<T = ContractInterface>(abi: Interface | InterfaceAbi): new (target: string, runner?: null | ContractRunner) => BaseContract & Omit<T, keyof BaseContract> {\n        class CustomContract extends BaseContract {\n            constructor(address: string, runner: null | ContractRunner = null) {\n                super(address, abi, runner);\n            }\n        }\n        return CustomContract as any;\n    };\n\n    /**\n     *  Create a new BaseContract with a specified Interface.\n     */\n    static from<T = ContractInterface>(target: string, abi: Interface | InterfaceAbi, runner?: null | ContractRunner): BaseContract & Omit<T, keyof BaseContract> {\n        if (runner == null) { runner = null; }\n        const contract = new this(target, abi, runner );\n        return contract as any;\n    }\n}\n\nfunction _ContractBase(): new (target: string | Addressable, abi: Interface | InterfaceAbi, runner?: null | ContractRunner) => BaseContract & Omit<ContractInterface, keyof BaseContract> {\n    return BaseContract as any;\n}\n\n/**\n *  A [[BaseContract]] with no type guards on its methods or events.\n */\nexport class Contract extends _ContractBase() { }\n", "/**\n *  ENS is a service which allows easy-to-remember names to map to\n *  network addresses.\n *\n *  @_section: api/providers/ens-resolver:ENS Resolver  [about-ens-rsolver]\n */\n\nimport { getAddress } from \"../address/index.js\";\nimport { ZeroAddress } from \"../constants/index.js\";\nimport { Contract } from \"../contract/index.js\";\nimport { dnsEncode, namehash } from \"../hash/index.js\";\nimport {\n    hexlify, isHexString, toBeHex,\n    defineProperties, encodeBase58,\n    assert, assertArgument, isError,\n    FetchRequest\n} from \"../utils/index.js\";\n\nimport type { FunctionFragment } from \"../abi/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\nimport type { AbstractProvider, AbstractProviderPlugin } from \"./abstract-provider.js\";\nimport type { EnsPlugin } from \"./plugins-network.js\";\nimport type { Provider } from \"./provider.js\";\n\n// @TODO: This should use the fetch-data:ipfs gateway\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link: string): string {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    } else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    } else {\n        assertArgument(false, \"unsupported IPFS format\", \"link\", link);\n    }\n\n    return `https:/\\/gateway.ipfs.io/ipfs/${ link }`;\n}\n\n/**\n *  The type of data found during a steip during avatar resolution.\n */\nexport type AvatarLinkageType = \"name\" | \"avatar\" | \"!avatar\" | \"url\" | \"data\" | \"ipfs\" |\n    \"erc721\" | \"erc1155\" | \"!erc721-caip\" | \"!erc1155-caip\" |\n    \"!owner\" | \"owner\" | \"!balance\" | \"balance\" |\n    \"metadata-url-base\" | \"metadata-url-expanded\" | \"metadata-url\" | \"!metadata-url\" |\n    \"!metadata\" | \"metadata\" |\n    \"!imageUrl\" | \"imageUrl-ipfs\" | \"imageUrl\" | \"!imageUrl-ipfs\";\n\n/**\n *  An individual record for each step during avatar resolution.\n */\nexport interface AvatarLinkage {\n    /**\n     *  The type of linkage.\n     */\n    type: AvatarLinkageType;\n\n    /**\n     *  The linkage value.\n     */\n    value: string;\n};\n\n/**\n *  When resolving an avatar for an ENS name, there are many\n *  steps involved, fetching metadata, validating results, et cetera.\n *\n *  Some applications may wish to analyse this data, or use this data\n *  to diagnose promblems, so an **AvatarResult** provides details of\n *  each completed step during avatar resolution.\n */\nexport interface AvatarResult {\n    /**\n     *  How the [[url]] was arrived at, resolving the many steps required\n     *  for an avatar URL.\n     */\n    linkage: Array<AvatarLinkage>;\n\n    /**\n     *  The avatar URL or null if the avatar was not set, or there was\n     *  an issue during validation (such as the address not owning the\n     *  avatar or a metadata error).\n     */\n    url: null | string;\n};\n\n/**\n *  A provider plugin super-class for processing multicoin address types.\n */\nexport abstract class MulticoinProviderPlugin implements AbstractProviderPlugin {\n    /**\n     *  The name.\n     */\n    readonly name!: string;\n\n    /**\n     *  Creates a new **MulticoinProviderPluing** for %%name%%.\n     */\n    constructor(name: string) {\n        defineProperties<MulticoinProviderPlugin>(this, { name });\n    }\n\n    connect(proivder: Provider): MulticoinProviderPlugin {\n        return this;\n    }\n\n    /**\n     *  Returns ``true`` if %%coinType%% is supported by this plugin.\n     */\n    supportsCoinType(coinType: number): boolean {\n        return false;\n    }\n\n    /**\n     *  Resolves to the encoded %%address%% for %%coinType%%.\n     */\n    async encodeAddress(coinType: number, address: string): Promise<string> {\n        throw new Error(\"unsupported coin\");\n    }\n\n    /**\n     *  Resolves to the decoded %%data%% for %%coinType%%.\n     */\n    async decodeAddress(coinType: number, data: BytesLike): Promise<string> {\n        throw new Error(\"unsupported coin\");\n    }\n}\n\nconst BasicMulticoinPluginId = \"org.ethers.plugins.provider.BasicMulticoin\";\n\n/**\n *  A **BasicMulticoinProviderPlugin** provides service for common\n *  coin types, which do not require additional libraries to encode or\n *  decode.\n */\nexport class BasicMulticoinProviderPlugin extends MulticoinProviderPlugin {\n    /**\n     *  Creates a new **BasicMulticoinProviderPlugin**.\n     */\n    constructor() {\n        super(BasicMulticoinPluginId);\n    }\n}\n\nconst matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\n\n/**\n *  A connected object to a resolved ENS name resolver, which can be\n *  used to query additional details.\n */\nexport class EnsResolver {\n    /**\n     *  The connected provider.\n     */\n    provider!: AbstractProvider;\n\n    /**\n     *  The address of the resolver.\n     */\n    address!: string;\n\n    /**\n     *  The name this resolver was resolved against.\n     */\n    name!: string;\n\n    // For EIP-2544 names, the ancestor that provided the resolver\n    #supports2544: null | Promise<boolean>;\n\n    #resolver: Contract;\n\n    constructor(provider: AbstractProvider, address: string, name: string) {\n        defineProperties<EnsResolver>(this, { provider, address, name });\n        this.#supports2544 = null;\n\n        this.#resolver = new Contract(address, [\n            \"function supportsInterface(bytes4) view returns (bool)\",\n            \"function resolve(bytes, bytes) view returns (bytes)\",\n            \"function addr(bytes32) view returns (address)\",\n            \"function addr(bytes32, uint) view returns (bytes)\",\n            \"function text(bytes32, string) view returns (string)\",\n            \"function contenthash(bytes32) view returns (bytes)\",\n        ], provider);\n\n    }\n\n    /**\n     *  Resolves to true if the resolver supports wildcard resolution.\n     */\n    async supportsWildcard(): Promise<boolean> {\n        if (this.#supports2544 == null) {\n            this.#supports2544 = (async () => {\n                try {\n                    return await this.#resolver.supportsInterface(\"0x9061b923\");\n                } catch (error) {\n                    // Wildcard resolvers must understand supportsInterface\n                    // and return true.\n                    if (isError(error, \"CALL_EXCEPTION\")) { return false; }\n\n                    // Let future attempts try again...\n                    this.#supports2544 = null;\n\n                    throw error;\n                }\n            })();\n        }\n\n        return await this.#supports2544;\n    }\n\n    async #fetch(funcName: string, params?: Array<any>): Promise<null | any> {\n        params = (params || []).slice();\n        const iface = this.#resolver.interface;\n\n        // The first parameters is always the nodehash\n        params.unshift(namehash(this.name))\n\n        let fragment: null | FunctionFragment = null;\n        if (await this.supportsWildcard()) {\n            fragment = iface.getFunction(funcName);\n            assert(fragment, \"missing fragment\", \"UNKNOWN_ERROR\", {\n                info: { funcName }\n            });\n\n            params = [\n                dnsEncode(this.name, 255),\n                iface.encodeFunctionData(fragment, params)\n            ];\n\n            funcName = \"resolve(bytes,bytes)\";\n        }\n\n        params.push({\n            enableCcipRead: true\n        });\n\n        try {\n            const result = await this.#resolver[funcName](...params);\n\n            if (fragment) {\n                return iface.decodeFunctionResult(fragment, result)[0];\n            }\n\n            return result;\n        } catch (error: any) {\n            if (!isError(error, \"CALL_EXCEPTION\")) { throw error; }\n        }\n\n        return null;\n    }\n\n    /**\n     *  Resolves to the address for %%coinType%% or null if the\n     *  provided %%coinType%% has not been configured.\n     */\n    async getAddress(coinType?: number): Promise<null | string> {\n        if (coinType == null) { coinType = 60; }\n        if (coinType === 60) {\n            try {\n                const result = await this.#fetch(\"addr(bytes32)\");\n\n                // No address\n                if (result == null || result === ZeroAddress) { return null; }\n\n                return result;\n            } catch (error: any) {\n                if (isError(error, \"CALL_EXCEPTION\")) { return null; }\n                throw error;\n            }\n        }\n\n        // Try decoding its EVM canonical chain as an EVM chain address first\n        if (coinType >= 0 && coinType < 0x80000000) {\n            let ethCoinType = coinType + 0x80000000;\n\n            const data = await this.#fetch(\"addr(bytes32,uint)\", [ ethCoinType ]);\n            if (isHexString(data, 20)) { return getAddress(data); }\n        }\n\n        let coinPlugin: null | MulticoinProviderPlugin = null;\n        for (const plugin of this.provider.plugins) {\n            if (!(plugin instanceof MulticoinProviderPlugin)) { continue; }\n            if (plugin.supportsCoinType(coinType)) {\n                coinPlugin = plugin;\n                break;\n            }\n        }\n\n        if (coinPlugin == null) { return null; }\n\n        // keccak256(\"addr(bytes32,uint256\")\n        const data = await this.#fetch(\"addr(bytes32,uint)\", [ coinType ]);\n\n        // No address\n        if (data == null || data === \"0x\") { return null; }\n\n        // Compute the address\n        const address = await coinPlugin.decodeAddress(coinType, data);\n\n        if (address != null) { return address; }\n\n        assert(false, `invalid coin data`, \"UNSUPPORTED_OPERATION\", {\n            operation: `getAddress(${ coinType })`,\n            info: { coinType, data }\n        });\n    }\n\n    /**\n     *  Resolves to the EIP-634 text record for %%key%%, or ``null``\n     *  if unconfigured.\n     */\n    async getText(key: string): Promise<null | string> {\n        const data = await this.#fetch(\"text(bytes32,string)\", [ key ]);\n        if (data == null || data === \"0x\") { return null; }\n        return data;\n    }\n\n    /**\n     *  Rsolves to the content-hash or ``null`` if unconfigured.\n     */\n    async getContentHash(): Promise<null | string> {\n        // keccak256(\"contenthash()\")\n        const data = await this.#fetch(\"contenthash(bytes32)\");\n\n        // No contenthash\n        if (data == null || data === \"0x\") { return null; }\n\n        // IPFS (CID: 1, Type: 70=DAG-PB, 72=libp2p-key)\n        const ipfs = data.match(/^0x(e3010170|e5010172)(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipfs) {\n            const scheme = (ipfs[1] === \"e3010170\") ? \"ipfs\": \"ipns\";\n            const length = parseInt(ipfs[4], 16);\n            if (ipfs[5].length === length * 2) {\n                return `${ scheme }:/\\/${ encodeBase58(\"0x\" + ipfs[2])}`;\n            }\n        }\n\n        // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n        const swarm = data.match(/^0xe40101fa011b20([0-9a-f]*)$/)\n        if (swarm && swarm[1].length === 64) {\n            return `bzz:/\\/${ swarm[1] }`;\n        }\n\n        assert(false, `invalid or unsupported content hash data`, \"UNSUPPORTED_OPERATION\", {\n            operation: \"getContentHash()\",\n            info: { data }\n        });\n    }\n\n    /**\n     *  Resolves to the avatar url or ``null`` if the avatar is either\n     *  unconfigured or incorrectly configured (e.g. references an NFT\n     *  not owned by the address).\n     *\n     *  If diagnosing issues with configurations, the [[_getAvatar]]\n     *  method may be useful.\n     */\n    async getAvatar(): Promise<null | string> {\n        const avatar = await this._getAvatar();\n        return avatar.url;\n    }\n\n    /**\n     *  When resolving an avatar, there are many steps involved, such\n     *  fetching metadata and possibly validating ownership of an\n     *  NFT.\n     *\n     *  This method can be used to examine each step and the value it\n     *  was working from.\n     */\n    async _getAvatar(): Promise<AvatarResult> {\n        const linkage: Array<AvatarLinkage> = [ { type: \"name\", value: this.name } ];\n        try {\n            // test data for ricmoo.eth\n            //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n            const avatar = await this.getText(\"avatar\");\n            if (avatar == null) {\n                linkage.push({ type: \"!avatar\", value: \"\" });\n                return { url: null, linkage };\n            }\n            linkage.push({ type: \"avatar\", value: avatar });\n\n            for (let i = 0; i < matchers.length; i++) {\n                const match = avatar.match(matchers[i]);\n                if (match == null) { continue; }\n\n                const scheme = match[1].toLowerCase();\n\n                switch (scheme) {\n                    case \"https\":\n                    case \"data\":\n                        linkage.push({ type: \"url\", value: avatar });\n                        return { linkage, url: avatar };\n                    case \"ipfs\": {\n                        const url = getIpfsLink(avatar);\n                        linkage.push({ type: \"ipfs\", value: avatar });\n                        linkage.push({ type: \"url\", value: url });\n                        return { linkage, url };\n                    }\n\n                    case \"erc721\":\n                    case \"erc1155\": {\n                        // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                        const selector = (scheme === \"erc721\") ? \"tokenURI(uint256)\": \"uri(uint256)\";\n                        linkage.push({ type: scheme, value: avatar });\n\n                        // The owner of this name\n                        const owner = await this.getAddress();\n                        if (owner == null) {\n                            linkage.push({ type: \"!owner\", value: \"\" });\n                            return { url: null, linkage };\n                        }\n\n                        const comps = (match[2] || \"\").split(\"/\");\n                        if (comps.length !== 2) {\n                            linkage.push({ type: <any>`!${ scheme }caip`, value: (match[2] || \"\") });\n                            return { url: null, linkage };\n                        }\n\n                        const tokenId = comps[1];\n\n                        const contract = new Contract(comps[0], [\n                            // ERC-721\n                            \"function tokenURI(uint) view returns (string)\",\n                            \"function ownerOf(uint) view returns (address)\",\n\n                            // ERC-1155\n                            \"function uri(uint) view returns (string)\",\n                            \"function balanceOf(address, uint256) view returns (uint)\"\n                        ], this.provider);\n\n                        // Check that this account owns the token\n                        if (scheme === \"erc721\") {\n                            const tokenOwner = await contract.ownerOf(tokenId);\n\n                            if (owner !== tokenOwner) {\n                                linkage.push({ type: \"!owner\", value: tokenOwner });\n                                return { url: null, linkage };\n                            }\n                            linkage.push({ type: \"owner\", value: tokenOwner });\n\n                        } else if (scheme === \"erc1155\") {\n                            const balance = await contract.balanceOf(owner, tokenId);\n                            if (!balance) {\n                                linkage.push({ type: \"!balance\", value: \"0\" });\n                                return { url: null, linkage };\n                            }\n                            linkage.push({ type: \"balance\", value: balance.toString() });\n                        }\n\n                        // Call the token contract for the metadata URL\n                        let metadataUrl = await contract[selector](tokenId);\n                        if (metadataUrl == null || metadataUrl === \"0x\") {\n                            linkage.push({ type: \"!metadata-url\", value: \"\" });\n                            return { url: null, linkage };\n                        }\n\n                        linkage.push({ type: \"metadata-url-base\", value: metadataUrl });\n\n                        // ERC-1155 allows a generic {id} in the URL\n                        if (scheme === \"erc1155\") {\n                            metadataUrl = metadataUrl.replace(\"{id}\", toBeHex(tokenId, 32).substring(2));\n                            linkage.push({ type: \"metadata-url-expanded\", value: metadataUrl });\n                        }\n\n                        // Transform IPFS metadata links\n                        if (metadataUrl.match(/^ipfs:/i)) {\n                            metadataUrl = getIpfsLink(metadataUrl);\n                        }\n                        linkage.push({ type: \"metadata-url\", value: metadataUrl });\n\n                        // Get the token metadata\n                        let metadata: any = { };\n                        const response = await (new FetchRequest(metadataUrl)).send();\n                        response.assertOk();\n\n                        try {\n                            metadata = response.bodyJson;\n                        } catch (error) {\n                            try {\n                                linkage.push({ type: \"!metadata\", value: response.bodyText });\n                            } catch (error) {\n                                const bytes = response.body;\n                                if (bytes) {\n                                    linkage.push({ type: \"!metadata\", value: hexlify(bytes) });\n                                }\n                                return { url: null, linkage };\n                            }\n                            return { url: null, linkage };\n                        }\n\n                        if (!metadata) {\n                            linkage.push({ type: \"!metadata\", value: \"\" });\n                            return { url: null, linkage };\n                        }\n\n                        linkage.push({ type: \"metadata\", value: JSON.stringify(metadata) });\n\n                        // Pull the image URL out\n                        let imageUrl = metadata.image;\n                        if (typeof(imageUrl) !== \"string\") {\n                            linkage.push({ type: \"!imageUrl\", value: \"\" });\n                            return { url: null, linkage };\n                        }\n\n                        if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                            // Allow\n                        } else {\n                            // Transform IPFS link to gateway\n                            const ipfs = imageUrl.match(matcherIpfs);\n                            if (ipfs == null) {\n                                linkage.push({ type: \"!imageUrl-ipfs\", value: imageUrl });\n                                return { url: null, linkage };\n                            }\n\n                            linkage.push({ type: \"imageUrl-ipfs\", value: imageUrl });\n                            imageUrl = getIpfsLink(imageUrl);\n                        }\n\n                        linkage.push({ type: \"url\", value: imageUrl });\n\n                        return { linkage, url: imageUrl };\n                    }\n                }\n            }\n        } catch (error) { }\n\n        return { linkage, url: null };\n    }\n\n    static async getEnsAddress(provider: Provider): Promise<string> {\n        const network = await provider.getNetwork();\n\n        const ensPlugin = network.getPlugin<EnsPlugin>(\"org.ethers.plugins.network.Ens\");\n\n        // No ENS...\n        assert(ensPlugin, \"network does not support ENS\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"getEnsAddress\", info: { network } });\n\n        return ensPlugin.address;\n    }\n\n    static async #getResolver(provider: Provider, name: string): Promise<null | string> {\n        const ensAddr = await EnsResolver.getEnsAddress(provider);\n\n        try {\n            const contract = new Contract(ensAddr, [\n                \"function resolver(bytes32) view returns (address)\"\n            ], provider);\n\n            const addr = await contract.resolver(namehash(name), {\n                enableCcipRead: true\n            });\n\n            if (addr === ZeroAddress) { return null; }\n            return addr;\n\n        } catch (error) {\n            // ENS registry cannot throw errors on resolver(bytes32),\n            // so probably a link error\n            throw error;\n        }\n\n        return null;\n    }\n\n    /**\n     *  Resolve to the ENS resolver for %%name%% using %%provider%% or\n     *  ``null`` if unconfigured.\n     */\n    static async fromName(provider: AbstractProvider, name: string): Promise<null | EnsResolver> {\n\n        let currentName = name;\n        while (true) {\n            if (currentName === \"\" || currentName === \".\") { return null; }\n\n            // Optimization since the eth node cannot change and does\n            // not have a wildcard resolver\n            if (name !== \"eth\" && currentName === \"eth\") { return null; }\n\n            // Check the current node for a resolver\n            const addr = await EnsResolver.#getResolver(provider, currentName);\n\n            // Found a resolver!\n            if (addr != null) {\n                const resolver = new EnsResolver(provider, addr, name);\n\n                // Legacy resolver found, using EIP-2544 so it isn't safe to use\n                if (currentName !== name && !(await resolver.supportsWildcard())) { return null; }\n\n                return resolver;\n            }\n\n            // Get the parent node\n            currentName = currentName.split(\".\").slice(1).join(\".\");\n        }\n    }\n}\n", "/**\n *  @_ignore\n */\nimport { getAddress, getCreateAddress } from \"../address/index.js\";\nimport { Signature } from \"../crypto/index.js\"\nimport { accessListify } from \"../transaction/index.js\";\nimport {\n    getBigInt, getNumber, hexlify, isHexString, zeroPadValue,\n    assert, assertArgument\n} from \"../utils/index.js\";\n\nimport type {\n    BlockParams, LogParams,\n    TransactionReceiptParams, TransactionResponseParams,\n} from \"./formatting.js\";\n\n\nconst BN_0 = BigInt(0);\n\nexport type FormatFunc = (value: any) => any;\n\nexport function allowNull(format: FormatFunc, nullValue?: any): FormatFunc {\n    return (function(value: any) {\n        if (value == null) { return nullValue; }\n        return format(value);\n    });\n}\n\nexport function arrayOf(format: FormatFunc, allowNull?: boolean): FormatFunc {\n    return ((array: any) => {\n        if (allowNull && array == null) { return null; }\n        if (!Array.isArray(array)) { throw new Error(\"not an array\"); }\n        return array.map((i) => format(i));\n    });\n}\n\n// Requires an object which matches a fleet of other formatters\n// Any FormatFunc may return `undefined` to have the value omitted\n// from the result object. Calls preserve `this`.\nexport function object(format: Record<string, FormatFunc>, altNames?: Record<string, Array<string>>): FormatFunc {\n    return ((value: any) => {\n        const result: any = { };\n        for (const key in format) {\n            let srcKey = key;\n            if (altNames && key in altNames && !(srcKey in value)) {\n                for (const altKey of altNames[key]) {\n                    if (altKey in value) {\n                        srcKey = altKey;\n                        break;\n                    }\n                }\n            }\n\n            try {\n                const nv = format[key](value[srcKey]);\n                if (nv !== undefined) { result[key] = nv; }\n            } catch (error) {\n                const message = (error instanceof Error) ? error.message: \"not-an-error\";\n                assert(false, `invalid value for value.${ key } (${ message })`, \"BAD_DATA\", { value })\n            }\n        }\n        return result;\n    });\n}\n\nexport function formatBoolean(value: any): boolean {\n    switch (value) {\n        case true: case \"true\":\n            return true;\n        case false: case \"false\":\n            return false;\n    }\n    assertArgument(false, `invalid boolean; ${ JSON.stringify(value) }`, \"value\", value);\n}\n\nexport function formatData(value: string): string {\n    assertArgument(isHexString(value, true), \"invalid data\", \"value\", value);\n    return value;\n}\n\nexport function formatHash(value: any): string {\n    assertArgument(isHexString(value, 32), \"invalid hash\", \"value\", value);\n    return value;\n}\n\nexport function formatUint256(value: any): string {\n    if (!isHexString(value)) {\n        throw new Error(\"invalid uint256\");\n    }\n    return zeroPadValue(value, 32);\n}\n\nconst _formatLog = object({\n    address: getAddress,\n    blockHash: formatHash,\n    blockNumber: getNumber,\n    data: formatData,\n    index: getNumber,\n    removed: allowNull(formatBoolean, false),\n    topics: arrayOf(formatHash),\n    transactionHash: formatHash,\n    transactionIndex: getNumber,\n}, {\n    index: [ \"logIndex\" ]\n});\n\nexport function formatLog(value: any): LogParams {\n    return _formatLog(value);\n}\n\nconst _formatBlock = object({\n    hash: allowNull(formatHash),\n    parentHash: formatHash,\n    parentBeaconBlockRoot: allowNull(formatHash, null),\n\n    number: getNumber,\n\n    timestamp: getNumber,\n    nonce: allowNull(formatData),\n    difficulty: getBigInt,\n\n    gasLimit: getBigInt,\n    gasUsed: getBigInt,\n\n    stateRoot: allowNull(formatHash, null),\n    receiptsRoot: allowNull(formatHash, null),\n\n    blobGasUsed: allowNull(getBigInt, null),\n    excessBlobGas: allowNull(getBigInt, null),\n\n    miner: allowNull(getAddress),\n    prevRandao: allowNull(formatHash, null),\n    extraData: formatData,\n\n    baseFeePerGas: allowNull(getBigInt)\n}, {\n    prevRandao: [ \"mixHash\" ]\n});\n\nexport function formatBlock(value: any): BlockParams {\n    const result = _formatBlock(value);\n    result.transactions = value.transactions.map((tx: string | TransactionResponseParams) => {\n        if (typeof(tx) === \"string\") { return tx; }\n        return formatTransactionResponse(tx);\n    });\n    return result;\n}\n\nconst _formatReceiptLog = object({\n    transactionIndex: getNumber,\n    blockNumber: getNumber,\n    transactionHash: formatHash,\n    address: getAddress,\n    topics: arrayOf(formatHash),\n    data: formatData,\n    index: getNumber,\n    blockHash: formatHash,\n}, {\n    index: [ \"logIndex\" ]\n});\n\nexport function formatReceiptLog(value: any): LogParams {\n    return _formatReceiptLog(value);\n}\n\nconst _formatTransactionReceipt = object({\n    to: allowNull(getAddress, null),\n    from: allowNull(getAddress, null),\n    contractAddress: allowNull(getAddress, null),\n    // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n    index: getNumber,\n    root: allowNull(hexlify),\n    gasUsed: getBigInt,\n    blobGasUsed: allowNull(getBigInt, null),\n    logsBloom: allowNull(formatData),\n    blockHash: formatHash,\n    hash: formatHash,\n    logs: arrayOf(formatReceiptLog),\n    blockNumber: getNumber,\n    //confirmations: allowNull(getNumber, null),\n    cumulativeGasUsed: getBigInt,\n    effectiveGasPrice: allowNull(getBigInt),\n    blobGasPrice: allowNull(getBigInt, null),\n    status: allowNull(getNumber),\n    type: allowNull(getNumber, 0)\n}, {\n    effectiveGasPrice: [ \"gasPrice\" ],\n    hash: [ \"transactionHash\" ],\n    index: [ \"transactionIndex\" ],\n});\n\nexport function formatTransactionReceipt(value: any): TransactionReceiptParams {\n    return _formatTransactionReceipt(value);\n}\n\nexport function formatTransactionResponse(value: any): TransactionResponseParams {\n\n    // Some clients (TestRPC) do strange things like return 0x0 for the\n    // 0 address; correct this to be a real address\n    if (value.to && getBigInt(value.to) === BN_0) {\n        value.to = \"0x0000000000000000000000000000000000000000\";\n    }\n\n    const result = object({\n        hash: formatHash,\n\n        // Some nodes do not return this, usually test nodes (like Ganache)\n        index: allowNull(getNumber, undefined),\n\n        type: (value: any) => {\n            if (value === \"0x\" || value == null) { return 0; }\n            return getNumber(value);\n        },\n        accessList: allowNull(accessListify, null),\n        blobVersionedHashes: allowNull(arrayOf(formatHash, true), null),\n\n        blockHash: allowNull(formatHash, null),\n        blockNumber: allowNull(getNumber, null),\n        transactionIndex: allowNull(getNumber, null),\n\n        from: getAddress,\n\n        // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas) must be set\n        gasPrice: allowNull(getBigInt),\n        maxPriorityFeePerGas: allowNull(getBigInt),\n        maxFeePerGas: allowNull(getBigInt),\n        maxFeePerBlobGas: allowNull(getBigInt, null),\n\n        gasLimit: getBigInt,\n        to: allowNull(getAddress, null),\n        value: getBigInt,\n        nonce: getNumber,\n        data: formatData,\n\n        creates: allowNull(getAddress, null),\n\n        chainId: allowNull(getBigInt, null)\n    }, {\n        data: [ \"input\" ],\n        gasLimit: [ \"gas\" ],\n        index: [ \"transactionIndex\" ]\n    })(value);\n\n    // If to and creates are empty, populate the creates from the value\n    if (result.to == null && result.creates == null) {\n        result.creates = getCreateAddress(result);\n    }\n\n    // @TODO: Check fee data\n\n    // Add an access list to supported transaction types\n    if ((value.type === 1 || value.type === 2) && value.accessList == null) {\n        result.accessList = [ ];\n    }\n\n    // Compute the signature\n    if (value.signature) {\n        result.signature = Signature.from(value.signature);\n    } else {\n        result.signature = Signature.from(value);\n    }\n\n    // Some backends omit ChainId on legacy transactions, but we can compute it\n    if (result.chainId == null) {\n        const chainId = result.signature.legacyChainId;\n        if (chainId != null) { result.chainId = chainId; }\n    }\n\n\n    // @TODO: check chainID\n    /*\n    if (value.chainId != null) {\n        let chainId = value.chainId;\n\n        if (isHexString(chainId)) {\n            chainId = BigNumber.from(chainId).toNumber();\n        }\n\n        result.chainId = chainId;\n\n    } else {\n        let chainId = value.networkId;\n\n        // geth-etc returns chainId\n        if (chainId == null && result.v == null) {\n            chainId = value.chainId;\n        }\n\n        if (isHexString(chainId)) {\n            chainId = BigNumber.from(chainId).toNumber();\n        }\n\n        if (typeof(chainId) !== \"number\" && result.v != null) {\n            chainId = (result.v - 35) / 2;\n            if (chainId < 0) { chainId = 0; }\n            chainId = parseInt(chainId);\n        }\n\n        if (typeof(chainId) !== \"number\") { chainId = 0; }\n\n        result.chainId = chainId;\n    }\n    */\n\n    // 0x0000... should actually be null\n    if (result.blockHash && getBigInt(result.blockHash) === BN_0) {\n        result.blockHash = null;\n    }\n\n    return result;\n}\n", "/**\n *  The available providers should suffice for most developers purposes,\n *  but the [[AbstractProvider]] class has many features which enable\n *  sub-classing it for specific purposes.\n *\n *  @_section: api/providers/abstract-provider: Subclassing Provider  [abstract-provider]\n */\n\n// @TODO\n// Event coalescence\n//   When we register an event with an async value (e.g. address is a Signer\n//   or ENS name), we need to add it immeidately for the Event API, but also\n//   need time to resolve the address. Upon resolving the address, we need to\n//   migrate the listener to the static event. We also need to maintain a map\n//   of Signer/ENS name to address so we can sync respond to listenerCount.\n\nimport { getAddress, resolveAddress } from \"../address/index.js\";\nimport { ZeroAddress } from \"../constants/index.js\";\nimport { Contract } from \"../contract/index.js\";\nimport { namehash } from \"../hash/index.js\";\nimport { Transaction } from \"../transaction/index.js\";\nimport {\n    concat, dataLength, dataSlice, hexlify, isHexString,\n    getBigInt, getBytes, getNumber,\n    isCallException, isError, makeError, assert, assertArgument,\n    FetchRequest,\n    toBeArray, toQuantity,\n    defineProperties, EventPayload, resolveProperties,\n    toUtf8String\n} from \"../utils/index.js\";\n\nimport { EnsResolver } from \"./ens-resolver.js\";\nimport {\n    formatBlock, formatLog, formatTransactionReceipt, formatTransactionResponse\n} from \"./format.js\";\nimport { Network } from \"./network.js\";\nimport { copyRequest, Block, FeeData, Log, TransactionReceipt, TransactionResponse } from \"./provider.js\";\nimport {\n    PollingBlockSubscriber, PollingBlockTagSubscriber, PollingEventSubscriber,\n    PollingOrphanSubscriber, PollingTransactionSubscriber\n} from \"./subscriber-polling.js\";\n\nimport type { Addressable, AddressLike } from \"../address/index.js\";\nimport type { BigNumberish, BytesLike } from \"../utils/index.js\";\nimport type { FetchResponse, Listener } from \"../utils/index.js\";\n\nimport type { Networkish } from \"./network.js\";\nimport type { FetchUrlFeeDataNetworkPlugin } from \"./plugins-network.js\";\n//import type { MaxPriorityFeePlugin } from \"./plugins-network.js\";\nimport type {\n    BlockParams, LogParams, TransactionReceiptParams,\n    TransactionResponseParams\n} from \"./formatting.js\";\n\nimport type {\n    BlockTag, EventFilter, Filter, FilterByBlockHash, OrphanFilter,\n    PreparedTransactionRequest, Provider, ProviderEvent,\n    TransactionRequest\n} from \"./provider.js\";\n\ntype Timer = ReturnType<typeof setTimeout>;\n\n\n// Constants\nconst BN_2 = BigInt(2);\n\nconst MAX_CCIP_REDIRECTS = 10;\n\nfunction isPromise<T = any>(value: any): value is Promise<T> {\n    return (value && typeof(value.then) === \"function\");\n}\n\nfunction getTag(prefix: string, value: any): string {\n    return prefix + \":\" + JSON.stringify(value, (k, v) => {\n        if (v == null) { return \"null\"; }\n        if (typeof(v) === \"bigint\") { return `bigint:${ v.toString() }`}\n        if (typeof(v) === \"string\") { return v.toLowerCase(); }\n\n        // Sort object keys\n        if (typeof(v) === \"object\" && !Array.isArray(v)) {\n            const keys = Object.keys(v);\n            keys.sort();\n            return keys.reduce((accum, key) => {\n                accum[key] = v[key];\n                return accum;\n            }, <any>{ });\n        }\n\n        return v;\n    });\n}\n\n/**\n *  The types of additional event values that can be emitted for the\n *  ``\"debug\"`` event.\n */\nexport type DebugEventAbstractProvider = {\n    action: \"sendCcipReadFetchRequest\",\n    request: FetchRequest\n    index: number\n    urls: Array<string>\n} | {\n    action: \"receiveCcipReadFetchResult\",\n    request: FetchRequest,\n    result: any\n} | {\n    action: \"receiveCcipReadFetchError\",\n    request: FetchRequest,\n    result: any\n} | {\n    action: \"sendCcipReadCall\",\n    transaction: { to: string, data: string }\n} | {\n    action: \"receiveCcipReadCallResult\",\n    transaction: { to: string, data: string }\n    result: string\n} | {\n    action: \"receiveCcipReadCallError\",\n    transaction: { to: string, data: string }\n    error: Error\n};\n\n\n/**\n *  The value passed to the [[AbstractProvider-_getSubscriber]] method.\n *\n *  Only developers sub-classing [[AbstractProvider[[ will care about this,\n *  if they are modifying a low-level feature of how subscriptions operate.\n */\nexport type Subscription = {\n    type: \"block\" | \"close\" | \"debug\" | \"error\" | \"finalized\" | \"network\" | \"pending\" | \"safe\",\n    tag: string\n} | {\n    type: \"transaction\",\n    tag: string,\n    hash: string\n} | {\n    type: \"event\",\n    tag: string,\n    filter: EventFilter\n} | {\n    type: \"orphan\",\n    tag: string,\n    filter: OrphanFilter\n};\n\n/**\n *  A **Subscriber** manages a subscription.\n *\n *  Only developers sub-classing [[AbstractProvider[[ will care about this,\n *  if they are modifying a low-level feature of how subscriptions operate.\n */\nexport interface Subscriber {\n    /**\n     *  Called initially when a subscriber is added the first time.\n     */\n    start(): void;\n\n    /**\n     *  Called when there are no more subscribers to the event.\n     */\n    stop(): void;\n\n    /**\n     *  Called when the subscription should pause.\n     *\n     *  If %%dropWhilePaused%%, events that occur while paused should not\n     *  be emitted [[resume]].\n     */\n    pause(dropWhilePaused?: boolean): void;\n\n    /**\n     *  Resume a paused subscriber.\n     */\n    resume(): void;\n\n    /**\n     *  The frequency (in ms) to poll for events, if polling is used by\n     *  the subscriber.\n     *\n     *  For non-polling subscribers, this must return ``undefined``.\n     */\n    pollingInterval?: number;\n}\n\n/**\n *  An **UnmanagedSubscriber** is useful for events which do not require\n *  any additional management, such as ``\"debug\"`` which only requires\n *  emit in synchronous event loop triggered calls.\n */\nexport class UnmanagedSubscriber implements Subscriber {\n    /**\n     *  The name fof the event.\n     */\n    name!: string;\n\n    /**\n     *  Create a new UnmanagedSubscriber with %%name%%.\n     */\n    constructor(name: string) { defineProperties<UnmanagedSubscriber>(this, { name }); }\n\n    start(): void { }\n    stop(): void { }\n\n    pause(dropWhilePaused?: boolean): void { }\n    resume(): void { }\n}\n\ntype Sub = {\n    tag: string;\n    nameMap: Map<string, string>\n    addressableMap: WeakMap<Addressable, string>;\n    listeners: Array<{ listener: Listener, once: boolean }>;\n    // @TODO: get rid of this, as it is (and has to be)\n    // tracked in subscriber\n    started: boolean;\n    subscriber: Subscriber;\n};\n\nfunction copy<T = any>(value: T): T {\n    return JSON.parse(JSON.stringify(value));\n}\n\nfunction concisify(items: Array<string>): Array<string> {\n    items = Array.from((new Set(items)).values())\n    items.sort();\n    return items;\n}\n\n\nasync function getSubscription(_event: ProviderEvent, provider: AbstractProvider): Promise<Subscription> {\n    if (_event == null) { throw new Error(\"invalid event\"); }\n\n    // Normalize topic array info an EventFilter\n    if (Array.isArray(_event)) { _event = { topics: _event }; }\n\n    if (typeof(_event) === \"string\") {\n        switch (_event) {\n            case \"block\":\n            case \"debug\":\n            case \"error\":\n            case \"finalized\":\n            case \"network\":\n            case \"pending\":\n            case \"safe\": {\n                return { type: _event, tag: _event };\n            }\n        }\n    }\n\n    if (isHexString(_event, 32)) {\n        const hash = _event.toLowerCase();\n        return { type: \"transaction\", tag: getTag(\"tx\", { hash }), hash };\n    }\n\n    if ((<any>_event).orphan) {\n        const event = <OrphanFilter>_event;\n        // @TODO: Should lowercase and whatnot things here instead of copy...\n        return { type: \"orphan\", tag: getTag(\"orphan\", event), filter: copy(event) };\n    }\n\n    if (((<any>_event).address || (<any>_event).topics)) {\n        const event = <EventFilter>_event;\n\n        const filter: any = {\n            topics: ((event.topics || []).map((t) => {\n                if (t == null) { return null; }\n                if (Array.isArray(t)) {\n                    return concisify(t.map((t) => t.toLowerCase()));\n                }\n                return t.toLowerCase();\n            }))\n        };\n\n        if (event.address) {\n            const addresses: Array<string> = [ ];\n            const promises: Array<Promise<void>> = [ ];\n\n            const addAddress = (addr: AddressLike) => {\n                if (isHexString(addr)) {\n                    addresses.push(addr);\n                } else {\n                    promises.push((async () => {\n                        addresses.push(await resolveAddress(addr, provider));\n                    })());\n                }\n            }\n\n            if (Array.isArray(event.address)) {\n                event.address.forEach(addAddress);\n            } else {\n                addAddress(event.address);\n            }\n            if (promises.length) { await Promise.all(promises); }\n            filter.address = concisify(addresses.map((a) => a.toLowerCase()));\n        }\n\n        return { filter, tag: getTag(\"event\", filter), type: \"event\" };\n    }\n\n    assertArgument(false, \"unknown ProviderEvent\", \"event\", _event);\n}\n\nfunction getTime(): number { return (new Date()).getTime(); }\n\n/**\n *  An **AbstractPlugin** is used to provide additional internal services\n *  to an [[AbstractProvider]] without adding backwards-incompatible changes\n *  to method signatures or other internal and complex logic.\n */\nexport interface AbstractProviderPlugin {\n    /**\n     *  The reverse domain notation of the plugin.\n     */\n    readonly name: string;\n\n    /**\n     *  Creates a new instance of the plugin, connected to %%provider%%.\n     */\n    connect(provider: AbstractProvider): AbstractProviderPlugin;\n}\n\n/**\n *  A normalized filter used for [[PerformActionRequest]] objects.\n */\nexport type PerformActionFilter = {\n    address?: string | Array<string>;\n    topics?: Array<null | string | Array<string>>;\n    fromBlock?: BlockTag;\n    toBlock?: BlockTag;\n} | {\n    address?: string | Array<string>;\n    topics?: Array<null | string | Array<string>>;\n    blockHash?: string;\n};\n\n/**\n *  A normalized transactions used for [[PerformActionRequest]] objects.\n */\nexport interface PerformActionTransaction extends PreparedTransactionRequest {\n    /**\n     *  The ``to`` address of the transaction.\n     */\n    to?: string;\n\n    /**\n     *  The sender of the transaction.\n     */\n    from?: string;\n}\n\n/**\n *  The [[AbstractProvider]] methods will normalize all values and pass this\n *  type to [[AbstractProvider-_perform]].\n */\nexport type PerformActionRequest = {\n    method: \"broadcastTransaction\",\n    signedTransaction: string\n} | {\n    method: \"call\",\n    transaction: PerformActionTransaction, blockTag: BlockTag\n} | {\n    method: \"chainId\"\n} | {\n    method: \"estimateGas\",\n    transaction: PerformActionTransaction\n} | {\n    method: \"getBalance\",\n    address: string, blockTag: BlockTag\n} | {\n    method: \"getBlock\",\n    blockTag: BlockTag, includeTransactions: boolean\n} | {\n    method: \"getBlock\",\n    blockHash: string, includeTransactions: boolean\n} | {\n    method: \"getBlockNumber\"\n} | {\n    method: \"getCode\",\n    address: string, blockTag: BlockTag\n} | {\n    method: \"getGasPrice\"\n} | {\n    method: \"getLogs\",\n    filter: PerformActionFilter\n} | {\n    method: \"getPriorityFee\"\n} | {\n    method: \"getStorage\",\n    address: string, position: bigint, blockTag: BlockTag\n} | {\n    method: \"getTransaction\",\n    hash: string\n} | {\n    method: \"getTransactionCount\",\n    address: string, blockTag: BlockTag\n} | {\n    method: \"getTransactionReceipt\",\n    hash: string\n} | {\n    method: \"getTransactionResult\",\n    hash: string\n};\n\ntype _PerformAccountRequest = {\n    method: \"getBalance\" | \"getTransactionCount\" | \"getCode\"\n} | {\n    method: \"getStorage\", position: bigint\n}\n\n/**\n *  Options for configuring some internal aspects of an [[AbstractProvider]].\n *\n *  **``cacheTimeout``** - how long to cache a low-level ``_perform``\n *  for, based on input parameters. This reduces the number of calls\n *  to getChainId and getBlockNumber, but may break test chains which\n *  can perform operations (internally) synchronously. Use ``-1`` to\n *  disable, ``0`` will only buffer within the same event loop and\n *  any other value is in ms. (default: ``250``)\n */\nexport type AbstractProviderOptions = {\n    cacheTimeout?: number;\n    pollingInterval?: number;\n};\n\nconst defaultOptions = {\n    cacheTimeout: 250,\n    pollingInterval: 4000\n};\n\ntype CcipArgs = {\n    sender: string;\n    urls: Array<string>;\n    calldata: string;\n    selector: string;\n    extraData: string;\n    errorArgs: Array<any>\n};\n\n/**\n *  An **AbstractProvider** provides a base class for other sub-classes to\n *  implement the [[Provider]] API by normalizing input arguments and\n *  formatting output results as well as tracking events for consistent\n *  behaviour on an eventually-consistent network.\n */\nexport class AbstractProvider implements Provider {\n\n    #subs: Map<string, Sub>;\n    #plugins: Map<string, AbstractProviderPlugin>;\n\n    // null=unpaused, true=paused+dropWhilePaused, false=paused\n    #pausedState: null | boolean;\n\n    #destroyed: boolean;\n\n    #networkPromise: null | Promise<Network>;\n    readonly #anyNetwork: boolean;\n\n    #performCache: Map<string, Promise<any>>;\n\n    // The most recent block number if running an event or -1 if no \"block\" event\n    #lastBlockNumber: number;\n\n    #nextTimer: number;\n    #timers: Map<number, { timer: null | Timer, func: () => void, time: number }>;\n\n    #disableCcipRead: boolean;\n\n    #options: Required<AbstractProviderOptions>;\n\n    /**\n     *  Create a new **AbstractProvider** connected to %%network%%, or\n     *  use the various network detection capabilities to discover the\n     *  [[Network]] if necessary.\n     */\n    constructor(_network?: \"any\" | Networkish, options?: AbstractProviderOptions) {\n        this.#options = Object.assign({ }, defaultOptions, options || { });\n\n        if (_network === \"any\") {\n            this.#anyNetwork = true;\n            this.#networkPromise = null;\n        } else if (_network) {\n            const network = Network.from(_network);\n            this.#anyNetwork = false;\n            this.#networkPromise = Promise.resolve(network);\n            setTimeout(() => { this.emit(\"network\", network, null); }, 0);\n        } else {\n            this.#anyNetwork = false;\n            this.#networkPromise = null;\n        }\n\n        this.#lastBlockNumber = -1;\n\n        this.#performCache = new Map();\n\n        this.#subs = new Map();\n        this.#plugins = new Map();\n        this.#pausedState = null;\n\n        this.#destroyed = false;\n\n        this.#nextTimer = 1;\n        this.#timers = new Map();\n\n        this.#disableCcipRead = false;\n    }\n\n    get pollingInterval(): number { return this.#options.pollingInterval; }\n\n    /**\n     *  Returns ``this``, to allow an **AbstractProvider** to implement\n     *  the [[ContractRunner]] interface.\n     */\n    get provider(): this { return this; }\n\n    /**\n     *  Returns all the registered plug-ins.\n     */\n    get plugins(): Array<AbstractProviderPlugin> {\n        return Array.from(this.#plugins.values());\n    }\n\n    /**\n     *  Attach a new plug-in.\n     */\n    attachPlugin(plugin: AbstractProviderPlugin): this {\n        if (this.#plugins.get(plugin.name)) {\n            throw new Error(`cannot replace existing plugin: ${ plugin.name } `);\n        }\n        this.#plugins.set(plugin.name,  plugin.connect(this));\n        return this;\n    }\n\n    /**\n     *  Get a plugin by name.\n     */\n    getPlugin<T extends AbstractProviderPlugin = AbstractProviderPlugin>(name: string): null | T {\n        return <T>(this.#plugins.get(name)) || null;\n    }\n\n    /**\n     *  Prevent any CCIP-read operation, regardless of whether requested\n     *  in a [[call]] using ``enableCcipRead``.\n     */\n    get disableCcipRead(): boolean { return this.#disableCcipRead; }\n    set disableCcipRead(value: boolean) { this.#disableCcipRead = !!value; }\n\n    // Shares multiple identical requests made during the same 250ms\n    async #perform<T = any>(req: PerformActionRequest): Promise<T> {\n        const timeout = this.#options.cacheTimeout;\n\n        // Caching disabled\n        if (timeout < 0) { return await this._perform(req); }\n\n        // Create a tag\n        const tag = getTag(req.method, req);\n\n        let perform = this.#performCache.get(tag);\n        if (!perform) {\n            perform = this._perform(req);\n\n            this.#performCache.set(tag, perform);\n\n            setTimeout(() => {\n                if (this.#performCache.get(tag) === perform) {\n                    this.#performCache.delete(tag);\n                }\n            }, timeout);\n        }\n\n        return await perform;\n    }\n\n    /**\n     *  Resolves to the data for executing the CCIP-read operations.\n     */\n    async ccipReadFetch(tx: PerformActionTransaction, calldata: string, urls: Array<string>): Promise<null | string> {\n        if (this.disableCcipRead || urls.length === 0 || tx.to == null) { return null; }\n\n        const sender = tx.to.toLowerCase();\n        const data = calldata.toLowerCase();\n\n        const errorMessages: Array<string> = [ ];\n\n        for (let i = 0; i < urls.length; i++) {\n            const url = urls[i];\n\n            // URL expansion\n            const href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n\n            // If no {data} is present, use POST; otherwise GET\n            //const json: string | null = (url.indexOf(\"{data}\") >= 0) ? null: JSON.stringify({ data, sender });\n\n            //const result = await fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {\n            //    value.status = response.statusCode;\n            //    return value;\n            //});\n            const request = new FetchRequest(href);\n            if (url.indexOf(\"{data}\") === -1) {\n                request.body = { data, sender };\n            }\n\n            this.emit(\"debug\", { action: \"sendCcipReadFetchRequest\", request, index: i, urls });\n\n            let errorMessage = \"unknown error\";\n\n            // Fetch the resource...\n            let resp: FetchResponse;\n            try {\n                resp = await request.send();\n            } catch (error: any) {\n                // ...low-level fetch error (missing host, bad SSL, etc.),\n                // so try next URL\n                errorMessages.push(error.message);\n                this.emit(\"debug\", { action: \"receiveCcipReadFetchError\", request, result: { error } });\n                continue;\n            }\n\n            try {\n                const result = resp.bodyJson;\n                if (result.data) {\n                    this.emit(\"debug\", { action: \"receiveCcipReadFetchResult\", request, result });\n                    return result.data;\n                }\n                if (result.message) { errorMessage = result.message; }\n                this.emit(\"debug\", { action: \"receiveCcipReadFetchError\", request, result });\n            } catch (error) { }\n\n            // 4xx indicates the result is not present; stop\n            assert(resp.statusCode < 400 || resp.statusCode >= 500, `response not found during CCIP fetch: ${ errorMessage }`,\n                \"OFFCHAIN_FAULT\", { reason: \"404_MISSING_RESOURCE\", transaction: tx, info: { url, errorMessage } });\n\n            // 5xx indicates server issue; try the next url\n            errorMessages.push(errorMessage);\n        }\n\n        assert(false, `error encountered during CCIP fetch: ${ errorMessages.map((m) => JSON.stringify(m)).join(\", \") }`, \"OFFCHAIN_FAULT\", {\n            reason: \"500_SERVER_ERROR\",\n            transaction: tx, info: { urls, errorMessages }\n        });\n    }\n\n    /**\n     *  Provides the opportunity for a sub-class to wrap a block before\n     *  returning it, to add additional properties or an alternate\n     *  sub-class of [[Block]].\n     */\n    _wrapBlock(value: BlockParams, network: Network): Block {\n        return new Block(formatBlock(value), this);\n    }\n\n    /**\n     *  Provides the opportunity for a sub-class to wrap a log before\n     *  returning it, to add additional properties or an alternate\n     *  sub-class of [[Log]].\n     */\n    _wrapLog(value: LogParams, network: Network): Log {\n        return new Log(formatLog(value), this);\n    }\n\n    /**\n     *  Provides the opportunity for a sub-class to wrap a transaction\n     *  receipt before returning it, to add additional properties or an\n     *  alternate sub-class of [[TransactionReceipt]].\n     */\n    _wrapTransactionReceipt(value: TransactionReceiptParams, network: Network): TransactionReceipt {\n        return new TransactionReceipt(formatTransactionReceipt(value), this);\n    }\n\n    /**\n     *  Provides the opportunity for a sub-class to wrap a transaction\n     *  response before returning it, to add additional properties or an\n     *  alternate sub-class of [[TransactionResponse]].\n     */\n    _wrapTransactionResponse(tx: TransactionResponseParams, network: Network): TransactionResponse {\n        return new TransactionResponse(formatTransactionResponse(tx), this);\n    }\n\n    /**\n     *  Resolves to the Network, forcing a network detection using whatever\n     *  technique the sub-class requires.\n     *\n     *  Sub-classes **must** override this.\n     */\n    _detectNetwork(): Promise<Network> {\n        assert(false, \"sub-classes must implement this\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"_detectNetwork\"\n        });\n    }\n\n    /**\n     *  Sub-classes should use this to perform all built-in operations. All\n     *  methods sanitizes and normalizes the values passed into this.\n     *\n     *  Sub-classes **must** override this.\n     */\n    async _perform<T = any>(req: PerformActionRequest): Promise<T> {\n        assert(false, `unsupported method: ${ req.method }`, \"UNSUPPORTED_OPERATION\", {\n            operation: req.method,\n            info: req\n        });\n    }\n\n    // State\n\n    async getBlockNumber(): Promise<number> {\n        const blockNumber = getNumber(await this.#perform({ method: \"getBlockNumber\" }), \"%response\");\n        if (this.#lastBlockNumber >= 0) { this.#lastBlockNumber = blockNumber; }\n        return blockNumber;\n    }\n\n    /**\n     *  Returns or resolves to the address for %%address%%, resolving ENS\n     *  names and [[Addressable]] objects and returning if already an\n     *  address.\n     */\n    _getAddress(address: AddressLike): string | Promise<string> {\n        return resolveAddress(address, this);\n    }\n\n    /**\n     *  Returns or resolves to a valid block tag for %%blockTag%%, resolving\n     *  negative values and returning if already a valid block tag.\n     */\n    _getBlockTag(blockTag?: BlockTag): string | Promise<string> {\n        if (blockTag == null) { return \"latest\"; }\n\n        switch (blockTag) {\n            case \"earliest\":\n                return \"0x0\";\n            case \"finalized\":\n            case \"latest\":\n            case \"pending\":\n            case \"safe\":\n                return blockTag;\n        }\n\n\n        if (isHexString(blockTag)) {\n            if (isHexString(blockTag, 32)) { return blockTag; }\n            return toQuantity(blockTag);\n        }\n\n        if (typeof(blockTag) === \"bigint\") {\n            blockTag = getNumber(blockTag, \"blockTag\");\n        }\n\n        if (typeof(blockTag) === \"number\") {\n            if (blockTag >= 0) { return toQuantity(blockTag); }\n            if (this.#lastBlockNumber >= 0) { return toQuantity(this.#lastBlockNumber + blockTag); }\n            return this.getBlockNumber().then((b) => toQuantity(b + <number>blockTag));\n        }\n\n        assertArgument(false, \"invalid blockTag\", \"blockTag\", blockTag);\n    }\n\n    /**\n     *  Returns or resolves to a filter for %%filter%%, resolving any ENS\n     *  names or [[Addressable]] object and returning if already a valid\n     *  filter.\n     */\n    _getFilter(filter: Filter | FilterByBlockHash): PerformActionFilter | Promise<PerformActionFilter> {\n\n        // Create a canonical representation of the topics\n        const topics = (filter.topics || [ ]).map((t) => {\n            if (t == null) { return null; }\n            if (Array.isArray(t)) {\n                return concisify(t.map((t) => t.toLowerCase()));\n            }\n            return t.toLowerCase();\n        });\n\n        const blockHash = (\"blockHash\" in filter) ? filter.blockHash: undefined;\n\n        const resolve = (_address: Array<string>, fromBlock?: string, toBlock?: string) => {\n            let address: undefined | string | Array<string> = undefined;\n            switch (_address.length) {\n                case 0: break;\n                case 1:\n                    address = _address[0];\n                    break;\n                default:\n                    _address.sort();\n                    address = _address;\n            }\n\n            if (blockHash) {\n                if (fromBlock != null || toBlock != null) {\n                    throw new Error(\"invalid filter\");\n                }\n            }\n\n            const filter = <any>{ };\n            if (address) { filter.address = address; }\n            if (topics.length) { filter.topics = topics; }\n            if (fromBlock) { filter.fromBlock = fromBlock; }\n            if (toBlock) { filter.toBlock = toBlock; }\n            if (blockHash) { filter.blockHash = blockHash; }\n\n            return filter;\n        };\n\n        // Addresses could be async (ENS names or Addressables)\n        let address: Array<string | Promise<string>> = [ ];\n        if (filter.address) {\n            if (Array.isArray(filter.address)) {\n                for (const addr of filter.address) { address.push(this._getAddress(addr)); }\n            } else {\n                address.push(this._getAddress(filter.address));\n            }\n        }\n\n        let fromBlock: undefined | string | Promise<string> = undefined;\n        if (\"fromBlock\" in filter) { fromBlock = this._getBlockTag(filter.fromBlock); }\n\n        let toBlock: undefined | string | Promise<string> = undefined;\n        if (\"toBlock\" in filter) { toBlock = this._getBlockTag(filter.toBlock); }\n\n        if (address.filter((a) => (typeof(a) !== \"string\")).length ||\n            (fromBlock != null && typeof(fromBlock) !== \"string\") ||\n            (toBlock != null && typeof(toBlock) !== \"string\")) {\n\n            return Promise.all([ Promise.all(address), fromBlock, toBlock ]).then((result) => {\n                return resolve(result[0], result[1], result[2]);\n            });\n        }\n\n        return resolve(<Array<string>>address, fromBlock, toBlock);\n    }\n\n    /**\n     *  Returns or resolves to a transaction for %%request%%, resolving\n     *  any ENS names or [[Addressable]] and returning if already a valid\n     *  transaction.\n     */\n    _getTransactionRequest(_request: TransactionRequest): PerformActionTransaction | Promise<PerformActionTransaction> {\n        const request = <PerformActionTransaction>copyRequest(_request);\n\n        const promises: Array<Promise<void>> = [ ];\n        [ \"to\", \"from\" ].forEach((key) => {\n            if ((<any>request)[key] == null) { return; }\n\n            const addr = resolveAddress((<any>request)[key], this);\n            if (isPromise(addr)) {\n                promises.push((async function() { (<any>request)[key] = await addr; })());\n            } else {\n                (<any>request)[key] = addr;\n            }\n        });\n\n        if (request.blockTag != null) {\n            const blockTag = this._getBlockTag(request.blockTag);\n            if (isPromise(blockTag)) {\n                promises.push((async function() { request.blockTag = await blockTag; })());\n            } else {\n                request.blockTag = blockTag;\n            }\n        }\n\n        if (promises.length) {\n            return (async function() {\n                await Promise.all(promises);\n                return request;\n            })();\n        }\n\n        return request;\n    }\n\n    async getNetwork(): Promise<Network> {\n\n        // No explicit network was set and this is our first time\n        if (this.#networkPromise == null) {\n\n            // Detect the current network (shared with all calls)\n            const detectNetwork = (async () => {\n                try {\n                    const network = await this._detectNetwork();\n                    this.emit(\"network\", network, null);\n                    return network;\n                } catch (error) {\n                    if (this.#networkPromise === detectNetwork!) {\n                        this.#networkPromise = null;\n                    }\n                    throw error;\n                }\n            })();\n\n            this.#networkPromise = detectNetwork;\n            return (await detectNetwork).clone();\n        }\n\n        const networkPromise = this.#networkPromise;\n\n        const [ expected, actual ] = await Promise.all([\n            networkPromise,          // Possibly an explicit Network\n            this._detectNetwork()    // The actual connected network\n        ]);\n\n        if (expected.chainId !== actual.chainId) {\n            if (this.#anyNetwork) {\n                // The \"any\" network can change, so notify listeners\n                this.emit(\"network\", actual, expected);\n\n                // Update the network if something else hasn't already changed it\n                if (this.#networkPromise === networkPromise) {\n                    this.#networkPromise = Promise.resolve(actual);\n                }\n            } else {\n                // Otherwise, we do not allow changes to the underlying network\n                assert(false, `network changed: ${ expected.chainId } => ${ actual.chainId } `, \"NETWORK_ERROR\", {\n                    event: \"changed\"\n                });\n            }\n        }\n\n        return expected.clone();\n    }\n\n    async getFeeData(): Promise<FeeData> {\n        const network = await this.getNetwork();\n\n        const getFeeDataFunc = async () => {\n            const { _block, gasPrice, priorityFee } = await resolveProperties({\n                _block: this.#getBlock(\"latest\", false),\n                gasPrice: ((async () => {\n                    try {\n                        const value = await this.#perform({ method: \"getGasPrice\" });\n                        return getBigInt(value, \"%response\");\n                    } catch (error) { }\n                    return null\n                })()),\n                priorityFee: ((async () => {\n                    try {\n                        const value = await this.#perform({ method: \"getPriorityFee\" });\n                        return getBigInt(value, \"%response\");\n                    } catch (error) { }\n                    return null;\n                })())\n            });\n\n            let maxFeePerGas: null | bigint = null;\n            let maxPriorityFeePerGas: null | bigint = null;\n\n            // These are the recommended EIP-1559 heuristics for fee data\n            const block = this._wrapBlock(_block, network);\n            if (block && block.baseFeePerGas) {\n                maxPriorityFeePerGas = (priorityFee != null) ? priorityFee: BigInt(\"1000000000\");\n                maxFeePerGas = (block.baseFeePerGas * BN_2) + maxPriorityFeePerGas;\n            }\n\n            return new FeeData(gasPrice, maxFeePerGas, maxPriorityFeePerGas);\n        };\n\n        // Check for a FeeDataNetWorkPlugin\n        const plugin = <FetchUrlFeeDataNetworkPlugin>network.getPlugin(\"org.ethers.plugins.network.FetchUrlFeeDataPlugin\");\n        if (plugin) {\n            const req = new FetchRequest(plugin.url);\n            const feeData = await plugin.processFunc(getFeeDataFunc, this, req);\n            return new FeeData(feeData.gasPrice, feeData.maxFeePerGas, feeData.maxPriorityFeePerGas);\n        }\n\n        return await getFeeDataFunc();\n    }\n\n\n    async estimateGas(_tx: TransactionRequest): Promise<bigint> {\n        let tx = this._getTransactionRequest(_tx);\n        if (isPromise(tx)) { tx = await tx; }\n        return getBigInt(await this.#perform({\n            method: \"estimateGas\", transaction: tx\n        }), \"%response\");\n    }\n\n    async #call(tx: PerformActionTransaction, blockTag: string, attempt: number): Promise<string> {\n        assert (attempt < MAX_CCIP_REDIRECTS, \"CCIP read exceeded maximum redirections\", \"OFFCHAIN_FAULT\", {\n             reason: \"TOO_MANY_REDIRECTS\",\n             transaction: Object.assign({ }, tx, { blockTag, enableCcipRead: true })\n         });\n\n         // This came in as a PerformActionTransaction, so to/from are safe; we can cast\n         const transaction = <PerformActionTransaction>copyRequest(tx);\n\n         try {\n             return hexlify(await this._perform({ method: \"call\", transaction, blockTag }));\n\n         } catch (error: any) {\n             // CCIP Read OffchainLookup\n             if (!this.disableCcipRead && isCallException(error) && error.data && attempt >= 0 && blockTag === \"latest\" && transaction.to != null && dataSlice(error.data, 0, 4) === \"0x556f1830\") {\n                 const data = error.data;\n\n                 const txSender = await resolveAddress(transaction.to, this);\n\n                 // Parse the CCIP Read Arguments\n                 let ccipArgs: CcipArgs;\n                 try {\n                     ccipArgs = parseOffchainLookup(dataSlice(error.data, 4));\n                 } catch (error: any) {\n                     assert(false, error.message, \"OFFCHAIN_FAULT\", {\n                         reason: \"BAD_DATA\", transaction, info: { data } });\n                 }\n\n                 // Check the sender of the OffchainLookup matches the transaction\n                 assert(ccipArgs.sender.toLowerCase() === txSender.toLowerCase(),\n                     \"CCIP Read sender mismatch\", \"CALL_EXCEPTION\", {\n                         action: \"call\",\n                         data,\n                         reason: \"OffchainLookup\",\n                         transaction: <any>transaction, // @TODO: populate data?\n                         invocation: null,\n                         revert: {\n                             signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                             name: \"OffchainLookup\",\n                             args: ccipArgs.errorArgs\n                         }\n                     });\n\n                 const ccipResult = await this.ccipReadFetch(transaction, ccipArgs.calldata, ccipArgs.urls);\n                 assert(ccipResult != null, \"CCIP Read failed to fetch data\", \"OFFCHAIN_FAULT\", {\n                     reason: \"FETCH_FAILED\", transaction, info: { data: error.data, errorArgs: ccipArgs.errorArgs } });\n\n                 const tx = {\n                     to: txSender,\n                     data: concat([ ccipArgs.selector, encodeBytes([ ccipResult, ccipArgs.extraData ]) ])\n                 };\n\n                 this.emit(\"debug\", { action: \"sendCcipReadCall\", transaction: tx });\n                 try {\n                     const result = await this.#call(tx, blockTag, attempt + 1);\n                     this.emit(\"debug\", { action: \"receiveCcipReadCallResult\", transaction: Object.assign({ }, tx), result });\n                     return result;\n                 } catch (error) {\n                     this.emit(\"debug\", { action: \"receiveCcipReadCallError\", transaction: Object.assign({ }, tx), error });\n                     throw error;\n                 }\n             }\n\n             throw error;\n         }\n    }\n\n    async #checkNetwork<T>(promise: Promise<T>): Promise<T> {\n        const { value } = await resolveProperties({\n            network: this.getNetwork(),\n            value: promise\n        });\n        return value;\n    }\n\n    async call(_tx: TransactionRequest): Promise<string> {\n        const { tx, blockTag } = await resolveProperties({\n            tx: this._getTransactionRequest(_tx),\n            blockTag: this._getBlockTag(_tx.blockTag)\n        });\n\n        return await this.#checkNetwork(this.#call(tx, blockTag, _tx.enableCcipRead ? 0: -1));\n    }\n\n    // Account\n    async #getAccountValue(request: _PerformAccountRequest, _address: AddressLike, _blockTag?: BlockTag): Promise<any> {\n        let address: string | Promise<string> = this._getAddress(_address);\n        let blockTag: string | Promise<string> = this._getBlockTag(_blockTag);\n\n        if (typeof(address) !== \"string\" || typeof(blockTag) !== \"string\") {\n            [ address, blockTag ] = await Promise.all([ address, blockTag ]);\n        }\n\n        return await this.#checkNetwork(this.#perform(Object.assign(request, { address, blockTag })));\n    }\n\n    async getBalance(address: AddressLike, blockTag?: BlockTag): Promise<bigint> {\n        return getBigInt(await this.#getAccountValue({ method: \"getBalance\" }, address, blockTag), \"%response\");\n    }\n\n    async getTransactionCount(address: AddressLike, blockTag?: BlockTag): Promise<number> {\n        return getNumber(await this.#getAccountValue({ method: \"getTransactionCount\" }, address, blockTag), \"%response\");\n    }\n\n    async getCode(address: AddressLike, blockTag?: BlockTag): Promise<string> {\n        return hexlify(await this.#getAccountValue({ method: \"getCode\" }, address, blockTag));\n    }\n\n    async getStorage(address: AddressLike, _position: BigNumberish, blockTag?: BlockTag): Promise<string> {\n        const position = getBigInt(_position, \"position\");\n        return hexlify(await this.#getAccountValue({ method: \"getStorage\", position }, address, blockTag));\n    }\n\n    // Write\n    async broadcastTransaction(signedTx: string): Promise<TransactionResponse> {\n        const { blockNumber, hash, network } = await resolveProperties({\n             blockNumber: this.getBlockNumber(),\n             hash: this._perform({\n                 method: \"broadcastTransaction\",\n                 signedTransaction: signedTx\n             }),\n             network: this.getNetwork()\n        });\n\n        const tx = Transaction.from(signedTx);\n        if (tx.hash !== hash) {\n            throw new Error(\"@TODO: the returned hash did not match\");\n        }\n\n        return this._wrapTransactionResponse(<any>tx, network).replaceableTransaction(blockNumber);\n    }\n\n    async #getBlock(block: BlockTag | string, includeTransactions: boolean): Promise<any> {\n        // @TODO: Add CustomBlockPlugin check\n\n        if (isHexString(block, 32)) {\n            return await this.#perform({\n                method: \"getBlock\", blockHash: block, includeTransactions\n            });\n        }\n\n        let blockTag = this._getBlockTag(block);\n        if (typeof(blockTag) !== \"string\") { blockTag = await blockTag; }\n\n        return await this.#perform({\n            method: \"getBlock\", blockTag, includeTransactions\n        });\n    }\n\n    // Queries\n    async getBlock(block: BlockTag | string, prefetchTxs?: boolean): Promise<null | Block> {\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#getBlock(block, !!prefetchTxs)\n        });\n        if (params == null) { return null; }\n\n        return this._wrapBlock(params, network);\n    }\n\n    async getTransaction(hash: string): Promise<null | TransactionResponse> {\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#perform({ method: \"getTransaction\", hash })\n        });\n        if (params == null) { return null; }\n\n        return this._wrapTransactionResponse(params, network);\n    }\n\n    async getTransactionReceipt(hash: string): Promise<null | TransactionReceipt> {\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#perform({ method: \"getTransactionReceipt\", hash })\n        });\n        if (params == null) { return null; }\n\n        // Some backends did not backfill the effectiveGasPrice into old transactions\n        // in the receipt, so we look it up manually and inject it.\n        if (params.gasPrice == null && params.effectiveGasPrice == null) {\n            const tx = await this.#perform({ method: \"getTransaction\", hash });\n            if (tx == null) { throw new Error(\"report this; could not find tx or effectiveGasPrice\"); }\n            params.effectiveGasPrice = tx.gasPrice;\n        }\n\n        return this._wrapTransactionReceipt(params, network);\n    }\n\n    async getTransactionResult(hash: string): Promise<null | string> {\n        const { result } = await resolveProperties({\n            network: this.getNetwork(),\n            result: this.#perform({ method: \"getTransactionResult\", hash })\n        });\n        if (result == null) { return null; }\n        return hexlify(result);\n    }\n\n    // Bloom-filter Queries\n    async getLogs(_filter: Filter | FilterByBlockHash): Promise<Array<Log>> {\n        let filter = this._getFilter(_filter);\n        if (isPromise(filter)) { filter = await filter; }\n\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#perform<Array<LogParams>>({ method: \"getLogs\", filter })\n        });\n\n        return params.map((p) => this._wrapLog(p, network));\n    }\n\n    // ENS\n    _getProvider(chainId: number): AbstractProvider {\n        assert(false, \"provider cannot connect to target network\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"_getProvider()\"\n        });\n    }\n\n    async getResolver(name: string): Promise<null | EnsResolver> {\n        return await EnsResolver.fromName(this, name);\n    }\n\n    async getAvatar(name: string): Promise<null | string> {\n        const resolver = await this.getResolver(name);\n        if (resolver) { return await resolver.getAvatar(); }\n        return null;\n    }\n\n    async resolveName(name: string): Promise<null | string>{\n        const resolver = await this.getResolver(name);\n        if (resolver) { return await resolver.getAddress(); }\n        return null;\n    }\n\n    async lookupAddress(address: string): Promise<null | string> {\n        address = getAddress(address);\n        const node = namehash(address.substring(2).toLowerCase() + \".addr.reverse\");\n\n        try {\n\n            const ensAddr = await EnsResolver.getEnsAddress(this);\n            const ensContract = new Contract(ensAddr, [\n                \"function resolver(bytes32) view returns (address)\"\n            ], this);\n\n            const resolver = await ensContract.resolver(node);\n            if (resolver == null || resolver === ZeroAddress) { return null; }\n\n            const resolverContract = new Contract(resolver, [\n                \"function name(bytes32) view returns (string)\"\n            ], this);\n            const name = await resolverContract.name(node);\n\n            // Failed forward resolution\n            const check = await this.resolveName(name);\n            if (check !== address) { return null; }\n\n            return name;\n\n        } catch (error) {\n            // No data was returned from the resolver\n            if (isError(error, \"BAD_DATA\") && error.value === \"0x\") {\n                return null;\n            }\n\n            // Something reerted\n            if (isError(error, \"CALL_EXCEPTION\")) { return null; }\n\n            throw error;\n        }\n\n        return null;\n    }\n\n    async waitForTransaction(hash: string, _confirms?: null | number, timeout?: null | number): Promise<null | TransactionReceipt> {\n        const confirms = (_confirms != null) ? _confirms: 1;\n        if (confirms === 0) { return this.getTransactionReceipt(hash); }\n\n        return new Promise(async (resolve, reject) => {\n            let timer: null | Timer = null;\n\n            const listener = (async (blockNumber: number) => {\n                try {\n                    const receipt = await this.getTransactionReceipt(hash);\n                    if (receipt != null) {\n                        if (blockNumber - receipt.blockNumber + 1 >= confirms) {\n                            resolve(receipt);\n                            //this.off(\"block\", listener);\n                            if (timer) {\n                                clearTimeout(timer);\n                                timer = null;\n                            }\n                            return;\n                        }\n                    }\n                } catch (error) {\n                    console.log(\"EEE\", error);\n                }\n                this.once(\"block\", listener);\n            });\n\n            if (timeout != null) {\n                timer = setTimeout(() => {\n                    if (timer == null) { return; }\n                    timer = null;\n                    this.off(\"block\", listener);\n                    reject(makeError(\"timeout\", \"TIMEOUT\", { reason: \"timeout\" }));\n                }, timeout);\n            }\n\n            listener(await this.getBlockNumber());\n        });\n    }\n\n    async waitForBlock(blockTag?: BlockTag): Promise<Block> {\n        assert(false, \"not implemented yet\", \"NOT_IMPLEMENTED\", {\n            operation: \"waitForBlock\"\n        });\n    }\n\n    /**\n     *  Clear a timer created using the [[_setTimeout]] method.\n     */\n    _clearTimeout(timerId: number): void {\n        const timer = this.#timers.get(timerId);\n        if (!timer) { return; }\n        if (timer.timer) { clearTimeout(timer.timer); }\n        this.#timers.delete(timerId);\n    }\n\n    /**\n     *  Create a timer that will execute %%func%% after at least %%timeout%%\n     *  (in ms). If %%timeout%% is unspecified, then %%func%% will execute\n     *  in the next event loop.\n     *\n     *  [Pausing](AbstractProvider-paused) the provider will pause any\n     *  associated timers.\n     */\n    _setTimeout(_func: () => void, timeout?: number): number {\n        if (timeout == null) { timeout = 0; }\n        const timerId = this.#nextTimer++;\n        const func = () => {\n            this.#timers.delete(timerId);\n            _func();\n        };\n\n        if (this.paused) {\n            this.#timers.set(timerId, { timer: null, func, time: timeout });\n        } else {\n            const timer = setTimeout(func, timeout);\n            this.#timers.set(timerId, { timer, func, time: getTime() });\n        }\n\n        return timerId;\n    }\n\n    /**\n     *  Perform %%func%% on each subscriber.\n     */\n    _forEachSubscriber(func: (s: Subscriber) => void): void {\n        for (const sub of this.#subs.values()) {\n            func(sub.subscriber);\n        }\n    }\n\n    /**\n     *  Sub-classes may override this to customize subscription\n     *  implementations.\n     */\n    _getSubscriber(sub: Subscription): Subscriber {\n        switch (sub.type) {\n            case \"debug\":\n            case \"error\":\n            case \"network\":\n                return new UnmanagedSubscriber(sub.type);\n            case \"block\": {\n                const subscriber = new PollingBlockSubscriber(this);\n                subscriber.pollingInterval = this.pollingInterval;\n                return subscriber;\n            }\n            case \"safe\": case \"finalized\":\n                return new PollingBlockTagSubscriber(this, sub.type);\n            case \"event\":\n                return new PollingEventSubscriber(this, sub.filter);\n            case \"transaction\":\n                return new PollingTransactionSubscriber(this, sub.hash);\n            case \"orphan\":\n                return new PollingOrphanSubscriber(this, sub.filter);\n        }\n\n        throw new Error(`unsupported event: ${ sub.type }`);\n    }\n\n    /**\n     *  If a [[Subscriber]] fails and needs to replace itself, this\n     *  method may be used.\n     *\n     *  For example, this is used for providers when using the\n     *  ``eth_getFilterChanges`` method, which can return null if state\n     *  filters are not supported by the backend, allowing the Subscriber\n     *  to swap in a [[PollingEventSubscriber]].\n     */\n    _recoverSubscriber(oldSub: Subscriber, newSub: Subscriber): void {\n        for (const sub of this.#subs.values()) {\n            if (sub.subscriber === oldSub) {\n                if (sub.started) { sub.subscriber.stop(); }\n                sub.subscriber = newSub;\n                if (sub.started) { newSub.start(); }\n                if (this.#pausedState != null) { newSub.pause(this.#pausedState); }\n                break;\n            }\n        }\n    }\n\n    async #hasSub(event: ProviderEvent, emitArgs?: Array<any>): Promise<null | Sub> {\n        let sub = await getSubscription(event, this);\n        // This is a log that is removing an existing log; we actually want\n        // to emit an orphan event for the removed log\n        if (sub.type === \"event\" && emitArgs && emitArgs.length > 0 && emitArgs[0].removed === true) {\n            sub = await getSubscription({ orphan: \"drop-log\", log: emitArgs[0] }, this);\n        }\n        return this.#subs.get(sub.tag) || null;\n    }\n\n    async #getSub(event: ProviderEvent): Promise<Sub> {\n        const subscription = await getSubscription(event, this);\n\n        // Prevent tampering with our tag in any subclass' _getSubscriber\n        const tag = subscription.tag;\n\n        let sub = this.#subs.get(tag);\n        if (!sub) {\n            const subscriber = this._getSubscriber(subscription);\n\n            const addressableMap = new WeakMap();\n            const nameMap = new Map();\n            sub = { subscriber, tag, addressableMap, nameMap, started: false, listeners: [ ] };\n            this.#subs.set(tag, sub);\n        }\n\n        return sub;\n    }\n\n    async on(event: ProviderEvent, listener: Listener): Promise<this> {\n        const sub = await this.#getSub(event);\n        sub.listeners.push({ listener, once: false });\n        if (!sub.started) {\n            sub.subscriber.start();\n            sub.started = true;\n            if (this.#pausedState != null) { sub.subscriber.pause(this.#pausedState); }\n        }\n        return this;\n    }\n\n    async once(event: ProviderEvent, listener: Listener): Promise<this> {\n        const sub = await this.#getSub(event);\n        sub.listeners.push({ listener, once: true });\n        if (!sub.started) {\n            sub.subscriber.start();\n            sub.started = true;\n            if (this.#pausedState != null) { sub.subscriber.pause(this.#pausedState); }\n        }\n        return this;\n    }\n\n    async emit(event: ProviderEvent, ...args: Array<any>): Promise<boolean> {\n        const sub = await this.#hasSub(event, args);\n        // If there is not subscription or if a recent emit removed\n        // the last of them (which also deleted the sub) do nothing\n        if (!sub || sub.listeners.length === 0) { return false; };\n\n        const count = sub.listeners.length;\n        sub.listeners = sub.listeners.filter(({ listener, once }) => {\n            const payload = new EventPayload(this, (once ? null: listener), event);\n            try {\n                listener.call(this, ...args, payload);\n            } catch(error) { }\n            return !once;\n        });\n\n        if (sub.listeners.length === 0) {\n            if (sub.started) { sub.subscriber.stop(); }\n            this.#subs.delete(sub.tag);\n        }\n\n        return (count > 0);\n    }\n\n    async listenerCount(event?: ProviderEvent): Promise<number> {\n        if (event) {\n            const sub = await this.#hasSub(event);\n            if (!sub) { return 0; }\n            return sub.listeners.length;\n        }\n\n        let total = 0;\n        for (const { listeners } of this.#subs.values()) {\n            total += listeners.length;\n        }\n        return total;\n    }\n\n    async listeners(event?: ProviderEvent): Promise<Array<Listener>> {\n        if (event) {\n            const sub = await this.#hasSub(event);\n            if (!sub) { return  [ ]; }\n            return sub.listeners.map(({ listener }) => listener);\n        }\n        let result: Array<Listener> = [ ];\n        for (const { listeners } of this.#subs.values()) {\n            result = result.concat(listeners.map(({ listener }) => listener));\n        }\n        return result;\n    }\n\n    async off(event: ProviderEvent, listener?: Listener): Promise<this> {\n        const sub = await this.#hasSub(event);\n        if (!sub) { return this; }\n\n        if (listener) {\n            const index = sub.listeners.map(({ listener }) => listener).indexOf(listener);\n            if (index >= 0) { sub.listeners.splice(index, 1); }\n        }\n\n        if (!listener || sub.listeners.length === 0) {\n            if (sub.started) { sub.subscriber.stop(); }\n            this.#subs.delete(sub.tag);\n        }\n\n        return this;\n    }\n\n    async removeAllListeners(event?: ProviderEvent): Promise<this> {\n        if (event) {\n            const { tag, started, subscriber } = await this.#getSub(event);\n            if (started) { subscriber.stop(); }\n            this.#subs.delete(tag);\n        } else {\n            for (const [ tag, { started, subscriber } ] of this.#subs) {\n                if (started) { subscriber.stop(); }\n                this.#subs.delete(tag);\n            }\n        }\n        return this;\n    }\n\n    // Alias for \"on\"\n    async addListener(event: ProviderEvent, listener: Listener): Promise<this> {\n       return await this.on(event, listener);\n    }\n\n    // Alias for \"off\"\n    async removeListener(event: ProviderEvent, listener: Listener): Promise<this> {\n       return this.off(event, listener);\n    }\n\n    /**\n     *  If this provider has been destroyed using the [[destroy]] method.\n     *\n     *  Once destroyed, all resources are reclaimed, internal event loops\n     *  and timers are cleaned up and no further requests may be sent to\n     *  the provider.\n     */\n    get destroyed(): boolean {\n        return this.#destroyed;\n    }\n\n    /**\n     *  Sub-classes may use this to shutdown any sockets or release their\n     *  resources and reject any pending requests.\n     *\n     *  Sub-classes **must** call ``super.destroy()``.\n     */\n    destroy(): void {\n        // Stop all listeners\n        this.removeAllListeners();\n\n        // Shut down all tiemrs\n        for (const timerId of this.#timers.keys()) {\n            this._clearTimeout(timerId);\n        }\n\n        this.#destroyed = true;\n    }\n\n    /**\n     *  Whether the provider is currently paused.\n     *\n     *  A paused provider will not emit any events, and generally should\n     *  not make any requests to the network, but that is up to sub-classes\n     *  to manage.\n     *\n     *  Setting ``paused = true`` is identical to calling ``.pause(false)``,\n     *  which will buffer any events that occur while paused until the\n     *  provider is unpaused.\n     */\n    get paused(): boolean { return (this.#pausedState != null); }\n    set paused(pause: boolean) {\n        if (!!pause === this.paused) { return; }\n\n        if (this.paused) {\n            this.resume();\n        } else {\n            this.pause(false);\n        }\n    }\n\n    /**\n     *  Pause the provider. If %%dropWhilePaused%%, any events that occur\n     *  while paused are dropped, otherwise all events will be emitted once\n     *  the provider is unpaused.\n     */\n    pause(dropWhilePaused?: boolean): void {\n        this.#lastBlockNumber = -1;\n\n        if (this.#pausedState != null) {\n            if (this.#pausedState == !!dropWhilePaused) { return; }\n            assert(false, \"cannot change pause type; resume first\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"pause\"\n            });\n        }\n\n        this._forEachSubscriber((s) => s.pause(dropWhilePaused));\n        this.#pausedState = !!dropWhilePaused;\n\n        for (const timer of this.#timers.values()) {\n            // Clear the timer\n            if (timer.timer) { clearTimeout(timer.timer); }\n\n            // Remaining time needed for when we become unpaused\n            timer.time = getTime() - timer.time;\n        }\n    }\n\n    /**\n     *  Resume the provider.\n     */\n    resume(): void {\n        if (this.#pausedState == null) { return; }\n\n        this._forEachSubscriber((s) => s.resume());\n        this.#pausedState = null;\n        for (const timer of this.#timers.values()) {\n            // Remaining time when we were paused\n            let timeout = timer.time;\n            if (timeout < 0) { timeout = 0; }\n\n            // Start time (in cause paused, so we con compute remaininf time)\n            timer.time = getTime();\n\n            // Start the timer\n            setTimeout(timer.func, timeout);\n        }\n    }\n}\n\n\nfunction _parseString(result: string, start: number): null | string {\n    try {\n        const bytes = _parseBytes(result, start);\n        if (bytes) { return toUtf8String(bytes); }\n    } catch(error) { }\n    return null;\n}\n\nfunction _parseBytes(result: string, start: number): null | string {\n    if (result === \"0x\") { return null; }\n    try {\n        const offset = getNumber(dataSlice(result, start, start + 32));\n        const length = getNumber(dataSlice(result, offset, offset + 32));\n\n        return dataSlice(result, offset + 32, offset + 32 + length);\n    } catch (error) { }\n    return null;\n}\n\nfunction numPad(value: number): Uint8Array {\n    const result = toBeArray(value);\n    if (result.length > 32) { throw new Error(\"internal; should not happen\"); }\n\n    const padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n}\n\nfunction bytesPad(value: Uint8Array): Uint8Array {\n    if ((value.length % 32) === 0) { return value; }\n\n    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n}\n\nconst empty: Uint8Array = new Uint8Array([ ]);\n\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas: Array<BytesLike>): string {\n    const result: Array<Uint8Array> = [ ];\n\n    let byteCount = 0;\n\n    // Add place-holders for pointers as we add items\n    for (let i = 0; i < datas.length; i++) {\n        result.push(empty);\n        byteCount += 32;\n    }\n\n    for (let i = 0; i < datas.length; i++) {\n        const data = getBytes(datas[i]);\n\n        // Update the bytes offset\n        result[i] = numPad(byteCount);\n\n        // The length and padded value of data\n        result.push(numPad(data.length));\n        result.push(bytesPad(data));\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n\n    return concat(result);\n}\n\nconst zeros = \"0x0000000000000000000000000000000000000000000000000000000000000000\"\nfunction parseOffchainLookup(data: string): CcipArgs {\n    const result: CcipArgs = {\n        sender: \"\", urls: [ ], calldata: \"\", selector: \"\", extraData: \"\", errorArgs: [ ]\n    };\n\n    assert(dataLength(data) >= 5 * 32, \"insufficient OffchainLookup data\", \"OFFCHAIN_FAULT\", {\n        reason: \"insufficient OffchainLookup data\"\n    });\n\n    const sender = dataSlice(data, 0, 32);\n    assert(dataSlice(sender, 0, 12) === dataSlice(zeros, 0, 12), \"corrupt OffchainLookup sender\", \"OFFCHAIN_FAULT\", {\n        reason: \"corrupt OffchainLookup sender\"\n    });\n    result.sender = dataSlice(sender, 12);\n\n    // Read the URLs from the response\n    try {\n        const urls: Array<string> = [];\n        const urlsOffset = getNumber(dataSlice(data, 32, 64));\n        const urlsLength = getNumber(dataSlice(data, urlsOffset, urlsOffset + 32));\n        const urlsData = dataSlice(data, urlsOffset + 32);\n        for (let u = 0; u < urlsLength; u++) {\n            const url = _parseString(urlsData, u * 32);\n            if (url == null) { throw new Error(\"abort\"); }\n            urls.push(url);\n        }\n        result.urls = urls;\n    } catch (error) {\n        assert(false, \"corrupt OffchainLookup urls\", \"OFFCHAIN_FAULT\", {\n            reason: \"corrupt OffchainLookup urls\"\n        });\n    }\n\n    // Get the CCIP calldata to forward\n    try {\n        const calldata = _parseBytes(data, 64);\n        if (calldata == null) { throw new Error(\"abort\"); }\n        result.calldata = calldata;\n    } catch (error) {\n        assert(false, \"corrupt OffchainLookup calldata\", \"OFFCHAIN_FAULT\", {\n            reason: \"corrupt OffchainLookup calldata\"\n        });\n    }\n\n    // Get the callbackSelector (bytes4)\n    assert(dataSlice(data, 100, 128) === dataSlice(zeros, 0, 28), \"corrupt OffchainLookup callbaackSelector\", \"OFFCHAIN_FAULT\", {\n        reason: \"corrupt OffchainLookup callbaackSelector\"\n    });\n    result.selector = dataSlice(data, 96, 100);\n\n    // Get the extra data to send back to the contract as context\n    try {\n        const extraData = _parseBytes(data, 128);\n        if (extraData == null) { throw new Error(\"abort\"); }\n        result.extraData = extraData;\n    } catch (error) {\n        assert(false, \"corrupt OffchainLookup extraData\", \"OFFCHAIN_FAULT\", {\n            reason: \"corrupt OffchainLookup extraData\"\n        });\n    }\n\n    result.errorArgs = \"sender,urls,calldata,selector,extraData\".split(/,/).map((k) => (<any>result)[k])\n\n    return result;\n}\n", "/**\n *  Generally the [[Wallet]] and [[JsonRpcSigner]] and their sub-classes\n *  are sufficent for most developers, but this is provided to\n *  fascilitate more complex Signers.\n *\n *  @_section: api/providers/abstract-signer: Subclassing Signer [abstract-signer]\n */\nimport { resolveAddress } from \"../address/index.js\";\nimport { Transaction } from \"../transaction/index.js\";\nimport {\n    defineProperties, getBigInt, resolveProperties,\n    assert, assertArgument\n} from \"../utils/index.js\";\n\nimport { copyRequest } from \"./provider.js\";\n\nimport type { TypedDataDomain, TypedDataField } from \"../hash/index.js\";\nimport type { TransactionLike } from \"../transaction/index.js\";\n\nimport type {\n    BlockTag, Provider, TransactionRequest, TransactionResponse\n} from \"./provider.js\";\nimport type { Signer } from \"./signer.js\";\n\n\nfunction checkProvider(signer: AbstractSigner, operation: string): Provider {\n    if (signer.provider) { return signer.provider; }\n    assert(false, \"missing provider\", \"UNSUPPORTED_OPERATION\", { operation });\n}\n\nasync function populate(signer: AbstractSigner, tx: TransactionRequest): Promise<TransactionLike<string>> {\n    let pop: any = copyRequest(tx);\n\n    if (pop.to != null) { pop.to = resolveAddress(pop.to, signer); }\n\n    if (pop.from != null) {\n        const from = pop.from;\n        pop.from = Promise.all([\n            signer.getAddress(),\n            resolveAddress(from, signer)\n        ]).then(([ address, from ]) => {\n            assertArgument(address.toLowerCase() === from.toLowerCase(),\n                \"transaction from mismatch\", \"tx.from\", from);\n            return address;\n        });\n    } else {\n        pop.from = signer.getAddress();\n    }\n\n    return await resolveProperties(pop);\n}\n\n\n/**\n *  An **AbstractSigner** includes most of teh functionality required\n *  to get a [[Signer]] working as expected, but requires a few\n *  Signer-specific methods be overridden.\n *\n */\nexport abstract class AbstractSigner<P extends null | Provider = null | Provider> implements Signer {\n    /**\n     *  The provider this signer is connected to.\n     */\n    readonly provider!: P;\n\n    /**\n     *  Creates a new Signer connected to %%provider%%.\n     */\n    constructor(provider?: P) {\n        defineProperties<AbstractSigner>(this, { provider: (provider || null) });\n    }\n\n    /**\n     *  Resolves to the Signer address.\n     */\n    abstract getAddress(): Promise<string>;\n\n    /**\n     *  Returns the signer connected to %%provider%%.\n     *\n     *  This may throw, for example, a Signer connected over a Socket or\n     *  to a specific instance of a node may not be transferrable.\n     */\n    abstract connect(provider: null | Provider): Signer;\n\n    async getNonce(blockTag?: BlockTag): Promise<number> {\n        return checkProvider(this, \"getTransactionCount\").getTransactionCount(await this.getAddress(), blockTag);\n    }\n\n    async populateCall(tx: TransactionRequest): Promise<TransactionLike<string>> {\n        const pop = await populate(this, tx);\n        return pop;\n    }\n\n    async populateTransaction(tx: TransactionRequest): Promise<TransactionLike<string>> {\n        const provider = checkProvider(this, \"populateTransaction\");\n\n        const pop = await populate(this, tx);\n\n        if (pop.nonce == null) {\n            pop.nonce = await this.getNonce(\"pending\");\n        }\n\n        if (pop.gasLimit == null) {\n            pop.gasLimit = await this.estimateGas(pop);\n        }\n\n        // Populate the chain ID\n        const network = await (<Provider>(this.provider)).getNetwork();\n        if (pop.chainId != null) {\n            const chainId = getBigInt(pop.chainId);\n            assertArgument(chainId === network.chainId, \"transaction chainId mismatch\", \"tx.chainId\", tx.chainId);\n        } else {\n            pop.chainId = network.chainId;\n        }\n\n        // Do not allow mixing pre-eip-1559 and eip-1559 properties\n        const hasEip1559 = (pop.maxFeePerGas != null || pop.maxPriorityFeePerGas != null);\n        if (pop.gasPrice != null && (pop.type === 2 || hasEip1559)) {\n            assertArgument(false, \"eip-1559 transaction do not support gasPrice\", \"tx\", tx);\n        } else if ((pop.type === 0 || pop.type === 1) && hasEip1559) {\n            assertArgument(false, \"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"tx\", tx);\n        }\n\n        if ((pop.type === 2 || pop.type == null) && (pop.maxFeePerGas != null && pop.maxPriorityFeePerGas != null)) {\n            // Fully-formed EIP-1559 transaction (skip getFeeData)\n            pop.type = 2;\n\n        } else if (pop.type === 0 || pop.type === 1) {\n            // Explicit Legacy or EIP-2930 transaction\n\n            // We need to get fee data to determine things\n            const feeData = await provider.getFeeData();\n\n            assert(feeData.gasPrice != null, \"network does not support gasPrice\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"getGasPrice\" });\n\n            // Populate missing gasPrice\n            if (pop.gasPrice == null) { pop.gasPrice = feeData.gasPrice; }\n\n        } else {\n\n            // We need to get fee data to determine things\n            const feeData = await provider.getFeeData();\n\n            if (pop.type == null) {\n                // We need to auto-detect the intended type of this transaction...\n\n                if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                    // The network supports EIP-1559!\n\n                    // Upgrade transaction from null to eip-1559\n                    pop.type = 2;\n\n                    if (pop.gasPrice != null) {\n                        // Using legacy gasPrice property on an eip-1559 network,\n                        // so use gasPrice as both fee properties\n                        const gasPrice = pop.gasPrice;\n                        delete pop.gasPrice;\n                        pop.maxFeePerGas = gasPrice;\n                        pop.maxPriorityFeePerGas = gasPrice;\n\n                    } else {\n                        // Populate missing fee data\n\n                        if (pop.maxFeePerGas == null) {\n                            pop.maxFeePerGas = feeData.maxFeePerGas;\n                        }\n\n                        if (pop.maxPriorityFeePerGas == null) {\n                            pop.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                        }\n                    }\n\n                } else if (feeData.gasPrice != null) {\n                    // Network doesn't support EIP-1559...\n\n                    // ...but they are trying to use EIP-1559 properties\n                    assert(!hasEip1559, \"network does not support EIP-1559\", \"UNSUPPORTED_OPERATION\", {\n                            operation: \"populateTransaction\" });\n\n                    // Populate missing fee data\n                    if (pop.gasPrice == null) {\n                        pop.gasPrice = feeData.gasPrice;\n                    }\n\n                    // Explicitly set untyped transaction to legacy\n                    // @TODO: Maybe this shold allow type 1?\n                    pop.type = 0;\n\n               } else {\n                    // getFeeData has failed us.\n                    assert(false, \"failed to get consistent fee data\", \"UNSUPPORTED_OPERATION\", {\n                        operation: \"signer.getFeeData\" });\n                }\n\n            } else if (pop.type === 2 || pop.type === 3) {\n                // Explicitly using EIP-1559 or EIP-4844\n\n                // Populate missing fee data\n                if (pop.maxFeePerGas == null) {\n                    pop.maxFeePerGas = feeData.maxFeePerGas;\n                }\n\n                if (pop.maxPriorityFeePerGas == null) {\n                    pop.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                }\n            }\n        }\n\n//@TOOD: Don't await all over the place; save them up for\n// the end for better batching\n        return await resolveProperties(pop);\n    }\n\n    async estimateGas(tx: TransactionRequest): Promise<bigint> {\n        return checkProvider(this, \"estimateGas\").estimateGas(await this.populateCall(tx));\n    }\n\n    async call(tx: TransactionRequest): Promise<string> {\n        return checkProvider(this, \"call\").call(await this.populateCall(tx));\n    }\n\n    async resolveName(name: string): Promise<null | string> {\n        const provider = checkProvider(this, \"resolveName\");\n        return await provider.resolveName(name);\n    }\n\n    async sendTransaction(tx: TransactionRequest): Promise<TransactionResponse> {\n        const provider = checkProvider(this, \"sendTransaction\");\n\n        const pop = await this.populateTransaction(tx);\n        delete pop.from;\n        const txObj = Transaction.from(pop);\n        return await provider.broadcastTransaction(await this.signTransaction(txObj));\n    }\n\n    abstract signTransaction(tx: TransactionRequest): Promise<string>;\n    abstract signMessage(message: string | Uint8Array): Promise<string>;\n    abstract signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string>;\n}\n\n/**\n *  A **VoidSigner** is a class deisgned to allow an address to be used\n *  in any API which accepts a Signer, but for which there are no\n *  credentials available to perform any actual signing.\n *\n *  This for example allow impersonating an account for the purpose of\n *  static calls or estimating gas, but does not allow sending transactions.\n */\nexport class VoidSigner extends AbstractSigner {\n    /**\n     *  The signer address.\n     */\n    readonly address!: string;\n\n    /**\n     *  Creates a new **VoidSigner** with %%address%% attached to\n     *  %%provider%%.\n     */\n    constructor(address: string, provider?: null | Provider) {\n        super(provider);\n        defineProperties<VoidSigner>(this, { address });\n    }\n\n    async getAddress(): Promise<string> { return this.address; }\n\n    connect(provider: null | Provider): VoidSigner {\n        return new VoidSigner(this.address, provider);\n    }\n\n    #throwUnsupported(suffix: string, operation: string): never {\n        assert(false, `VoidSigner cannot sign ${ suffix }`, \"UNSUPPORTED_OPERATION\", { operation });\n    }\n\n    async signTransaction(tx: TransactionRequest): Promise<string> {\n        this.#throwUnsupported(\"transactions\", \"signTransaction\");\n    }\n\n    async signMessage(message: string | Uint8Array): Promise<string> {\n        this.#throwUnsupported(\"messages\", \"signMessage\");\n    }\n\n    async signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        this.#throwUnsupported(\"typed-data\", \"signTypedData\");\n    }\n}\n\n", "/**\n *  One of the most common ways to interact with the blockchain is\n *  by a node running a JSON-RPC interface which can be connected to,\n *  based on the transport, using:\n *\n *  - HTTP or HTTPS - [[JsonRpcProvider]]\n *  - WebSocket - [[WebSocketProvider]]\n *  - IPC - [[IpcSocketProvider]]\n *\n * @_section: api/providers/jsonrpc:JSON-RPC Provider  [about-jsonrpcProvider]\n */\n\n// @TODO:\n// - Add the batching API\n\n// https://playground.open-rpc.org/?schemaUrl=https://raw.githubusercontent.com/ethereum/eth1.0-apis/assembled-spec/openrpc.json&uiSchema%5BappBar%5D%5Bui:splitView%5D=true&uiSchema%5BappBar%5D%5Bui:input%5D=false&uiSchema%5BappBar%5D%5Bui:examplesDropdown%5D=false\n\nimport { AbiCoder } from \"../abi/index.js\";\nimport { getAddress, resolveAddress } from \"../address/index.js\";\nimport { TypedDataEncoder } from \"../hash/index.js\";\nimport { accessListify } from \"../transaction/index.js\";\nimport {\n    defineProperties, getBigInt, hexlify, isHexString, toQuantity, toUtf8Bytes,\n    isError, makeError, assert, assertArgument,\n    FetchRequest, resolveProperties\n} from \"../utils/index.js\";\n\nimport { AbstractProvider, UnmanagedSubscriber } from \"./abstract-provider.js\";\nimport { AbstractSigner } from \"./abstract-signer.js\";\nimport { Network } from \"./network.js\";\nimport { FilterIdEventSubscriber, FilterIdPendingSubscriber } from \"./subscriber-filterid.js\";\nimport { PollingEventSubscriber } from \"./subscriber-polling.js\";\n\nimport type { TypedDataDomain, TypedDataField } from \"../hash/index.js\";\nimport type { TransactionLike } from \"../transaction/index.js\";\n\nimport type { PerformActionRequest, Subscriber, Subscription } from \"./abstract-provider.js\";\nimport type { Networkish } from \"./network.js\";\nimport type { Provider, TransactionRequest, TransactionResponse } from \"./provider.js\";\nimport type { Signer } from \"./signer.js\";\n\ntype Timer = ReturnType<typeof setTimeout>;\n\nconst Primitive = \"bigint,boolean,function,number,string,symbol\".split(/,/g);\n//const Methods = \"getAddress,then\".split(/,/g);\nfunction deepCopy<T = any>(value: T): T {\n    if (value == null || Primitive.indexOf(typeof(value)) >= 0) {\n        return value;\n    }\n\n    // Keep any Addressable\n    if (typeof((<any>value).getAddress) === \"function\") {\n        return value;\n    }\n\n    if (Array.isArray(value)) { return <any>(value.map(deepCopy)); }\n\n    if (typeof(value) === \"object\") {\n        return Object.keys(value).reduce((accum, key) => {\n            accum[key] = (<any>value)[key];\n            return accum;\n        }, <any>{ });\n    }\n\n    throw new Error(`should not happen: ${ value } (${ typeof(value) })`);\n}\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => { setTimeout(resolve, duration); });\n}\n\nfunction getLowerCase(value: string): string {\n    if (value) { return value.toLowerCase(); }\n    return value;\n}\n\ninterface Pollable {\n    pollingInterval: number;\n}\n\nfunction isPollable(value: any): value is Pollable {\n    return (value && typeof(value.pollingInterval) === \"number\");\n}\n\n/**\n *  A JSON-RPC payload, which are sent to a JSON-RPC server.\n */\nexport type JsonRpcPayload = {\n    /**\n     *  The JSON-RPC request ID.\n     */\n    id: number;\n\n    /**\n     *  The JSON-RPC request method.\n     */\n    method: string;\n\n    /**\n     *  The JSON-RPC request parameters.\n     */\n    params: Array<any> | Record<string, any>;\n\n    /**\n     *  A required constant in the JSON-RPC specification.\n     */\n    jsonrpc: \"2.0\";\n};\n\n/**\n *  A JSON-RPC result, which are returned on success from a JSON-RPC server.\n */\nexport type JsonRpcResult = {\n    /**\n     *  The response ID to match it to the relevant request.\n     */\n    id: number;\n\n    /**\n     *  The response result.\n     */\n    result: any;\n};\n\n/**\n *  A JSON-RPC error, which are returned on failure from a JSON-RPC server.\n */\nexport type JsonRpcError = {\n    /**\n     *  The response ID to match it to the relevant request.\n     */\n    id: number;\n\n    /**\n     *  The response error.\n     */\n    error: {\n        code: number;\n        message?: string;\n        data?: any;\n    }\n};\n\n/**\n *  When subscribing to the ``\"debug\"`` event, the [[Listener]] will\n *  receive this object as the first parameter.\n */\nexport type DebugEventJsonRpcApiProvider = {\n    action: \"sendRpcPayload\",\n    payload: JsonRpcPayload | Array<JsonRpcPayload>\n} | {\n    action: \"receiveRpcResult\",\n    result: Array<JsonRpcResult | JsonRpcError>\n} | {\n    action: \"receiveRpcError\",\n    error: Error\n};\n\n/**\n *  Options for configuring a [[JsonRpcApiProvider]]. Much of this\n *  is targetted towards sub-classes, which often will not expose\n *  any of these options to their consumers.\n *\n *  **``polling``** - use the polling strategy is used immediately\n *  for events; otherwise, attempt to use filters and fall back onto\n *  polling (default: ``false``)\n *\n *  **``staticNetwork``** - do not request chain ID on requests to\n *  validate the underlying chain has not changed (default: ``null``)\n *\n *  This should **ONLY** be used if it is **certain** that the network\n *  cannot change, such as when using INFURA (since the URL dictates the\n *  network). If the network is assumed static and it does change, this\n *  can have tragic consequences. For example, this **CANNOT** be used\n *  with MetaMask, since the user can select a new network from the\n *  drop-down at any time.\n *\n *  **``batchStallTime``** - how long (ms) to aggregate requests into a\n *  single batch. ``0`` indicates batching will only encompass the current\n *  event loop. If ``batchMaxCount = 1``, this is ignored. (default: ``10``)\n *\n *  **``batchMaxSize``** - target maximum size (bytes) to allow per batch\n *  request (default: 1Mb)\n *\n *  **``batchMaxCount``** - maximum number of requests to allow in a batch.\n *  If ``batchMaxCount = 1``, then batching is disabled. (default: ``100``)\n *\n *  **``cacheTimeout``** - passed as [[AbstractProviderOptions]].\n */\nexport type JsonRpcApiProviderOptions = {\n    polling?: boolean;\n    staticNetwork?: null | boolean | Network;\n    batchStallTime?: number;\n    batchMaxSize?: number;\n    batchMaxCount?: number;\n\n    cacheTimeout?: number;\n    pollingInterval?: number;\n};\n\nconst defaultOptions = {\n    polling: false,\n    staticNetwork: null,\n\n    batchStallTime: 10,      // 10ms\n    batchMaxSize: (1 << 20), // 1Mb\n    batchMaxCount: 100,      // 100 requests\n\n    cacheTimeout: 250,\n    pollingInterval: 4000\n}\n\n/**\n *  A **JsonRpcTransactionRequest** is formatted as needed by the JSON-RPC\n *  Ethereum API specification.\n */\nexport interface JsonRpcTransactionRequest {\n     /**\n      *  The sender address to use when signing.\n      */\n     from?: string;\n\n     /**\n      *  The target address.\n      */\n     to?: string;\n\n     /**\n      *  The transaction data.\n      */\n     data?: string;\n\n     /**\n      *  The chain ID the transaction is valid on.\n      */\n     chainId?: string;\n\n     /**\n      *  The [[link-eip-2718]] transaction type.\n      */\n     type?: string;\n\n     /**\n      *  The maximum amount of gas to allow a transaction to consume.\n      *\n      *  In most other places in ethers, this is called ``gasLimit`` which\n      *  differs from the JSON-RPC Ethereum API specification.\n      */\n     gas?: string;\n\n     /**\n      *  The gas price per wei for transactions prior to [[link-eip-1559]].\n      */\n     gasPrice?: string;\n\n     /**\n      *  The maximum fee per gas for [[link-eip-1559]] transactions.\n      */\n     maxFeePerGas?: string;\n\n     /**\n      *  The maximum priority fee per gas for [[link-eip-1559]] transactions.\n      */\n     maxPriorityFeePerGas?: string;\n\n     /**\n      *  The nonce for the transaction.\n      */\n     nonce?: string;\n\n     /**\n      *  The transaction value (in wei).\n      */\n     value?: string;\n\n     /**\n      *  The transaction access list.\n      */\n     accessList?: Array<{ address: string, storageKeys: Array<string> }>;\n}\n\n// @TODO: Unchecked Signers\n\nexport class JsonRpcSigner extends AbstractSigner<JsonRpcApiProvider> {\n    address!: string;\n\n    constructor(provider: JsonRpcApiProvider, address: string) {\n        super(provider);\n        address = getAddress(address);\n        defineProperties<JsonRpcSigner>(this, { address });\n    }\n\n    connect(provider: null | Provider): Signer {\n        assert(false, \"cannot reconnect JsonRpcSigner\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"signer.connect\"\n        });\n    }\n\n    async getAddress(): Promise<string> {\n        return this.address;\n    }\n\n    // JSON-RPC will automatially fill in nonce, etc. so we just check from\n    async populateTransaction(tx: TransactionRequest): Promise<TransactionLike<string>> {\n        return await this.populateCall(tx);\n    }\n\n    // Returns just the hash of the transaction after sent, which is what\n    // the bare JSON-RPC API does;\n    async sendUncheckedTransaction(_tx: TransactionRequest): Promise<string> {\n        const tx = deepCopy(_tx);\n\n        const promises: Array<Promise<void>> = [];\n\n        // Make sure the from matches the sender\n        if (tx.from) {\n            const _from = tx.from;\n            promises.push((async () => {\n                const from = await resolveAddress(_from, this.provider);\n                assertArgument(from != null && from.toLowerCase() === this.address.toLowerCase(),\n                    \"from address mismatch\", \"transaction\", _tx);\n                tx.from = from;\n            })());\n        } else {\n            tx.from = this.address;\n        }\n\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (tx.gasLimit == null) {\n            promises.push((async () => {\n                tx.gasLimit = await this.provider.estimateGas({ ...tx, from: this.address});\n            })());\n        }\n\n        // The address may be an ENS name or Addressable\n        if (tx.to != null) {\n            const _to = tx.to;\n            promises.push((async () => {\n                tx.to = await resolveAddress(_to, this.provider);\n            })());\n        }\n\n        // Wait until all of our properties are filled in\n        if (promises.length) { await Promise.all(promises); }\n\n        const hexTx = this.provider.getRpcTransaction(tx);\n\n        return this.provider.send(\"eth_sendTransaction\", [ hexTx ]);\n    }\n\n    async sendTransaction(tx: TransactionRequest): Promise<TransactionResponse> {\n        // This cannot be mined any earlier than any recent block\n        const blockNumber = await this.provider.getBlockNumber();\n\n        // Send the transaction\n        const hash = await this.sendUncheckedTransaction(tx);\n\n        // Unfortunately, JSON-RPC only provides and opaque transaction hash\n        // for a response, and we need the actual transaction, so we poll\n        // for it; it should show up very quickly\n        return await (new Promise((resolve, reject) => {\n            const timeouts = [ 1000, 100 ];\n            let invalids = 0;\n\n            const checkTx = async () => {\n\n                try {\n                    // Try getting the transaction\n                    const tx = await this.provider.getTransaction(hash);\n\n                    if (tx != null) {\n                        resolve(tx.replaceableTransaction(blockNumber));\n                        return;\n                    }\n\n                } catch (error) {\n\n                    // If we were cancelled: stop polling.\n                    // If the data is bad: the node returns bad transactions\n                    // If the network changed: calling again will also fail\n                    // If unsupported: likely destroyed\n                    if (isError(error, \"CANCELLED\") || isError(error, \"BAD_DATA\") ||\n                        isError(error, \"NETWORK_ERROR\") || isError(error, \"UNSUPPORTED_OPERATION\")) {\n\n                        if (error.info == null) { error.info = { }; }\n                        error.info.sendTransactionHash = hash;\n\n                        reject(error);\n                        return;\n                    }\n\n                    // Stop-gap for misbehaving backends; see #4513\n                    if (isError(error, \"INVALID_ARGUMENT\")) {\n                        invalids++;\n                        if (error.info == null) { error.info = { }; }\n                        error.info.sendTransactionHash = hash;\n                        if (invalids > 10) {\n                            reject(error);\n                            return;\n                        }\n                    }\n\n                    // Notify anyone that cares; but we will try again, since\n                    // it is likely an intermittent service error\n                    this.provider.emit(\"error\", makeError(\"failed to fetch transation after sending (will try again)\", \"UNKNOWN_ERROR\", { error }));\n                }\n\n                // Wait another 4 seconds\n                this.provider._setTimeout(() => { checkTx(); }, timeouts.pop() || 4000);\n            };\n            checkTx();\n        }));\n    }\n\n    async signTransaction(_tx: TransactionRequest): Promise<string> {\n        const tx = deepCopy(_tx);\n\n        // Make sure the from matches the sender\n        if (tx.from) {\n            const from = await resolveAddress(tx.from, this.provider);\n            assertArgument(from != null && from.toLowerCase() === this.address.toLowerCase(),\n                \"from address mismatch\", \"transaction\", _tx);\n            tx.from = from;\n        } else {\n            tx.from = this.address;\n        }\n\n        const hexTx = this.provider.getRpcTransaction(tx);\n        return await this.provider.send(\"eth_signTransaction\", [ hexTx ]);\n    }\n\n\n    async signMessage(_message: string | Uint8Array): Promise<string> {\n        const message = ((typeof(_message) === \"string\") ? toUtf8Bytes(_message): _message);\n        return await this.provider.send(\"personal_sign\", [\n            hexlify(message), this.address.toLowerCase() ]);\n    }\n\n    async signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, _value: Record<string, any>): Promise<string> {\n        const value = deepCopy(_value);\n\n        // Populate any ENS names (in-place)\n        const populated = await TypedDataEncoder.resolveNames(domain, types, value, async (value: string) => {\n            const address = await resolveAddress(value);\n            assertArgument(address != null, \"TypedData does not support null address\", \"value\", value);\n            return address;\n        });\n\n        return await this.provider.send(\"eth_signTypedData_v4\", [\n            this.address.toLowerCase(),\n            JSON.stringify(TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n        ]);\n    }\n\n    async unlock(password: string): Promise<boolean> {\n        return this.provider.send(\"personal_unlockAccount\", [\n            this.address.toLowerCase(), password, null ]);\n    }\n\n    // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n    async _legacySignMessage(_message: string | Uint8Array): Promise<string> {\n        const message = ((typeof(_message) === \"string\") ? toUtf8Bytes(_message): _message);\n        return await this.provider.send(\"eth_sign\", [\n            this.address.toLowerCase(), hexlify(message) ]);\n    }\n}\n\ntype ResolveFunc = (result: JsonRpcResult) => void;\ntype RejectFunc = (error: Error) => void;\n\ntype Payload = { payload: JsonRpcPayload, resolve: ResolveFunc, reject: RejectFunc };\n\n/**\n *  The JsonRpcApiProvider is an abstract class and **MUST** be\n *  sub-classed.\n *\n *  It provides the base for all JSON-RPC-based Provider interaction.\n *\n *  Sub-classing Notes:\n *  - a sub-class MUST override _send\n *  - a sub-class MUST call the `_start()` method once connected\n */\nexport abstract class JsonRpcApiProvider extends AbstractProvider {\n\n    #options: Required<JsonRpcApiProviderOptions>;\n\n    // The next ID to use for the JSON-RPC ID field\n    #nextId: number;\n\n    // Payloads are queued and triggered in batches using the drainTimer\n    #payloads: Array<Payload>;\n    #drainTimer: null | Timer;\n\n    #notReady: null | {\n        promise: Promise<void>,\n        resolve: null | ((v: void) => void)\n    };\n\n    #network: null | Network;\n    #pendingDetectNetwork: null | Promise<Network>;\n\n    #scheduleDrain(): void {\n        if (this.#drainTimer) { return; }\n\n        // If we aren't using batching, no harm in sending it immediately\n        const stallTime = (this._getOption(\"batchMaxCount\") === 1) ? 0: this._getOption(\"batchStallTime\");\n\n        this.#drainTimer = setTimeout(() => {\n            this.#drainTimer = null;\n\n            const payloads = this.#payloads;\n            this.#payloads = [ ];\n\n            while (payloads.length) {\n\n                // Create payload batches that satisfy our batch constraints\n                const batch = [ <Payload>(payloads.shift()) ];\n                while (payloads.length) {\n                    if (batch.length === this.#options.batchMaxCount) { break; }\n                    batch.push(<Payload>(payloads.shift()));\n                    const bytes = JSON.stringify(batch.map((p) => p.payload));\n                    if (bytes.length > this.#options.batchMaxSize) {\n                        payloads.unshift(<Payload>(batch.pop()));\n                        break;\n                    }\n                }\n\n                // Process the result to each payload\n                (async () => {\n                    const payload = ((batch.length === 1) ? batch[0].payload: batch.map((p) => p.payload));\n\n                    this.emit(\"debug\", { action: \"sendRpcPayload\", payload });\n\n                    try {\n                        const result = await this._send(payload);\n                        this.emit(\"debug\", { action: \"receiveRpcResult\", result });\n\n                        // Process results in batch order\n                        for (const { resolve, reject, payload } of batch) {\n\n                            if (this.destroyed) {\n                                reject(makeError(\"provider destroyed; cancelled request\", \"UNSUPPORTED_OPERATION\", { operation: payload.method }));\n                                continue;\n                            }\n\n                            // Find the matching result\n                            const resp = result.filter((r) => (r.id === payload.id))[0];\n\n                            // No result; the node failed us in unexpected ways\n                            if (resp == null) {\n                                const error = makeError(\"missing response for request\", \"BAD_DATA\", {\n                                    value: result, info: { payload }\n                                });\n                                this.emit(\"error\", error);\n                                reject(error);\n                                continue;\n                            }\n\n                            // The response is an error\n                            if (\"error\" in resp) {\n                                reject(this.getRpcError(payload, resp));\n                                continue;\n                            }\n\n                            // All good; send the result\n                            resolve(resp.result);\n                        }\n\n                    } catch (error: any) {\n                        this.emit(\"debug\", { action: \"receiveRpcError\", error });\n\n                        for (const { reject } of batch) {\n                            // @TODO: augment the error with the payload\n                            reject(error);\n                        }\n                    }\n                })();\n            }\n        }, stallTime);\n    }\n\n    constructor(network?: Networkish, options?: JsonRpcApiProviderOptions) {\n        super(network, options);\n\n        this.#nextId = 1;\n        this.#options = Object.assign({ }, defaultOptions, options || { });\n\n        this.#payloads = [ ];\n        this.#drainTimer = null;\n\n        this.#network = null;\n        this.#pendingDetectNetwork = null;\n\n        {\n            let resolve: null | ((value: void) => void) = null;\n            const promise = new Promise((_resolve: (value: void) => void) => {\n                resolve = _resolve;\n            });\n            this.#notReady = { promise, resolve };\n        }\n\n        const staticNetwork = this._getOption(\"staticNetwork\");\n        if (typeof(staticNetwork) === \"boolean\") {\n            assertArgument(!staticNetwork || network !== \"any\", \"staticNetwork cannot be used on special network 'any'\", \"options\", options);\n            if (staticNetwork && network != null) {\n                this.#network = Network.from(network);\n            }\n\n        } else if (staticNetwork) {\n            // Make sure any static network is compatbile with the provided netwrok\n            assertArgument(network == null || staticNetwork.matches(network),\n                \"staticNetwork MUST match network object\", \"options\", options);\n            this.#network = staticNetwork;\n        }\n    }\n\n    /**\n     *  Returns the value associated with the option %%key%%.\n     *\n     *  Sub-classes can use this to inquire about configuration options.\n     */\n    _getOption<K extends keyof JsonRpcApiProviderOptions>(key: K): JsonRpcApiProviderOptions[K] {\n        return this.#options[key];\n    }\n\n    /**\n     *  Gets the [[Network]] this provider has committed to. On each call, the network\n     *  is detected, and if it has changed, the call will reject.\n     */\n    get _network(): Network {\n        assert (this.#network, \"network is not available yet\", \"NETWORK_ERROR\");\n        return this.#network;\n    }\n\n    /**\n     *  Sends a JSON-RPC %%payload%% (or a batch) to the underlying channel.\n     *\n     *  Sub-classes **MUST** override this.\n     */\n    abstract _send(payload: JsonRpcPayload | Array<JsonRpcPayload>): Promise<Array<JsonRpcResult | JsonRpcError>>;\n\n\n    /**\n     *  Resolves to the non-normalized value by performing %%req%%.\n     *\n     *  Sub-classes may override this to modify behavior of actions,\n     *  and should generally call ``super._perform`` as a fallback.\n     */\n    async _perform(req: PerformActionRequest): Promise<any> {\n\n        // Legacy networks do not like the type field being passed along (which\n        // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n        if (req.method === \"call\" || req.method === \"estimateGas\") {\n            let tx = req.transaction;\n            if (tx && tx.type != null && getBigInt(tx.type)) {\n                // If there are no EIP-1559 or newer properties, it might be pre-EIP-1559\n                if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                    const feeData = await this.getFeeData();\n                    if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                        // Network doesn't know about EIP-1559 (and hence type)\n                        req = Object.assign({ }, req, {\n                            transaction: Object.assign({ }, tx, { type: undefined })\n                        });\n                    }\n                }\n            }\n        }\n\n        const request = this.getRpcRequest(req);\n\n        if (request != null) {\n            return await this.send(request.method, request.args);\n        }\n\n        return super._perform(req);\n    }\n\n    /**\n     *  Sub-classes may override this; it detects the *actual* network that\n     *  we are **currently** connected to.\n     *\n     *  Keep in mind that [[send]] may only be used once [[ready]], otherwise the\n     *  _send primitive must be used instead.\n     */\n    async _detectNetwork(): Promise<Network> {\n        const network = this._getOption(\"staticNetwork\");\n        if (network) {\n            if (network === true) {\n                if (this.#network) { return this.#network; }\n            } else {\n                return network;\n            }\n        }\n\n        if (this.#pendingDetectNetwork) {\n            return await this.#pendingDetectNetwork;\n        }\n\n        // If we are ready, use ``send``, which enabled requests to be batched\n        if (this.ready) {\n            this.#pendingDetectNetwork = (async () => {\n                try {\n                    const result = Network.from(getBigInt(await this.send(\"eth_chainId\", [ ])));\n                    this.#pendingDetectNetwork = null;\n                    return result;\n                } catch (error) {\n                    this.#pendingDetectNetwork = null;\n                    throw error;\n                }\n            })();\n            return await this.#pendingDetectNetwork;\n        }\n\n        // We are not ready yet; use the primitive _send\n        this.#pendingDetectNetwork = (async () => {\n            const payload: JsonRpcPayload = {\n                id: this.#nextId++, method: \"eth_chainId\", params: [ ], jsonrpc: \"2.0\"\n            };\n\n            this.emit(\"debug\", { action: \"sendRpcPayload\", payload });\n\n            let result: JsonRpcResult | JsonRpcError;\n            try {\n                result = (await this._send(payload))[0];\n                this.#pendingDetectNetwork = null;\n            } catch (error) {\n                this.#pendingDetectNetwork = null;\n                this.emit(\"debug\", { action: \"receiveRpcError\", error });\n                throw error;\n            }\n\n            this.emit(\"debug\", { action: \"receiveRpcResult\", result });\n\n            if (\"result\" in result) {\n                return Network.from(getBigInt(result.result));\n            }\n\n            throw this.getRpcError(payload, result);\n        })();\n\n        return await this.#pendingDetectNetwork;\n    }\n\n    /**\n     *  Sub-classes **MUST** call this. Until [[_start]] has been called, no calls\n     *  will be passed to [[_send]] from [[send]]. If it is overridden, then\n     *  ``super._start()`` **MUST** be called.\n     *\n     *  Calling it multiple times is safe and has no effect.\n     */\n    _start(): void {\n        if (this.#notReady == null || this.#notReady.resolve == null) { return; }\n\n        this.#notReady.resolve();\n        this.#notReady = null;\n\n        (async () => {\n\n            // Bootstrap the network\n            while (this.#network == null && !this.destroyed) {\n                try {\n                    this.#network = await this._detectNetwork();\n                } catch (error) {\n                    if (this.destroyed) { break; }\n                    console.log(\"JsonRpcProvider failed to detect network and cannot start up; retry in 1s (perhaps the URL is wrong or the node is not started)\");\n                    this.emit(\"error\", makeError(\"failed to bootstrap network detection\", \"NETWORK_ERROR\", { event: \"initial-network-discovery\", info: { error } }));\n                    await stall(1000);\n                }\n            }\n\n            // Start dispatching requests\n            this.#scheduleDrain();\n        })();\n    }\n\n    /**\n     *  Resolves once the [[_start]] has been called. This can be used in\n     *  sub-classes to defer sending data until the connection has been\n     *  established.\n     */\n    async _waitUntilReady(): Promise<void> {\n        if (this.#notReady == null) { return; }\n        return await this.#notReady.promise;\n    }\n\n\n    /**\n     *  Return a Subscriber that will manage the %%sub%%.\n     *\n     *  Sub-classes may override this to modify the behavior of\n     *  subscription management.\n     */\n    _getSubscriber(sub: Subscription): Subscriber {\n\n        // Pending Filters aren't availble via polling\n        if (sub.type === \"pending\") { return new FilterIdPendingSubscriber(this); }\n\n        if (sub.type === \"event\") {\n            if (this._getOption(\"polling\")) {\n                return new PollingEventSubscriber(this, sub.filter);\n            }\n            return new FilterIdEventSubscriber(this, sub.filter);\n        }\n\n        // Orphaned Logs are handled automatically, by the filter, since\n        // logs with removed are emitted by it\n        if (sub.type === \"orphan\" && sub.filter.orphan === \"drop-log\") {\n            return new UnmanagedSubscriber(\"orphan\");\n        }\n\n        return super._getSubscriber(sub);\n    }\n\n    /**\n     *  Returns true only if the [[_start]] has been called.\n     */\n    get ready(): boolean { return this.#notReady == null; }\n\n    /**\n     *  Returns %%tx%% as a normalized JSON-RPC transaction request,\n     *  which has all values hexlified and any numeric values converted\n     *  to Quantity values.\n     */\n    getRpcTransaction(tx: TransactionRequest): JsonRpcTransactionRequest {\n        const result: JsonRpcTransactionRequest = {};\n\n        // JSON-RPC now requires numeric values to be \"quantity\" values\n        [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach((key) => {\n            if ((<any>tx)[key] == null) { return; }\n            let dstKey = key;\n            if (key === \"gasLimit\") { dstKey = \"gas\"; }\n            (<any>result)[dstKey] = toQuantity(getBigInt((<any>tx)[key], `tx.${ key }`));\n        });\n\n        // Make sure addresses and data are lowercase\n        [\"from\", \"to\", \"data\"].forEach((key) => {\n            if ((<any>tx)[key] == null) { return; }\n            (<any>result)[key] = hexlify((<any>tx)[key]);\n        });\n\n        // Normalize the access list object\n        if (tx.accessList) {\n            result[\"accessList\"] = accessListify(tx.accessList);\n        }\n\n        if (tx.blobVersionedHashes) {\n            // @TODO: Remove this <any> case once EIP-4844 added to prepared tx\n            (<any>result)[\"blobVersionedHashes\"] = tx.blobVersionedHashes.map(h => h.toLowerCase());\n        }\n\n        // @TODO: blobs should probably also be copied over, optionally\n        // accounting for the kzg property to backfill blobVersionedHashes\n        // using the commitment. Or should that be left as an exercise to\n        // the caller?\n\n        return result;\n    }\n\n    /**\n     *  Returns the request method and arguments required to perform\n     *  %%req%%.\n     */\n    getRpcRequest(req: PerformActionRequest): null | { method: string, args: Array<any> } {\n        switch (req.method) {\n            case \"chainId\":\n                return { method: \"eth_chainId\", args: [ ] };\n\n            case \"getBlockNumber\":\n                return { method: \"eth_blockNumber\", args: [ ] };\n\n            case \"getGasPrice\":\n                return { method: \"eth_gasPrice\", args: [] };\n\n            case \"getPriorityFee\":\n                return { method: \"eth_maxPriorityFeePerGas\", args: [ ] };\n\n            case \"getBalance\":\n                return {\n                    method: \"eth_getBalance\",\n                    args: [ getLowerCase(req.address), req.blockTag ]\n                };\n\n            case \"getTransactionCount\":\n                return {\n                    method: \"eth_getTransactionCount\",\n                    args: [ getLowerCase(req.address), req.blockTag ]\n                };\n\n            case \"getCode\":\n                return {\n                    method: \"eth_getCode\",\n                    args: [ getLowerCase(req.address), req.blockTag ]\n                };\n\n            case \"getStorage\":\n                return {\n                    method: \"eth_getStorageAt\",\n                    args: [\n                        getLowerCase(req.address),\n                        (\"0x\" + req.position.toString(16)),\n                        req.blockTag\n                    ]\n                };\n\n            case \"broadcastTransaction\":\n                return {\n                    method: \"eth_sendRawTransaction\",\n                    args: [ req.signedTransaction ]\n                };\n\n            case \"getBlock\":\n                if (\"blockTag\" in req) {\n                    return {\n                        method: \"eth_getBlockByNumber\",\n                        args: [ req.blockTag, !!req.includeTransactions ]\n                    };\n                } else if (\"blockHash\" in req) {\n                    return {\n                        method: \"eth_getBlockByHash\",\n                        args: [ req.blockHash, !!req.includeTransactions ]\n                    };\n                }\n                break;\n\n            case \"getTransaction\":\n                return {\n                    method: \"eth_getTransactionByHash\",\n                    args: [ req.hash ]\n                };\n\n            case \"getTransactionReceipt\":\n                return {\n                    method: \"eth_getTransactionReceipt\",\n                    args: [ req.hash ]\n                };\n\n            case \"call\":\n                return {\n                    method: \"eth_call\",\n                    args: [ this.getRpcTransaction(req.transaction), req.blockTag ]\n                };\n\n            case \"estimateGas\": {\n                return {\n                    method: \"eth_estimateGas\",\n                    args: [ this.getRpcTransaction(req.transaction) ]\n                };\n            }\n\n            case \"getLogs\":\n                if (req.filter && req.filter.address != null) {\n                    if (Array.isArray(req.filter.address)) {\n                        req.filter.address = req.filter.address.map(getLowerCase);\n                    } else {\n                        req.filter.address = getLowerCase(req.filter.address);\n                    }\n                }\n                return { method: \"eth_getLogs\", args: [ req.filter ] };\n        }\n\n        return null;\n    }\n\n    /**\n     *  Returns an ethers-style Error for the given JSON-RPC error\n     *  %%payload%%, coalescing the various strings and error shapes\n     *  that different nodes return, coercing them into a machine-readable\n     *  standardized error.\n     */\n    getRpcError(payload: JsonRpcPayload, _error: JsonRpcError): Error {\n        const { method } = payload;\n        const { error } = _error;\n\n        if (method === \"eth_estimateGas\" && error.message) {\n            const msg = error.message;\n            if (!msg.match(/revert/i) && msg.match(/insufficient funds/i)) {\n                return makeError(\"insufficient funds\", \"INSUFFICIENT_FUNDS\", {\n                    transaction: ((<any>payload).params[0]),\n                    info: { payload, error }\n                });\n            }\n        }\n\n        if (method === \"eth_call\" || method === \"eth_estimateGas\") {\n            const result = spelunkData(error);\n\n            const e = AbiCoder.getBuiltinCallException(\n                (method === \"eth_call\") ? \"call\": \"estimateGas\",\n                ((<any>payload).params[0]),\n                (result ? result.data: null)\n            );\n            e.info = { error, payload };\n            return e;\n        }\n\n        // Only estimateGas and call can return arbitrary contract-defined text, so now we\n        // we can process text safely.\n\n        const message = JSON.stringify(spelunkMessage(error));\n\n        if (typeof(error.message) === \"string\" && error.message.match(/user denied|ethers-user-denied/i)) {\n            const actionMap: Record<string, \"requestAccess\" | \"sendTransaction\" | \"signMessage\" | \"signTransaction\" | \"signTypedData\"> = {\n                eth_sign: \"signMessage\",\n                personal_sign: \"signMessage\",\n                eth_signTypedData_v4: \"signTypedData\",\n                eth_signTransaction: \"signTransaction\",\n                eth_sendTransaction: \"sendTransaction\",\n                eth_requestAccounts: \"requestAccess\",\n                wallet_requestAccounts: \"requestAccess\",\n            };\n\n            return makeError(`user rejected action`, \"ACTION_REJECTED\", {\n                action: (actionMap[method] || \"unknown\") ,\n                reason: \"rejected\",\n                info: { payload, error }\n            });\n        }\n\n        if (method === \"eth_sendRawTransaction\" || method === \"eth_sendTransaction\") {\n            const transaction = <TransactionLike<string>>((<any>payload).params[0]);\n\n            if (message.match(/insufficient funds|base fee exceeds gas limit/i)) {\n                return makeError(\"insufficient funds for intrinsic transaction cost\", \"INSUFFICIENT_FUNDS\", {\n                    transaction, info: { error }\n                });\n            }\n\n            if (message.match(/nonce/i) && message.match(/too low/i)) {\n                return makeError(\"nonce has already been used\", \"NONCE_EXPIRED\", { transaction, info: { error } });\n            }\n\n            // \"replacement transaction underpriced\"\n            if (message.match(/replacement transaction/i) && message.match(/underpriced/i)) {\n                return makeError(\"replacement fee too low\", \"REPLACEMENT_UNDERPRICED\", { transaction, info: { error } });\n            }\n\n            if (message.match(/only replay-protected/i)) {\n                return makeError(\"legacy pre-eip-155 transactions not supported\", \"UNSUPPORTED_OPERATION\", {\n                    operation: method, info: { transaction, info: { error } }\n                });\n            }\n        }\n\n        let unsupported = !!message.match(/the method .* does not exist/i);\n        if (!unsupported) {\n            if (error && (<any>error).details && (<any>error).details.startsWith(\"Unauthorized method:\")) {\n                unsupported = true;\n            }\n        }\n\n        if (unsupported) {\n            return makeError(\"unsupported operation\", \"UNSUPPORTED_OPERATION\", {\n                operation: payload.method, info: { error, payload }\n            });\n        }\n\n        return makeError(\"could not coalesce error\", \"UNKNOWN_ERROR\", { error, payload });\n    }\n\n\n    /**\n     *  Requests the %%method%% with %%params%% via the JSON-RPC protocol\n     *  over the underlying channel. This can be used to call methods\n     *  on the backend that do not have a high-level API within the Provider\n     *  API.\n     *\n     *  This method queues requests according to the batch constraints\n     *  in the options, assigns the request a unique ID.\n     *\n     *  **Do NOT override** this method in sub-classes; instead\n     *  override [[_send]] or force the options values in the\n     *  call to the constructor to modify this method's behavior.\n     */\n    send(method: string, params: Array<any> | Record<string, any>): Promise<any> {\n        // @TODO: cache chainId?? purge on switch_networks\n\n        // We have been destroyed; no operations are supported anymore\n        if (this.destroyed) {\n            return Promise.reject(makeError(\"provider destroyed; cancelled request\", \"UNSUPPORTED_OPERATION\", { operation: method }));\n        }\n\n        const id = this.#nextId++;\n        const promise = new Promise((resolve, reject) => {\n            this.#payloads.push({\n                resolve, reject,\n                payload: { method, params, id, jsonrpc: \"2.0\" }\n            });\n        });\n\n        // If there is not a pending drainTimer, set one\n        this.#scheduleDrain();\n\n        return <Promise<JsonRpcResult>>promise;\n    }\n\n    /**\n     *  Resolves to the [[Signer]] account for  %%address%% managed by\n     *  the client.\n     *\n     *  If the %%address%% is a number, it is used as an index in the\n     *  the accounts from [[listAccounts]].\n     *\n     *  This can only be used on clients which manage accounts (such as\n     *  Geth with imported account or MetaMask).\n     *\n     *  Throws if the account doesn't exist.\n     */\n    async getSigner(address?: number | string): Promise<JsonRpcSigner> {\n        if (address == null) { address = 0; }\n\n        const accountsPromise = this.send(\"eth_accounts\", [ ]);\n\n        // Account index\n        if (typeof(address) === \"number\") {\n            const accounts = <Array<string>>(await accountsPromise);\n            if (address >= accounts.length) { throw new Error(\"no such account\"); }\n            return new JsonRpcSigner(this, accounts[address]);\n        }\n\n        const { accounts } = await resolveProperties({\n            network: this.getNetwork(),\n            accounts: accountsPromise\n        });\n\n        // Account address\n        address = getAddress(address);\n        for (const account of accounts) {\n            if (getAddress(account) === address) {\n                return new JsonRpcSigner(this, address);\n            }\n        }\n\n        throw new Error(\"invalid account\");\n    }\n\n    async listAccounts(): Promise<Array<JsonRpcSigner>> {\n        const accounts: Array<string> = await this.send(\"eth_accounts\", [ ]);\n        return accounts.map((a) => new JsonRpcSigner(this, a));\n    }\n\n    destroy(): void {\n\n        // Stop processing requests\n        if (this.#drainTimer) {\n            clearTimeout(this.#drainTimer);\n            this.#drainTimer = null;\n        }\n\n        // Cancel all pending requests\n        for (const { payload, reject } of this.#payloads) {\n            reject(makeError(\"provider destroyed; cancelled request\", \"UNSUPPORTED_OPERATION\", { operation: payload.method }));\n        }\n\n        this.#payloads = [ ];\n\n        // Parent clean-up\n        super.destroy();\n\n    }\n}\n\n// @TODO: remove this in v7, it is not exported because this functionality\n// is exposed in the JsonRpcApiProvider by setting polling to true. It should\n// be safe to remove regardless, because it isn't reachable, but just in case.\n/**\n *  @_ignore:\n */\nexport abstract class JsonRpcApiPollingProvider extends JsonRpcApiProvider {\n    #pollingInterval: number;\n    constructor(network?: Networkish, options?: JsonRpcApiProviderOptions) {\n        super(network, options);\n\n        let pollingInterval = this._getOption(\"pollingInterval\");\n        if (pollingInterval == null) { pollingInterval = defaultOptions.pollingInterval; }\n\n        this.#pollingInterval = pollingInterval;\n    }\n\n    _getSubscriber(sub: Subscription): Subscriber {\n        const subscriber = super._getSubscriber(sub);\n        if (isPollable(subscriber)) {\n            subscriber.pollingInterval = this.#pollingInterval;\n        }\n        return subscriber;\n    }\n\n    /**\n     *  The polling interval (default: 4000 ms)\n     */\n    get pollingInterval(): number { return this.#pollingInterval; }\n    set pollingInterval(value: number) {\n        if (!Number.isInteger(value) || value < 0) { throw new Error(\"invalid interval\"); }\n        this.#pollingInterval = value;\n        this._forEachSubscriber((sub) => {\n            if (isPollable(sub)) {\n                sub.pollingInterval = this.#pollingInterval;\n            }\n        });\n    }\n}\n\n/**\n *  The JsonRpcProvider is one of the most common Providers,\n *  which performs all operations over HTTP (or HTTPS) requests.\n *\n *  Events are processed by polling the backend for the current block\n *  number; when it advances, all block-base events are then checked\n *  for updates.\n */\nexport class JsonRpcProvider extends JsonRpcApiPollingProvider {\n    #connect: FetchRequest;\n\n    constructor(url?: string | FetchRequest, network?: Networkish, options?: JsonRpcApiProviderOptions) {\n        if (url == null) { url = \"http:/\\/localhost:8545\"; }\n        super(network, options);\n\n        if (typeof(url) === \"string\") {\n            this.#connect = new FetchRequest(url);\n        } else {\n            this.#connect = url.clone();\n        }\n    }\n\n    _getConnection(): FetchRequest {\n        return this.#connect.clone();\n    }\n\n    async send(method: string, params: Array<any> | Record<string, any>): Promise<any> {\n        // All requests are over HTTP, so we can just start handling requests\n        // We do this here rather than the constructor so that we don't send any\n        // requests to the network (i.e. eth_chainId) until we absolutely have to.\n        await this._start();\n\n        return await super.send(method, params);\n    }\n\n    async _send(payload: JsonRpcPayload | Array<JsonRpcPayload>): Promise<Array<JsonRpcResult>> {\n        // Configure a POST connection for the requested method\n        const request = this._getConnection();\n        request.body = JSON.stringify(payload);\n        request.setHeader(\"content-type\", \"application/json\");\n        const response = await request.send();\n        response.assertOk();\n\n        let resp = response.bodyJson;\n        if (!Array.isArray(resp)) { resp = [ resp ]; }\n\n        return resp;\n    }\n}\n\nfunction spelunkData(value: any): null | { message: string, data: string } {\n    if (value == null) { return null; }\n\n    // These *are* the droids we're looking for.\n    if (typeof(value.message) === \"string\" && value.message.match(/revert/i) && isHexString(value.data)) {\n        return { message: value.message, data: value.data };\n    }\n\n    // Spelunk further...\n    if (typeof(value) === \"object\") {\n        for (const key in value) {\n            const result = spelunkData(value[key]);\n            if (result) { return result; }\n        }\n        return null;\n    }\n\n    // Might be a JSON string we can further descend...\n    if (typeof(value) === \"string\") {\n        try {\n            return spelunkData(JSON.parse(value));\n        } catch (error) { }\n    }\n\n    return null;\n}\n\nfunction _spelunkMessage(value: any, result: Array<string>): void {\n    if (value == null) { return; }\n\n    // These *are* the droids we're looking for.\n    if (typeof(value.message) === \"string\") {\n        result.push(value.message);\n    }\n\n    // Spelunk further...\n    if (typeof(value) === \"object\") {\n        for (const key in value) {\n            _spelunkMessage(value[key], result);\n        }\n    }\n\n    // Might be a JSON string we can further descend...\n    if (typeof(value) === \"string\") {\n        try {\n            return _spelunkMessage(JSON.parse(value), result);\n        } catch (error) { }\n    }\n}\n\nfunction spelunkMessage(value: any): Array<string> {\n    const result: Array<string> = [ ];\n    _spelunkMessage(value, result);\n    return result;\n}\n", "\nfunction getGlobal(): any {\n  if (typeof self !== 'undefined') { return self; }\n  if (typeof window !== 'undefined') { return window; }\n  if (typeof global !== 'undefined') { return global; }\n  throw new Error('unable to locate global object');\n};\n\nconst _WebSocket = getGlobal().WebSocket;\n\nexport { _WebSocket as WebSocket };\n", "/**\n *  A **FallbackProvider** provides resilience, security and performance\n *  in a way that is customizable and configurable.\n *\n *  @_section: api/providers/fallback-provider:Fallback Provider [about-fallback-provider]\n */\nimport {\n    assert, assertArgument, getBigInt, getNumber, isError\n} from \"../utils/index.js\";\n\nimport { AbstractProvider } from \"./abstract-provider.js\";\nimport { Network } from \"./network.js\"\n\nimport type { PerformActionRequest } from \"./abstract-provider.js\";\nimport type { Networkish } from \"./network.js\"\n\nconst BN_1 = BigInt(\"1\");\nconst BN_2 = BigInt(\"2\");\n\nfunction shuffle<T = any>(array: Array<T>): void {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n}\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => { setTimeout(resolve, duration); });\n}\n\nfunction getTime(): number { return (new Date()).getTime(); }\n\nfunction stringify(value: any): string {\n    return JSON.stringify(value, (key, value) => {\n        if (typeof(value) === \"bigint\") {\n            return { type: \"bigint\", value: value.toString() };\n        }\n        return value;\n    });\n}\n\n/**\n *  A configuration entry for how to use a [[Provider]].\n */\nexport interface FallbackProviderConfig {\n\n    /**\n     *  The provider.\n     */\n    provider: AbstractProvider;\n\n    /**\n     *  The amount of time to wait before kicking off the next provider.\n     *\n     *  Any providers that have not responded can still respond and be\n     *  counted, but this ensures new providers start.\n     */\n    stallTimeout?: number;\n\n    /**\n     *  The priority. Lower priority providers are dispatched first.\n     */\n    priority?: number;\n\n    /**\n     *  The amount of weight a provider is given against the quorum.\n     */\n    weight?: number;\n};\n\nconst defaultConfig = { stallTimeout: 400, priority: 1, weight: 1 };\n\n// We track a bunch of extra stuff that might help debug problems or\n// optimize infrastructure later on.\n/**\n *  The statistics and state maintained for a [[Provider]].\n */\nexport interface FallbackProviderState extends Required<FallbackProviderConfig> {\n\n    /**\n     *  The most recent blockNumber this provider has reported (-2 if none).\n     */\n    blockNumber: number;\n\n    /**\n     *  The number of total requests ever sent to this provider.\n     */\n    requests: number;\n\n    /**\n     *  The number of responses that errored.\n     */\n    errorResponses: number;\n\n    /**\n     *  The number of responses that occured after the result resolved.\n     */\n    lateResponses: number;\n\n    /**\n     *  How many times syncing was required to catch up the expected block.\n     */\n    outOfSync: number;\n\n    /**\n     *  The number of requests which reported unsupported operation.\n     */\n    unsupportedEvents: number;\n\n    /**\n     *  A rolling average (5% current duration) for response time.\n     */\n    rollingDuration: number;\n\n    /**\n     *  The ratio of quorum-agreed results to total.\n     */\n    score: number;\n}\n\ninterface Config extends FallbackProviderState {\n    _updateNumber: null | Promise<any>;\n    _network: null | Network;\n    _totalTime: number;\n    _lastFatalError: null | Error;\n    _lastFatalErrorTimestamp: number;\n}\n\nconst defaultState = {\n    blockNumber: -2, requests: 0, lateResponses: 0, errorResponses: 0,\n    outOfSync: -1, unsupportedEvents: 0, rollingDuration: 0, score: 0,\n    _network: null, _updateNumber: null, _totalTime: 0,\n    _lastFatalError: null, _lastFatalErrorTimestamp: 0\n};\n\n\nasync function waitForSync(config: Config, blockNumber: number): Promise<void> {\n    while (config.blockNumber < 0 || config.blockNumber < blockNumber) {\n        if (!config._updateNumber) {\n            config._updateNumber = (async () => {\n                try {\n                    const blockNumber = await config.provider.getBlockNumber();\n                    if (blockNumber > config.blockNumber) {\n                        config.blockNumber = blockNumber;\n                    }\n                } catch (error: any) {\n                    config.blockNumber = -2;\n                    config._lastFatalError = error;\n                    config._lastFatalErrorTimestamp = getTime();\n                }\n                config._updateNumber = null;\n            })();\n        }\n        await config._updateNumber;\n        config.outOfSync++;\n        if (config._lastFatalError) { break; }\n    }\n}\n\n/**\n *  Additional options to configure a [[FallbackProvider]].\n */\nexport type FallbackProviderOptions = {\n    // How many providers must agree on a value before reporting\n    // back the response\n    quorum?: number;\n\n    // How many providers must have reported the same event\n    // for it to be emitted (currently unimplmented)\n    eventQuorum?: number;\n\n    // How many providers to dispatch each event to simultaneously.\n    // Set this to 0 to use getLog polling, which implies eventQuorum\n    // is equal to quorum. (currently unimplemented)\n    eventWorkers?: number;\n\n    cacheTimeout?: number;\n\n    pollingInterval?: number;\n};\n\ntype RunnerResult = { result: any } | { error: Error };\n\ntype RunnerState = {\n    config: Config;\n    staller: null | Promise<void>;\n    didBump: boolean;\n    perform: null | Promise<any>;\n    result: null | RunnerResult;\n}\n\nfunction _normalize(value: any): string {\n    if (value == null) { return \"null\"; }\n\n    if (Array.isArray(value)) {\n        return \"[\" + (value.map(_normalize)).join(\",\") + \"]\";\n    }\n\n    if (typeof(value) === \"object\" && typeof(value.toJSON) === \"function\") {\n        return _normalize(value.toJSON());\n    }\n\n    switch (typeof(value)) {\n        case \"boolean\": case \"symbol\":\n            return value.toString();\n        case \"bigint\": case \"number\":\n            return BigInt(value).toString();\n        case \"string\":\n            return JSON.stringify(value);\n        case \"object\": {\n            const keys = Object.keys(value);\n            keys.sort();\n            return \"{\" + keys.map((k) => `${ JSON.stringify(k) }:${ _normalize(value[k]) }`).join(\",\") + \"}\";\n        }\n    }\n\n    console.log(\"Could not serialize\", value);\n    throw new Error(\"Hmm...\");\n}\n\nfunction normalizeResult(value: RunnerResult): { tag: string, value: any } {\n\n    if (\"error\" in value) {\n        const error = value.error;\n        return { tag: _normalize(error), value: error };\n    }\n\n    const result = value.result;\n    return { tag: _normalize(result), value: result };\n}\n\ntype TallyResult = {\n    tag: string;\n    value: any;\n    weight: number;\n};\n\n// This strategy picks the highest weight result, as long as the weight is\n// equal to or greater than quorum\nfunction checkQuorum(quorum: number, results: Array<TallyResult>): any | Error {\n    const tally: Map<string, { value: any, weight: number }> = new Map();\n    for (const { value, tag, weight } of results) {\n        const t = tally.get(tag) || { value, weight: 0 };\n        t.weight += weight;\n        tally.set(tag, t);\n    }\n\n    let best: null | { value: any, weight: number } = null;\n\n    for (const r of tally.values()) {\n        if (r.weight >= quorum && (!best || r.weight > best.weight)) {\n            best = r;\n        }\n    }\n\n    if (best) { return best.value; }\n\n    return undefined;\n}\n\nfunction getMedian(quorum: number, results: Array<TallyResult>): undefined | bigint | Error {\n    let resultWeight = 0;\n\n    const errorMap: Map<string, { weight: number, value: Error }> = new Map();\n    let bestError: null | { weight: number, value: Error } = null;\n\n    const values: Array<bigint> = [ ];\n    for (const { value, tag, weight } of results) {\n        if (value instanceof Error) {\n            const e = errorMap.get(tag) || { value, weight: 0 };\n            e.weight += weight;\n            errorMap.set(tag, e);\n\n            if (bestError == null || e.weight > bestError.weight) { bestError = e; }\n        } else {\n            values.push(BigInt(value));\n            resultWeight += weight;\n        }\n    }\n\n    if (resultWeight < quorum) {\n        // We have quorum for an error\n        if (bestError && bestError.weight >= quorum) { return bestError.value; }\n\n        // We do not have quorum for a result\n        return undefined;\n    }\n\n    // Get the sorted values\n    values.sort((a, b) => ((a < b) ? -1: (b > a) ? 1: 0));\n\n    const mid = Math.floor(values.length / 2);\n\n    // Odd-length; take the middle value\n    if (values.length % 2) { return values[mid]; }\n\n    // Even length; take the ceiling of the mean of the center two values\n    return (values[mid - 1] + values[mid] + BN_1) / BN_2;\n}\n\nfunction getAnyResult(quorum: number, results: Array<TallyResult>): undefined | any | Error {\n    // If any value or error meets quorum, that is our preferred result\n    const result = checkQuorum(quorum, results);\n    if (result !== undefined) { return result; }\n\n    // Otherwise, do we have any result?\n    for (const r of results) {\n        if (r.value) { return r.value; }\n    }\n\n    // Nope!\n    return undefined;\n}\n\nfunction getFuzzyMode(quorum: number, results: Array<TallyResult>): undefined | number {\n    if (quorum === 1) { return getNumber(<bigint>getMedian(quorum, results), \"%internal\"); }\n\n    const tally: Map<number, { result: number, weight: number }> = new Map();\n    const add = (result: number, weight: number) => {\n        const t = tally.get(result) || { result, weight: 0 };\n        t.weight += weight;\n        tally.set(result, t);\n    };\n\n    for (const { weight, value } of results) {\n        const r = getNumber(value);\n        add(r - 1, weight);\n        add(r, weight);\n        add(r + 1, weight);\n    }\n\n    let bestWeight = 0;\n    let bestResult: undefined | number = undefined;\n\n    for (const { weight, result } of tally.values()) {\n        // Use this result, if this result meets quorum and has either:\n        // - a better weight\n        // - or equal weight, but the result is larger\n        if (weight >= quorum && (weight > bestWeight || (bestResult != null && weight === bestWeight && result > bestResult))) {\n            bestWeight = weight;\n            bestResult = result;\n        }\n    }\n\n    return bestResult;\n}\n\n/**\n *  A **FallbackProvider** manages several [[Providers]] providing\n *  resilience by switching between slow or misbehaving nodes, security\n *  by requiring multiple backends to aggree and performance by allowing\n *  faster backends to respond earlier.\n *\n */\nexport class FallbackProvider extends AbstractProvider {\n\n    /**\n     *  The number of backends that must agree on a value before it is\n     *  accpeted.\n     */\n    readonly quorum: number;\n\n    /**\n     *  @_ignore:\n     */\n    readonly eventQuorum: number;\n\n    /**\n     *  @_ignore:\n     */\n    readonly eventWorkers: number;\n\n    readonly #configs: Array<Config>;\n\n    #height: number;\n    #initialSyncPromise: null | Promise<void>;\n\n    /**\n     *  Creates a new **FallbackProvider** with %%providers%% connected to\n     *  %%network%%.\n     *\n     *  If a [[Provider]] is included in %%providers%%, defaults are used\n     *  for the configuration.\n     */\n    constructor(providers: Array<AbstractProvider | FallbackProviderConfig>, network?: Networkish, options?: FallbackProviderOptions) {\n        super(network, options);\n\n        this.#configs = providers.map((p) => {\n            if (p instanceof AbstractProvider) {\n                return Object.assign({ provider: p }, defaultConfig, defaultState );\n            } else {\n                return Object.assign({ }, defaultConfig, p, defaultState );\n            }\n        });\n\n        this.#height = -2;\n        this.#initialSyncPromise = null;\n\n        if (options && options.quorum != null) {\n            this.quorum = options.quorum;\n        } else {\n            this.quorum = Math.ceil(this.#configs.reduce((accum, config) => {\n                accum += config.weight;\n                return accum;\n            }, 0) / 2);\n        }\n\n        this.eventQuorum = 1;\n        this.eventWorkers = 1;\n\n        assertArgument(this.quorum <= this.#configs.reduce((a, c) => (a + c.weight), 0),\n            \"quorum exceed provider weight\", \"quorum\", this.quorum);\n    }\n\n    get providerConfigs(): Array<FallbackProviderState> {\n        return this.#configs.map((c) => {\n            const result: any = Object.assign({ }, c);\n            for (const key in result) {\n                if (key[0] === \"_\") { delete result[key]; }\n            }\n            return result;\n        });\n    }\n\n    async _detectNetwork(): Promise<Network> {\n        return Network.from(getBigInt(await this._perform({ method: \"chainId\" })));\n    }\n\n    // @TODO: Add support to select providers to be the event subscriber\n    //_getSubscriber(sub: Subscription): Subscriber {\n    //    throw new Error(\"@TODO\");\n    //}\n\n    /**\n     *  Transforms a %%req%% into the correct method call on %%provider%%.\n     */\n    async _translatePerform(provider: AbstractProvider, req: PerformActionRequest): Promise<any> {\n        switch (req.method) {\n            case \"broadcastTransaction\":\n                return await provider.broadcastTransaction(req.signedTransaction);\n            case \"call\":\n                return await provider.call(Object.assign({ }, req.transaction, { blockTag: req.blockTag }));\n            case \"chainId\":\n                return (await provider.getNetwork()).chainId;\n            case \"estimateGas\":\n                return await provider.estimateGas(req.transaction);\n            case \"getBalance\":\n                return await provider.getBalance(req.address, req.blockTag);\n            case \"getBlock\": {\n                const block = (\"blockHash\" in req) ? req.blockHash: req.blockTag;\n                return await provider.getBlock(block, req.includeTransactions);\n            }\n            case \"getBlockNumber\":\n                return await provider.getBlockNumber();\n            case \"getCode\":\n                return await provider.getCode(req.address, req.blockTag);\n            case \"getGasPrice\":\n                return (await provider.getFeeData()).gasPrice;\n            case \"getPriorityFee\":\n                return (await provider.getFeeData()).maxPriorityFeePerGas;\n            case \"getLogs\":\n                return await provider.getLogs(req.filter);\n            case \"getStorage\":\n                return await provider.getStorage(req.address, req.position, req.blockTag);\n            case \"getTransaction\":\n                return await provider.getTransaction(req.hash);\n            case \"getTransactionCount\":\n                return await provider.getTransactionCount(req.address, req.blockTag);\n            case \"getTransactionReceipt\":\n                return await provider.getTransactionReceipt(req.hash);\n            case \"getTransactionResult\":\n                return await provider.getTransactionResult(req.hash);\n        }\n    }\n\n    // Grab the next (random) config that is not already part of\n    // the running set\n    #getNextConfig(running: Set<RunnerState>): null | Config {\n        // @TODO: Maybe do a check here to favour (heavily) providers that\n        //        do not require waitForSync and disfavour providers that\n        //        seem down-ish or are behaving slowly\n\n        const configs = Array.from(running).map((r) => r.config)\n\n        // Shuffle the states, sorted by priority\n        const allConfigs = this.#configs.slice();\n        shuffle(allConfigs);\n        allConfigs.sort((a, b) => (a.priority - b.priority));\n\n        for (const config of allConfigs) {\n            if (config._lastFatalError) { continue; }\n            if (configs.indexOf(config) === -1) { return config; }\n        }\n\n        return null;\n    }\n\n    // Adds a new runner (if available) to running.\n    #addRunner(running: Set<RunnerState>, req: PerformActionRequest): null | RunnerState {\n        const config = this.#getNextConfig(running);\n\n        // No runners available\n        if (config == null) { return null; }\n\n        // Create a new runner\n        const runner: RunnerState = {\n            config, result: null, didBump: false,\n            perform: null, staller: null\n        };\n\n        const now = getTime();\n\n        // Start performing this operation\n        runner.perform = (async () => {\n            try {\n                config.requests++;\n                const result = await this._translatePerform(config.provider, req);\n                runner.result = { result };\n            } catch (error: any) {\n                config.errorResponses++;\n                runner.result = { error };\n            }\n\n            const dt = (getTime() - now);\n            config._totalTime += dt;\n\n            config.rollingDuration = 0.95 * config.rollingDuration + 0.05 * dt;\n\n            runner.perform = null;\n        })();\n\n        // Start a staller; when this times out, it's time to force\n        // kicking off another runner because we are taking too long\n        runner.staller = (async () => {\n            await stall(config.stallTimeout);\n            runner.staller = null;\n        })();\n\n        running.add(runner);\n        return runner;\n    }\n\n    // Initializes the blockNumber and network for each runner and\n    // blocks until initialized\n    async #initialSync(): Promise<void> {\n        let initialSync = this.#initialSyncPromise;\n        if (!initialSync) {\n            const promises: Array<Promise<any>> = [ ];\n            this.#configs.forEach((config) => {\n                promises.push((async () => {\n                    await waitForSync(config, 0);\n                    if (!config._lastFatalError) {\n                        config._network = await config.provider.getNetwork();\n                    }\n                })());\n            });\n\n            this.#initialSyncPromise = initialSync = (async () => {\n                // Wait for all providers to have a block number and network\n                await Promise.all(promises);\n\n                // Check all the networks match\n                let chainId: null | bigint = null;\n                for (const config of this.#configs) {\n                    if (config._lastFatalError) { continue; }\n                    const network = <Network>(config._network);\n                    if (chainId == null) {\n                        chainId = network.chainId;\n                    } else if (network.chainId !== chainId) {\n                        assert(false, \"cannot mix providers on different networks\", \"UNSUPPORTED_OPERATION\", {\n                            operation: \"new FallbackProvider\"\n                        });\n                    }\n                }\n            })();\n        }\n\n        await initialSync\n    }\n\n\n    async #checkQuorum(running: Set<RunnerState>, req: PerformActionRequest): Promise<any> {\n        // Get all the result objects\n        const results: Array<TallyResult> = [ ];\n        for (const runner of running) {\n            if (runner.result != null) {\n                const { tag, value } = normalizeResult(runner.result);\n                results.push({ tag, value, weight: runner.config.weight });\n            }\n        }\n\n        // Are there enough results to event meet quorum?\n        if (results.reduce((a, r) => (a + r.weight), 0) < this.quorum) {\n            return undefined;\n        }\n\n        switch (req.method) {\n            case \"getBlockNumber\": {\n                // We need to get the bootstrap block height\n                if (this.#height === -2) {\n                    this.#height = Math.ceil(getNumber(<bigint>getMedian(this.quorum, this.#configs.filter((c) => (!c._lastFatalError)).map((c) => ({\n                        value: c.blockNumber,\n                        tag: getNumber(c.blockNumber).toString(),\n                        weight: c.weight\n                    })))));\n                }\n\n                // Find the mode across all the providers, allowing for\n                // a little drift between block heights\n                const mode = getFuzzyMode(this.quorum, results);\n                if (mode === undefined) { return undefined; }\n                if (mode > this.#height) { this.#height = mode; }\n                return this.#height;\n            }\n\n            case \"getGasPrice\":\n            case \"getPriorityFee\":\n            case \"estimateGas\":\n                return getMedian(this.quorum, results);\n\n            case \"getBlock\":\n                // Pending blocks are in the mempool and already\n                // quite untrustworthy; just grab anything\n                if (\"blockTag\" in req && req.blockTag === \"pending\") {\n                    return getAnyResult(this.quorum, results);\n                }\n                return checkQuorum(this.quorum, results);\n\n            case \"call\":\n            case \"chainId\":\n            case \"getBalance\":\n            case \"getTransactionCount\":\n            case \"getCode\":\n            case \"getStorage\":\n            case \"getTransaction\":\n            case \"getTransactionReceipt\":\n            case \"getLogs\":\n                return checkQuorum(this.quorum, results);\n\n            case \"broadcastTransaction\":\n                return getAnyResult(this.quorum, results);\n        }\n\n        assert(false, \"unsupported method\", \"UNSUPPORTED_OPERATION\", {\n            operation: `_perform(${ stringify((<any>req).method) })`\n        });\n    }\n\n    async #waitForQuorum(running: Set<RunnerState>, req: PerformActionRequest): Promise<any> {\n        if (running.size === 0) { throw new Error(\"no runners?!\"); }\n\n        // Any promises that are interesting to watch for; an expired stall\n        // or a successful perform\n        const interesting: Array<Promise<void>> = [ ];\n\n        let newRunners = 0;\n        for (const runner of running) {\n\n            // No responses, yet; keep an eye on it\n            if (runner.perform) {\n                interesting.push(runner.perform);\n            }\n\n            // Still stalling...\n            if (runner.staller) {\n                interesting.push(runner.staller);\n                continue;\n            }\n\n            // This runner has already triggered another runner\n            if (runner.didBump) { continue; }\n\n            // Got a response (result or error) or stalled; kick off another runner\n            runner.didBump = true;\n            newRunners++;\n        }\n\n        // Check if we have reached quorum on a result (or error)\n        const value = await this.#checkQuorum(running, req);\n        if (value !== undefined) {\n            if (value instanceof Error) { throw value; }\n            return value;\n        }\n\n        // Add any new runners, because a staller timed out or a result\n        // or error response came in.\n        for (let i = 0; i < newRunners; i++) {\n            this.#addRunner(running, req);\n        }\n\n        // All providers have returned, and we have no result\n\n        assert(interesting.length > 0, \"quorum not met\", \"SERVER_ERROR\", {\n            request: \"%sub-requests\",\n            info: { request: req, results: Array.from(running).map((r) => stringify(r.result)) }\n        });\n\n        // Wait for someone to either complete its perform or stall out\n        await Promise.race(interesting);\n\n        // This is recursive, but at worst case the depth is 2x the\n        // number of providers (each has a perform and a staller)\n        return await this.#waitForQuorum(running, req);\n    }\n\n    async _perform<T = any>(req: PerformActionRequest): Promise<T> {\n        // Broadcasting a transaction is rare (ish) and already incurs\n        // a cost on the user, so spamming is safe-ish. Just send it to\n        // every backend.\n        if (req.method === \"broadcastTransaction\") {\n            // Once any broadcast provides a positive result, use it. No\n            // need to wait for anyone else\n            const results: Array<null | TallyResult> = this.#configs.map((c) => null);\n            const broadcasts = this.#configs.map(async ({ provider, weight }, index) => {\n                try {\n                    const result = await provider._perform(req);\n                    results[index] = Object.assign(normalizeResult({ result }), { weight });\n                } catch (error: any) {\n                    results[index] = Object.assign(normalizeResult({ error }), { weight });\n                }\n            });\n\n            // As each promise finishes...\n            while (true) {\n                // Check for a valid broadcast result\n                const done = <Array<any>>results.filter((r) => (r != null));\n                for (const { value } of done) {\n                    if (!(value instanceof Error)) { return value; }\n                }\n\n                // Check for a legit broadcast error (one which we cannot\n                // recover from; some nodes may return the following red\n                // herring events:\n                // - alredy seend (UNKNOWN_ERROR)\n                // - NONCE_EXPIRED\n                // - REPLACEMENT_UNDERPRICED\n                const result = checkQuorum(this.quorum, <Array<any>>results.filter((r) => (r != null)));\n                if (isError(result, \"INSUFFICIENT_FUNDS\")) {\n                    throw result;\n                }\n\n                // Kick off the next provider (if any)\n                const waiting = broadcasts.filter((b, i) => (results[i] == null));\n                if (waiting.length === 0) { break; }\n                await Promise.race(waiting);\n            }\n\n            // Use standard quorum results; any result was returned above,\n            // so this will find any error that met quorum if any\n            const result = getAnyResult(this.quorum, <Array<any>>results);\n            assert(result !== undefined, \"problem multi-broadcasting\", \"SERVER_ERROR\", {\n                request: \"%sub-requests\",\n                info: { request: req, results: results.map(stringify) }\n            })\n            if (result instanceof Error) { throw result; }\n            return result;\n        }\n\n        await this.#initialSync();\n\n        // Bootstrap enough runners to meet quorum\n        const running: Set<RunnerState> = new Set();\n        let inflightQuorum = 0;\n        while (true) {\n            const runner = this.#addRunner(running, req);\n            if (runner == null) { break; }\n            inflightQuorum += runner.config.weight;\n            if (inflightQuorum >= this.quorum) { break; }\n        }\n\n        const result = await this.#waitForQuorum(running, req);\n\n        // Track requests sent to a provider that are still\n        // outstanding after quorum has been otherwise found\n        for (const runner of running) {\n            if (runner.perform && runner.result == null) {\n                runner.config.lateResponses++;\n            }\n        }\n\n        return result;\n    }\n\n    async destroy(): Promise<void> {\n        for (const { provider } of this.#configs) {\n            provider.destroy();\n        }\n        super.destroy();\n    }\n}\n", "\nimport { assert } from \"../utils/index.js\";\n\nimport { AnkrProvider } from \"./provider-ankr.js\";\nimport { AlchemyProvider } from \"./provider-alchemy.js\";\nimport { ChainstackProvider } from \"./provider-chainstack.js\";\nimport { CloudflareProvider } from \"./provider-cloudflare.js\";\nimport { EtherscanProvider } from \"./provider-etherscan.js\";\nimport { InfuraProvider } from \"./provider-infura.js\";\n//import { PocketProvider } from \"./provider-pocket.js\";\nimport { QuickNodeProvider } from \"./provider-quicknode.js\";\n\nimport { FallbackProvider } from \"./provider-fallback.js\";\nimport { JsonRpcProvider } from \"./provider-jsonrpc.js\";\nimport { Network } from \"./network.js\";\nimport { WebSocketProvider } from \"./provider-websocket.js\";\n\nimport type { AbstractProvider } from \"./abstract-provider.js\";\nimport type { Networkish } from \"./network.js\";\nimport { WebSocketLike } from \"./provider-websocket.js\";\n\nfunction isWebSocketLike(value: any): value is WebSocketLike {\n    return (value && typeof(value.send) === \"function\" &&\n        typeof(value.close) === \"function\");\n}\n\nconst Testnets = \"goerli kovan sepolia classicKotti optimism-goerli arbitrum-goerli matic-mumbai bnbt\".split(\" \");\n\n/**\n *  Returns a default provider for %%network%%.\n *\n *  If %%network%% is a [[WebSocketLike]] or string that begins with\n *  ``\"ws:\"`` or ``\"wss:\"``, a [[WebSocketProvider]] is returned backed\n *  by that WebSocket or URL.\n *\n *  If %%network%% is a string that begins with ``\"HTTP:\"`` or ``\"HTTPS:\"``,\n *  a [[JsonRpcProvider]] is returned connected to that URL.\n *\n *  Otherwise, a default provider is created backed by well-known public\n *  Web3 backends (such as [[link-infura]]) using community-provided API\n *  keys.\n *\n *  The %%options%% allows specifying custom API keys per backend (setting\n *  an API key to ``\"-\"`` will omit that provider) and ``options.exclusive``\n *  can be set to either a backend name or and array of backend names, which\n *  will whitelist **only** those backends.\n *\n *  Current backend strings supported are:\n *  - ``\"alchemy\"``\n *  - ``\"ankr\"``\n *  - ``\"cloudflare\"``\n *  - ``\"chainstack\"``\n *  - ``\"etherscan\"``\n *  - ``\"infura\"``\n *  - ``\"publicPolygon\"``\n *  - ``\"quicknode\"``\n *\n *  @example:\n *    // Connect to a local Geth node\n *    provider = getDefaultProvider(\"http://localhost:8545/\");\n *\n *    // Connect to Ethereum mainnet with any current and future\n *    // third-party services available\n *    provider = getDefaultProvider(\"mainnet\");\n *\n *    // Connect to Polygon, but only allow Etherscan and\n *    // INFURA and use \"MY_API_KEY\" in calls to Etherscan.\n *    provider = getDefaultProvider(\"matic\", {\n *      etherscan: \"MY_API_KEY\",\n *      exclusive: [ \"etherscan\", \"infura\" ]\n *    });\n */\nexport function getDefaultProvider(network?: string | Networkish | WebSocketLike, options?: any): AbstractProvider {\n    if (options == null) { options = { }; }\n\n    const allowService = (name: string) => {\n        if (options[name] === \"-\") { return false; }\n        if (typeof(options.exclusive) === \"string\") {\n            return (name === options.exclusive);\n        }\n        if (Array.isArray(options.exclusive)) {\n            return (options.exclusive.indexOf(name) !== -1);\n        }\n        return true;\n    };\n\n    if (typeof(network) === \"string\" && network.match(/^https?:/)) {\n        return new JsonRpcProvider(network);\n    }\n\n    if (typeof(network) === \"string\" && network.match(/^wss?:/) || isWebSocketLike(network)) {\n        return new WebSocketProvider(network);\n    }\n\n    // Get the network and name, if possible\n    let staticNetwork: null | Network = null;\n    try {\n        staticNetwork = Network.from(network);\n    } catch (error) { }\n\n\n    const providers: Array<AbstractProvider> = [ ];\n\n    if (allowService(\"publicPolygon\") && staticNetwork) {\n        if (staticNetwork.name === \"matic\") {\n            providers.push(new JsonRpcProvider(\"https:/\\/polygon-rpc.com/\", staticNetwork, { staticNetwork }));\n        } else if (staticNetwork.name === \"matic-amoy\") {\n            providers.push(new JsonRpcProvider(\"https:/\\/rpc-amoy.polygon.technology/\", staticNetwork, { staticNetwork }));\n        }\n    }\n\n    if (allowService(\"alchemy\")) {\n        try {\n            providers.push(new AlchemyProvider(network, options.alchemy));\n        } catch (error) { }\n    }\n\n    if (allowService(\"ankr\") && options.ankr != null) {\n        try {\n            providers.push(new AnkrProvider(network, options.ankr));\n        } catch (error) { }\n    }\n\n    if (allowService(\"chainstack\")) {\n        try {\n            providers.push(new ChainstackProvider(network, options.chainstack));\n        } catch (error) { }\n    }\n\n    if (allowService(\"cloudflare\")) {\n        try {\n            providers.push(new CloudflareProvider(network));\n        } catch (error) { }\n    }\n\n    if (allowService(\"etherscan\")) {\n        try {\n            providers.push(new EtherscanProvider(network, options.etherscan));\n        } catch (error) { }\n    }\n\n    if (allowService(\"infura\")) {\n        try {\n            let projectId = options.infura;\n            let projectSecret: undefined | string = undefined;\n            if (typeof(projectId) === \"object\") {\n                projectSecret = projectId.projectSecret;\n                projectId = projectId.projectId;\n            }\n            providers.push(new InfuraProvider(network, projectId, projectSecret));\n        } catch (error) { }\n    }\n/*\n    if (options.pocket !== \"-\") {\n        try {\n            let appId = options.pocket;\n            let secretKey: undefined | string = undefined;\n            let loadBalancer: undefined | boolean = undefined;\n            if (typeof(appId) === \"object\") {\n                loadBalancer = !!appId.loadBalancer;\n                secretKey = appId.secretKey;\n                appId = appId.appId;\n            }\n            providers.push(new PocketProvider(network, appId, secretKey, loadBalancer));\n        } catch (error) { console.log(error); }\n    }\n*/\n    if (allowService(\"quicknode\")) {\n        try {\n            let token = options.quicknode;\n            providers.push(new QuickNodeProvider(network, token));\n        } catch (error) { }\n    }\n\n    assert(providers.length, \"unsupported default network\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"getDefaultProvider\"\n    });\n\n    // No need for a FallbackProvider\n    if (providers.length === 1) { return providers[0]; }\n\n    // We use the floor because public third-party providers can be unreliable,\n    // so a low number of providers with a large quorum will fail too often\n    let quorum = Math.floor(providers.length / 2);\n    if (quorum > 2) { quorum = 2; }\n\n    // Testnets don't need as strong a security gaurantee and speed is\n    // more useful during testing\n    if (staticNetwork && Testnets.indexOf(staticNetwork.name) !== -1) { quorum = 1; }\n\n    // Provided override qorum takes priority\n    if (options && options.quorum) { quorum = options.quorum; }\n\n    return new FallbackProvider(providers, undefined, { quorum });\n}\n", "import { getAddress, resolveAddress } from \"../address/index.js\";\nimport { hashMessage, TypedDataEncoder } from \"../hash/index.js\";\nimport { AbstractSigner, copyRequest } from \"../providers/index.js\";\nimport { computeAddress, Transaction } from \"../transaction/index.js\";\nimport {\n    defineProperties, resolveProperties, assert, assertArgument\n} from \"../utils/index.js\";\n\nimport type { SigningKey } from \"../crypto/index.js\";\nimport type { TypedDataDomain, TypedDataField } from \"../hash/index.js\";\nimport type { Provider, TransactionRequest } from \"../providers/index.js\";\nimport type { TransactionLike } from \"../transaction/index.js\";\n\n\n/**\n *  The **BaseWallet** is a stream-lined implementation of a\n *  [[Signer]] that operates with a private key.\n *\n *  It is preferred to use the [[Wallet]] class, as it offers\n *  additional functionality and simplifies loading a variety\n *  of JSON formats, Mnemonic Phrases, etc.\n *\n *  This class may be of use for those attempting to implement\n *  a minimal Signer.\n */\nexport class BaseWallet extends AbstractSigner {\n    /**\n     *  The wallet address.\n     */\n    readonly address!: string;\n\n    readonly #signingKey: SigningKey;\n\n    /**\n     *  Creates a new BaseWallet for %%privateKey%%, optionally\n     *  connected to %%provider%%.\n     *\n     *  If %%provider%% is not specified, only offline methods can\n     *  be used.\n     */\n    constructor(privateKey: SigningKey, provider?: null | Provider) {\n        super(provider);\n\n        assertArgument(privateKey && typeof(privateKey.sign) === \"function\", \"invalid private key\", \"privateKey\", \"[ REDACTED ]\");\n\n        this.#signingKey = privateKey;\n\n        const address = computeAddress(this.signingKey.publicKey);\n        defineProperties<BaseWallet>(this, { address });\n    }\n\n    // Store private values behind getters to reduce visibility\n    // in console.log\n\n    /**\n     *  The [[SigningKey]] used for signing payloads.\n     */\n    get signingKey(): SigningKey { return this.#signingKey; }\n\n    /**\n     *  The private key for this wallet.\n     */\n    get privateKey(): string { return this.signingKey.privateKey; }\n\n    async getAddress(): Promise<string> { return this.address; }\n\n    connect(provider: null | Provider): BaseWallet {\n        return new BaseWallet(this.#signingKey, provider);\n    }\n\n    async signTransaction(tx: TransactionRequest): Promise<string> {\n        tx = copyRequest(tx);\n\n        // Replace any Addressable or ENS name with an address\n        const { to, from } = await resolveProperties({\n            to: (tx.to ? resolveAddress(tx.to, this.provider): undefined),\n            from: (tx.from ? resolveAddress(tx.from, this.provider): undefined)\n        });\n\n        if (to != null) { tx.to = to; }\n        if (from != null) { tx.from = from; }\n\n        if (tx.from != null) {\n            assertArgument(getAddress(<string>(tx.from)) === this.address,\n                \"transaction from address mismatch\", \"tx.from\", tx.from);\n            delete tx.from;\n        }\n\n        // Build the transaction\n        const btx = Transaction.from(<TransactionLike<string>>tx);\n        btx.signature = this.signingKey.sign(btx.unsignedHash);\n\n        return btx.serialized;\n    }\n\n    async signMessage(message: string | Uint8Array): Promise<string> {\n        return this.signMessageSync(message);\n    }\n\n    // @TODO: Add a secialized signTx and signTyped sync that enforces\n    // all parameters are known?\n    /**\n     *  Returns the signature for %%message%% signed with this wallet.\n     */\n    signMessageSync(message: string | Uint8Array): string {\n        return this.signingKey.sign(hashMessage(message)).serialized;\n    }\n\n    async signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n\n        // Populate any ENS names\n        const populated = await TypedDataEncoder.resolveNames(domain, types, value, async (name: string) => {\n            // @TODO: this should use resolveName; addresses don't\n            //        need a provider\n\n            assert(this.provider != null, \"cannot resolve ENS names without a provider\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"resolveName\",\n                info: { name }\n            });\n\n            const address = await this.provider.resolveName(name);\n            assert(address != null, \"unconfigured ENS name\", \"UNCONFIGURED_NAME\", {\n                value: name\n            });\n\n            return address;\n        });\n\n        return this.signingKey.sign(TypedDataEncoder.hash(populated.domain, types, populated.value)).serialized;\n    }\n}\n", "import { assertArgument } from \"../utils/index.js\";\n\n\nconst subsChrs = \" !#$%&'()*+,-./<=>?@[]^_`{|}~\";\nconst Word = /^[a-z]*$/i;\n\nfunction unfold(words: Array<string>, sep: string): Array<string> {\n    let initial = 97;\n    return words.reduce((accum, word) => {\n        if (word === sep) {\n            initial++;\n        } else if (word.match(Word)) {\n            accum.push(String.fromCharCode(initial) + word);\n        } else {\n            initial = 97;\n            accum.push(word);\n        }\n        return accum;\n    }, <Array<string>>[]);\n}\n\n/**\n *  @_ignore\n */\nexport function decode(data: string, subs: string): Array<string> {\n\n    // Replace all the substitutions with their expanded form\n    for (let i = subsChrs.length - 1; i >= 0; i--) {\n        data = data.split(subsChrs[i]).join(subs.substring(2 * i, 2 * i + 2));\n    }\n\n    // Get all tle clumps; each suffix, first-increment and second-increment\n    const clumps: Array<string> = [ ];\n    const leftover = data.replace(/(:|([0-9])|([A-Z][a-z]*))/g, (all, item, semi, word) => {\n        if (semi) {\n            for (let i = parseInt(semi); i >= 0; i--) { clumps.push(\";\"); }\n        } else {\n            clumps.push(item.toLowerCase());\n        }\n        return \"\";\n    });\n    /* c8 ignore start */\n    if (leftover) { throw new Error(`leftovers: ${ JSON.stringify(leftover) }`); }\n    /* c8 ignore stop */\n\n    return unfold(unfold(clumps, \";\"), \":\");\n}\n\n/**\n *  @_ignore\n */\nexport function decodeOwl(data: string): Array<string> {\n    assertArgument(data[0] === \"0\", \"unsupported auwl data\", \"data\", data);\n\n    return decode(\n        data.substring(1 + 2 * subsChrs.length),\n        data.substring(1, 1 + 2 * subsChrs.length));\n}\n", "import { defineProperties } from \"../utils/index.js\";\n\n/**\n *  A Wordlist represents a collection of language-specific\n *  words used to encode and devoce [[link-bip-39]] encoded data\n *  by mapping words to 11-bit values and vice versa.\n */\nexport abstract class Wordlist {\n    locale!: string;\n\n    /**\n     *  Creates a new Wordlist instance.\n     *\n     *  Sub-classes MUST call this if they provide their own constructor,\n     *  passing in the locale string of the language.\n     *\n     *  Generally there is no need to create instances of a Wordlist,\n     *  since each language-specific Wordlist creates an instance and\n     *  there is no state kept internally, so they are safe to share.\n     */\n    constructor(locale: string) {\n        defineProperties<Wordlist>(this, { locale });\n    }\n\n    /**\n     *  Sub-classes may override this to provide a language-specific\n     *  method for spliting %%phrase%% into individual words.\n     *\n     *  By default, %%phrase%% is split using any sequences of\n     *  white-space as defined by regular expressions (i.e. ``/\\s+/``).\n     */\n    split(phrase: string): Array<string> {\n        return phrase.toLowerCase().split(/\\s+/g)\n    }\n\n    /**\n     *  Sub-classes may override this to provider a language-specific\n     *  method for joining %%words%% into a phrase.\n     *\n     *  By default, %%words%% are joined by a single space.\n     */\n    join(words: Array<string>): string {\n        return words.join(\" \");\n    }\n\n    /**\n     *  Maps an 11-bit value into its coresponding word in the list.\n     *\n     *  Sub-classes MUST override this.\n     */\n    abstract getWord(index: number): string;\n\n    /**\n     *  Maps a word to its corresponding 11-bit value.\n     *\n     *  Sub-classes MUST override this.\n     */\n    abstract getWordIndex(word: string): number;\n}\n", "\n// Use the encode-latin.js script to create the necessary\n// data files to be consumed by this class\n\nimport { id } from \"../hash/index.js\";\nimport { assertArgument } from \"../utils/index.js\";\n\nimport { decodeOwl } from \"./decode-owl.js\";\nimport { Wordlist } from \"./wordlist.js\";\n\n/**\n *  An OWL format Wordlist is an encoding method that exploits\n *  the general locality of alphabetically sorted words to\n *  achieve a simple but effective means of compression.\n *\n *  This class is generally not useful to most developers as\n *  it is used mainly internally to keep Wordlists for languages\n *  based on ASCII-7 small.\n *\n *  If necessary, there are tools within the ``generation/`` folder\n *  to create the necessary data.\n */\nexport class WordlistOwl extends Wordlist {\n    #data: string;\n    #checksum: string;\n\n    /**\n     *  Creates a new Wordlist for %%locale%% using the OWL %%data%%\n     *  and validated against the %%checksum%%.\n     */\n    constructor(locale: string, data: string, checksum: string) {\n        super(locale);\n        this.#data = data;\n        this.#checksum = checksum;\n        this.#words = null;\n    }\n\n    /**\n     *  The OWL-encoded data.\n     */\n    get _data(): string { return this.#data; }\n\n    /**\n     *  Decode all the words for the wordlist.\n     */\n    _decodeWords(): Array<string> {\n        return decodeOwl(this.#data);\n    }\n\n    #words: null | Array<string>;\n    #loadWords(): Array<string> {\n        if (this.#words == null) {\n            const words = this._decodeWords();\n\n            // Verify the computed list matches the official list\n            const checksum = id(words.join(\"\\n\") + \"\\n\");\n            /* c8 ignore start */\n            if (checksum !== this.#checksum) {\n                throw new Error(`BIP39 Wordlist for ${ this.locale } FAILED`);\n            }\n            /* c8 ignore stop */\n\n            this.#words = words;\n        }\n        return this.#words;\n    }\n\n    getWord(index: number): string {\n        const words = this.#loadWords();\n        assertArgument(index >= 0 && index < words.length, `invalid word index: ${ index }`, \"index\", index);\n        return words[index];\n    }\n\n    getWordIndex(word: string): number {\n        return this.#loadWords().indexOf(word);\n    }\n}\n", "import { WordlistOwl } from \"./wordlist-owl.js\";\n\nconst words = \"0erleonalorenseinceregesticitStanvetearctssi#ch2Athck&tneLl0And#Il.yLeOutO=S|S%b/ra@SurdU'0Ce[Cid|CountCu'Hie=IdOu,-Qui*Ro[TT]T%T*[Tu$0AptDD-tD*[Ju,M.UltV<)Vi)0Rob-0FairF%dRaid0A(EEntRee0Ead0MRRp%tS!_rmBumCoholErtI&LLeyLowMo,O}PhaReadySoT Ways0A>urAz(gOngOuntU'd0Aly,Ch%Ci|G G!GryIm$K!Noun)Nu$O` Sw T&naTiqueXietyY1ArtOlogyPe?P!Pro=Ril1ChCt-EaEnaGueMMedM%MyOundR<+Re,Ri=RowTTefa@Ti,Tw%k0KPe@SaultSetSi,SumeThma0H!>OmTa{T&dT.udeTra@0Ct]D.Gu,NtTh%ToTumn0Era+OcadoOid0AkeA*AyEsomeFulKw?d0Is:ByChel%C#D+GL<)Lc#y~MbooN<aNn RRelyRga(R*lSeS-SketTt!3A^AnAutyCau'ComeEfF%eG(Ha=H(dLie=LowLtN^Nef./TrayTt Twe&Y#d3Cyc!DKeNdOlogyRdR`Tt _{AdeAmeAnketA,EakE[IndOodO[omOu'UeUrUsh_rdAtDyIlMbNeNusOkO,Rd R(gRrowSsTtomUn)XY_{etA(AndA[A=EadEezeI{Id+IefIghtIngIskOccoliOk&OnzeOomO` OwnUsh2Bb!DdyD+tFf$oIldLbLkL!tNd!Nk Rd&Rg R,SS(e[SyTt Y Zz:Bba+B(B!CtusGeKe~LmM aMpNN$N)lNdyNn#NoeNvasNy#Pab!P.$Pta(RRb#RdRgoRpetRryRtSeShS(o/!Su$TT$ogT^Teg%yTt!UghtU'Ut]Ve3Il(gL yM|NsusNturyRe$Rta(_irAlkAmp]An+AosApt Ar+A'AtEapE{Ee'EfErryE,I{&IefIldIm}yOi)Oo'R#-U{!UnkUrn0G?Nnam#Rc!Tiz&TyVil_imApArifyAwAyE<ErkEv I{I|IffImbIn-IpO{OgO'O`OudOwnUbUmpU, Ut^_^A,C#utDeFfeeIlInL!@L%LumnMb(eMeMf%tM-Mm#Mp<yNc tNdu@NfirmNg*[N}@Nsid NtrolNv()OkOlPp PyR$ReRnR*@/Tt#U^UntryUp!Ur'Us(V Yo>_{Ad!AftAmA}AshAt AwlAzyEamEd.EekEwI{etImeIspIt-OpO[Ou^OwdUci$UelUi'Umb!Un^UshYY,$2BeLtu*PPbo?dRiousRr|Rta(R=Sh]/omTe3C!:DMa+MpN)Ng R(gShUght WnY3AlBa>BrisCadeCemb CideCl(eC%a>C*a'ErF&'F(eFyG*eLayLiv M<dMi'Ni$Nti,NyP?tP&dPos.P`PutyRi=ScribeS tSignSkSpair/royTailTe@VelopVi)Vo>3AgramAlAm#dAryCeE'lEtFf G.$Gn.yLemmaNn NosaurRe@RtSag*eScov Sea'ShSmi[S%d Splay/<)V tVideV%)Zzy5Ct%Cum|G~Lph(Ma(Na>NkeyN%OrSeUb!Ve_ftAg#AmaA,-AwEamE[IftIllInkIpI=OpUmY2CkMbNeR(g/T^Ty1Arf1Nam-:G G!RlyRnR`Sily/Sy1HoOlogyOnomy0GeItUca>1F%t0G1GhtTh 2BowD E@r-Eg<tEm|Eph<tEvat%I>Se0B?kBodyBra)Er+Ot]PloyPow Pty0Ab!A@DD![D%'EmyErgyF%)Ga+G(eH<)JoyLi,OughR-hRollSu*T Ti*TryVelope1Isode0U$Uip0AA'OdeOs]R%Upt0CapeSayS&)Ta>0Ern$H-s1Id&)IlOkeOl=1A@Amp!Ce[Ch<+C.eCludeCu'Ecu>Erci'Hau,Hib.I!I,ItOt-P<dPe@Pi*Pla(Po'P*[T&dTra0EEbrow:Br-CeCultyDeIntI`~L'MeMilyMousNNcyNtasyRmSh]TT$Th TigueUltV%.e3Atu*Bru?yD $EEdElMa!N)/iv$T^V W3B Ct]EldGu*LeLmLt N$NdNeNg NishReRmR,Sc$ShTT}[X_gAmeAshAtAv%EeIghtIpOatO{O%Ow UidUshY_mCusGIlLd~owOdOtR)Re,R+tRkRtu}RumRw?dSsil/ UndX_gi!AmeEqu|EshI&dIn+OgOntO,OwnOz&U.2ElNNnyRna)RyTu*:D+tInLaxy~ yMePRa+Rba+Rd&Rl-Rm|SSpTeTh U+Ze3N $NiusN*Nt!Nu(e/u*2O,0AntFtGg!Ng RaffeRlVe_dAn)A*A[IdeImp'ObeOomOryO=OwUe_tDde[LdOdO'RillaSpelSsipV nWn_bA)A(AntApeA[Av.yEatE&IdIefItOc yOupOwUnt_rdE[IdeIltIt?N3M:B.IrLfMm M, NdPpyRb%RdRshR=,TVeWkZ?d3AdAl`ArtAvyD+hogIght~oLmetLpNRo3Dd&Gh~NtPRe/%y5BbyCkeyLdLeLiday~owMeNeyOdPeRnRr%R'Sp.$/TelUrV 5BGeM<Mb!M%Nd*dNgryNtRd!RryRtSb<d3Brid:1EOn0EaEntifyLe2N%e4LLeg$L}[0A+Ita>M&'Mu}Pa@Po'Pro=Pul'0ChCludeComeC*a'DexD-a>Do%Du,ryF<tFl-tF%mHa!H .Iti$Je@JuryMa>N Noc|PutQuiryS<eSe@SideSpi*/$lTa@T e,ToVe,V.eVol=3On0L<dOla>Sue0Em1Ory:CketGu?RZz3AlousAns~yWel9BInKeUr}yY5D+I)MpNg!Ni%Nk/:Ng?oo3EnEpT^upY3CkDD}yNdNgdomSsTT^&TeTt&Wi4EeIfeO{Ow:BBelB%Dd DyKeMpNgua+PtopR+T T(UghUndryVaWWnWsu.Y Zy3Ad AfArnA=Ctu*FtGG$G&dIsu*M#NdNg`NsOp?dSs#Tt Vel3ArB tyBr?yC&'FeFtGhtKeMbM.NkOnQuid/Tt!VeZ?d5AdAnB, C$CkG-NelyNgOpTt yUdUn+VeY$5CkyGga+Mb N?N^Xury3R-s:Ch(eDG-G}tIdIlInJ%KeMm$NNa+Nda>NgoNs]Nu$P!Rb!R^Rg(R(eRketRria+SkSs/ T^T i$ThTrixTt XimumZe3AdowAnAsu*AtCh<-D$DiaLodyLtMb M%yNt]NuRcyR+R.RryShSsa+T$Thod3Dd!DnightLk~]M-NdNimumN%Nu>Rac!Rr%S ySs/akeXXedXtu*5Bi!DelDifyMM|N.%NkeyN, N`OnR$ReRn(gSqu.oTh T]T%Unta(U'VeVie5ChFf(LeLtiplySc!SeumShroomS-/Tu$3Self/ yTh:I=MePk(Rrow/yT]Tu*3ArCkEdGati=G!@I` PhewR=/TTw%kUtr$V WsXt3CeGht5B!I'M(eeOd!Rm$R`SeTab!TeTh(gTi)VelW5C!?Mb R'T:K0EyJe@Li+Scu*S =Ta(Vious0CurE<Tob 0Or1FF Fi)T&2L1Ay0DI=Ymp-0It0CeEI#L(eLy1EnEraIn]Po'T]1An+B.Ch?dD D(?yG<I|Ig($Ph<0Tr-h0H 0Tdo%T TputTside0AlEnEr0NN 0Yg&0/ 0O}:CtDd!GeIrLa)LmNdaNelN-N` P RadeR|RkRrotRtySsT^ThTi|TrolTt nU'VeYm|3A)AnutArAs<tL-<NN$tyNcilOp!Pp Rfe@Rm.Rs#T2O}OtoRa'Ys-$0AnoCn-Ctu*E)GGe#~LotNkO} Pe/olT^Zza_)A}tA,-A>AyEa'Ed+U{UgUn+2EmEtIntL?LeLi)NdNyOlPul?Rt]S.]Ssib!/TatoTt yV tyWd W _@i)Ai'Ed-tEf Epa*Es|EttyEv|I)IdeIm?yIntI%.yIs#Iva>IzeOb!mO)[Odu)Of.OgramOje@Omo>OofOp tyOsp O>@OudOvide2Bl-Dd(g~LpL'Mpk(N^PilPpyR^a'R.yRpo'R'ShTZz!3Ramid:99Al.yAntumArt E,]I{ItIzO>:Bb.Cco#CeCkD?DioIlInI'~yMpN^NdomN+PidReTeTh V&WZ%3AdyAlAs#BelBuildC$lCei=CipeC%dCyc!Du)F!@F%mFu'G]G*tGul?Je@LaxLea'LiefLyMa(Memb M(dMo=Nd NewNtOp&PairPeatPla)P%tQui*ScueSemb!Si,Sour)Sp#'SultTi*T*atTurnUn]Ve$ViewW?d2Y`m0BBb#CeChDeD+F!GhtGidNgOtPp!SkTu$V$V 5AdA,BotBu,CketM<)OfOkieOmSeTa>UghUndU>Y$5Bb DeGLeNNwayR$:DDd!D}[FeIlLadLm#L#LtLu>MeMp!NdTisfyToshiU)Usa+VeY1A!AnA*Att E}HemeHoolI&)I[%sOrp]OutRapRe&RiptRub1AAr^As#AtC#dC*tCt]Cur.yEdEkGm|Le@~M(?Ni%N'Nt&)RiesRvi)Ss]Tt!TupV&_dowAftAllowA*EdEllEriffIeldIftI}IpIv O{OeOotOpOrtOuld O=RimpRugUff!Y0Bl(gCkDeE+GhtGnL|Lk~yLv Mil?Mp!N)NgR&/ Tua>XZe1A>Et^IIllInIrtUll0AbAmEepEnd I)IdeIghtImOg<OtOwUsh0AllArtI!OkeOo`0A{AkeApIffOw0ApCc Ci$CkDaFtL?Ldi LidLut]L=Me#eNgOnRryRtUlUndUpUr)U`0A)A*Ati$AwnEakEci$EedEllEndH eI)Id IkeInIr.L.OilOns%O#OrtOtRayReadR(gY0Ua*UeezeUir*l_b!AdiumAffA+AirsAmpAndArtA>AyEakEelEmEpE*oI{IllIngO{Oma^O}OolOryO=Ra>gyReetRikeR#gRugg!Ud|UffUmb!Y!0Bje@Bm.BwayC)[ChDd&Ff G?G+,ItMm NNnyN'tP PplyP*meReRfa)R+Rpri'RroundR=ySpe@/a(1AllowAmpApArmE?EetIftImIngIt^Ord1MbolMptomRup/em:B!Ck!GIlL|LkNkPeR+tSk/eTtooXi3A^Am~NN<tNnisNtRm/Xt_nkAtEmeEnE%yE*EyIngIsOughtReeRi=RowUmbUnd 0CketDeG LtMb MeNyPRedSsueT!5A,BaccoDayDdl EGe` I!tK&MatoM%rowNeNgueNightOlO`PP-Pp!R^RnadoRtoi'SsT$Uri,W?dW WnY_{AdeAff-Ag-A(Ansf ApAshA=lAyEatEeEndI$IbeI{Igg ImIpOphyOub!U{UeUlyUmpetU,U`Y2BeIt]Mb!NaN}lRkeyRnRt!1El=EntyI)InI,O1PeP-$:5Ly5B*lla0Ab!Awa*C!Cov D DoFairFoldHappyIf%mIqueItIv 'KnownLo{TilUsu$Veil1Da>GradeHoldOnP Set1B<Ge0A+EEdEfulE![U$0Il.y:C<tCuumGueLidL!yL=NNishP%Rious/Ult3H-!L=tNd%Ntu*NueRbRifyRs]RyS'lT <3Ab!Br<tCiousCt%yDeoEw~a+Nta+Ol(Rtu$RusSaS.Su$T$Vid5C$I)IdLc<oLumeTeYa+:GeG#ItLk~LnutNtRfa*RmRri%ShSp/eT VeY3Al`Ap#ArA'lA` BDd(gEk&dIrdLcome/T_!AtEatEelEnE*IpIsp 0DeD`FeLd~NNdowNeNgNkNn Nt ReSdomSeShT}[5LfM<Nd OdOlRdRkRldRryR`_pE{E,!I,I>Ong::Rd3Ar~ow9UUngU`:3BraRo9NeO\";\nconst checksum = \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\";\n\nlet wordlist: null | LangEn = null;\n\n/**\n *  The [[link-bip39-en]] for [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nexport class LangEn extends WordlistOwl {\n\n    /**\n     *  Creates a new instance of the English language Wordlist.\n     *\n     *  This should be unnecessary most of the time as the exported\n     *  [[langEn]] should suffice.\n     *\n     *  @_ignore:\n     */\n    constructor() { super(\"en\", words, checksum); }\n\n    /**\n     *  Returns a singleton instance of a ``LangEn``, creating it\n     *  if this is the first time being called.\n     */\n    static wordlist(): LangEn {\n        if (wordlist == null) { wordlist = new LangEn(); }\n        return wordlist;\n    }\n}\n", "import { pbkdf2, sha256 } from \"../crypto/index.js\";\nimport {\n    defineProperties, getBytes, hexlify, assertNormalize, assertPrivate, assertArgument, toUtf8Bytes\n} from \"../utils/index.js\";\nimport { LangEn } from \"../wordlists/lang-en.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\nimport type { Wordlist } from \"../wordlists/index.js\";\n\n\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits: number): number {\n   return ((1 << bits) - 1) << (8 - bits) & 0xff;\n}\n\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits: number): number {\n   return ((1 << bits) - 1) & 0xff;\n}\n\n\nfunction mnemonicToEntropy(mnemonic: string, wordlist?: null | Wordlist): string {\n    assertNormalize(\"NFKD\");\n\n    if (wordlist == null) { wordlist = LangEn.wordlist(); }\n\n    const words = wordlist.split(mnemonic);\n    assertArgument((words.length % 3) === 0 && words.length >= 12 && words.length <= 24,\n        \"invalid mnemonic length\", \"mnemonic\", \"[ REDACTED ]\");\n\n    const entropy = new Uint8Array(Math.ceil(11 * words.length / 8));\n\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        assertArgument(index >= 0, `invalid mnemonic word at index ${ i }`, \"mnemonic\", \"[ REDACTED ]\");\n\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n\n    const entropyBits = 32 * words.length / 3;\n\n\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n\n    const checksum = getBytes(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n\n    assertArgument(checksum === (entropy[entropy.length - 1] & checksumMask),\n        \"invalid mnemonic checksum\", \"mnemonic\", \"[ REDACTED ]\");\n\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\n\nfunction entropyToMnemonic(entropy: Uint8Array, wordlist?: null | Wordlist): string {\n\n    assertArgument((entropy.length % 4) === 0 && entropy.length >= 16 && entropy.length <= 32,\n        \"invalid entropy size\", \"entropy\", \"[ REDACTED ]\");\n\n    if (wordlist == null) { wordlist = LangEn.wordlist(); }\n\n    const indices: Array<number> = [ 0 ];\n\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n\n            remainingBits -= 8;\n\n        // This byte will complete an 11-bit index\n        } else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n\n            remainingBits += 3;\n        }\n    }\n\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = parseInt(sha256(entropy).substring(2, 4), 16) & getUpperMask(checksumBits);\n\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n\n    return wordlist.join(indices.map((index) => (<Wordlist>wordlist).getWord(index)));\n}\n\nconst _guard = { };\n\n/**\n *  A **Mnemonic** wraps all properties required to compute [[link-bip-39]]\n *  seeds and convert between phrases and entropy.\n */\nexport class Mnemonic {\n    /**\n     *  The mnemonic phrase of 12, 15, 18, 21 or 24 words.\n     *\n     *  Use the [[wordlist]] ``split`` method to get the individual words.\n     */\n    readonly phrase!: string;\n\n    /**\n     *  The password used for this mnemonic. If no password is used this\n     *  is the empty string (i.e. ``\"\"``) as per the specification.\n     */\n    readonly password!: string;\n\n    /**\n     *  The wordlist for this mnemonic.\n     */\n    readonly wordlist!: Wordlist;\n\n    /**\n     *  The underlying entropy which the mnemonic encodes.\n     */\n    readonly entropy!: string;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, entropy: string, phrase: string, password?: null | string, wordlist?: null | Wordlist) {\n        if (password == null) { password = \"\"; }\n        if (wordlist == null) { wordlist = LangEn.wordlist(); }\n        assertPrivate(guard, _guard, \"Mnemonic\");\n        defineProperties<Mnemonic>(this, { phrase, password, wordlist, entropy });\n    }\n\n    /**\n     *  Returns the seed for the mnemonic.\n     */\n    computeSeed(): string {\n        const salt = toUtf8Bytes(\"mnemonic\" + this.password, \"NFKD\");\n        return pbkdf2(toUtf8Bytes(this.phrase, \"NFKD\"), salt, 2048, 64, \"sha512\");\n    }\n\n    /**\n     *  Creates a new Mnemonic for the %%phrase%%.\n     *\n     *  The default %%password%% is the empty string and the default\n     *  wordlist is the [English wordlists](LangEn).\n     */\n    static fromPhrase(phrase: string, password?: null | string, wordlist?: null | Wordlist): Mnemonic {\n        // Normalize the case and space; throws if invalid\n        const entropy = mnemonicToEntropy(phrase, wordlist);\n        phrase = entropyToMnemonic(getBytes(entropy), wordlist);\n        return new Mnemonic(_guard, entropy, phrase, password, wordlist);\n    }\n\n    /**\n     *  Create a new **Mnemonic** from the %%entropy%%.\n     *\n     *  The default %%password%% is the empty string and the default\n     *  wordlist is the [English wordlists](LangEn).\n     */\n    static fromEntropy(_entropy: BytesLike, password?: null | string, wordlist?: null | Wordlist): Mnemonic {\n        const entropy = getBytes(_entropy, \"entropy\");\n        const phrase = entropyToMnemonic(entropy, wordlist);\n        return new Mnemonic(_guard, hexlify(entropy), phrase, password, wordlist);\n    }\n\n    /**\n     *  Returns the phrase for %%mnemonic%%.\n     */\n    static entropyToPhrase(_entropy: BytesLike, wordlist?: null | Wordlist): string {\n        const entropy = getBytes(_entropy, \"entropy\");\n        return entropyToMnemonic(entropy, wordlist);\n    }\n\n    /**\n     *  Returns the entropy for %%phrase%%.\n     */\n    static phraseToEntropy(phrase: string, wordlist?: null | Wordlist): string {\n        return mnemonicToEntropy(phrase, wordlist);\n    }\n\n    /**\n     *  Returns true if %%phrase%% is a valid [[link-bip-39]] phrase.\n     *\n     *  This checks all the provided words belong to the %%wordlist%%,\n     *  that the length is valid and the checksum is correct.\n     */\n    static isValidMnemonic(phrase: string, wordlist?: null | Wordlist): boolean {\n        try {\n            mnemonicToEntropy(phrase, wordlist);\n            return true;\n        } catch (error) { }\n        return false;\n    }\n}\n", "/*! MIT License. Copyright 2015-2022 Richard Moore <me@ricmoo.com>. See LICENSE.txt. */\n\n// Number of rounds by keysize\nconst numberOfRounds: Record<number, number> = { 16: 10, 24: 12, 32: 14 };\n\n// Round constant words\nconst rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n// S-box and Inverse S-box (S is for Substitution)\nconst S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\nconst Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n// Transformations for encryption\nconst T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\nconst T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\nconst T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\nconst T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n// Transformations for decryption\nconst T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\nconst T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\nconst T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\nconst T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n// Transformations for decryption key expansion\nconst U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\nconst U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\nconst U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\nconst U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\nfunction convertToInt32(bytes: Uint8Array): Array<number> {\n  const result = [ ];\n  for (let i = 0; i < bytes.length; i += 4) {\n    result.push((bytes[i] << 24) | (bytes[i + 1] << 16) | (bytes[i + 2] <<  8) | bytes[i + 3]);\n  }\n  return result;\n}\n\nexport class AES {\n  readonly #key: Uint8Array;\n  readonly #Kd: Array<Array<number>>;\n  readonly #Ke: Array<Array<number>>;\n\n  get key(): Uint8Array { return this.#key.slice(); }\n\n  constructor(key: Uint8Array) {\n    if (!(this instanceof AES)) {\n      throw Error('AES must be instanitated with `new`');\n    }\n\n    this.#key = new Uint8Array(key);\n\n    const rounds = numberOfRounds[this.key.length];\n    if (rounds == null) {\n      throw new TypeError('invalid key size (must be 16, 24 or 32 bytes)');\n    }\n\n    // encryption round keys\n    this.#Ke = [];\n\n    // decryption round keys\n    this.#Kd = [];\n\n    for (let i = 0; i <= rounds; i++) {\n      this.#Ke.push([0, 0, 0, 0]);\n      this.#Kd.push([0, 0, 0, 0]);\n    }\n\n    const roundKeyCount = (rounds + 1) * 4;\n    const KC = this.key.length / 4;\n\n    // convert the key into ints\n    const tk = convertToInt32(this.key);\n\n    // copy values into round key arrays\n    let index;\n    for (let i = 0; i < KC; i++) {\n      index = i >> 2;\n      this.#Ke[index][i % 4] = tk[i];\n      this.#Kd[rounds - index][i % 4] = tk[i];\n    }\n\n    // key expansion (fips-197 section 5.2)\n    let rconpointer = 0;\n    let t = KC, tt;\n    while (t < roundKeyCount) {\n      tt = tk[KC - 1];\n      tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                (S[(tt >>  8) & 0xFF] << 16) ^\n                (S[ tt        & 0xFF] <<  8) ^\n                 S[(tt >> 24) & 0xFF]        ^\n                (rcon[rconpointer] << 24));\n      rconpointer += 1;\n\n      // key expansion (for non-256 bit)\n      if (KC != 8) {\n        for (let i = 1; i < KC; i++) {\n          tk[i] ^= tk[i - 1];\n        }\n\n      // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n      } else {\n        for (let i = 1; i < (KC / 2); i++) {\n          tk[i] ^= tk[i - 1];\n        }\n        tt = tk[(KC / 2) - 1];\n\n        tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                      (S[(tt >>  8) & 0xFF] <<  8) ^\n                      (S[(tt >> 16) & 0xFF] << 16) ^\n                      (S[(tt >> 24) & 0xFF] << 24));\n\n        for (let i = (KC / 2) + 1; i < KC; i++) {\n          tk[i] ^= tk[i - 1];\n        }\n      }\n\n      // copy values into round key arrays\n      let i = 0, r, c;\n      while (i < KC && t < roundKeyCount) {\n        r = t >> 2;\n        c = t % 4;\n        this.#Ke[r][c] = tk[i];\n        this.#Kd[rounds - r][c] = tk[i++];\n        t++;\n      }\n    }\n\n    // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n    for (let r = 1; r < rounds; r++) {\n      for (let c = 0; c < 4; c++) {\n        tt = this.#Kd[r][c];\n        this.#Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                          U2[(tt >> 16) & 0xFF] ^\n                          U3[(tt >>  8) & 0xFF] ^\n                          U4[ tt        & 0xFF]);\n      }\n    }\n  }\n\n  encrypt(plaintext: Uint8Array): Uint8Array {\n    if (plaintext.length != 16) {\n      throw new TypeError('invalid plaintext size (must be 16 bytes)');\n    }\n\n    const rounds = this.#Ke.length - 1;\n    const a = [0, 0, 0, 0];\n\n    // convert plaintext to (ints ^ key)\n    let t = convertToInt32(plaintext);\n    for (let i = 0; i < 4; i++) {\n      t[i] ^= this.#Ke[0][i];\n    }\n\n    // apply round transforms\n    for (let r = 1; r < rounds; r++) {\n      for (let i = 0; i < 4; i++) {\n        a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                T4[ t[(i + 3) % 4]        & 0xff] ^\n                this.#Ke[r][i]);\n      }\n      t = a.slice();\n    }\n\n    // the last round is special\n    const result = new Uint8Array(16);\n    let tt = 0;\n    for (let i = 0; i < 4; i++) {\n      tt = this.#Ke[rounds][i];\n      result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n      result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n      result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n      result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n    }\n\n    return result;\n  }\n\n  decrypt(ciphertext: Uint8Array): Uint8Array {\n    if (ciphertext.length != 16) {\n      throw new TypeError('invalid ciphertext size (must be 16 bytes)');\n    }\n\n    const rounds = this.#Kd.length - 1;\n    const a = [0, 0, 0, 0];\n\n    // convert plaintext to (ints ^ key)\n    let t = convertToInt32(ciphertext);\n    for (let i = 0; i < 4; i++) {\n      t[i] ^= this.#Kd[0][i];\n    }\n\n    // apply round transforms\n    for (let r = 1; r < rounds; r++) {\n      for (let i = 0; i < 4; i++) {\n        a[i] = (T5[(t[ i         ] >> 24) & 0xff] ^\n                T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                T8[ t[(i + 1) % 4]        & 0xff] ^\n                this.#Kd[r][i]);\n      }\n      t = a.slice();\n    }\n\n    // the last round is special\n    const result = new Uint8Array(16);\n    let tt = 0;\n    for (let i = 0; i < 4; i++) {\n      tt = this.#Kd[rounds][i];\n      result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n      result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n      result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n      result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n    }\n\n    return result;\n  }\n}\n", "\nimport { AES } from \"./aes.js\";\n\nexport abstract class ModeOfOperation {\n  readonly aes!: AES;\n  readonly name!: string;\n\n  constructor(name: string, key: Uint8Array, cls?: any) {\n    if (cls && !(this instanceof cls)) {\n      throw new Error(`${ name } must be instantiated with \"new\"`);\n    }\n\n    Object.defineProperties(this, {\n      aes: { enumerable: true, value: new AES(key) },\n      name: { enumerable: true, value: name }\n    });\n  }\n\n  abstract encrypt(plaintext: Uint8Array): Uint8Array;\n  abstract decrypt(ciphertext: Uint8Array): Uint8Array;\n}\n", "// Cipher Feedback\n\nimport { ModeOfOperation } from \"./mode.js\";\n\nexport class CFB extends ModeOfOperation {\n  #iv: Uint8Array;\n  #shiftRegister: Uint8Array;\n\n  readonly segmentSize!: number;\n\n  constructor(key: Uint8Array, iv?: Uint8Array, segmentSize: number = 8) {\n    super(\"CFB\", key, CFB);\n\n    // This library currently only handles byte-aligned segmentSize\n    if (!Number.isInteger(segmentSize) || (segmentSize % 8)) {\n      throw new TypeError(\"invalid segmentSize\");\n    }\n\n    Object.defineProperties(this, {\n      segmentSize: { enumerable: true, value: segmentSize }\n    });\n\n    if (iv) {\n      if (iv.length % 16) {\n        throw new TypeError(\"invalid iv size (must be 16 bytes)\");\n      }\n      this.#iv = new Uint8Array(iv);\n    } else {\n      this.#iv = new Uint8Array(16);\n    }\n\n    this.#shiftRegister = this.iv;\n  }\n\n  get iv(): Uint8Array { return new Uint8Array(this.#iv); }\n\n  #shift(data: Uint8Array): void {\n    const segmentSize = this.segmentSize / 8;\n\n    // Shift the register\n    this.#shiftRegister.set(this.#shiftRegister.subarray(segmentSize));\n    this.#shiftRegister.set(data.subarray(0, segmentSize), 16 - segmentSize);\n  }\n\n  encrypt(plaintext: Uint8Array): Uint8Array {\n    if (8 * plaintext.length % this.segmentSize) {\n      throw new TypeError(\"invalid plaintext size (must be multiple of segmentSize bytes)\");\n    }\n\n    const segmentSize = this.segmentSize / 8;\n\n    const ciphertext = new Uint8Array(plaintext);\n\n    for (let i = 0; i < ciphertext.length; i += segmentSize) {\n      const xorSegment = this.aes.encrypt(this.#shiftRegister);\n      for (let j = 0; j < segmentSize; j++) {\n        ciphertext[i + j] ^= xorSegment[j];\n      }\n\n      this.#shift(ciphertext.subarray(i));\n    }\n\n    return ciphertext;\n  }\n\n  decrypt(ciphertext: Uint8Array): Uint8Array {\n    if (8 * ciphertext.length % this.segmentSize) {\n        throw new TypeError(\"invalid ciphertext size (must be multiple of segmentSize bytes)\");\n    }\n\n    const segmentSize = this.segmentSize / 8;\n\n    const plaintext = new Uint8Array(ciphertext);\n\n    for (let i = 0; i < plaintext.length; i += segmentSize) {\n      const xorSegment = this.aes.encrypt(this.#shiftRegister);\n      for (let j = 0; j < segmentSize; j++) {\n        plaintext[i + j] ^= xorSegment[j];\n      }\n\n      this.#shift(ciphertext.subarray(i));\n    }\n\n    return plaintext;\n  }\n}\n", "// Counter Mode\n\nimport { ModeOfOperation } from \"./mode.js\";\n\nexport class CTR extends ModeOfOperation {\n\n  // Remaining bytes for the one-time pad\n  #remaining: Uint8Array;\n  #remainingIndex: number;\n\n  // The current counter\n  #counter: Uint8Array;\n\n  constructor(key: Uint8Array, initialValue?: number | Uint8Array) {\n    super(\"CTR\", key, CTR);\n\n    this.#counter = new Uint8Array(16)\n    this.#counter.fill(0);\n\n    this.#remaining = this.#counter;  // This will be discarded immediately\n    this.#remainingIndex = 16;\n\n    if (initialValue == null) { initialValue = 1; }\n\n    if (typeof(initialValue) === \"number\") {\n      this.setCounterValue(initialValue);\n    } else {\n      this.setCounterBytes(initialValue);\n    }\n  }\n\n  get counter(): Uint8Array { return new Uint8Array(this.#counter); }\n\n  setCounterValue(value: number): void {\n    if (!Number.isInteger(value) || value < 0 || value > Number.MAX_SAFE_INTEGER) {\n      throw new TypeError(\"invalid counter initial integer value\");\n    }\n\n    for (let index = 15; index >= 0; --index) {\n      this.#counter[index] = value % 256;\n      value = Math.floor(value / 256);\n    }\n  }\n\n  setCounterBytes(value: Uint8Array): void {\n    if (value.length !== 16) {\n      throw new TypeError(\"invalid counter initial Uint8Array value length\");\n    }\n\n    this.#counter.set(value);\n  }\n\n  increment() {\n    for (let i = 15; i >= 0; i--) {\n      if (this.#counter[i] === 255) {\n        this.#counter[i] = 0;\n      } else {\n        this.#counter[i]++;\n        break;\n      }\n    }\n  }\n\n  encrypt(plaintext: Uint8Array): Uint8Array {\n    const crypttext = new Uint8Array(plaintext);\n\n    for (let i = 0; i < crypttext.length; i++) {\n      if (this.#remainingIndex === 16) {\n        this.#remaining = this.aes.encrypt(this.#counter);\n        this.#remainingIndex = 0;\n        this.increment();\n      }\n      crypttext[i] ^= this.#remaining[this.#remainingIndex++];\n    }\n\n    return crypttext;\n  }\n\n  decrypt(ciphertext: Uint8Array): Uint8Array {\n    return this.encrypt(ciphertext);\n  }\n}\n", "/**\n *  @_ignore\n */\n\nimport {\n    getBytesCopy, assertArgument, toUtf8Bytes\n} from \"../utils/index.js\";\n\nexport function looseArrayify(hexString: string): Uint8Array {\n    if (typeof(hexString) === \"string\" && !hexString.startsWith(\"0x\")) {\n        hexString = \"0x\" + hexString;\n    }\n    return getBytesCopy(hexString);\n}\n\nexport function zpad(value: String | number, length: number): String {\n    value = String(value);\n    while (value.length < length) { value = '0' + value; }\n    return value;\n}\n\nexport function getPassword(password: string | Uint8Array): Uint8Array {\n    if (typeof(password) === 'string') {\n        return toUtf8Bytes(password, \"NFKC\");\n    }\n    return getBytesCopy(password);\n}\n\nexport function spelunk<T>(object: any, _path: string): T {\n\n    const match = _path.match(/^([a-z0-9$_.-]*)(:([a-z]+))?(!)?$/i);\n    assertArgument(match != null, \"invalid path\", \"path\", _path);\n\n    const path = match[1];\n    const type = match[3];\n    const reqd = (match[4] === \"!\");\n\n    let cur = object;\n    for (const comp of path.toLowerCase().split('.')) {\n\n        // Search for a child object with a case-insensitive matching key\n        if (Array.isArray(cur)) {\n            if (!comp.match(/^[0-9]+$/)) { break; }\n            cur = cur[parseInt(comp)];\n\n        } else if (typeof(cur) === \"object\") {\n            let found: any = null;\n            for (const key in cur) {\n                 if (key.toLowerCase() === comp) {\n                     found = cur[key];\n                     break;\n                 }\n            }\n            cur = found;\n\n        } else {\n            cur = null;\n        }\n\n        if (cur == null) { break; }\n    }\n\n    assertArgument(!reqd || cur != null, \"missing required value\", \"path\", path);\n\n    if (type && cur != null) {\n        if (type === \"int\") {\n            if (typeof(cur) === \"string\" && cur.match(/^-?[0-9]+$/)) {\n                return <T><unknown>parseInt(cur);\n            } else if (Number.isSafeInteger(cur)) {\n                return cur;\n            }\n        }\n\n        if (type === \"number\") {\n            if (typeof(cur) === \"string\" && cur.match(/^-?[0-9.]*$/)) {\n                return <T><unknown>parseFloat(cur);\n            }\n        }\n\n        if (type === \"data\") {\n            if (typeof(cur) === \"string\") { return <T><unknown>looseArrayify(cur); }\n        }\n\n        if (type === \"array\" && Array.isArray(cur)) { return <T><unknown>cur; }\n        if (type === typeof(cur)) { return cur; }\n\n        assertArgument(false, `wrong type found for ${ type } `, \"path\", path);\n    }\n\n    return cur;\n}\n/*\nexport function follow(object: any, path: string): null | string {\n    let currentChild = object;\n\n    for (const comp of path.toLowerCase().split('/')) {\n\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n             if (key.toLowerCase() === comp) {\n                 matchingChild = currentChild[key];\n                 break;\n             }\n        }\n\n        if (matchingChild === null) { return null; }\n\n        currentChild = matchingChild;\n    }\n\n    return currentChild;\n}\n\n// \"path/to/something:type!\"\nexport function followRequired(data: any, path: string): string {\n    const value = follow(data, path);\n    if (value != null) { return value; }\n    return logger.throwArgumentError(\"invalid value\", `data:${ path }`,\n    JSON.stringify(data));\n}\n*/\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\n/*\nexport function uuidV4(randomBytes: BytesLike): string {\n    const bytes = getBytes(randomBytes, \"randomBytes\");\n\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    const value = hexlify(bytes);\n\n    return [\n       value.substring(2, 10),\n       value.substring(10, 14),\n       value.substring(14, 18),\n       value.substring(18, 22),\n       value.substring(22, 34),\n    ].join(\"-\");\n}\n*/\n", "/**\n *  The JSON Wallet formats allow a simple way to store the private\n *  keys needed in Ethereum along with related information and allows\n *  for extensible forms of encryption.\n *\n *  These utilities facilitate decrypting and encrypting the most common\n *  JSON Wallet formats.\n *\n *  @_subsection: api/wallet:JSON Wallets  [json-wallets]\n */\n\nimport { CTR } from \"aes-js\";\n\nimport { getAddress } from \"../address/index.js\";\nimport { keccak256, pbkdf2, randomBytes, scrypt, scryptSync } from \"../crypto/index.js\";\nimport { computeAddress } from \"../transaction/index.js\";\nimport {\n    concat, getBytes, hexlify, uuidV4, assert, assertArgument\n} from \"../utils/index.js\";\n\nimport { getPassword, spelunk, zpad } from \"./utils.js\";\n\nimport type { ProgressCallback } from \"../crypto/index.js\";\nimport type { BytesLike } from \"../utils/index.js\";\n\nimport { version } from \"../_version.js\";\n\n\nconst defaultPath = \"m/44'/60'/0'/0/0\";\n\n/**\n *  The contents of a JSON Keystore Wallet.\n */\nexport type KeystoreAccount = {\n    address: string;\n    privateKey: string;\n    mnemonic?: {\n        path?: string;\n        locale?: string;\n        entropy: string;\n    }\n};\n\n/**\n *  The parameters to use when encrypting a JSON Keystore Wallet.\n */\nexport type EncryptOptions = {\n   progressCallback?: ProgressCallback;\n   iv?: BytesLike;\n   entropy?: BytesLike;\n   client?: string;\n   salt?: BytesLike;\n   uuid?: string;\n   scrypt?: {\n       N?: number;\n       r?: number;\n       p?: number;\n   }\n}\n\n/**\n *  Returns true if %%json%% is a valid JSON Keystore Wallet.\n */\nexport function isKeystoreJson(json: string): boolean {\n    try {\n        const data = JSON.parse(json);\n        const version = ((data.version != null) ? parseInt(data.version): 0);\n        if (version === 3) { return true; }\n    } catch (error) { }\n    return false;\n}\n\nfunction decrypt(data: any, key: Uint8Array, ciphertext: Uint8Array): string {\n    const cipher = spelunk<string>(data, \"crypto.cipher:string\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = spelunk<Uint8Array>(data, \"crypto.cipherparams.iv:data!\")\n        const aesCtr = new CTR(key, iv);\n        return hexlify(aesCtr.decrypt(ciphertext));\n    }\n\n    assert(false, \"unsupported cipher\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"decrypt\"\n    });\n}\n\nfunction getAccount(data: any, _key: string): KeystoreAccount {\n    const key = getBytes(_key);\n    const ciphertext = spelunk<Uint8Array>(data, \"crypto.ciphertext:data!\");\n\n    const computedMAC = hexlify(keccak256(concat([ key.slice(16, 32), ciphertext ]))).substring(2);\n    assertArgument(computedMAC === spelunk<string>(data, \"crypto.mac:string!\").toLowerCase(),\n        \"incorrect password\", \"password\", \"[ REDACTED ]\");\n\n    const privateKey = decrypt(data, key.slice(0, 16), ciphertext);\n\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (!check.startsWith(\"0x\")) { check = \"0x\" + check; }\n\n        assertArgument(getAddress(check) === address, \"keystore address/privateKey mismatch\", \"address\", data.address);\n    }\n\n    const account: KeystoreAccount = { address, privateKey };\n\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    const version = spelunk(data, \"x-ethers.version:string\");\n    if (version === \"0.1\") {\n        const mnemonicKey = key.slice(32, 64);\n\n        const mnemonicCiphertext = spelunk<Uint8Array>(data, \"x-ethers.mnemonicCiphertext:data!\");\n        const mnemonicIv = spelunk<Uint8Array>(data, \"x-ethers.mnemonicCounter:data!\");\n\n        const mnemonicAesCtr = new CTR(mnemonicKey, mnemonicIv);\n\n        account.mnemonic = {\n            path: (spelunk<null | string>(data, \"x-ethers.path:string\") || defaultPath),\n            locale: (spelunk<null | string>(data, \"x-ethers.locale:string\") || \"en\"),\n            entropy: hexlify(getBytes(mnemonicAesCtr.decrypt(mnemonicCiphertext)))\n        };\n    }\n\n    return account;\n}\n\ntype ScryptParams = {\n    name: \"scrypt\";\n    salt: Uint8Array;\n    N: number;\n    r: number;\n    p: number;\n    dkLen: number;\n};\n\ntype KdfParams = ScryptParams | {\n    name: \"pbkdf2\";\n    salt: Uint8Array;\n    count: number;\n    dkLen: number;\n    algorithm: \"sha256\" | \"sha512\";\n};\n\nfunction getDecryptKdfParams<T>(data: any): KdfParams {\n    const kdf = spelunk(data, \"crypto.kdf:string\");\n    if (kdf && typeof(kdf) === \"string\") {\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = spelunk<Uint8Array>(data, \"crypto.kdfparams.salt:data!\");\n            const N = spelunk<number>(data, \"crypto.kdfparams.n:int!\");\n            const r = spelunk<number>(data, \"crypto.kdfparams.r:int!\");\n            const p = spelunk<number>(data, \"crypto.kdfparams.p:int!\");\n\n            // Make sure N is a power of 2\n            assertArgument(N > 0 && (N & (N - 1)) === 0, \"invalid kdf.N\", \"kdf.N\", N);\n            assertArgument(r > 0 && p > 0, \"invalid kdf\", \"kdf\", kdf);\n\n            const dkLen = spelunk<number>(data, \"crypto.kdfparams.dklen:int!\");\n            assertArgument(dkLen === 32, \"invalid kdf.dklen\", \"kdf.dflen\", dkLen);\n\n            return { name: \"scrypt\", salt, N, r, p, dkLen: 64 };\n\n        } else if (kdf.toLowerCase() === \"pbkdf2\") {\n\n            const salt = spelunk<Uint8Array>(data, \"crypto.kdfparams.salt:data!\");\n\n            const prf = spelunk<string>(data, \"crypto.kdfparams.prf:string!\");\n            const algorithm = prf.split(\"-\").pop();\n            assertArgument(algorithm === \"sha256\" || algorithm === \"sha512\", \"invalid kdf.pdf\", \"kdf.pdf\", prf);\n\n            const count = spelunk<number>(data, \"crypto.kdfparams.c:int!\");\n\n            const dkLen = spelunk<number>(data, \"crypto.kdfparams.dklen:int!\");\n            assertArgument(dkLen === 32, \"invalid kdf.dklen\", \"kdf.dklen\", dkLen);\n\n            return { name: \"pbkdf2\", salt, count, dkLen, algorithm };\n        }\n    }\n\n    assertArgument(false, \"unsupported key-derivation function\", \"kdf\", kdf);\n}\n\n\n/**\n *  Returns the account details for the JSON Keystore Wallet %%json%%\n *  using %%password%%.\n *\n *  It is preferred to use the [async version](decryptKeystoreJson)\n *  instead, which allows a [[ProgressCallback]] to keep the user informed\n *  as to the decryption status.\n *\n *  This method will block the event loop (freezing all UI) until decryption\n *  is complete, which can take quite some time, depending on the wallet\n *  paramters and platform.\n */\nexport function decryptKeystoreJsonSync(json: string, _password: string | Uint8Array): KeystoreAccount {\n    const data = JSON.parse(json);\n\n    const password = getPassword(_password);\n\n    const params = getDecryptKdfParams(data);\n    if (params.name === \"pbkdf2\") {\n        const { salt, count, dkLen, algorithm } = params;\n        const key = pbkdf2(password, salt, count, dkLen, algorithm);\n        return getAccount(data, key);\n    }\n\n    assert(params.name === \"scrypt\", \"cannot be reached\", \"UNKNOWN_ERROR\", { params })\n\n    const { salt, N, r, p, dkLen } = params;\n    const key = scryptSync(password, salt, N, r, p, dkLen);\n    return getAccount(data, key);\n}\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => { setTimeout(() => { resolve(); }, duration); });\n}\n\n/**\n *  Resolves to the decrypted JSON Keystore Wallet %%json%% using the\n *  %%password%%.\n *\n *  If provided, %%progress%% will be called periodically during the\n *  decrpytion to provide feedback, and if the function returns\n *  ``false`` will halt decryption.\n *\n *  The %%progressCallback%% will **always** receive ``0`` before\n *  decryption begins and ``1`` when complete.\n */\nexport async function decryptKeystoreJson(json: string, _password: string | Uint8Array, progress?: ProgressCallback): Promise<KeystoreAccount> {\n    const data = JSON.parse(json);\n\n    const password = getPassword(_password);\n\n    const params = getDecryptKdfParams(data);\n    if (params.name === \"pbkdf2\") {\n        if (progress) {\n            progress(0);\n            await stall(0);\n        }\n        const { salt, count, dkLen, algorithm } = params;\n        const key = pbkdf2(password, salt, count, dkLen, algorithm);\n        if (progress) {\n            progress(1);\n            await stall(0);\n        }\n        return getAccount(data, key);\n    }\n\n    assert(params.name === \"scrypt\", \"cannot be reached\", \"UNKNOWN_ERROR\", { params })\n\n    const { salt, N, r, p, dkLen } = params;\n    const key = await scrypt(password, salt, N, r, p, dkLen, progress);\n    return getAccount(data, key);\n}\n\nfunction getEncryptKdfParams(options: EncryptOptions): ScryptParams {\n    // Check/generate the salt\n    const salt = (options.salt != null) ? getBytes(options.salt, \"options.salt\"): randomBytes(32);\n\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) { N = options.scrypt.N; }\n        if (options.scrypt.r) { r = options.scrypt.r; }\n        if (options.scrypt.p) { p = options.scrypt.p; }\n    }\n    assertArgument(typeof(N) === \"number\" && N > 0 && Number.isSafeInteger(N) && (BigInt(N) & BigInt(N - 1)) === BigInt(0), \"invalid scrypt N parameter\", \"options.N\", N);\n    assertArgument(typeof(r) === \"number\" && r > 0 && Number.isSafeInteger(r), \"invalid scrypt r parameter\", \"options.r\", r);\n    assertArgument(typeof(p) === \"number\" && p > 0 && Number.isSafeInteger(p), \"invalid scrypt p parameter\", \"options.p\", p);\n\n    return { name: \"scrypt\", dkLen: 32, salt, N, r, p };\n}\n\nfunction _encryptKeystore(key: Uint8Array, kdf: ScryptParams, account: KeystoreAccount, options: EncryptOptions): any {\n\n    const privateKey = getBytes(account.privateKey, \"privateKey\");\n\n    // Override initialization vector\n    const iv = (options.iv != null) ? getBytes(options.iv, \"options.iv\"): randomBytes(16);\n    assertArgument(iv.length === 16, \"invalid options.iv length\", \"options.iv\", options.iv);\n\n    // Override the uuid\n    const uuidRandom = (options.uuid != null) ? getBytes(options.uuid, \"options.uuid\"): randomBytes(16);\n    assertArgument(uuidRandom.length === 16, \"invalid options.uuid length\", \"options.uuid\", options.iv);\n\n    // This will be used to encrypt the wallet (as per Web3 secret storage)\n    // - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    // - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    const derivedKey = key.slice(0, 16);\n    const macPrefix = key.slice(16, 32);\n\n    // Encrypt the private key\n    const aesCtr = new CTR(derivedKey, iv);\n    const ciphertext = getBytes(aesCtr.encrypt(privateKey));\n\n    // Compute the message authentication code, used to check the password\n    const mac = keccak256(concat([ macPrefix, ciphertext ]))\n\n    // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n    const data: { [key: string]: any } = {\n        address: account.address.substring(2).toLowerCase(),\n        id: uuidV4(uuidRandom),\n        version: 3,\n        Crypto: {\n            cipher: \"aes-128-ctr\",\n            cipherparams: {\n                iv: hexlify(iv).substring(2),\n            },\n            ciphertext: hexlify(ciphertext).substring(2),\n            kdf: \"scrypt\",\n            kdfparams: {\n                salt: hexlify(kdf.salt).substring(2),\n                n: kdf.N,\n                dklen: 32,\n                p: kdf.p,\n                r: kdf.r\n            },\n            mac: mac.substring(2)\n        }\n    };\n\n    // If we have a mnemonic, encrypt it into the JSON wallet\n    if (account.mnemonic) {\n        const client = (options.client != null) ? options.client: `ethers/${ version }`;\n\n        const path = account.mnemonic.path || defaultPath;\n        const locale = account.mnemonic.locale || \"en\";\n\n        const mnemonicKey = key.slice(32, 64);\n\n        const entropy = getBytes(account.mnemonic.entropy, \"account.mnemonic.entropy\");\n        const mnemonicIv = randomBytes(16);\n        const mnemonicAesCtr = new CTR(mnemonicKey, mnemonicIv);\n        const mnemonicCiphertext = getBytes(mnemonicAesCtr.encrypt(entropy));\n\n        const now = new Date();\n        const timestamp = (now.getUTCFullYear() + \"-\" +\n                           zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                           zpad(now.getUTCDate(), 2) + \"T\" +\n                           zpad(now.getUTCHours(), 2) + \"-\" +\n                           zpad(now.getUTCMinutes(), 2) + \"-\" +\n                           zpad(now.getUTCSeconds(), 2) + \".0Z\");\n        const gethFilename = (\"UTC--\" + timestamp + \"--\" + data.address);\n\n        data[\"x-ethers\"] = {\n            client, gethFilename, path, locale,\n            mnemonicCounter: hexlify(mnemonicIv).substring(2),\n            mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n            version: \"0.1\"\n        };\n    }\n\n    return JSON.stringify(data);\n}\n\n/**\n *  Return the JSON Keystore Wallet for %%account%% encrypted with\n *  %%password%%.\n *\n *  The %%options%% can be used to tune the password-based key\n *  derivation function parameters, explicitly set the random values\n *  used. Any provided [[ProgressCallback]] is ignord.\n */\nexport function encryptKeystoreJsonSync(account: KeystoreAccount, password: string | Uint8Array, options?: EncryptOptions): string {\n    if (options == null) { options = { }; }\n\n    const passwordBytes = getPassword(password);\n    const kdf = getEncryptKdfParams(options);\n    const key = scryptSync(passwordBytes, kdf.salt, kdf.N, kdf.r, kdf.p, 64);\n    return _encryptKeystore(getBytes(key), kdf, account, options);\n}\n\n/**\n *  Resolved to the JSON Keystore Wallet for %%account%% encrypted\n *  with %%password%%.\n *\n *  The %%options%% can be used to tune the password-based key\n *  derivation function parameters, explicitly set the random values\n *  used and provide a [[ProgressCallback]] to receive periodic updates\n *  on the completion status..\n */\nexport async function encryptKeystoreJson(account: KeystoreAccount, password: string | Uint8Array, options?: EncryptOptions): Promise<string> {\n    if (options == null) { options = { }; }\n\n    const passwordBytes = getPassword(password);\n    const kdf = getEncryptKdfParams(options);\n    const key = await scrypt(passwordBytes, kdf.salt, kdf.N, kdf.r, kdf.p, 64, options.progressCallback);\n    return _encryptKeystore(getBytes(key), kdf, account, options);\n}\n\n", "/**\n *  Explain HD Wallets..\n *\n *  @_subsection: api/wallet:HD Wallets  [hd-wallets]\n */\nimport { computeHmac, randomBytes, ripemd160, SigningKey, sha256 } from \"../crypto/index.js\";\nimport { VoidSigner } from \"../providers/index.js\";\nimport { computeAddress } from \"../transaction/index.js\";\nimport {\n    concat, dataSlice, decodeBase58, defineProperties, encodeBase58,\n    getBytes, hexlify, isBytesLike,\n    getNumber, toBeArray, toBigInt, toBeHex,\n    assertPrivate, assert, assertArgument\n} from \"../utils/index.js\";\nimport { LangEn } from \"../wordlists/lang-en.js\";\n\nimport { BaseWallet } from \"./base-wallet.js\";\nimport { Mnemonic } from \"./mnemonic.js\";\nimport {\n    encryptKeystoreJson, encryptKeystoreJsonSync,\n} from \"./json-keystore.js\";\n\nimport type { ProgressCallback } from \"../crypto/index.js\";\nimport type { Provider } from \"../providers/index.js\";\nimport type { BytesLike, Numeric } from \"../utils/index.js\";\nimport type { Wordlist } from \"../wordlists/index.js\";\n\nimport type { KeystoreAccount } from \"./json-keystore.js\";\n\n/**\n *  The default derivation path for Ethereum HD Nodes. (i.e. ``\"m/44'/60'/0'/0/0\"``)\n */\nexport const defaultPath: string = \"m/44'/60'/0'/0/0\";\n\n\n// \"Bitcoin seed\"\nconst MasterSecret = new Uint8Array([ 66, 105, 116, 99, 111, 105, 110, 32, 115, 101, 101, 100 ]);\n\nconst HardenedBit = 0x80000000;\n\nconst N = BigInt(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n\nconst Nibbles = \"0123456789abcdef\";\nfunction zpad(value: number, length: number): string {\n    let result = \"\";\n    while (value) {\n        result = Nibbles[value % 16] + result;\n        value = Math.trunc(value / 16);\n    }\n    while (result.length < length * 2) { result = \"0\" + result; }\n    return \"0x\" + result;\n}\n\nfunction encodeBase58Check(_value: BytesLike): string {\n    const value = getBytes(_value);\n    const check = dataSlice(sha256(sha256(value)), 0, 4);\n    const bytes = concat([ value, check ]);\n    return encodeBase58(bytes);\n}\n\nconst _guard = { };\n\nfunction ser_I(index: number, chainCode: string, publicKey: string, privateKey: null | string): { IL: Uint8Array, IR: Uint8Array } {\n    const data = new Uint8Array(37);\n\n    if (index & HardenedBit) {\n        assert(privateKey != null, \"cannot derive child of neutered node\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"deriveChild\"\n        });\n\n        // Data = 0x00 || ser_256(k_par)\n        data.set(getBytes(privateKey), 1);\n\n    } else {\n        // Data = ser_p(point(k_par))\n        data.set(getBytes(publicKey));\n    }\n\n    // Data += ser_32(i)\n    for (let i = 24; i >= 0; i -= 8) { data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff); }\n    const I = getBytes(computeHmac(\"sha512\", chainCode, data));\n\n    return { IL: I.slice(0, 32), IR: I.slice(32) };\n}\n\ntype HDNodeLike<T> = { depth: number, deriveChild: (i: number) => T };\nfunction derivePath<T extends HDNodeLike<T>>(node: T, path: string): T {\n    const components = path.split(\"/\");\n\n    assertArgument(components.length > 0, \"invalid path\", \"path\", path);\n\n    if (components[0] === \"m\") {\n        assertArgument(node.depth === 0, `cannot derive root path (i.e. path starting with \"m/\") for a node at non-zero depth ${ node.depth }`, \"path\", path);\n        components.shift();\n    }\n\n    let result: T = node;\n    for (let i = 0; i < components.length; i++) {\n        const component = components[i];\n\n        if (component.match(/^[0-9]+'$/)) {\n            const index = parseInt(component.substring(0, component.length - 1));\n            assertArgument(index < HardenedBit, \"invalid path index\", `path[${ i }]`, component);\n            result = result.deriveChild(HardenedBit + index);\n\n        } else if (component.match(/^[0-9]+$/)) {\n            const index = parseInt(component);\n            assertArgument(index < HardenedBit, \"invalid path index\", `path[${ i }]`, component);\n            result = result.deriveChild(index);\n\n        } else {\n            assertArgument(false, \"invalid path component\", `path[${ i }]`, component);\n        }\n    }\n\n    return result;\n}\n\n/**\n *  An **HDNodeWallet** is a [[Signer]] backed by the private key derived\n *  from an HD Node using the [[link-bip-32]] stantard.\n *\n *  An HD Node forms a hierarchal structure with each HD Node having a\n *  private key and the ability to derive child HD Nodes, defined by\n *  a path indicating the index of each child.\n */\nexport class HDNodeWallet extends BaseWallet {\n    /**\n     *  The compressed public key.\n     */\n    readonly publicKey!: string;\n\n    /**\n     *  The fingerprint.\n     *\n     *  A fingerprint allows quick qay to detect parent and child nodes,\n     *  but developers should be prepared to deal with collisions as it\n     *  is only 4 bytes.\n     */\n    readonly fingerprint!: string;\n\n    /**\n     *  The parent fingerprint.\n     */\n    readonly parentFingerprint!: string;\n\n    /**\n     *  The mnemonic used to create this HD Node, if available.\n     *\n     *  Sources such as extended keys do not encode the mnemonic, in\n     *  which case this will be ``null``.\n     */\n    readonly mnemonic!: null | Mnemonic;\n\n    /**\n     *  The chaincode, which is effectively a public key used\n     *  to derive children.\n     */\n    readonly chainCode!: string;\n\n    /**\n     *  The derivation path of this wallet.\n     *\n     *  Since extended keys do not provide full path details, this\n     *  may be ``null``, if instantiated from a source that does not\n     *  encode it.\n     */\n    readonly path!: null | string;\n\n    /**\n     *  The child index of this wallet. Values over ``2 *\\* 31`` indicate\n     *  the node is hardened.\n     */\n    readonly index!: number;\n\n    /**\n     *  The depth of this wallet, which is the number of components\n     *  in its path.\n     */\n    readonly depth!: number;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, signingKey: SigningKey, parentFingerprint: string, chainCode: string, path: null | string, index: number, depth: number, mnemonic: null | Mnemonic, provider: null | Provider) {\n        super(signingKey, provider);\n        assertPrivate(guard, _guard, \"HDNodeWallet\");\n\n        defineProperties<HDNodeWallet>(this, { publicKey: signingKey.compressedPublicKey });\n\n        const fingerprint = dataSlice(ripemd160(sha256(this.publicKey)), 0, 4);\n        defineProperties<HDNodeWallet>(this, {\n            parentFingerprint, fingerprint,\n            chainCode, path, index, depth\n        });\n\n        defineProperties<HDNodeWallet>(this, { mnemonic });\n    }\n\n    connect(provider: null | Provider): HDNodeWallet {\n        return new HDNodeWallet(_guard, this.signingKey, this.parentFingerprint,\n            this.chainCode, this.path, this.index, this.depth, this.mnemonic, provider);\n    }\n\n    #account(): KeystoreAccount {\n        const account: KeystoreAccount = { address: this.address, privateKey: this.privateKey };\n        const m = this.mnemonic;\n        if (this.path && m && m.wordlist.locale === \"en\" && m.password === \"\") {\n            account.mnemonic = {\n                path: this.path,\n                locale: \"en\",\n                entropy: m.entropy\n            };\n        }\n\n        return account;\n    }\n\n    /**\n     *  Resolves to a [JSON Keystore Wallet](json-wallets) encrypted with\n     *  %%password%%.\n     *\n     *  If %%progressCallback%% is specified, it will receive periodic\n     *  updates as the encryption process progreses.\n     */\n    async encrypt(password: Uint8Array | string, progressCallback?: ProgressCallback): Promise<string> {\n        return await encryptKeystoreJson(this.#account(), password, { progressCallback });\n    }\n\n    /**\n     *  Returns a [JSON Keystore Wallet](json-wallets) encryped with\n     *  %%password%%.\n     *\n     *  It is preferred to use the [async version](encrypt) instead,\n     *  which allows a [[ProgressCallback]] to keep the user informed.\n     *\n     *  This method will block the event loop (freezing all UI) until\n     *  it is complete, which may be a non-trivial duration.\n     */\n    encryptSync(password: Uint8Array | string): string {\n        return encryptKeystoreJsonSync(this.#account(), password);\n    }\n\n    /**\n     *  The extended key.\n     *\n     *  This key will begin with the prefix ``xpriv`` and can be used to\n     *  reconstruct this HD Node to derive its children.\n     */\n    get extendedKey(): string {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n\n        assert(this.depth < 256, \"Depth too deep\", \"UNSUPPORTED_OPERATION\", { operation: \"extendedKey\" });\n\n        return encodeBase58Check(concat([\n            \"0x0488ADE4\", zpad(this.depth, 1), this.parentFingerprint,\n            zpad(this.index, 4), this.chainCode,\n            concat([ \"0x00\", this.privateKey ])\n        ]));\n    }\n\n    /**\n     *  Returns true if this wallet has a path, providing a Type Guard\n     *  that the path is non-null.\n     */\n    hasPath(): this is { path: string } { return (this.path != null); }\n\n    /**\n     *  Returns a neutered HD Node, which removes the private details\n     *  of an HD Node.\n     *\n     *  A neutered node has no private key, but can be used to derive\n     *  child addresses and other public data about the HD Node.\n     */\n    neuter(): HDNodeVoidWallet {\n        return new HDNodeVoidWallet(_guard, this.address, this.publicKey,\n            this.parentFingerprint, this.chainCode, this.path, this.index,\n            this.depth, this.provider);\n    }\n\n    /**\n     *  Return the child for %%index%%.\n     */\n    deriveChild(_index: Numeric): HDNodeWallet {\n        const index = getNumber(_index, \"index\");\n        assertArgument(index <= 0xffffffff, \"invalid index\", \"index\", index);\n\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n            if (index & HardenedBit) { path += \"'\"; }\n        }\n\n        const { IR, IL } = ser_I(index, this.chainCode, this.publicKey, this.privateKey);\n        const ki = new SigningKey(toBeHex((toBigInt(IL) + BigInt(this.privateKey)) % N, 32));\n\n        return new HDNodeWallet(_guard, ki, this.fingerprint, hexlify(IR),\n            path, index, this.depth + 1, this.mnemonic, this.provider);\n\n    }\n\n    /**\n     *  Return the HDNode for %%path%% from this node.\n     */\n    derivePath(path: string): HDNodeWallet {\n        return derivePath<HDNodeWallet>(this, path);\n    }\n\n    static #fromSeed(_seed: BytesLike, mnemonic: null | Mnemonic): HDNodeWallet {\n        assertArgument(isBytesLike(_seed), \"invalid seed\", \"seed\", \"[REDACTED]\");\n\n        const seed = getBytes(_seed, \"seed\");\n        assertArgument(seed.length >= 16 && seed.length <= 64 , \"invalid seed\", \"seed\", \"[REDACTED]\");\n\n        const I = getBytes(computeHmac(\"sha512\", MasterSecret, seed));\n        const signingKey = new SigningKey(hexlify(I.slice(0, 32)));\n\n        return new HDNodeWallet(_guard, signingKey, \"0x00000000\", hexlify(I.slice(32)),\n            \"m\", 0, 0, mnemonic, null);\n    }\n\n    /**\n     *  Creates a new HD Node from %%extendedKey%%.\n     *\n     *  If the %%extendedKey%% will either have a prefix or ``xpub`` or\n     *  ``xpriv``, returning a neutered HD Node ([[HDNodeVoidWallet]])\n     *  or full HD Node ([[HDNodeWallet) respectively.\n     */\n    static fromExtendedKey(extendedKey: string): HDNodeWallet | HDNodeVoidWallet {\n        const bytes = toBeArray(decodeBase58(extendedKey)); // @TODO: redact\n\n        assertArgument(bytes.length === 82 || encodeBase58Check(bytes.slice(0, 78)) === extendedKey,\n            \"invalid extended key\", \"extendedKey\", \"[ REDACTED ]\");\n\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\": case \"0x043587cf\": {\n                const publicKey = hexlify(key);\n                return new HDNodeVoidWallet(_guard, computeAddress(publicKey), publicKey,\n                    parentFingerprint, chainCode, null, index, depth, null);\n            }\n\n            // Private Key\n            case \"0x0488ade4\": case \"0x04358394 \":\n                if (key[0] !== 0) { break; }\n                return new HDNodeWallet(_guard, new SigningKey(key.slice(1)),\n                    parentFingerprint, chainCode, null, index, depth, null, null);\n        }\n\n\n        assertArgument(false, \"invalid extended key prefix\", \"extendedKey\", \"[ REDACTED ]\");\n    }\n\n    /**\n     *  Creates a new random HDNode.\n     */\n    static createRandom(password?: string, path?: string, wordlist?: Wordlist): HDNodeWallet {\n        if (password == null) { password = \"\"; }\n        if (path == null) { path = defaultPath; }\n        if (wordlist == null) { wordlist = LangEn.wordlist(); }\n        const mnemonic = Mnemonic.fromEntropy(randomBytes(16), password, wordlist)\n        return HDNodeWallet.#fromSeed(mnemonic.computeSeed(), mnemonic).derivePath(path);\n    }\n\n    /**\n     *  Create an HD Node from %%mnemonic%%.\n     */\n    static fromMnemonic(mnemonic: Mnemonic, path?: string): HDNodeWallet {\n        if (!path) { path = defaultPath; }\n        return HDNodeWallet.#fromSeed(mnemonic.computeSeed(), mnemonic).derivePath(path);\n    }\n\n    /**\n     *  Creates an HD Node from a mnemonic %%phrase%%.\n     */\n    static fromPhrase(phrase: string, password?: string, path?: string, wordlist?: Wordlist): HDNodeWallet {\n        if (password == null) { password = \"\"; }\n        if (path == null) { path = defaultPath; }\n        if (wordlist == null) { wordlist = LangEn.wordlist(); }\n        const mnemonic = Mnemonic.fromPhrase(phrase, password, wordlist)\n        return HDNodeWallet.#fromSeed(mnemonic.computeSeed(), mnemonic).derivePath(path);\n    }\n\n    /**\n     *  Creates an HD Node from a %%seed%%.\n     */\n    static fromSeed(seed: BytesLike): HDNodeWallet {\n        return HDNodeWallet.#fromSeed(seed, null);\n    }\n}\n\n/**\n *  A **HDNodeVoidWallet** cannot sign, but provides access to\n *  the children nodes of a [[link-bip-32]] HD wallet addresses.\n *\n *  The can be created by using an extended ``xpub`` key to\n *  [[HDNodeWallet_fromExtendedKey]] or by \n *  [nuetering](HDNodeWallet-neuter) a [[HDNodeWallet]].\n */\nexport class HDNodeVoidWallet extends VoidSigner {\n    /**\n     *  The compressed public key.\n     */\n    readonly publicKey!: string;\n\n    /**\n     *  The fingerprint.\n     *\n     *  A fingerprint allows quick qay to detect parent and child nodes,\n     *  but developers should be prepared to deal with collisions as it\n     *  is only 4 bytes.\n     */\n    readonly fingerprint!: string;\n\n    /**\n     *  The parent node fingerprint.\n     */\n    readonly parentFingerprint!: string;\n\n    /**\n     *  The chaincode, which is effectively a public key used\n     *  to derive children.\n     */\n    readonly chainCode!: string;\n\n    /**\n     *  The derivation path of this wallet.\n     *\n     *  Since extended keys do not provider full path details, this\n     *  may be ``null``, if instantiated from a source that does not\n     *  enocde it.\n     */\n    readonly path!: null | string;\n\n    /**\n     *  The child index of this wallet. Values over ``2 *\\* 31`` indicate\n     *  the node is hardened.\n     */\n    readonly index!: number;\n\n    /**\n     *  The depth of this wallet, which is the number of components\n     *  in its path.\n     */\n    readonly depth!: number;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, address: string, publicKey: string, parentFingerprint: string, chainCode: string, path: null | string, index: number, depth: number, provider: null | Provider) {\n        super(address, provider);\n        assertPrivate(guard, _guard, \"HDNodeVoidWallet\");\n\n        defineProperties<HDNodeVoidWallet>(this, { publicKey });\n\n        const fingerprint = dataSlice(ripemd160(sha256(publicKey)), 0, 4);\n        defineProperties<HDNodeVoidWallet>(this, {\n            publicKey, fingerprint, parentFingerprint, chainCode, path, index, depth\n        });\n    }\n\n    connect(provider: null | Provider): HDNodeVoidWallet {\n        return new HDNodeVoidWallet(_guard, this.address, this.publicKey,\n            this.parentFingerprint, this.chainCode, this.path, this.index, this.depth, provider);\n    }\n\n    /**\n     *  The extended key.\n     *\n     *  This key will begin with the prefix ``xpub`` and can be used to\n     *  reconstruct this neutered key to derive its children addresses.\n     */\n    get extendedKey(): string {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n\n        assert(this.depth < 256, \"Depth too deep\", \"UNSUPPORTED_OPERATION\", { operation: \"extendedKey\" });\n\n        return encodeBase58Check(concat([\n            \"0x0488B21E\",\n            zpad(this.depth, 1),\n            this.parentFingerprint,\n            zpad(this.index, 4),\n            this.chainCode,\n            this.publicKey,\n        ]));\n    }\n\n    /**\n     *  Returns true if this wallet has a path, providing a Type Guard\n     *  that the path is non-null.\n     */\n    hasPath(): this is { path: string } { return (this.path != null); }\n\n    /**\n     *  Return the child for %%index%%.\n     */\n    deriveChild(_index: Numeric): HDNodeVoidWallet {\n        const index = getNumber(_index, \"index\");\n        assertArgument(index <= 0xffffffff, \"invalid index\", \"index\", index);\n\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n            if (index & HardenedBit) { path += \"'\"; }\n        }\n\n        const { IR, IL } = ser_I(index, this.chainCode, this.publicKey, null);\n        const Ki = SigningKey.addPoints(IL, this.publicKey, true);\n\n        const address = computeAddress(Ki);\n\n        return new HDNodeVoidWallet(_guard, address, Ki, this.fingerprint, hexlify(IR),\n            path, index, this.depth + 1, this.provider);\n\n    }\n\n    /**\n     *  Return the signer for %%path%% from this node.\n     */\n    derivePath(path: string): HDNodeVoidWallet {\n        return derivePath<HDNodeVoidWallet>(this, path);\n    }\n}\n\n/*\nexport class HDNodeWalletManager {\n    #root: HDNodeWallet;\n\n    constructor(phrase: string, password?: null | string, path?: null | string, locale?: null | Wordlist) {\n        if (password == null) { password = \"\"; }\n        if (path == null) { path = \"m/44'/60'/0'/0\"; }\n        if (locale == null) { locale = LangEn.wordlist(); }\n        this.#root = HDNodeWallet.fromPhrase(phrase, password, path, locale);\n    }\n\n    getSigner(index?: number): HDNodeWallet {\n        return this.#root.deriveChild((index == null) ? 0: index);\n    }\n}\n*/\n\n/**\n *  Returns the [[link-bip-32]] path for the account at %%index%%.\n *\n *  This is the pattern used by wallets like Ledger.\n *\n *  There is also an [alternate pattern](getIndexedAccountPath) used by\n *  some software.\n */\nexport function getAccountPath(_index: Numeric): string {\n    const index = getNumber(_index, \"index\");\n    assertArgument(index >= 0 && index < HardenedBit, \"invalid account index\", \"index\", index);\n    return `m/44'/60'/${ index }'/0/0`;\n}\n\n/**\n *  Returns the path using an alternative pattern for deriving accounts,\n *  at %%index%%.\n *\n *  This derivation path uses the //index// component rather than the\n *  //account// component to derive sequential accounts.\n *\n *  This is the pattern used by wallets like MetaMask.\n */\nexport function getIndexedAccountPath(_index: Numeric): string {\n    const index = getNumber(_index, \"index\");\n    assertArgument(index >= 0 && index < HardenedBit, \"invalid account index\", \"index\", index);\n    return `m/44'/60'/0'/0/${ index}`;\n}\n\n", "\nimport { LangEn } from \"./lang-en.js\";\n\nimport type { Wordlist } from \"./wordlist.js\";\n\nexport const wordlists: Record<string, Wordlist> = {\n  en: LangEn.wordlist(),\n};\n", "/**\n *  A fragment is a single item from an ABI, which may represent any of:\n *\n *  - [Functions](FunctionFragment)\n *  - [Events](EventFragment)\n *  - [Constructors](ConstructorFragment)\n *  - Custom [Errors](ErrorFragment)\n *  - [Fallback or Receive](FallbackFragment) functions\n *\n *  @_subsection api/abi/abi-coder:Fragments  [about-fragments]\n */\n\nimport { defineProperties, getBigInt, getNumber, assert, assertPrivate, assertArgument } from 'ethers';\nimport { id } from 'ethers';\n\n/**\n *  A Type description in a [JSON ABI format](link-solc-jsonabi).\n */\nexport interface JsonFragmentType {\n    /**\n     *  The parameter name.\n     */\n    readonly name?: string;\n\n    /**\n     *  If the parameter is indexed.\n     */\n    readonly indexed?: boolean;\n\n    /**\n     *  The type of the parameter.\n     */\n    readonly type?: string;\n\n    /**\n     *  The internal Solidity type.\n     */\n    readonly internalType?: string;\n\n    /**\n     *  The components for a tuple.\n     */\n    readonly components?: ReadonlyArray<JsonFragmentType>;\n}\n\n/**\n *  A fragment for a method, event or error in a [JSON ABI format](link-solc-jsonabi).\n */\nexport interface JsonFragment {\n    /**\n     *  The name of the error, event, function, etc.\n     */\n    readonly name?: string;\n\n    /**\n     *  The type of the fragment (e.g. ``event``, ``\"function\"``, etc.)\n     */\n    readonly type?: string;\n\n    /**\n     *  If the event is anonymous.\n     */\n    readonly anonymous?: boolean;\n\n    /**\n     *  If the function is payable.\n     */\n    readonly payable?: boolean;\n\n    /**\n     *  If the function is constant.\n     */\n    readonly constant?: boolean;\n\n    /**\n     *  The mutability state of the function.\n     */\n    readonly stateMutability?: string;\n\n    /**\n     *  The input parameters.\n     */\n    readonly inputs?: ReadonlyArray<JsonFragmentType>;\n\n    /**\n     *  The output parameters.\n     */\n    readonly outputs?: ReadonlyArray<JsonFragmentType>;\n\n    /**\n     *  The gas limit to use when sending a transaction for this function.\n     */\n    readonly gas?: string;\n}\n\n/**\n *  The format to serialize the output as.\n *\n *  **``\"sighash\"``** - the bare formatting, used to compute the selector\n *  or topic hash; this format cannot be reversed (as it discards ``indexed``)\n *  so cannot by used to export an [[Interface]].\n *\n *  **``\"minimal\"``** - Human-Readable ABI with minimal spacing and without\n *  names, so it is compact, but will result in Result objects that cannot\n *  be accessed by name.\n *\n *  **``\"full\"``** - Full Human-Readable ABI, with readable spacing and names\n *  intact; this is generally the recommended format.\n *\n *  **``\"json\"``** - The [JSON ABI format](link-solc-jsonabi).\n */\nexport type FormatType = 'sighash' | 'minimal' | 'full' | 'json';\n\n// [ \"a\", \"b\" ] => { \"a\": 1, \"b\": 1 }\nfunction setify(items: Array<string>): ReadonlySet<string> {\n    const result: Set<string> = new Set();\n    items.forEach((k) => result.add(k));\n    return Object.freeze(result);\n}\n\n// Visibility Keywords\nconst _kwVisib = 'constant external internal payable private public pure view';\nconst KwVisib = setify(_kwVisib.split(' '));\n\nconst _kwTypes = 'constructor error event fallback function receive struct';\nconst KwTypes = setify(_kwTypes.split(' '));\n\nconst _kwModifiers = 'calldata memory storage payable indexed';\nconst KwModifiers = setify(_kwModifiers.split(' '));\n\nconst _kwOther = 'tuple returns';\n\n// All Keywords\nconst _keywords = [_kwTypes, _kwModifiers, _kwOther, _kwVisib].join(' ');\nconst Keywords = setify(_keywords.split(' '));\n\n// Single character tokens\nconst SimpleTokens: Record<string, string> = {\n    '(': 'OPEN_PAREN',\n    ')': 'CLOSE_PAREN',\n    '[': 'OPEN_BRACKET',\n    ']': 'CLOSE_BRACKET',\n    ',': 'COMMA',\n    '@': 'AT',\n};\n\n// Parser regexes to consume the next token\nconst regexWhitespacePrefix = new RegExp('^(\\\\s*)');\nconst regexNumberPrefix = new RegExp('^([0-9]+)');\nconst regexIdPrefix = new RegExp('^([a-zA-Z$_][a-zA-Z0-9$_]*)');\n\n// Parser regexs to check validity\nconst regexId = new RegExp('^([a-zA-Z$_][a-zA-Z0-9$_]*)$');\nconst regexType = new RegExp('^(trcToken|address|bool|bytes([0-9]*)|string|u?int([0-9]*))$');\n\n/**\n *  @ignore:\n */\ntype Token = Readonly<{\n    // Type of token (e.g. TYPE, KEYWORD, NUMBER, etc)\n    type: string;\n\n    // Offset into the original source code\n    offset: number;\n\n    // Actual text content of the token\n    text: string;\n\n    // The parenthesis depth\n    depth: number;\n\n    // If a parenthesis, the offset (in tokens) that balances it\n    match: number;\n\n    // For parenthesis and commas, the offset (in tokens) to the\n    // previous/next parenthesis or comma in the list\n    linkBack: number;\n    linkNext: number;\n\n    // If a BRACKET, the value inside\n    value: number;\n}>;\n\nclass TokenString {\n    #offset: number;\n    #tokens: ReadonlyArray<Token>;\n\n    get offset(): number {\n        return this.#offset;\n    }\n    get length(): number {\n        return this.#tokens.length - this.#offset;\n    }\n\n    constructor(tokens: ReadonlyArray<Token>) {\n        this.#offset = 0;\n        this.#tokens = tokens.slice();\n    }\n\n    clone(): TokenString {\n        return new TokenString(this.#tokens);\n    }\n    reset(): void {\n        this.#offset = 0;\n    }\n\n    #subTokenString(from = 0, to = 0): TokenString {\n        return new TokenString(\n            this.#tokens.slice(from, to).map((t) => {\n                return Object.freeze(\n                    Object.assign({}, t, {\n                        match: t.match - from,\n                        linkBack: t.linkBack - from,\n                        linkNext: t.linkNext - from,\n                    })\n                );\n            })\n        );\n    }\n\n    // Pops and returns the value of the next token, if it is a keyword in allowed; throws if out of tokens\n    popKeyword(allowed: ReadonlySet<string>): string {\n        const top = this.peek();\n        if (top.type !== 'KEYWORD' || !allowed.has(top.text)) {\n            throw new Error(`expected keyword ${top.text}`);\n        }\n        return this.pop().text;\n    }\n\n    // Pops and returns the value of the next token if it is `type`; throws if out of tokens\n    popType(type: string): string {\n        if (this.peek().type !== type) {\n            throw new Error(`expected ${type}; got ${JSON.stringify(this.peek())}`);\n        }\n        return this.pop().text;\n    }\n\n    // Pops and returns a \"(\" TOKENS \")\"\n    popParen(): TokenString {\n        const top = this.peek();\n        if (top.type !== 'OPEN_PAREN') {\n            throw new Error('bad start');\n        }\n        const result = this.#subTokenString(this.#offset + 1, top.match + 1);\n        this.#offset = top.match + 1;\n        return result;\n    }\n\n    // Pops and returns the items within \"(\" ITEM1 \",\" ITEM2 \",\" ... \")\"\n    popParams(): Array<TokenString> {\n        const top = this.peek();\n\n        if (top.type !== 'OPEN_PAREN') {\n            throw new Error('bad start');\n        }\n\n        const result: Array<TokenString> = [];\n\n        while (this.#offset < top.match - 1) {\n            const link = this.peek().linkNext;\n            result.push(this.#subTokenString(this.#offset + 1, link));\n            this.#offset = link;\n        }\n\n        this.#offset = top.match + 1;\n\n        return result;\n    }\n\n    // Returns the top Token, throwing if out of tokens\n    peek(): Token {\n        if (this.#offset >= this.#tokens.length) {\n            throw new Error('out-of-bounds');\n        }\n        return this.#tokens[this.#offset];\n    }\n\n    // Returns the next value, if it is a keyword in `allowed`\n    peekKeyword(allowed: ReadonlySet<string>): null | string {\n        const top = this.peekType('KEYWORD');\n        return top != null && allowed.has(top) ? top : null;\n    }\n\n    // Returns the value of the next token if it is `type`\n    peekType(type: string): null | string {\n        if (this.length === 0) {\n            return null;\n        }\n        const top = this.peek();\n        return top.type === type ? top.text : null;\n    }\n\n    // Returns the next token; throws if out of tokens\n    pop(): Token {\n        const result = this.peek();\n        this.#offset++;\n        return result;\n    }\n\n    toString(): string {\n        const tokens: Array<string> = [];\n        for (let i = this.#offset; i < this.#tokens.length; i++) {\n            const token = this.#tokens[i];\n            tokens.push(`${token.type}:${token.text}`);\n        }\n        return `<TokenString ${tokens.join(' ')}>`;\n    }\n}\n\ntype Writeable<T> = { -readonly [P in keyof T]: T[P] };\n\nfunction lex(text: string): TokenString {\n    const tokens: Array<Token> = [];\n\n    const throwError = (message: string) => {\n        const token = offset < text.length ? JSON.stringify(text[offset]) : '$EOI';\n        throw new Error(`invalid token ${token} at ${offset}: ${message}`);\n    };\n\n    const brackets: Array<number> = [];\n    const commas: Array<number> = [];\n\n    let offset = 0;\n    while (offset < text.length) {\n        // Strip off any leading whitespace\n        let cur = text.substring(offset);\n        let match = cur.match(regexWhitespacePrefix);\n        if (match) {\n            offset += match[1].length;\n            cur = text.substring(offset);\n        }\n\n        const token = {\n            depth: brackets.length,\n            linkBack: -1,\n            linkNext: -1,\n            match: -1,\n            type: '',\n            text: '',\n            offset,\n            value: -1,\n        };\n        tokens.push(token);\n\n        const type = SimpleTokens[cur[0]] || '';\n        if (type) {\n            token.type = type;\n            token.text = cur[0];\n            offset++;\n\n            if (type === 'OPEN_PAREN') {\n                brackets.push(tokens.length - 1);\n                commas.push(tokens.length - 1);\n            } else if (type == 'CLOSE_PAREN') {\n                if (brackets.length === 0) {\n                    throwError('no matching open bracket');\n                }\n\n                token.match = brackets.pop() as number;\n                (<Writeable<Token>>tokens[token.match]).match = tokens.length - 1;\n                token.depth--;\n\n                token.linkBack = commas.pop() as number;\n                (<Writeable<Token>>tokens[token.linkBack]).linkNext = tokens.length - 1;\n            } else if (type === 'COMMA') {\n                token.linkBack = commas.pop() as number;\n                (<Writeable<Token>>tokens[token.linkBack]).linkNext = tokens.length - 1;\n                commas.push(tokens.length - 1);\n            } else if (type === 'OPEN_BRACKET') {\n                token.type = 'BRACKET';\n            } else if (type === 'CLOSE_BRACKET') {\n                // Remove the CLOSE_BRACKET\n                let suffix = (tokens.pop() as Token).text;\n                if (tokens.length > 0 && tokens[tokens.length - 1].type === 'NUMBER') {\n                    const value = (tokens.pop() as Token).text;\n                    suffix = value + suffix;\n                    (<Writeable<Token>>tokens[tokens.length - 1]).value = getNumber(value);\n                }\n                if (tokens.length === 0 || tokens[tokens.length - 1].type !== 'BRACKET') {\n                    throw new Error('missing opening bracket');\n                }\n                (<Writeable<Token>>tokens[tokens.length - 1]).text += suffix;\n            }\n\n            continue;\n        }\n\n        match = cur.match(regexIdPrefix);\n        if (match) {\n            token.text = match[1];\n            offset += token.text.length;\n\n            if (Keywords.has(token.text)) {\n                token.type = 'KEYWORD';\n                continue;\n            }\n\n            if (token.text.match(regexType)) {\n                token.type = 'TYPE';\n                continue;\n            }\n\n            token.type = 'ID';\n            continue;\n        }\n\n        match = cur.match(regexNumberPrefix);\n        if (match) {\n            token.text = match[1];\n            token.type = 'NUMBER';\n            offset += token.text.length;\n            continue;\n        }\n\n        throw new Error(`unexpected token ${JSON.stringify(cur[0])} at position ${offset}`);\n    }\n\n    return new TokenString(tokens.map((t) => Object.freeze(t)));\n}\n\n// Check only one of `allowed` is in `set`\nfunction allowSingle(set: ReadonlySet<string>, allowed: ReadonlySet<string>): void {\n    const included: Array<string> = [];\n    for (const key in allowed.keys()) {\n        if (set.has(key)) {\n            included.push(key);\n        }\n    }\n    if (included.length > 1) {\n        throw new Error(`conflicting types: ${included.join(', ')}`);\n    }\n}\n\n// Functions to process a Solidity Signature TokenString from left-to-right for...\n\n// ...the name with an optional type, returning the name\nfunction consumeName(type: string, tokens: TokenString): string {\n    if (tokens.peekKeyword(KwTypes)) {\n        const keyword = tokens.pop().text;\n        if (keyword !== type) {\n            throw new Error(`expected ${type}, got ${keyword}`);\n        }\n    }\n\n    return tokens.popType('ID');\n}\n\n// ...all keywords matching allowed, returning the keywords\nfunction consumeKeywords(tokens: TokenString, allowed?: ReadonlySet<string>): ReadonlySet<string> {\n    const keywords: Set<string> = new Set();\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const keyword = tokens.peekType('KEYWORD');\n\n        if (keyword == null || (allowed && !allowed.has(keyword))) {\n            break;\n        }\n        tokens.pop();\n\n        if (keywords.has(keyword)) {\n            throw new Error(`duplicate keywords: ${JSON.stringify(keyword)}`);\n        }\n        keywords.add(keyword);\n    }\n\n    return Object.freeze(keywords);\n}\n\n// ...all visibility keywords, returning the coalesced mutability\nfunction consumeMutability(tokens: TokenString): 'payable' | 'nonpayable' | 'view' | 'pure' {\n    const modifiers = consumeKeywords(tokens, KwVisib);\n\n    // Detect conflicting modifiers\n    allowSingle(modifiers, setify('constant payable nonpayable'.split(' ')));\n    allowSingle(modifiers, setify('pure view payable nonpayable'.split(' ')));\n\n    // Process mutability states\n    if (modifiers.has('view')) {\n        return 'view';\n    }\n    if (modifiers.has('pure')) {\n        return 'pure';\n    }\n    if (modifiers.has('payable')) {\n        return 'payable';\n    }\n    if (modifiers.has('nonpayable')) {\n        return 'nonpayable';\n    }\n\n    // Process legacy `constant` last\n    if (modifiers.has('constant')) {\n        return 'view';\n    }\n\n    return 'nonpayable';\n}\n\n// ...a parameter list, returning the ParamType list\nfunction consumeParams(tokens: TokenString, allowIndexed?: boolean): Array<ParamType> {\n    return tokens.popParams().map((t) => ParamType.from(t, allowIndexed));\n}\n\n// ...a gas limit, returning a BigNumber or null if none\nfunction consumeGas(tokens: TokenString): null | bigint {\n    if (tokens.peekType('AT')) {\n        tokens.pop();\n        if (tokens.peekType('NUMBER')) {\n            return getBigInt(tokens.pop().text);\n        }\n        throw new Error('invalid gas');\n    }\n    return null;\n}\n\nfunction consumeEoi(tokens: TokenString): void {\n    if (tokens.length) {\n        throw new Error(`unexpected tokens: ${tokens.toString()}`);\n    }\n}\n\nconst regexArrayType = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\n\nfunction verifyBasicType(type: string): string {\n    const match = type.match(regexType);\n    assertArgument(match, 'invalid type', 'type', type);\n    if (type === 'uint') {\n        return 'uint256';\n    }\n    if (type === 'int') {\n        return 'int256';\n    }\n\n    if (match[2]) {\n        // bytesXX\n        const length = parseInt(match[2]);\n        assertArgument(length !== 0 && length <= 32, 'invalid bytes length', 'type', type);\n    } else if (match[3]) {\n        // intXX or uintXX\n        const size = parseInt(match[3] as string);\n        assertArgument(size !== 0 && size <= 256 && size % 8 === 0, 'invalid numeric width', 'type', type);\n    }\n\n    return type;\n}\n\n// Make the Fragment constructors effectively private\nconst _guard = {};\n\n/**\n *  When [walking](ParamType-walk) a [[ParamType]], this is called\n *  on each component.\n */\nexport type ParamTypeWalkFunc = (type: string, value: any) => any;\n\n/**\n *  When [walking asynchronously](ParamType-walkAsync) a [[ParamType]],\n *  this is called on each component.\n */\nexport type ParamTypeWalkAsyncFunc = (type: string, value: any) => any | Promise<any>;\n\nconst internal = Symbol.for('_ethers_internal');\n\nconst ParamTypeInternal = '_ParamTypeInternal';\nconst ErrorFragmentInternal = '_ErrorInternal';\nconst EventFragmentInternal = '_EventInternal';\nconst ConstructorFragmentInternal = '_ConstructorInternal';\nconst FallbackFragmentInternal = '_FallbackInternal';\nconst FunctionFragmentInternal = '_FunctionInternal';\nconst StructFragmentInternal = '_StructInternal';\n\n/**\n *  Each input and output of a [[Fragment]] is an Array of **ParamType**.\n */\nexport class ParamType {\n    /**\n     *  The local name of the parameter (or ``\"\"`` if unbound)\n     */\n    readonly name!: string;\n\n    /**\n     *  The fully qualified type (e.g. ``\"address\"``, ``\"tuple(address)\"``,\n     *  ``\"uint256[3][]\"``)\n     */\n    readonly type!: string;\n\n    /**\n     *  The base type (e.g. ``\"address\"``, ``\"tuple\"``, ``\"array\"``)\n     */\n    readonly baseType!: string;\n\n    /**\n     *  True if the parameters is indexed.\n     *\n     *  For non-indexable types this is ``null``.\n     */\n    readonly indexed!: null | boolean;\n\n    /**\n     *  The components for the tuple.\n     *\n     *  For non-tuple types this is ``null``.\n     */\n    readonly components!: null | ReadonlyArray<ParamType>;\n\n    /**\n     *  The array length, or ``-1`` for dynamic-lengthed arrays.\n     *\n     *  For non-array types this is ``null``.\n     */\n    readonly arrayLength!: null | number;\n\n    /**\n     *  The type of each child in the array.\n     *\n     *  For non-array types this is ``null``.\n     */\n    readonly arrayChildren!: null | ParamType;\n\n    /**\n     *  @private\n     */\n    constructor(\n        guard: any,\n        name: string,\n        type: string,\n        baseType: string,\n        indexed: null | boolean,\n        components: null | ReadonlyArray<ParamType>,\n        arrayLength: null | number,\n        arrayChildren: null | ParamType\n    ) {\n        assertPrivate(guard, _guard, 'ParamType');\n        Object.defineProperty(this, internal, { value: ParamTypeInternal });\n\n        if (components) {\n            components = Object.freeze(components.slice());\n        }\n\n        if (baseType === 'array') {\n            if (arrayLength == null || arrayChildren == null) {\n                throw new Error('');\n            }\n        } else if (arrayLength != null || arrayChildren != null) {\n            throw new Error('');\n        }\n\n        if (baseType === 'tuple') {\n            if (components == null) {\n                throw new Error('');\n            }\n        } else if (components != null) {\n            throw new Error('');\n        }\n\n        defineProperties<ParamType>(this, {\n            name,\n            type,\n            baseType,\n            indexed,\n            components,\n            arrayLength,\n            arrayChildren,\n        });\n    }\n\n    /**\n     *  Return a string representation of this type.\n     *\n     *  For example,\n     *\n     *  ``sighash\" => \"(uint256,address)\"``\n     *\n     *  ``\"minimal\" => \"tuple(uint256,address) indexed\"``\n     *\n     *  ``\"full\" => \"tuple(uint256 foo, address bar) indexed baz\"``\n     */\n    format(format?: FormatType): string {\n        if (format == null) {\n            format = 'sighash';\n        }\n        if (format === 'json') {\n            const result: any = {\n                type: this.baseType === 'tuple' ? 'tuple' : this.type,\n                name: this.name || undefined,\n            };\n            if (typeof this.indexed === 'boolean') {\n                result.indexed = this.indexed;\n            }\n            if (this.isTuple()) {\n                result.components = this.components.map((c) => JSON.parse(c.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n\n        let result = '';\n\n        // Array\n        if (this.isArray()) {\n            result += this.arrayChildren.format(format);\n            result += `[${this.arrayLength < 0 ? '' : String(this.arrayLength)}]`;\n        } else {\n            if (this.isTuple()) {\n                if (format !== 'sighash') {\n                    result += this.type;\n                }\n                result += '(' + this.components.map((comp) => comp.format(format)).join(format === 'full' ? ', ' : ',') + ')';\n            } else {\n                result += this.type;\n            }\n        }\n\n        if (format !== 'sighash') {\n            if (this.indexed === true) {\n                result += ' indexed';\n            }\n            if (format === 'full' && this.name) {\n                result += ' ' + this.name;\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     *  Returns true if %%this%% is an Array type.\n     *\n     *  This provides a type gaurd ensuring that [[arrayChildren]]\n     *  and [[arrayLength]] are non-null.\n     */\n    isArray(): this is ParamType & {\n        arrayChildren: ParamType;\n        arrayLength: number;\n    } {\n        return this.baseType === 'array';\n    }\n\n    /**\n     *  Returns true if %%this%% is a Tuple type.\n     *\n     *  This provides a type gaurd ensuring that [[components]]\n     *  is non-null.\n     */\n    isTuple(): this is ParamType & { components: ReadonlyArray<ParamType> } {\n        return this.baseType === 'tuple';\n    }\n\n    /**\n     *  Returns true if %%this%% is an Indexable type.\n     *\n     *  This provides a type gaurd ensuring that [[indexed]]\n     *  is non-null.\n     */\n    isIndexable(): this is ParamType & { indexed: boolean } {\n        return this.indexed != null;\n    }\n\n    /**\n     *  Walks the **ParamType** with %%value%%, calling %%process%%\n     *  on each type, destructing the %%value%% recursively.\n     */\n    walk(value: any, process: ParamTypeWalkFunc): any {\n        if (this.isArray()) {\n            if (!Array.isArray(value)) {\n                throw new Error('invalid array value');\n            }\n            if (this.arrayLength !== -1 && value.length !== this.arrayLength) {\n                throw new Error('array is wrong length');\n            }\n            return value.map((v) => this.arrayChildren?.walk(v, process));\n        }\n\n        if (this.isTuple()) {\n            if (!Array.isArray(value)) {\n                throw new Error('invalid tuple value');\n            }\n            if (value.length !== this.components.length) {\n                throw new Error('array is wrong length');\n            }\n            return value.map((v, i) => this.components?.[i].walk(v, process));\n        }\n\n        return process(this.type, value);\n    }\n\n    #walkAsync(\n        promises: Array<Promise<void>>,\n        value: any,\n        process: ParamTypeWalkAsyncFunc,\n        setValue: (value: any) => void\n    ): void {\n        if (this.isArray()) {\n            if (!Array.isArray(value)) {\n                throw new Error('invalid array value');\n            }\n            if (this.arrayLength !== -1 && value.length !== this.arrayLength) {\n                throw new Error('array is wrong length');\n            }\n            const childType = this.arrayChildren;\n\n            const result = value.slice();\n            result.forEach((value, index) => {\n                childType.#walkAsync(promises, value, process, (value: any) => {\n                    result[index] = value;\n                });\n            });\n            setValue(result);\n            return;\n        }\n\n        if (this.isTuple()) {\n            const components = this.components;\n\n            // Convert the object into an array\n            let result: Array<any>;\n            if (Array.isArray(value)) {\n                result = value.slice();\n            } else {\n                if (value == null || typeof value !== 'object') {\n                    throw new Error('invalid tuple value');\n                }\n\n                result = components.map((param) => {\n                    if (!param.name) {\n                        throw new Error('cannot use object value with unnamed components');\n                    }\n                    if (!(param.name in value)) {\n                        throw new Error(`missing value for component ${param.name}`);\n                    }\n                    return value[param.name];\n                });\n            }\n\n            if (result.length !== this.components.length) {\n                throw new Error('array is wrong length');\n            }\n\n            result.forEach((value, index) => {\n                components[index].#walkAsync(promises, value, process, (value: any) => {\n                    result[index] = value;\n                });\n            });\n            setValue(result);\n            return;\n        }\n\n        const result = process(this.type, value);\n        if (result.then) {\n            promises.push(\n                (async function () {\n                    setValue(await result);\n                })()\n            );\n        } else {\n            setValue(result);\n        }\n    }\n\n    /**\n     *  Walks the **ParamType** with %%value%%, asynchronously calling\n     *  %%process%% on each type, destructing the %%value%% recursively.\n     *\n     *  This can be used to resolve ENS naes by walking and resolving each\n     *  ``\"address\"`` type.\n     */\n    async walkAsync(value: any, process: ParamTypeWalkAsyncFunc): Promise<any> {\n        const promises: Array<Promise<void>> = [];\n        const result: [any] = [value];\n        this.#walkAsync(promises, value, process, (value: any) => {\n            result[0] = value;\n        });\n        if (promises.length) {\n            await Promise.all(promises);\n        }\n        return result[0];\n    }\n\n    /**\n     *  Creates a new **ParamType** for %%obj%%.\n     *\n     *  If %%allowIndexed%% then the ``indexed`` keyword is permitted,\n     *  otherwise the ``indexed`` keyword will throw an error.\n     */\n    static from(obj: any, allowIndexed?: boolean): ParamType {\n        if (ParamType.isParamType(obj)) {\n            return obj;\n        }\n\n        if (typeof obj === 'string') {\n            return ParamType.from(lex(obj), allowIndexed);\n        } else if (obj instanceof TokenString) {\n            let type = '',\n                baseType = '';\n            let comps: null | Array<ParamType> = null;\n\n            if (consumeKeywords(obj, setify(['tuple'])).has('tuple') || obj.peekType('OPEN_PAREN')) {\n                // Tuple\n                baseType = 'tuple';\n                comps = obj.popParams().map((t) => ParamType.from(t));\n                type = `tuple(${comps.map((c) => c.format()).join(',')})`;\n            } else {\n                // Normal\n                type = verifyBasicType(obj.popType('TYPE'));\n                baseType = type;\n            }\n\n            // Check for Array\n            let arrayChildren: null | ParamType = null;\n            let arrayLength: null | number = null;\n\n            while (obj.length && obj.peekType('BRACKET')) {\n                const bracket = obj.pop(); //arrays[i];\n                arrayChildren = new ParamType(_guard, '', type, baseType, null, comps, arrayLength, arrayChildren);\n                arrayLength = bracket.value;\n                type += bracket.text;\n                baseType = 'array';\n                comps = null;\n            }\n\n            let indexed: boolean | null = null;\n            const keywords = consumeKeywords(obj, KwModifiers);\n            if (keywords.has('indexed')) {\n                if (!allowIndexed) {\n                    throw new Error('');\n                }\n                indexed = true;\n            }\n\n            const name = obj.peekType('ID') ? obj.pop().text : '';\n\n            if (obj.length) {\n                throw new Error('leftover tokens');\n            }\n\n            return new ParamType(_guard, name, type, baseType, indexed, comps, arrayLength, arrayChildren);\n        }\n\n        const name = obj.name;\n        assertArgument(!name || (typeof name === 'string' && name.match(regexId)), 'invalid name', 'obj.name', name);\n\n        let indexed = obj.indexed;\n        if (indexed != null) {\n            assertArgument(allowIndexed, 'parameter cannot be indexed', 'obj.indexed', obj.indexed);\n            indexed = !!indexed;\n        }\n\n        let type = obj.type;\n\n        const arrayMatch = type.match(regexArrayType);\n        if (arrayMatch) {\n            const arrayLength = parseInt(arrayMatch[2] || '-1');\n            const arrayChildren = ParamType.from({\n                type: arrayMatch[1],\n                components: obj.components,\n            });\n\n            return new ParamType(_guard, name || '', type, 'array', indexed, null, arrayLength, arrayChildren);\n        }\n\n        if (type === 'tuple' || type.startsWith('tuple(' /* fix: ) */) || type.startsWith('(' /* fix: ) */)) {\n            const comps = obj.components != null ? obj.components.map((c: any) => ParamType.from(c)) : null;\n            const tuple = new ParamType(_guard, name || '', type, 'tuple', indexed, comps, null, null);\n            // @TODO: use lexer to validate and normalize type\n            return tuple;\n        }\n\n        type = verifyBasicType(obj.type);\n\n        return new ParamType(_guard, name || '', type, type, indexed, null, null, null);\n    }\n\n    /**\n     *  Returns true if %%value%% is a **ParamType**.\n     */\n    static isParamType(value: any): value is ParamType {\n        return value && value[internal] === ParamTypeInternal;\n    }\n}\n\n/**\n *  The type of a [[Fragment]].\n */\nexport type FragmentType = 'constructor' | 'error' | 'event' | 'fallback' | 'function' | 'struct';\n\n/**\n *  An abstract class to represent An individual fragment from a parse ABI.\n */\nexport abstract class Fragment {\n    /**\n     *  The type of the fragment.\n     */\n    readonly type!: FragmentType;\n\n    /**\n     *  The inputs for the fragment.\n     */\n    readonly inputs!: ReadonlyArray<ParamType>;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, type: FragmentType, inputs: ReadonlyArray<ParamType>) {\n        assertPrivate(guard, _guard, 'Fragment');\n        inputs = Object.freeze(inputs.slice());\n        defineProperties<Fragment>(this, { type, inputs });\n    }\n\n    /**\n     *  Returns a string representation of this fragment as %%format%%.\n     */\n    abstract format(format?: FormatType): string;\n\n    /**\n     *  Creates a new **Fragment** for %%obj%%, wich can be any supported\n     *  ABI frgament type.\n     */\n    static from(obj: any): Fragment {\n        if (typeof obj === 'string') {\n            // Try parsing JSON...\n            try {\n                Fragment.from(JSON.parse(obj));\n            } catch (e) {\n                //\n            }\n\n            // ...otherwise, use the human-readable lexer\n            return Fragment.from(lex(obj));\n        }\n\n        if (obj instanceof TokenString) {\n            // Human-readable ABI (already lexed)\n\n            const type = obj.peekKeyword(KwTypes);\n\n            switch (type) {\n                case 'constructor':\n                    return ConstructorFragment.from(obj);\n                case 'error':\n                    return ErrorFragment.from(obj);\n                case 'event':\n                    return EventFragment.from(obj);\n                case 'fallback':\n                case 'receive':\n                    return FallbackFragment.from(obj);\n                case 'function':\n                    return FunctionFragment.from(obj);\n                case 'struct':\n                    return StructFragment.from(obj);\n            }\n        } else if (typeof obj === 'object') {\n            // JSON ABI\n\n            switch (obj.type) {\n                case 'constructor':\n                    return ConstructorFragment.from(obj);\n                case 'error':\n                    return ErrorFragment.from(obj);\n                case 'event':\n                    return EventFragment.from(obj);\n                case 'fallback':\n                case 'receive':\n                    return FallbackFragment.from(obj);\n                case 'function':\n                    return FunctionFragment.from(obj);\n                case 'struct':\n                    return StructFragment.from(obj);\n            }\n\n            assert(false, `unsupported type: ${obj.type}`, 'UNSUPPORTED_OPERATION', {\n                operation: 'Fragment.from',\n            });\n        }\n\n        assertArgument(false, 'unsupported frgament object', 'obj', obj);\n    }\n\n    /**\n     *  Returns true if %%value%% is a [[ConstructorFragment]].\n     */\n    static isConstructor(value: any): value is ConstructorFragment {\n        return ConstructorFragment.isFragment(value);\n    }\n\n    /**\n     *  Returns true if %%value%% is an [[ErrorFragment]].\n     */\n    static isError(value: any): value is ErrorFragment {\n        return ErrorFragment.isFragment(value);\n    }\n\n    /**\n     *  Returns true if %%value%% is an [[EventFragment]].\n     */\n    static isEvent(value: any): value is EventFragment {\n        return EventFragment.isFragment(value);\n    }\n\n    /**\n     *  Returns true if %%value%% is a [[FunctionFragment]].\n     */\n    static isFunction(value: any): value is FunctionFragment {\n        return FunctionFragment.isFragment(value);\n    }\n\n    /**\n     *  Returns true if %%value%% is a [[StructFragment]].\n     */\n    static isStruct(value: any): value is StructFragment {\n        return StructFragment.isFragment(value);\n    }\n}\n\n/**\n *  An abstract class to represent An individual fragment\n *  which has a name from a parse ABI.\n */\nexport abstract class NamedFragment extends Fragment {\n    /**\n     *  The name of the fragment.\n     */\n    readonly name!: string;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, type: FragmentType, name: string, inputs: ReadonlyArray<ParamType>) {\n        super(guard, type, inputs);\n        assertArgument(typeof name === 'string' && name.match(regexId), 'invalid identifier', 'name', name);\n        inputs = Object.freeze(inputs.slice());\n        defineProperties<NamedFragment>(this, { name });\n    }\n}\n\nfunction joinParams(format: FormatType, params: ReadonlyArray<ParamType>): string {\n    return '(' + params.map((p) => p.format(format)).join(format === 'full' ? ', ' : ',') + ')';\n}\n\n/**\n *  A Fragment which represents a //Custom Error//.\n */\nexport class ErrorFragment extends NamedFragment {\n    /**\n     *  @private\n     */\n    constructor(guard: any, name: string, inputs: ReadonlyArray<ParamType>) {\n        super(guard, 'error', name, inputs);\n        Object.defineProperty(this, internal, { value: ErrorFragmentInternal });\n    }\n\n    /**\n     *  The Custom Error selector.\n     */\n    get selector(): string {\n        return id(this.format('sighash')).substring(0, 10);\n    }\n\n    /**\n     *  Returns a string representation of this fragment as %%format%%.\n     */\n    format(format?: FormatType): string {\n        if (format == null) {\n            format = 'sighash';\n        }\n        if (format === 'json') {\n            return JSON.stringify({\n                type: 'error',\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n\n        const result: string[] = [];\n        if (format !== 'sighash') {\n            result.push('error');\n        }\n        result.push(this.name + joinParams(format, this.inputs));\n        return result.join(' ');\n    }\n\n    /**\n     *  Returns a new **ErrorFragment** for %%obj%%.\n     */\n    static from(obj: any): ErrorFragment {\n        if (ErrorFragment.isFragment(obj)) {\n            return obj;\n        }\n\n        if (typeof obj === 'string') {\n            return ErrorFragment.from(lex(obj));\n        } else if (obj instanceof TokenString) {\n            const name = consumeName('error', obj);\n            const inputs = consumeParams(obj);\n            consumeEoi(obj);\n\n            return new ErrorFragment(_guard, name, inputs);\n        }\n\n        return new ErrorFragment(_guard, obj.name, obj.inputs ? obj.inputs.map(ParamType.from) : []);\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is an\n     *  **ErrorFragment**.\n     */\n    static isFragment(value: any): value is ErrorFragment {\n        return value && value[internal] === ErrorFragmentInternal;\n    }\n}\n\n/**\n *  A Fragment which represents an Event.\n */\nexport class EventFragment extends NamedFragment {\n    /**\n     *  Whether this event is anonymous.\n     */\n    readonly anonymous!: boolean;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, name: string, inputs: ReadonlyArray<ParamType>, anonymous: boolean) {\n        super(guard, 'event', name, inputs);\n        Object.defineProperty(this, internal, { value: EventFragmentInternal });\n        defineProperties<EventFragment>(this, { anonymous });\n    }\n\n    /**\n     *  The Event topic hash.\n     */\n    get topicHash(): string {\n        return id(this.format('sighash'));\n    }\n\n    /**\n     *  Returns a string representation of this event as %%format%%.\n     */\n    format(format?: FormatType): string {\n        if (format == null) {\n            format = 'sighash';\n        }\n        if (format === 'json') {\n            return JSON.stringify({\n                type: 'event',\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format))),\n            });\n        }\n\n        const result: string[] = [];\n        if (format !== 'sighash') {\n            result.push('event');\n        }\n        result.push(this.name + joinParams(format, this.inputs));\n        if (format !== 'sighash' && this.anonymous) {\n            result.push('anonymous');\n        }\n        return result.join(' ');\n    }\n\n    /**\n     *  Return the topic hash for an event with %%name%% and %%params%%.\n     */\n    static getTopicHash(name: string, params?: Array<any>): string {\n        params = (params || []).map((p) => ParamType.from(p));\n        const fragment = new EventFragment(_guard, name, params, false);\n        return fragment.topicHash;\n    }\n\n    /**\n     *  Returns a new **EventFragment** for %%obj%%.\n     */\n    static from(obj: any): EventFragment {\n        if (EventFragment.isFragment(obj)) {\n            return obj;\n        }\n\n        if (typeof obj === 'string') {\n            return EventFragment.from(lex(obj));\n        } else if (obj instanceof TokenString) {\n            const name = consumeName('event', obj);\n            const inputs = consumeParams(obj, true);\n            const anonymous = !!consumeKeywords(obj, setify(['anonymous'])).has('anonymous');\n            consumeEoi(obj);\n\n            return new EventFragment(_guard, name, inputs, anonymous);\n        }\n\n        return new EventFragment(\n            _guard,\n            obj.name,\n            obj.inputs ? obj.inputs.map((p: any) => ParamType.from(p, true)) : [],\n            !!obj.anonymous\n        );\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is an\n     *  **EventFragment**.\n     */\n    static isFragment(value: any): value is EventFragment {\n        return value && value[internal] === EventFragmentInternal;\n    }\n}\n\n/**\n *  A Fragment which represents a constructor.\n */\nexport class ConstructorFragment extends Fragment {\n    /**\n     *  Whether the constructor can receive an endowment.\n     */\n    readonly payable!: boolean;\n\n    /**\n     *  The recommended gas limit for deployment or ``null``.\n     */\n    readonly gas!: null | bigint;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, type: FragmentType, inputs: ReadonlyArray<ParamType>, payable: boolean, gas: null | bigint) {\n        super(guard, type, inputs);\n        Object.defineProperty(this, internal, {\n            value: ConstructorFragmentInternal,\n        });\n        defineProperties<ConstructorFragment>(this, { payable, gas });\n    }\n\n    /**\n     *  Returns a string representation of this constructor as %%format%%.\n     */\n    format(format?: FormatType): string {\n        assert(format != null && format !== 'sighash', 'cannot format a constructor for sighash', 'UNSUPPORTED_OPERATION', {\n            operation: 'format(sighash)',\n        });\n\n        if (format === 'json') {\n            return JSON.stringify({\n                type: 'constructor',\n                stateMutability: this.payable ? 'payable' : 'undefined',\n                payable: this.payable,\n                gas: this.gas != null ? this.gas : undefined,\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format))),\n            });\n        }\n\n        const result = [`constructor${joinParams(format, this.inputs)}`];\n        result.push(this.payable ? 'payable' : 'nonpayable');\n        if (this.gas != null) {\n            result.push(`@${this.gas.toString()}`);\n        }\n        return result.join(' ');\n    }\n\n    /**\n     *  Returns a new **ConstructorFragment** for %%obj%%.\n     */\n    static from(obj: any): ConstructorFragment {\n        if (ConstructorFragment.isFragment(obj)) {\n            return obj;\n        }\n\n        if (typeof obj === 'string') {\n            return ConstructorFragment.from(lex(obj));\n        } else if (obj instanceof TokenString) {\n            consumeKeywords(obj, setify(['constructor']));\n            const inputs = consumeParams(obj);\n            const payable = !!consumeKeywords(obj, setify(['payable'])).has('payable');\n            const gas = consumeGas(obj);\n            consumeEoi(obj);\n\n            return new ConstructorFragment(_guard, 'constructor', inputs, payable, gas);\n        }\n\n        return new ConstructorFragment(\n            _guard,\n            'constructor',\n            obj.inputs ? obj.inputs.map(ParamType.from) : [],\n            !!obj.payable,\n            obj.gas != null ? obj.gas : null\n        );\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is a\n     *  **ConstructorFragment**.\n     */\n    static isFragment(value: any): value is ConstructorFragment {\n        return value && value[internal] === ConstructorFragmentInternal;\n    }\n}\n\n/**\n *  A Fragment which represents a method.\n */\nexport class FallbackFragment extends Fragment {\n    /**\n     *  If the function can be sent value during invocation.\n     */\n    readonly payable!: boolean;\n\n    constructor(guard: any, inputs: ReadonlyArray<ParamType>, payable: boolean) {\n        super(guard, 'fallback', inputs);\n        Object.defineProperty(this, internal, { value: FallbackFragmentInternal });\n        defineProperties<FallbackFragment>(this, { payable });\n    }\n\n    /**\n     *  Returns a string representation of this fallback as %%format%%.\n     */\n    format(format?: FormatType): string {\n        const type = this.inputs.length === 0 ? 'receive' : 'fallback';\n\n        if (format === 'json') {\n            const stateMutability = this.payable ? 'payable' : 'nonpayable';\n            return JSON.stringify({ type, stateMutability });\n        }\n\n        return `${type}()${this.payable ? ' payable' : ''}`;\n    }\n\n    /**\n     *  Returns a new **FallbackFragment** for %%obj%%.\n     */\n    static from(obj: any): FallbackFragment {\n        if (FallbackFragment.isFragment(obj)) {\n            return obj;\n        }\n\n        if (typeof obj === 'string') {\n            return FallbackFragment.from(lex(obj));\n        } else if (obj instanceof TokenString) {\n            const errorObj = obj.toString();\n\n            const topIsValid = obj.peekKeyword(setify(['fallback', 'receive']));\n            assertArgument(topIsValid, 'type must be fallback or receive', 'obj', errorObj);\n\n            const type = obj.popKeyword(setify(['fallback', 'receive']));\n\n            // receive()\n            if (type === 'receive') {\n                const inputs = consumeParams(obj);\n                assertArgument(inputs.length === 0, `receive cannot have arguments`, 'obj.inputs', inputs);\n                consumeKeywords(obj, setify(['payable']));\n                consumeEoi(obj);\n                return new FallbackFragment(_guard, [], true);\n            }\n\n            // fallback() [payable]\n            // fallback(bytes) [payable] returns (bytes)\n            let inputs = consumeParams(obj);\n            if (inputs.length) {\n                assertArgument(\n                    inputs.length === 1 && inputs[0].type === 'bytes',\n                    'invalid fallback inputs',\n                    'obj.inputs',\n                    inputs.map((i) => i.format('minimal')).join(', ')\n                );\n            } else {\n                inputs = [ParamType.from('bytes')];\n            }\n\n            const mutability = consumeMutability(obj);\n            assertArgument(\n                mutability === 'nonpayable' || mutability === 'payable',\n                'fallback cannot be constants',\n                'obj.stateMutability',\n                mutability\n            );\n\n            if (consumeKeywords(obj, setify(['returns'])).has('returns')) {\n                const outputs = consumeParams(obj);\n                assertArgument(\n                    outputs.length === 1 && outputs[0].type === 'bytes',\n                    'invalid fallback outputs',\n                    'obj.outputs',\n                    outputs.map((i) => i.format('minimal')).join(', ')\n                );\n            }\n\n            consumeEoi(obj);\n\n            return new FallbackFragment(_guard, inputs, mutability === 'payable');\n        }\n\n        if (obj.type === 'receive') {\n            return new FallbackFragment(_guard, [], true);\n        }\n\n        if (obj.type === 'fallback') {\n            const inputs = [ParamType.from('bytes')];\n            const payable = obj.stateMutability === 'payable';\n            return new FallbackFragment(_guard, inputs, payable);\n        }\n\n        assertArgument(false, 'invalid fallback description', 'obj', obj);\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is a\n     *  **FallbackFragment**.\n     */\n    static isFragment(value: any): value is FallbackFragment {\n        return value && value[internal] === FallbackFragmentInternal;\n    }\n}\n\n/**\n *  A Fragment which represents a method.\n */\nexport class FunctionFragment extends NamedFragment {\n    /**\n     *  If the function is constant (e.g. ``pure`` or ``view`` functions).\n     */\n    readonly constant!: boolean;\n\n    /**\n     *  The returned types for the result of calling this function.\n     */\n    readonly outputs!: ReadonlyArray<ParamType>;\n\n    /**\n     *  The state mutability (e.g. ``payable``, ``nonpayable``, ``view``\n     *  or ``pure``)\n     */\n    readonly stateMutability!: 'payable' | 'nonpayable' | 'view' | 'pure';\n\n    /**\n     *  If the function can be sent value during invocation.\n     */\n    readonly payable!: boolean;\n\n    /**\n     *  The recommended gas limit to send when calling this function.\n     */\n    readonly gas!: null | bigint;\n\n    /**\n     *  @private\n     */\n    constructor(\n        guard: any,\n        name: string,\n        stateMutability: 'payable' | 'nonpayable' | 'view' | 'pure',\n        inputs: ReadonlyArray<ParamType>,\n        outputs: ReadonlyArray<ParamType>,\n        gas: null | bigint\n    ) {\n        super(guard, 'function', name, inputs);\n        Object.defineProperty(this, internal, { value: FunctionFragmentInternal });\n        outputs = Object.freeze(outputs.slice());\n        const constant = stateMutability === 'view' || stateMutability === 'pure';\n        const payable = stateMutability === 'payable';\n        defineProperties<FunctionFragment>(this, {\n            constant,\n            gas,\n            outputs,\n            payable,\n            stateMutability,\n        });\n    }\n\n    /**\n     *  The Function selector.\n     */\n    get selector(): string {\n        return id(this.format('sighash')).substring(0, 10);\n    }\n\n    /**\n     *  Returns a string representation of this function as %%format%%.\n     */\n    format(format?: FormatType): string {\n        if (format == null) {\n            format = 'sighash';\n        }\n        if (format === 'json') {\n            return JSON.stringify({\n                type: 'function',\n                name: this.name,\n                constant: this.constant,\n                stateMutability: this.stateMutability !== 'nonpayable' ? this.stateMutability : undefined,\n                payable: this.payable,\n                gas: this.gas != null ? this.gas : undefined,\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format))),\n                outputs: this.outputs.map((o) => JSON.parse(o.format(format))),\n            });\n        }\n\n        const result: string[] = [];\n\n        if (format !== 'sighash') {\n            result.push('function');\n        }\n\n        result.push(this.name + joinParams(format, this.inputs));\n\n        if (format !== 'sighash') {\n            if (this.stateMutability !== 'nonpayable') {\n                result.push(this.stateMutability);\n            }\n\n            if (this.outputs && this.outputs.length) {\n                result.push('returns');\n                result.push(joinParams(format, this.outputs));\n            }\n\n            if (this.gas != null) {\n                result.push(`@${this.gas.toString()}`);\n            }\n        }\n        return result.join(' ');\n    }\n\n    /**\n     *  Return the selector for a function with %%name%% and %%params%%.\n     */\n    static getSelector(name: string, params?: Array<any>): string {\n        params = (params || []).map((p) => ParamType.from(p));\n        const fragment = new FunctionFragment(_guard, name, 'view', params, [], null);\n        return fragment.selector;\n    }\n\n    /**\n     *  Returns a new **FunctionFragment** for %%obj%%.\n     */\n    static from(obj: any): FunctionFragment {\n        if (FunctionFragment.isFragment(obj)) {\n            return obj;\n        }\n\n        if (typeof obj === 'string') {\n            return FunctionFragment.from(lex(obj));\n        } else if (obj instanceof TokenString) {\n            const name = consumeName('function', obj);\n            const inputs = consumeParams(obj);\n            const mutability = consumeMutability(obj);\n\n            let outputs: Array<ParamType> = [];\n            if (consumeKeywords(obj, setify(['returns'])).has('returns')) {\n                outputs = consumeParams(obj);\n            }\n\n            const gas = consumeGas(obj);\n\n            consumeEoi(obj);\n\n            return new FunctionFragment(_guard, name, mutability, inputs, outputs, gas);\n        }\n\n        let stateMutability = obj.stateMutability;\n\n        // Use legacy Solidity ABI logic if stateMutability is missing\n        if (stateMutability == null) {\n            stateMutability = 'payable';\n\n            if (typeof obj.constant === 'boolean') {\n                stateMutability = 'view';\n                if (!obj.constant) {\n                    stateMutability = 'payable';\n                    if (typeof obj.payable === 'boolean' && !obj.payable) {\n                        stateMutability = 'nonpayable';\n                    }\n                }\n            } else if (typeof obj.payable === 'boolean' && !obj.payable) {\n                stateMutability = 'nonpayable';\n            }\n        }\n\n        // @TODO: verifyState for stateMutability (e.g. throw if\n        //        payable: false but stateMutability is \"nonpayable\")\n\n        return new FunctionFragment(\n            _guard,\n            obj.name,\n            stateMutability,\n            obj.inputs ? obj.inputs.map(ParamType.from) : [],\n            obj.outputs ? obj.outputs.map(ParamType.from) : [],\n            obj.gas != null ? obj.gas : null\n        );\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is a\n     *  **FunctionFragment**.\n     */\n    static isFragment(value: any): value is FunctionFragment {\n        return value && value[internal] === FunctionFragmentInternal;\n    }\n}\n\n/**\n *  A Fragment which represents a structure.\n */\nexport class StructFragment extends NamedFragment {\n    /**\n     *  @private\n     */\n    constructor(guard: any, name: string, inputs: ReadonlyArray<ParamType>) {\n        super(guard, 'struct', name, inputs);\n        Object.defineProperty(this, internal, { value: StructFragmentInternal });\n    }\n\n    /**\n     *  Returns a string representation of this struct as %%format%%.\n     */\n    format(): string {\n        throw new Error('@TODO');\n    }\n\n    /**\n     *  Returns a new **StructFragment** for %%obj%%.\n     */\n    static from(obj: any): StructFragment {\n        if (typeof obj === 'string') {\n            return StructFragment.from(lex(obj));\n        } else if (obj instanceof TokenString) {\n            const name = consumeName('struct', obj);\n            const inputs = consumeParams(obj);\n            consumeEoi(obj);\n            return new StructFragment(_guard, name, inputs);\n        }\n\n        return new StructFragment(_guard, obj.name, obj.inputs ? obj.inputs.map(ParamType.from) : []);\n    }\n\n    // @TODO: fix this return type\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is a\n     *  **StructFragment**.\n     */\n    static isFragment(value: any): value is FunctionFragment {\n        return value && value[internal] === StructFragmentInternal;\n    }\n}\n", "/**\n *  The Interface class is a low-level class that accepts an\n *  ABI and provides all the necessary functionality to encode\n *  and decode paramaters to and results from methods, events\n *  and errors.\n *\n *  It also provides several convenience methods to automatically\n *  search and find matching transactions and events to parse them.\n *\n *  @_subsection api/abi:Interfaces  [interfaces]\n */\n\nimport { keccak256 } from 'ethers';\nimport { id } from 'ethers';\nimport {\n    concat,\n    dataSlice,\n    getBigInt,\n    getBytes,\n    getBytesCopy,\n    hexlify,\n    zeroPadValue,\n    isHexString,\n    defineProperties,\n    assertArgument,\n    toBeHex,\n    assert,\n} from 'ethers';\n\nimport { AbiCoder } from 'ethers';\nimport { checkResultErrors, Result } from 'ethers';\nimport {\n    ConstructorFragment,\n    ErrorFragment,\n    EventFragment,\n    FallbackFragment,\n    Fragment,\n    FunctionFragment,\n    ParamType,\n} from './fragments.js';\nimport { Typed } from 'ethers';\n\nimport type { BigNumberish, BytesLike, CallExceptionError, CallExceptionTransaction } from 'ethers';\n\nimport type { JsonFragment } from 'ethers';\n\nexport { checkResultErrors, Result };\n\n/**\n *  When using the [[Interface-parseLog]] to automatically match a Log to its event\n *  for parsing, a **LogDescription** is returned.\n */\nexport class LogDescription {\n    /**\n     *  The matching fragment for the ``topic0``.\n     */\n    readonly fragment!: EventFragment;\n\n    /**\n     *  The name of the Event.\n     */\n    readonly name!: string;\n\n    /**\n     *  The full Event signature.\n     */\n    readonly signature!: string;\n\n    /**\n     *  The topic hash for the Event.\n     */\n    readonly topic!: string;\n\n    /**\n     *  The arguments passed into the Event with ``emit``.\n     */\n    readonly args!: Result;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(fragment: EventFragment, topic: string, args: Result) {\n        const name = fragment.name,\n            signature = fragment.format();\n        defineProperties<LogDescription>(this, {\n            fragment,\n            name,\n            signature,\n            topic,\n            args,\n        });\n    }\n}\n\n/**\n *  When using the [[Interface-parseTransaction]] to automatically match\n *  a transaction data to its function for parsing,\n *  a **TransactionDescription** is returned.\n */\nexport class TransactionDescription {\n    /**\n     *  The matching fragment from the transaction ``data``.\n     */\n    readonly fragment!: FunctionFragment;\n\n    /**\n     *  The name of the Function from the transaction ``data``.\n     */\n    readonly name!: string;\n\n    /**\n     *  The arguments passed to the Function from the transaction ``data``.\n     */\n    readonly args!: Result;\n\n    /**\n     *  The full Function signature from the transaction ``data``.\n     */\n    readonly signature!: string;\n\n    /**\n     *  The selector for the Function from the transaction ``data``.\n     */\n    readonly selector!: string;\n\n    /**\n     *  The ``value`` (in wei) from the transaction.\n     */\n    readonly value!: bigint;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(fragment: FunctionFragment, selector: string, args: Result, value: bigint) {\n        const name = fragment.name,\n            signature = fragment.format();\n        defineProperties<TransactionDescription>(this, {\n            fragment,\n            name,\n            args,\n            signature,\n            selector,\n            value,\n        });\n    }\n}\n\n/**\n *  When using the [[Interface-parseError]] to automatically match an\n *  error for a call result for parsing, an **ErrorDescription** is returned.\n */\nexport class ErrorDescription {\n    /**\n     *  The matching fragment.\n     */\n    readonly fragment!: ErrorFragment;\n\n    /**\n     *  The name of the Error.\n     */\n    readonly name!: string;\n\n    /**\n     *  The arguments passed to the Error with ``revert``.\n     */\n    readonly args!: Result;\n\n    /**\n     *  The full Error signature.\n     */\n    readonly signature!: string;\n\n    /**\n     *  The selector for the Error.\n     */\n    readonly selector!: string;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(fragment: ErrorFragment, selector: string, args: Result) {\n        const name = fragment.name,\n            signature = fragment.format();\n        defineProperties<ErrorDescription>(this, {\n            fragment,\n            name,\n            args,\n            signature,\n            selector,\n        });\n    }\n}\n\n/**\n *  An **Indexed** is used as a value when a value that does not\n *  fit within a topic (i.e. not a fixed-length, 32-byte type). It\n *  is the ``keccak256`` of the value, and used for types such as\n *  arrays, tuples, bytes and strings.\n */\nexport class Indexed {\n    /**\n     *  The ``keccak256`` of the value logged.\n     */\n    readonly hash!: null | string;\n\n    /**\n     *  @_ignore:\n     */\n    readonly _isIndexed!: boolean;\n\n    /**\n     *  Returns ``true`` if %%value%% is an **Indexed**.\n     *\n     *  This provides a Type Guard for property access.\n     */\n    static isIndexed(value: any): value is Indexed {\n        return !!(value && value._isIndexed);\n    }\n\n    /**\n     *  @_ignore:\n     */\n    constructor(hash: null | string) {\n        defineProperties<Indexed>(this, { hash, _isIndexed: true });\n    }\n}\n\ntype ErrorInfo = {\n    signature: string;\n    inputs: Array<string>;\n    name: string;\n    reason: (...args: Array<any>) => string;\n};\n\n// https://docs.soliditylang.org/en/v0.8.13/control-structures.html?highlight=panic#panic-via-assert-and-error-via-require\nconst PanicReasons: Record<string, string> = {\n    '0': 'generic panic',\n    '1': 'assert(false)',\n    '17': 'arithmetic overflow',\n    '18': 'division or modulo by zero',\n    '33': 'enum overflow',\n    '34': 'invalid encoded storage byte array accessed',\n    '49': 'out-of-bounds array access; popping on an empty array',\n    '50': 'out-of-bounds access of an array or bytesN',\n    '65': 'out of memory',\n    '81': 'uninitialized function',\n};\n\nconst BuiltinErrors: Record<string, ErrorInfo> = {\n    '0x08c379a0': {\n        signature: 'Error(string)',\n        name: 'Error',\n        inputs: ['string'],\n        reason: (message: string) => {\n            return `reverted with reason string ${JSON.stringify(message)}`;\n        },\n    },\n    '0x4e487b71': {\n        signature: 'Panic(uint256)',\n        name: 'Panic',\n        inputs: ['uint256'],\n        reason: (code: bigint) => {\n            let reason = 'unknown panic code';\n            if (code >= 0 && code <= 0xff && PanicReasons[code.toString()]) {\n                reason = PanicReasons[code.toString()];\n            }\n            return `reverted with panic code 0x${code.toString(16)} (${reason})`;\n        },\n    },\n};\n\n/*\nfunction wrapAccessError(property: string, error: Error): Error {\n    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${ property }`);\n    (<any>wrap).error = error;\n    return wrap;\n}\n*/\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\n\n/**\n *  An **InterfaceAbi** may be any supported ABI format.\n *\n *  A string is expected to be a JSON string, which will be parsed\n *  using ``JSON.parse``. This means that the value **must** be a valid\n *  JSON string, with no stray commas, etc.\n *\n *  An array may contain any combination of:\n *  - Human-Readable fragments\n *  - Parsed JSON fragment\n *  - [[Fragment]] instances\n *\n *  A **Human-Readable Fragment** is a string which resembles a Solidity\n *  signature and is introduced in [this blog entry](link-ricmoo-humanreadableabi).\n *  For example, ``function balanceOf(address) view returns (uint)``.\n *\n *  A **Parsed JSON Fragment** is a JavaScript Object desribed in the\n *  [Solidity documentation](link-solc-jsonabi).\n */\nexport type InterfaceAbi = string | ReadonlyArray<Fragment | JsonFragment | string>;\n\n/**\n *  An Interface abstracts many of the low-level details for\n *  encoding and decoding the data on the blockchain.\n *\n *  An ABI provides information on how to encode data to send to\n *  a Contract, how to decode the results and events and how to\n *  interpret revert errors.\n *\n *  The ABI can be specified by [any supported format](InterfaceAbi).\n */\nexport class Interface {\n    /**\n     *  All the Contract ABI members (i.e. methods, events, errors, etc).\n     */\n    readonly fragments!: ReadonlyArray<Fragment>;\n\n    /**\n     *  The Contract constructor.\n     */\n    readonly deploy!: ConstructorFragment;\n\n    /**\n     *  The Fallback method, if any.\n     */\n    readonly fallback!: null | FallbackFragment;\n\n    /**\n     *  If receiving ether is supported.\n     */\n    readonly receive!: boolean;\n\n    #errors: Map<string, ErrorFragment>;\n    #events: Map<string, EventFragment>;\n    #functions: Map<string, FunctionFragment>;\n    //    #structs: Map<string, StructFragment>;\n\n    #abiCoder: AbiCoder;\n\n    /**\n     *  Create a new Interface for the %%fragments%%.\n     */\n    constructor(fragments: InterfaceAbi) {\n        let abi: ReadonlyArray<Fragment | JsonFragment | string> = [];\n        if (typeof fragments === 'string') {\n            abi = JSON.parse(fragments);\n        } else {\n            abi = fragments;\n        }\n\n        this.#functions = new Map();\n        this.#errors = new Map();\n        this.#events = new Map();\n        //        this.#structs = new Map();\n\n        const frags: Array<Fragment> = [];\n        for (const a of abi) {\n            try {\n                frags.push(Fragment.from(a));\n            } catch (error) {\n                console.log('EE', error);\n            }\n        }\n\n        defineProperties<Interface>(this, {\n            fragments: Object.freeze(frags),\n        });\n\n        let fallback: null | FallbackFragment = null;\n        let receive = false;\n\n        this.#abiCoder = this.getAbiCoder();\n\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment, index) => {\n            let bucket: Map<string, Fragment>;\n            switch (fragment.type) {\n                case 'constructor':\n                    if (this.deploy) {\n                        console.log('duplicate definition - constructor');\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineProperties<Interface>(this, {\n                        deploy: <ConstructorFragment>fragment,\n                    });\n                    return;\n\n                case 'fallback':\n                    if (fragment.inputs.length === 0) {\n                        receive = true;\n                    } else {\n                        assertArgument(\n                            !fallback || (<FallbackFragment>fragment).payable !== fallback.payable,\n                            'conflicting fallback fragments',\n                            `fragments[${index}]`,\n                            fragment\n                        );\n                        fallback = <FallbackFragment>fragment;\n                        receive = fallback.payable;\n                    }\n                    return;\n\n                case 'function':\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.#functions;\n                    break;\n\n                case 'event':\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.#events;\n                    break;\n\n                case 'error':\n                    bucket = this.#errors;\n                    break;\n\n                default:\n                    return;\n            }\n\n            // Two identical entries; ignore it\n            const signature = fragment.format();\n            if (bucket.has(signature)) {\n                return;\n            }\n\n            bucket.set(signature, fragment);\n        });\n\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineProperties<Interface>(this, {\n                deploy: ConstructorFragment.from('constructor()'),\n            });\n        }\n\n        defineProperties<Interface>(this, { fallback, receive });\n    }\n\n    /**\n     *  Returns the entire Human-Readable ABI, as an array of\n     *  signatures, optionally as %%minimal%% strings, which\n     *  removes parameter names and unneceesary spaces.\n     */\n    format(minimal?: boolean): Array<string> {\n        const format = minimal ? 'minimal' : 'full';\n        const abi = this.fragments.map((f) => f.format(format));\n        return abi;\n    }\n\n    /**\n     *  Return the JSON-encoded ABI. This is the format Solidiy\n     *  returns.\n     */\n    formatJson(): string {\n        const abi = this.fragments.map((f) => f.format('json'));\n\n        // We need to re-bundle the JSON fragments a bit\n        return JSON.stringify(abi.map((j) => JSON.parse(j)));\n    }\n\n    /**\n     *  The ABI coder that will be used to encode and decode binary\n     *  data.\n     */\n    getAbiCoder(): AbiCoder {\n        return AbiCoder.defaultAbiCoder();\n    }\n\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    #getFunction(key: string, values: null | Array<any | Typed>, forceUnique: boolean): null | FunctionFragment {\n        // Selector\n        if (isHexString(key)) {\n            const selector = key.toLowerCase();\n            for (const fragment of this.#functions.values()) {\n                if (selector === fragment.selector) {\n                    return fragment;\n                }\n            }\n            return null;\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf('(') === -1) {\n            const matching: Array<FunctionFragment> = [];\n            for (const [name, fragment] of this.#functions) {\n                if (name.split('(' /* fix:) */)[0] === key) {\n                    matching.push(fragment);\n                }\n            }\n\n            if (values) {\n                const lastValue = values.length > 0 ? values[values.length - 1] : null;\n\n                let valueLength = values.length;\n                let allowOptions = true;\n                if (Typed.isTyped(lastValue) && lastValue.type === 'overrides') {\n                    allowOptions = false;\n                    valueLength--;\n                }\n\n                // Remove all matches that don't have a compatible length. The args\n                // may contain an overrides, so the match may have n or n - 1 parameters\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs.length;\n                    if (inputs !== valueLength && (!allowOptions || inputs !== valueLength - 1)) {\n                        matching.splice(i, 1);\n                    }\n                }\n\n                // Remove all matches that don't match the Typed signature\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs;\n                    for (let j = 0; j < values.length; j++) {\n                        // Not a typed value\n                        if (!Typed.isTyped(values[j])) {\n                            continue;\n                        }\n\n                        // We are past the inputs\n                        if (j >= inputs.length) {\n                            if (values[j].type === 'overrides') {\n                                continue;\n                            }\n                            matching.splice(i, 1);\n                            break;\n                        }\n\n                        // Make sure the value type matches the input type\n                        if (values[j].type !== inputs[j].baseType) {\n                            matching.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            }\n\n            // We found a single matching signature with an overrides, but the\n            // last value is something that cannot possibly be an options\n            if (matching.length === 1 && values && values.length !== matching[0].inputs.length) {\n                const lastArg = values[values.length - 1];\n                if (lastArg == null || Array.isArray(lastArg) || typeof lastArg !== 'object') {\n                    matching.splice(0, 1);\n                }\n            }\n\n            if (matching.length === 0) {\n                return null;\n            }\n\n            if (matching.length > 1 && forceUnique) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(', ');\n                assertArgument(false, `ambiguous function description (i.e. matches ${matchStr})`, 'key', key);\n            }\n\n            return matching[0];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.#functions.get(FunctionFragment.from(key).format());\n        if (result) {\n            return result;\n        }\n\n        return null;\n    }\n\n    /**\n     *  Get the function name for %%key%%, which may be a function selector,\n     *  function name or function signature that belongs to the ABI.\n     */\n    getFunctionName(key: string): string {\n        const fragment = this.#getFunction(key, null, false);\n        assertArgument(fragment, 'no matching function', 'key', key);\n        return fragment.name;\n    }\n\n    /**\n     *  Returns true if %%key%% (a function selector, function name or\n     *  function signature) is present in the ABI.\n     *\n     *  In the case of a function name, the name may be ambiguous, so\n     *  accessing the [[FunctionFragment]] may require refinement.\n     */\n    hasFunction(key: string): boolean {\n        return !!this.#getFunction(key, null, false);\n    }\n\n    /**\n     *  Get the [[FunctionFragment]] for %%key%%, which may be a function\n     *  selector, function name or function signature that belongs to the ABI.\n     *\n     *  If %%values%% is provided, it will use the Typed API to handle\n     *  ambiguous cases where multiple functions match by name.\n     *\n     *  If the %%key%% and %%values%% do not refine to a single function in\n     *  the ABI, this will throw.\n     */\n    getFunction(key: string, values?: Array<any | Typed>): null | FunctionFragment {\n        return this.#getFunction(key, values || null, true);\n    }\n\n    /**\n     *  Iterate over all functions, calling %%callback%%, sorted by their name.\n     */\n    forEachFunction(callback: (func: FunctionFragment, index: number) => void): void {\n        const names = Array.from(this.#functions.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback(<FunctionFragment>this.#functions.get(name), i);\n        }\n    }\n\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    #getEvent(key: string, values: null | Array<null | any | Typed>, forceUnique: boolean): null | EventFragment {\n        // EventTopic\n        if (isHexString(key)) {\n            const eventTopic = key.toLowerCase();\n            for (const fragment of this.#events.values()) {\n                if (eventTopic === fragment.topicHash) {\n                    return fragment;\n                }\n            }\n            return null;\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf('(') === -1) {\n            const matching: EventFragment[] = [];\n            for (const [name, fragment] of this.#events) {\n                if (name.split('(' /* fix:) */)[0] === key) {\n                    matching.push(fragment);\n                }\n            }\n\n            if (values) {\n                // Remove all matches that don't have a compatible length.\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    if (matching[i].inputs.length < values.length) {\n                        matching.splice(i, 1);\n                    }\n                }\n\n                // Remove all matches that don't match the Typed signature\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs;\n                    for (let j = 0; j < values.length; j++) {\n                        // Not a typed value\n                        if (!Typed.isTyped(values[j])) {\n                            continue;\n                        }\n\n                        // Make sure the value type matches the input type\n                        if (values[j].type !== inputs[j].baseType) {\n                            matching.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            }\n\n            if (matching.length === 0) {\n                return null;\n            }\n\n            if (matching.length > 1 && forceUnique) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(', ');\n                assertArgument(false, `ambiguous event description (i.e. matches ${matchStr})`, 'key', key);\n            }\n\n            return matching[0];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.#events.get(EventFragment.from(key).format());\n        if (result) {\n            return result;\n        }\n\n        return null;\n    }\n\n    /**\n     *  Get the event name for %%key%%, which may be a topic hash,\n     *  event name or event signature that belongs to the ABI.\n     */\n    getEventName(key: string): string {\n        const fragment = this.#getEvent(key, null, false);\n        assertArgument(fragment, 'no matching event', 'key', key);\n\n        return fragment.name;\n    }\n\n    /**\n     *  Returns true if %%key%% (an event topic hash, event name or\n     *  event signature) is present in the ABI.\n     *\n     *  In the case of an event name, the name may be ambiguous, so\n     *  accessing the [[EventFragment]] may require refinement.\n     */\n    hasEvent(key: string): boolean {\n        return !!this.#getEvent(key, null, false);\n    }\n\n    /**\n     *  Get the [[EventFragment]] for %%key%%, which may be a topic hash,\n     *  event name or event signature that belongs to the ABI.\n     *\n     *  If %%values%% is provided, it will use the Typed API to handle\n     *  ambiguous cases where multiple events match by name.\n     *\n     *  If the %%key%% and %%values%% do not refine to a single event in\n     *  the ABI, this will throw.\n     */\n    getEvent(key: string, values?: Array<any | Typed>): null | EventFragment {\n        return this.#getEvent(key, values || null, true);\n    }\n\n    /**\n     *  Iterate over all events, calling %%callback%%, sorted by their name.\n     */\n    forEachEvent(callback: (func: EventFragment, index: number) => void): void {\n        const names = Array.from(this.#events.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback(<EventFragment>this.#events.get(name), i);\n        }\n    }\n\n    /**\n     *  Get the [[ErrorFragment]] for %%key%%, which may be an error\n     *  selector, error name or error signature that belongs to the ABI.\n     *\n     *  If %%values%% is provided, it will use the Typed API to handle\n     *  ambiguous cases where multiple errors match by name.\n     *\n     *  If the %%key%% and %%values%% do not refine to a single error in\n     *  the ABI, this will throw.\n     */\n    getError(key: string, values?: Array<any | Typed>): null | ErrorFragment {\n        if (isHexString(key)) {\n            const selector = key.toLowerCase();\n\n            if (BuiltinErrors[selector]) {\n                return ErrorFragment.from(BuiltinErrors[selector].signature);\n            }\n\n            for (const fragment of this.#errors.values()) {\n                if (selector === fragment.selector) {\n                    return fragment;\n                }\n            }\n\n            return null;\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf('(') === -1) {\n            const matching: ErrorFragment[] = [];\n            for (const [name, fragment] of this.#errors) {\n                if (name.split('(' /* fix:) */)[0] === key) {\n                    matching.push(fragment);\n                }\n            }\n\n            if (matching.length === 0) {\n                if (key === 'Error') {\n                    return ErrorFragment.from('error Error(string)');\n                }\n                if (key === 'Panic') {\n                    return ErrorFragment.from('error Panic(uint256)');\n                }\n                return null;\n            } else if (matching.length > 1) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(', ');\n                assertArgument(false, `ambiguous error description (i.e. ${matchStr})`, 'name', key);\n            }\n\n            return matching[0];\n        }\n\n        // Normalize the signature and lookup the function\n        key = ErrorFragment.from(key).format();\n        if (key === 'Error(string)') {\n            return ErrorFragment.from('error Error(string)');\n        }\n        if (key === 'Panic(uint256)') {\n            return ErrorFragment.from('error Panic(uint256)');\n        }\n\n        const result = this.#errors.get(key);\n        if (result) {\n            return result;\n        }\n\n        return null;\n    }\n\n    /**\n     *  Iterate over all errors, calling %%callback%%, sorted by their name.\n     */\n    forEachError(callback: (func: ErrorFragment, index: number) => void): void {\n        const names = Array.from(this.#errors.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback(<ErrorFragment>this.#errors.get(name), i);\n        }\n    }\n\n    // Get the 4-byte selector used by Solidity to identify a function\n    /*\n    getSelector(fragment: ErrorFragment | FunctionFragment): string {\n        if (typeof(fragment) === \"string\") {\n            const matches: Array<Fragment> = [ ];\n\n            try { matches.push(this.getFunction(fragment)); } catch (error) { }\n            try { matches.push(this.getError(<string>fragment)); } catch (_) { }\n\n            if (matches.length === 0) {\n                logger.throwArgumentError(\"unknown fragment\", \"key\", fragment);\n            } else if (matches.length > 1) {\n                logger.throwArgumentError(\"ambiguous fragment matches function and error\", \"key\", fragment);\n            }\n\n            fragment = matches[0];\n        }\n\n        return dataSlice(id(fragment.format()), 0, 4);\n    }\n        */\n\n    // Get the 32-byte topic hash used by Solidity to identify an event\n    /*\n    getEventTopic(fragment: EventFragment): string {\n        //if (typeof(fragment) === \"string\") { fragment = this.getEvent(eventFragment); }\n        return id(fragment.format());\n    }\n    */\n\n    _decodeParams(params: ReadonlyArray<ParamType | string>, data: BytesLike): Result {\n        return this.#abiCoder.decode(params as any, data);\n    }\n\n    _encodeParams(params: ReadonlyArray<ParamType>, values: ReadonlyArray<any>): string {\n        return this.#abiCoder.encode(params as any, values);\n    }\n\n    /**\n     *  Encodes a ``tx.data`` object for deploying the Contract with\n     *  the %%values%% as the constructor arguments.\n     */\n    encodeDeploy(values?: ReadonlyArray<any>): string {\n        return this._encodeParams(this.deploy.inputs, values || []);\n    }\n\n    /**\n     *  Decodes the result %%data%% (e.g. from an ``eth_call``) for the\n     *  specified error (see [[getError]] for valid values for\n     *  %%key%%).\n     *\n     *  Most developers should prefer the [[parseCallResult]] method instead,\n     *  which will automatically detect a ``CALL_EXCEPTION`` and throw the\n     *  corresponding error.\n     */\n    decodeErrorResult(fragment: ErrorFragment | string, data: BytesLike): Result {\n        if (typeof fragment === 'string') {\n            const f = this.getError(fragment);\n            assertArgument(f, 'unknown error', 'fragment', fragment);\n            fragment = f;\n        }\n\n        assertArgument(\n            dataSlice(data, 0, 4) === fragment.selector,\n            `data signature does not match error ${fragment.name}.`,\n            'data',\n            data\n        );\n\n        return this._decodeParams(fragment.inputs, dataSlice(data, 4));\n    }\n\n    /**\n     *  Encodes the transaction revert data for a call result that\n     *  reverted from the the Contract with the sepcified %%error%%\n     *  (see [[getError]] for valid values for %%fragment%%) with the %%values%%.\n     *\n     *  This is generally not used by most developers, unless trying to mock\n     *  a result from a Contract.\n     */\n    encodeErrorResult(fragment: ErrorFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof fragment === 'string') {\n            const f = this.getError(fragment);\n            assertArgument(f, 'unknown error', 'fragment', fragment);\n            fragment = f;\n        }\n\n        return concat([fragment.selector, this._encodeParams(fragment.inputs, values || [])]);\n    }\n\n    /**\n     *  Decodes the %%data%% from a transaction ``tx.data`` for\n     *  the function specified (see [[getFunction]] for valid values\n     *  for %%fragment%%).\n     *\n     *  Most developers should prefer the [[parseTransaction]] method\n     *  instead, which will automatically detect the fragment.\n     */\n    decodeFunctionData(fragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof fragment === 'string') {\n            const f = this.getFunction(fragment);\n            assertArgument(f, 'unknown function', 'fragment', fragment);\n            fragment = f;\n        }\n\n        assertArgument(\n            dataSlice(data, 0, 4) === fragment.selector,\n            `data signature does not match function ${fragment.name}.`,\n            'data',\n            data\n        );\n\n        return this._decodeParams(fragment.inputs, dataSlice(data, 4));\n    }\n\n    /**\n     *  Encodes the ``tx.data`` for a transaction that calls the function\n     *  specified (see [[getFunction]] for valid values for %%fragment%%) with\n     *  the %%values%%.\n     */\n    encodeFunctionData(fragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof fragment === 'string') {\n            const f = this.getFunction(fragment);\n            assertArgument(f, 'unknown function', 'fragment', fragment);\n            fragment = f;\n        }\n\n        return concat([fragment.selector, this._encodeParams(fragment.inputs, values || [])]);\n    }\n\n    /**\n     *  Decodes the result %%data%% (e.g. from an ``eth_call``) for the\n     *  specified function (see [[getFunction]] for valid values for\n     *  %%key%%).\n     *\n     *  Most developers should prefer the [[parseCallResult]] method instead,\n     *  which will automatically detect a ``CALL_EXCEPTION`` and throw the\n     *  corresponding error.\n     */\n    decodeFunctionResult(fragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof fragment === 'string') {\n            const f = this.getFunction(fragment);\n            assertArgument(f, 'unknown function', 'fragment', fragment);\n            fragment = f;\n        }\n\n        let message = 'invalid length for result data';\n\n        const bytes = getBytesCopy(data);\n        if (bytes.length % 32 === 0) {\n            try {\n                return this.#abiCoder.decode(fragment.outputs as any, bytes);\n            } catch (error) {\n                message = 'could not decode result data';\n            }\n        }\n\n        // Call returned data with no error, but the data is junk\n        assert(false, message, 'BAD_DATA', {\n            value: hexlify(bytes),\n            info: { method: fragment.name, signature: fragment.format() },\n        });\n    }\n\n    makeError(_data: BytesLike, tx: CallExceptionTransaction): CallExceptionError {\n        const data = getBytes(_data, 'data');\n\n        const error = AbiCoder.getBuiltinCallException('call', tx, data);\n\n        // Not a built-in error; try finding a custom error\n        const customPrefix = 'execution reverted (unknown custom error)';\n        if (error.message.startsWith(customPrefix)) {\n            const selector = hexlify(data.slice(0, 4));\n\n            const ef = this.getError(selector);\n            if (ef) {\n                try {\n                    const args = this.#abiCoder.decode(ef.inputs as any, data.slice(4));\n                    error.revert = {\n                        name: ef.name,\n                        signature: ef.format(),\n                        args,\n                    };\n                    error.reason = error.revert.signature;\n                    error.message = `execution reverted: ${error.reason}`;\n                } catch (e) {\n                    error.message = `execution reverted (coult not decode custom error)`;\n                }\n            }\n        }\n\n        // Add the invocation, if available\n        const parsed = this.parseTransaction(tx);\n        if (parsed) {\n            error.invocation = {\n                method: parsed.name,\n                signature: parsed.signature,\n                args: parsed.args,\n            };\n        }\n\n        return error;\n    }\n\n    /**\n     *  Encodes the result data (e.g. from an ``eth_call``) for the\n     *  specified function (see [[getFunction]] for valid values\n     *  for %%fragment%%) with %%values%%.\n     *\n     *  This is generally not used by most developers, unless trying to mock\n     *  a result from a Contract.\n     */\n    encodeFunctionResult(fragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof fragment === 'string') {\n            const f = this.getFunction(fragment);\n            assertArgument(f, 'unknown function', 'fragment', fragment);\n            fragment = f;\n        }\n        return hexlify(this.#abiCoder.encode(fragment.outputs as any, values || []));\n    }\n    /*\n    spelunk(inputs: Array<ParamType>, values: ReadonlyArray<any>, processfunc: (type: string, value: any) => Promise<any>): Promise<Array<any>> {\n        const promises: Array<Promise<>> = [ ];\n        const process = function(type: ParamType, value: any): any {\n            if (type.baseType === \"array\") {\n                return descend(type.child\n            }\n            if (type. === \"address\") {\n            }\n        };\n\n        const descend = function (inputs: Array<ParamType>, values: ReadonlyArray<any>) {\n            if (inputs.length !== values.length) { throw new Error(\"length mismatch\"); }\n            \n        };\n\n        const result: Array<any> = [ ];\n        values.forEach((value, index) => {\n            if (value == null) {\n                topics.push(null);\n            } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            } else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            } else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n    }\n*/\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(fragment: EventFragment | string, values: ReadonlyArray<any>): Array<null | string | Array<string>> {\n        if (typeof fragment === 'string') {\n            const f = this.getEvent(fragment);\n            assertArgument(f, 'unknown event', 'eventFragment', fragment);\n            fragment = f;\n        }\n\n        assert(values.length <= fragment.inputs.length, `too many arguments for ${fragment.format()}`, 'UNEXPECTED_ARGUMENT', {\n            count: values.length,\n            expectedCount: fragment.inputs.length,\n        });\n\n        const topics: Array<null | string | Array<string>> = [];\n        if (!fragment.anonymous) {\n            topics.push(fragment.topicHash);\n        }\n\n        // @TODO: Use the coders for this; to properly support tuples, etc.\n        const encodeTopic = (param: ParamType, value: any): string => {\n            if (param.type === 'string') {\n                return id(value);\n            } else if (param.type === 'bytes') {\n                return keccak256(hexlify(value));\n            }\n\n            if (param.type === 'bool' && typeof value === 'boolean') {\n                value = value ? '0x01' : '0x00';\n            }\n\n            if (param.type.match(/^u?int/)) {\n                value = toBeHex(value);\n            }\n\n            // Check addresses are valid\n            if (param.type === 'address') {\n                this.#abiCoder.encode(['address'], [value]);\n            }\n            return zeroPadValue(hexlify(value), 32);\n            //@TOOD should probably be return toHex(value, 32)\n        };\n\n        values.forEach((value, index) => {\n            const param = (<EventFragment>fragment).inputs[index];\n\n            if (!param.indexed) {\n                assertArgument(\n                    value == null,\n                    'cannot filter non-indexed parameters; must be null',\n                    'contract.' + param.name,\n                    value\n                );\n                return;\n            }\n\n            if (value == null) {\n                topics.push(null);\n            } else if (param.baseType === 'array' || param.baseType === 'tuple') {\n                assertArgument(false, 'filtering with tuples or arrays not supported', 'contract.' + param.name, value);\n            } else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            } else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n\n        return topics;\n    }\n\n    encodeEventLog(fragment: EventFragment | string, values: ReadonlyArray<any>): { data: string; topics: Array<string> } {\n        if (typeof fragment === 'string') {\n            const f = this.getEvent(fragment);\n            assertArgument(f, 'unknown event', 'eventFragment', fragment);\n            fragment = f;\n        }\n\n        const topics: Array<string> = [];\n\n        const dataTypes: Array<ParamType> = [];\n        const dataValues: Array<string> = [];\n\n        if (!fragment.anonymous) {\n            topics.push(fragment.topicHash);\n        }\n\n        assertArgument(values.length === fragment.inputs.length, 'event arguments/values mismatch', 'values', values);\n\n        fragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === 'string') {\n                    topics.push(id(value));\n                } else if (param.type === 'bytes') {\n                    topics.push(keccak256(value));\n                } else if (param.baseType === 'tuple' || param.baseType === 'array') {\n                    // @TODO\n                    throw new Error('not implemented');\n                } else {\n                    topics.push(this.#abiCoder.encode([param.type], [value]));\n                }\n            } else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n\n        return {\n            data: this.#abiCoder.encode(dataTypes as any, dataValues),\n            topics: topics,\n        };\n    }\n\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(fragment: EventFragment | string, data: BytesLike, topics?: ReadonlyArray<string>): Result {\n        if (typeof fragment === 'string') {\n            const f = this.getEvent(fragment);\n            assertArgument(f, 'unknown event', 'eventFragment', fragment);\n            fragment = f;\n        }\n\n        if (topics != null && !fragment.anonymous) {\n            const eventTopic = fragment.topicHash;\n            assertArgument(\n                isHexString(topics[0], 32) && topics[0].toLowerCase() === eventTopic,\n                'fragment/topic mismatch',\n                'topics[0]',\n                topics[0]\n            );\n            topics = topics.slice(1);\n        }\n\n        const indexed: Array<ParamType> = [];\n        const nonIndexed: Array<ParamType> = [];\n        const dynamic: Array<boolean> = [];\n\n        fragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (\n                    param.type === 'string' ||\n                    param.type === 'bytes' ||\n                    param.baseType === 'tuple' ||\n                    param.baseType === 'array'\n                ) {\n                    indexed.push(ParamType.from({ type: 'bytes32', name: param.name }));\n                    dynamic.push(true);\n                } else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            } else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n\n        const resultIndexed = topics != null ? this.#abiCoder.decode(indexed as any, concat(topics)) : null;\n        const resultNonIndexed = this.#abiCoder.decode(nonIndexed as any, data, true);\n\n        //const result: (Array<any> & { [ key: string ]: any }) = [ ];\n        const values: Array<any> = [];\n        const keys: Array<null | string> = [];\n        let nonIndexedIndex = 0,\n            indexedIndex = 0;\n        fragment.inputs.forEach((param, index) => {\n            let value: Indexed | null | unknown = null;\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    value = new Indexed(null);\n                } else if (dynamic[index]) {\n                    value = new Indexed(resultIndexed[indexedIndex++]);\n                } else {\n                    try {\n                        value = resultIndexed[indexedIndex++];\n                    } catch (error) {\n                        value = error;\n                    }\n                }\n            } else {\n                try {\n                    value = resultNonIndexed[nonIndexedIndex++];\n                } catch (error) {\n                    value = error;\n                }\n            }\n\n            values.push(value);\n            keys.push(param.name || null);\n        });\n\n        return Result.fromItems(values, keys);\n    }\n\n    /**\n     *  Parses a transaction, finding the matching function and extracts\n     *  the parameter values along with other useful function details.\n     *\n     *  If the matching function cannot be found, return null.\n     */\n    parseTransaction(tx: { data: string; value?: BigNumberish }): null | TransactionDescription {\n        const data = getBytes(tx.data, 'tx.data');\n        const value = getBigInt(tx.value != null ? tx.value : 0, 'tx.value');\n\n        const fragment = this.getFunction(hexlify(data.slice(0, 4)));\n\n        if (!fragment) {\n            return null;\n        }\n\n        const args = this.#abiCoder.decode(fragment.inputs as any, data.slice(4));\n        return new TransactionDescription(fragment, fragment.selector, args, value);\n    }\n\n    parseCallResult(data: BytesLike): Result {\n        throw new Error('@TODO');\n    }\n\n    /**\n     *  Parses a receipt log, finding the matching event and extracts\n     *  the parameter values along with other useful event details.\n     *\n     *  If the matching event cannot be found, returns null.\n     */\n    parseLog(log: { topics: Array<string>; data: string }): null | LogDescription {\n        const fragment = this.getEvent(log.topics[0]);\n\n        if (!fragment || fragment.anonymous) {\n            return null;\n        }\n\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n\n        return new LogDescription(fragment, fragment.topicHash, this.decodeEventLog(fragment, log.data, log.topics));\n    }\n\n    /**\n     *  Parses a revert data, finding the matching error and extracts\n     *  the parameter values along with other useful error details.\n     *\n     *  If the matching event cannot be found, returns null.\n     */\n    parseError(data: BytesLike): null | ErrorDescription {\n        const hexData = hexlify(data);\n\n        const fragment = this.getError(dataSlice(hexData, 0, 4));\n\n        if (!fragment) {\n            return null;\n        }\n\n        const args = this.#abiCoder.decode(fragment.inputs as any, dataSlice(hexData, 4));\n        return new ErrorDescription(fragment, fragment.selector, args);\n    }\n\n    /**\n     *  Creates a new [[Interface]] from the ABI %%value%%.\n     *\n     *  The %%value%% may be provided as an existing [[Interface]] object,\n     *  a JSON-encoded ABI or any Human-Readable ABI format.\n     */\n    static from(value: InterfaceAbi | Interface): Interface {\n        // Already an Interface, which is immutable\n        if (value instanceof Interface) {\n            return value;\n        }\n\n        // JSON\n        if (typeof value === 'string') {\n            return new Interface(JSON.parse(value));\n        }\n\n        // Maybe an interface from an older version, or from a symlinked copy\n        if (typeof (<any>value).format === 'function') {\n            return new Interface((<any>value).format('json'));\n        }\n\n        // Array of fragments\n        return new Interface(value);\n    }\n}\n", "import type { BytesLike } from '../types/UtilsTypes.js';\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nconst ALPHABET_MAP = {} as Record<string, number>;\n\nfor (let i = 0; i < ALPHABET.length; i++) ALPHABET_MAP[ALPHABET.charAt(i)] = i;\n\nconst BASE = 58;\n\nexport function encode58(buffer: BytesLike | string) {\n    if (buffer.length === 0) return '';\n\n    let i: number;\n    let j: number;\n\n    const digits = [0];\n\n    for (i = 0; i < buffer.length; i++) {\n        for (j = 0; j < digits.length; j++) digits[j] <<= 8;\n\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        digits[0] += buffer[i];\n        let carry = 0;\n\n        for (j = 0; j < digits.length; ++j) {\n            digits[j] += carry;\n            carry = (digits[j] / BASE) | 0;\n            digits[j] %= BASE;\n        }\n\n        while (carry) {\n            digits.push(carry % BASE);\n            carry = (carry / BASE) | 0;\n        }\n    }\n\n    for (i = 0; buffer[i] === 0 && i < buffer.length - 1; i++) digits.push(0);\n\n    return digits\n        .reverse()\n        .map((digit) => ALPHABET[digit])\n        .join('');\n}\n\nexport function decode58(string: string) {\n    if (string.length === 0) return [];\n\n    let i;\n    let j;\n\n    const bytes = [0];\n\n    for (i = 0; i < string.length; i++) {\n        const c: string = string[i];\n\n        if (!(c in ALPHABET_MAP)) throw new Error('Non-base58 character');\n\n        for (j = 0; j < bytes.length; j++) bytes[j] *= BASE;\n\n        bytes[0] += ALPHABET_MAP[c];\n        let carry = 0;\n\n        for (j = 0; j < bytes.length; ++j) {\n            bytes[j] += carry;\n            carry = bytes[j] >> 8;\n            bytes[j] &= 0xff;\n        }\n\n        while (carry) {\n            bytes.push(carry & 0xff);\n            carry >>= 8;\n        }\n    }\n\n    for (i = 0; string[i] === '1' && i < string.length - 1; i++) bytes.push(0);\n\n    return bytes.reverse();\n}\n", "'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n", "'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap\n};\n", "'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n", "// eslint-disable-next-line strict\nexport default null;\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n", "'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?(object|Function)} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  if (utils.isFunction(options)) {\n    options = {\n      serialize: options\n    };\n  } \n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n", "'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n", "'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n", "'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n", "'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n", "'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n", "import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n", "const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv,\n  _navigator as navigator,\n  origin\n}\n", "import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n", "'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n", "'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data) ||\n      utils.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n", "'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n", "'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isHeaders(header)) {\n      for (const [key, value] of header.entries()) {\n        setHeader(value, key, rewrite);\n      }\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n", "'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n", "'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n", "'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n", "'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n", "'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n", "'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n", "/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nexport default throttle;\n", "import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\n\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nexport const asyncDecorator = (fn) => (...args) => utils.asap(() => fn(...args));\n", "import platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ? ((origin, isMSIE) => (url) => {\n  url = new URL(url, platform.origin);\n\n  return (\n    origin.protocol === url.protocol &&\n    origin.host === url.host &&\n    (isMSIE || origin.port === url.port)\n  );\n})(\n  new URL(platform.origin),\n  platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)\n) : () => true;\n", "import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n", "'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n", "'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n", "'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL, allowAbsoluteUrls) {\n  let isRelativeUrl = !isAbsoluteURL(requestedURL);\n  if (baseURL && isRelativeUrl || allowAbsoluteUrls == false) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, prop, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, prop , caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, prop , caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, prop , caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b , prop) => mergeDeepProperties(headersToObject(a), headersToObject(b),prop, true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n", "import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url, newConfig.allowAbsoluteUrls), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n", "import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport {progressEventReducer} from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n", "import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport utils from '../utils.js';\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    }\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\n    }, timeout)\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    }\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils.asap(unsubscribe);\n\n    return signal;\n  }\n}\n\nexport default composeSignals;\n", "\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n", "import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n", "import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n", "'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n", "export const VERSION = \"1.8.3\";", "'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\nvalidators.spelling = function spelling(correctSpelling) {\n  return (value, opt) => {\n    // eslint-disable-next-line no-console\n    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\n    return true;\n  }\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n", "'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy = {};\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.allowAbsoluteUrls\n    if (config.allowAbsoluteUrls !== undefined) {\n      // do nothing\n    } else if (this.defaults.allowAbsoluteUrls !== undefined) {\n      config.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls;\n    } else {\n      config.allowAbsoluteUrls = true;\n    }\n\n    validator.assertOptions(config, {\n      baseUrl: validators.spelling('baseURL'),\n      withXsrfToken: validators.spelling('withXSRFToken')\n    }, true);\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url, config.allowAbsoluteUrls);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n", "'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n", "'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n", "'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n", "const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n", "'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n", "import axios from './lib/axios.js';\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n} = axios;\n\nexport {\n  axios as default,\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n}\n", "import axios, { Method } from 'axios';\nimport { hasProperties, isObject, isValidURL } from '../../utils/validations.js';\nimport { HeadersType, HttpProviderInstance } from '../../types/Providers.js';\n\nexport default class HttpProvider {\n    host: string;\n    timeout: number;\n    user: string;\n    password: string;\n    headers: HeadersType;\n    statusPage: string;\n    instance: HttpProviderInstance;\n    constructor(host: string, timeout = 30000, user = '', password = '', headers: HeadersType = {}, statusPage = '/') {\n        if (!isValidURL(host)) throw new Error('Invalid URL provided to HttpProvider');\n\n        if (isNaN(timeout) || timeout < 0) throw new Error('Invalid timeout duration provided');\n\n        if (!isObject(headers)) throw new Error('Invalid headers object provided');\n\n        host = host.replace(/\\/+$/, '');\n\n        this.host = host;\n        this.timeout = timeout;\n        this.user = user;\n        this.password = password;\n        this.headers = headers;\n        this.statusPage = statusPage;\n\n        this.instance = axios.create({\n            baseURL: host,\n            timeout: timeout,\n            headers: headers,\n            auth: user\n                ? {\n                      username: user,\n                      password,\n                  }\n                : undefined,\n        });\n    }\n\n    setStatusPage(statusPage = '/') {\n        this.statusPage = statusPage;\n    }\n\n    async isConnected(statusPage = this.statusPage) {\n        return this.request(statusPage)\n            .then((data) => {\n                return hasProperties(data as Record<string, string>, 'blockID', 'block_header');\n            })\n            .catch(() => false);\n    }\n\n    request<T = unknown>(url: string, payload = {}, method: Method = 'get'): Promise<T> {\n        method = method.toLowerCase() as Method;\n\n        return this.instance\n            .request<T>({\n                data: method == 'post' && Object.keys(payload).length ? payload : null,\n                params: method == 'get' && payload,\n                url,\n                method,\n            })\n            .then(({ data }) => data);\n    }\n}\n", "import HttpProvider from './HttpProvider.js';\nexport interface Providers {\n    HttpProvider: typeof HttpProvider;\n}\nexport const providers: Providers = { HttpProvider };\nexport { HttpProvider };\n", "import EventEmitter from './index.js'\n\nexport { EventEmitter }\nexport default EventEmitter\n", "import { HttpProvider, providers } from './lib/providers/index.js';\nimport type { Providers } from './lib/providers/index.js';\nimport utils from './utils/index.js';\nimport { BigNumber } from 'bignumber.js';\nimport EventEmitter from 'eventemitter3';\nimport semver from 'semver';\n\nimport { TransactionBuilder } from './lib/TransactionBuilder/TransactionBuilder.js';\nimport { Trx } from './lib/trx.js';\nimport { Contract } from './lib/contract/index.js';\nimport { Plugin } from './lib/plugin.js';\nimport { Event } from './lib/event.js';\nimport { keccak256 } from './utils/ethersUtils.js';\nimport { fromHex, fromPrivateKey, isAddress, toHex, toChecksumAddress, isChecksumAddress } from './utils/address.js';\nimport { HeadersType } from './types/Providers.js';\nimport { isString } from './utils/validations.js';\nimport { DefaultAddress, NodeProvider, TronWebOptions, IBigNumber } from './types/TronWeb.js';\nimport { ContractAbiInterface } from './types/ABI.js';\nimport { Address } from './types/Trx.js';\n\nconst DEFAULT_VERSION = '4.7.1';\n\nconst FEE_LIMIT = 150000000;\n\nconst version = '6.0.3';\n\nfunction isValidOptions(options: unknown): options is TronWebOptions {\n    return (\n        !!options &&\n        typeof options === 'object' &&\n        (!!(options as TronWebOptions).fullNode || !!(options as TronWebOptions).fullHost)\n    );\n}\n\nexport class TronWeb extends EventEmitter {\n    providers: Providers;\n    BigNumber: typeof BigNumber;\n    transactionBuilder: TransactionBuilder;\n    trx: Trx;\n    plugin: Plugin;\n    event: Event;\n    version: typeof TronWeb.version;\n    static version = version;\n    utils: typeof utils;\n\n    defaultBlock: number | false | 'earliest' | 'latest';\n    defaultPrivateKey: string | false;\n    defaultAddress: DefaultAddress;\n    fullnodeVersion: string;\n    feeLimit: number;\n\n    fullNode!: HttpProvider;\n    solidityNode!: HttpProvider;\n    eventServer?: HttpProvider;\n\n    constructor(options: TronWebOptions);\n    constructor(fullNode: NodeProvider, solidityNode: NodeProvider, eventServer?: NodeProvider, privateKey?: string);\n    /* prettier-ignore */\n    constructor(fullNode: NodeProvider, solidityNode: NodeProvider, eventServer: NodeProvider, privateKey?: string);\n    constructor(\n        options: TronWebOptions | NodeProvider,\n        solidityNode: NodeProvider = '',\n        eventServer?: NodeProvider,\n        privateKey = ''\n    ) {\n        super();\n\n        let fullNode;\n        let headers: HeadersType | false = false;\n        let eventHeaders: HeadersType | false = false;\n\n        if (isValidOptions(options)) {\n            fullNode = options.fullNode || options.fullHost;\n            solidityNode = (options.solidityNode || options.fullHost)!;\n            eventServer = (options.eventServer || options.fullHost)!;\n            headers = options.headers || false;\n            eventHeaders = options.eventHeaders || headers;\n            privateKey = options.privateKey!;\n        } else {\n            fullNode = options;\n        }\n        if (utils.isString(fullNode)) fullNode = new providers.HttpProvider(fullNode);\n\n        if (utils.isString(solidityNode)) solidityNode = new providers.HttpProvider(solidityNode);\n\n        if (utils.isString(eventServer)) eventServer = new providers.HttpProvider(eventServer);\n\n        this.event = new Event(this);\n        this.transactionBuilder = new TransactionBuilder(this);\n        this.trx = new Trx(this);\n        this.plugin = new Plugin(this, {\n            disablePlugins: isValidOptions(options) ? options.disablePlugins : false,\n        });\n        this.utils = utils;\n\n        this.setFullNode(fullNode as HttpProvider);\n        this.setSolidityNode(solidityNode as HttpProvider);\n        this.setEventServer(eventServer!);\n\n        this.providers = providers;\n        this.BigNumber = BigNumber;\n\n        this.defaultBlock = false;\n        this.defaultPrivateKey = false;\n        this.defaultAddress = {\n            hex: false,\n            base58: false,\n        };\n\n        this.version = TronWeb.version;\n        this.sha3 = TronWeb.sha3;\n        this.fromUtf8 = TronWeb.fromUtf8;\n        this.address = TronWeb.address;\n        this.toAscii = TronWeb.toAscii;\n        this.toUtf8 = TronWeb.toUtf8;\n        this.isAddress = TronWeb.isAddress;\n        this.fromAscii = TronWeb.fromAscii;\n        this.toHex = TronWeb.toHex;\n        this.toBigNumber = TronWeb.toBigNumber;\n        this.toDecimal = TronWeb.toDecimal;\n        this.fromDecimal = TronWeb.fromDecimal;\n        this.toSun = TronWeb.toSun;\n        this.fromSun = TronWeb.fromSun;\n        this.createAccount = TronWeb.createAccount;\n        this.createRandom = TronWeb.createRandom;\n        this.fromMnemonic = TronWeb.fromMnemonic;\n\n        if (privateKey) this.setPrivateKey(privateKey);\n        this.fullnodeVersion = DEFAULT_VERSION;\n        this.feeLimit = FEE_LIMIT;\n\n        if (headers) {\n            this.setFullNodeHeader(headers);\n        }\n\n        if (eventHeaders) {\n            this.setEventHeader(eventHeaders);\n        }\n    }\n\n    async getFullnodeVersion() {\n        try {\n            const nodeInfo = await this.trx.getNodeInfo();\n            this.fullnodeVersion = nodeInfo.configNodeInfo.codeVersion;\n            if (this.fullnodeVersion.split('.').length === 2) {\n                this.fullnodeVersion += '.0';\n            }\n        } catch (err) {\n            this.fullnodeVersion = DEFAULT_VERSION;\n        }\n    }\n\n    setDefaultBlock(blockID: false | 'latest' | 'earliest' | number = false) {\n        if ([false, 'latest', 'earliest', 0].includes(blockID)) {\n            return (this.defaultBlock = blockID);\n        }\n\n        if (!utils.isInteger(blockID) || !blockID) throw new Error('Invalid block ID provided');\n\n        return (this.defaultBlock = Math.abs(blockID));\n    }\n\n    setPrivateKey(privateKey: string) {\n        try {\n            this.setAddress(TronWeb.address.fromPrivateKey(privateKey) as string);\n        } catch {\n            throw new Error('Invalid private key provided');\n        }\n\n        this.defaultPrivateKey = privateKey;\n        this.emit('privateKeyChanged', privateKey);\n    }\n\n    setAddress(address: string) {\n        if (!TronWeb.isAddress(address)) throw new Error('Invalid address provided');\n\n        const hex = TronWeb.address.toHex(address);\n        const base58 = TronWeb.address.fromHex(address);\n\n        if (this.defaultPrivateKey && TronWeb.address.fromPrivateKey(this.defaultPrivateKey) !== base58)\n            this.defaultPrivateKey = false;\n\n        this.defaultAddress = {\n            hex,\n            base58,\n        };\n\n        this.emit('addressChanged', { hex, base58 });\n    }\n\n    fullnodeSatisfies(version: string) {\n        return semver.satisfies(this.fullnodeVersion, version);\n    }\n\n    isValidProvider(provider: unknown) {\n        return Object.values(providers).some((knownProvider) => provider instanceof knownProvider);\n    }\n\n    setFullNode(fullNode: HttpProvider | string) {\n        if (isString(fullNode)) fullNode = new providers.HttpProvider(fullNode);\n\n        if (!this.isValidProvider(fullNode)) throw new Error('Invalid full node provided');\n\n        this.fullNode = fullNode;\n        this.fullNode.setStatusPage('wallet/getnowblock');\n    }\n\n    setSolidityNode(solidityNode: HttpProvider | string) {\n        if (utils.isString(solidityNode)) solidityNode = new providers.HttpProvider(solidityNode);\n\n        if (!this.isValidProvider(solidityNode)) throw new Error('Invalid solidity node provided');\n\n        this.solidityNode = solidityNode;\n        this.solidityNode.setStatusPage('walletsolidity/getnowblock');\n    }\n\n    setEventServer(eventServer: NodeProvider, healthcheck?: string) {\n        this.event.setServer(eventServer, healthcheck);\n    }\n\n    setHeader(headers = {}) {\n        const fullNode = new providers.HttpProvider(this.fullNode.host, 30000, '', '', headers);\n        const solidityNode = new providers.HttpProvider(this.solidityNode.host, 30000, '', '', headers);\n        const eventServer = new providers.HttpProvider(this.eventServer!.host, 30000, '', '', headers);\n\n        this.setFullNode(fullNode);\n        this.setSolidityNode(solidityNode);\n        this.setEventServer(eventServer);\n    }\n\n    setFullNodeHeader(headers = {}) {\n        const fullNode = new providers.HttpProvider(this.fullNode.host, 30000, '', '', headers);\n        const solidityNode = new providers.HttpProvider(this.solidityNode.host, 30000, '', '', headers);\n\n        this.setFullNode(fullNode);\n        this.setSolidityNode(solidityNode);\n    }\n\n    setEventHeader(headers = {}) {\n        const eventServer = new providers.HttpProvider(this.eventServer!.host, 30000, '', '', headers);\n        this.setEventServer(eventServer);\n    }\n\n    currentProviders() {\n        return {\n            fullNode: this.fullNode,\n            solidityNode: this.solidityNode,\n            eventServer: this.eventServer,\n        };\n    }\n\n    currentProvider() {\n        return this.currentProviders();\n    }\n\n    getEventResult(...params: Parameters<Event['getEventsByContractAddress']>): ReturnType<Event['getEventsByContractAddress']> {\n        return this.event.getEventsByContractAddress(...params);\n    }\n\n    getEventByTransactionID(\n        ...params: Parameters<Event['getEventsByTransactionID']>\n    ): ReturnType<Event['getEventsByTransactionID']> {\n        return this.event.getEventsByTransactionID(...params);\n    }\n\n    contract(abi: ContractAbiInterface = [], address?: Address) {\n        return new Contract(this, abi, address!);\n    }\n\n    address: typeof TronWeb.address;\n    static get address() {\n        return {\n            fromHex(address: string) {\n                return fromHex(address);\n            },\n            toHex(address: string) {\n                return toHex(address);\n            },\n            toChecksumAddress(address: string) {\n                return toChecksumAddress(address);\n            },\n            isChecksumAddress(address: string) {\n                return isChecksumAddress(address);\n            },\n            fromPrivateKey(privateKey: string, strict = false) {\n                return fromPrivateKey(privateKey, strict);\n            },\n        };\n    }\n\n    sha3: typeof TronWeb.sha3;\n    static sha3(string: string, prefix = true) {\n        return (prefix ? '0x' : '') + keccak256(Buffer.from(string, 'utf-8')).toString().substring(2);\n    }\n\n    toHex: typeof TronWeb.toHex;\n    static toHex(val: string | number | boolean | Record<string | number | symbol, unknown> | unknown[] | IBigNumber) {\n        if (utils.isBoolean(val)) return TronWeb.fromDecimal(+val);\n\n        if (utils.isBigNumber(val)) return TronWeb.fromDecimal(val);\n\n        if (typeof val === 'object') return TronWeb.fromUtf8(JSON.stringify(val));\n\n        if (utils.isString(val)) {\n            if (/^(-|)0x/.test(val)) return val;\n\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            if (!isFinite(val) || /^\\s*$/.test(val)) return TronWeb.fromUtf8(val);\n        }\n\n        const result = TronWeb.fromDecimal(val as number);\n        if (result === '0xNaN') {\n            throw new Error('The passed value is not convertible to a hex string');\n        } else {\n            return result;\n        }\n    }\n\n    toUtf8: typeof TronWeb.toUtf8;\n    static toUtf8(hex: string) {\n        if (utils.isHex(hex)) {\n            hex = hex.replace(/^0x/, '');\n            return Buffer.from(hex, 'hex').toString('utf8');\n        } else {\n            throw new Error('The passed value is not a valid hex string');\n        }\n    }\n\n    fromUtf8: typeof TronWeb.fromUtf8;\n    static fromUtf8(string: string) {\n        if (!utils.isString(string)) {\n            throw new Error('The passed value is not a valid utf-8 string');\n        }\n        return '0x' + Buffer.from(string, 'utf8').toString('hex');\n    }\n\n    toAscii: typeof TronWeb.toAscii;\n    static toAscii(hex: string) {\n        if (utils.isHex(hex)) {\n            let str = '';\n            let i = 0;\n            const l = hex.length;\n            if (hex.substring(0, 2) === '0x') {\n                i = 2;\n            }\n            for (; i < l; i += 2) {\n                const code = parseInt(hex.substr(i, 2), 16);\n                str += String.fromCharCode(code);\n            }\n            return str;\n        } else {\n            throw new Error('The passed value is not a valid hex string');\n        }\n    }\n\n    fromAscii: typeof TronWeb.fromAscii;\n    static fromAscii(string: string, padding?: number) {\n        if (!utils.isString(string)) {\n            throw new Error('The passed value is not a valid utf-8 string');\n        }\n        return '0x' + Buffer.from(string, 'ascii').toString('hex').padEnd(padding!, '0');\n    }\n\n    toDecimal: typeof TronWeb.toDecimal;\n    static toDecimal(value: string | number | IBigNumber) {\n        return TronWeb.toBigNumber(value).toNumber();\n    }\n\n    fromDecimal: typeof TronWeb.fromDecimal;\n    static fromDecimal(value: number | IBigNumber) {\n        const number = TronWeb.toBigNumber(value);\n        const result = number.toString(16);\n\n        return number.isLessThan(0) ? '-0x' + result.substr(1) : '0x' + result;\n    }\n\n    fromSun: typeof TronWeb.fromSun;\n    static fromSun(sun: number): string | IBigNumber {\n        const trx = TronWeb.toBigNumber(sun).div(1_000_000);\n        return utils.isBigNumber(sun) ? trx : trx.toString(10);\n    }\n\n    toSun: typeof TronWeb.toSun;\n    static toSun(trx: number): string | IBigNumber {\n        const sun = TronWeb.toBigNumber(trx).times(1_000_000);\n        return utils.isBigNumber(trx) ? sun : sun.toString(10);\n    }\n\n    toBigNumber: typeof TronWeb.toBigNumber;\n    static toBigNumber(amount: string | number | IBigNumber = 0): IBigNumber {\n        if (utils.isBigNumber(amount)) return amount;\n\n        if (utils.isString(amount) && /^(-|)0x/.test(amount)) return new BigNumber(amount.replace('0x', ''), 16);\n\n        return new BigNumber(amount.toString(10), 10);\n    }\n\n    isAddress: typeof TronWeb.isAddress;\n    static isAddress(address: unknown = ''): boolean {\n        return isAddress(address);\n    }\n\n    createAccount: typeof TronWeb.createAccount;\n    static async createAccount() {\n        const account = utils.accounts.generateAccount();\n\n        return account;\n    }\n\n    createRandom: typeof TronWeb.createRandom;\n    static createRandom(\n        ...params: Parameters<(typeof utils)['accounts']['generateRandom']>\n    ): ReturnType<(typeof utils)['accounts']['generateRandom']> {\n        const account = utils.accounts.generateRandom(...params);\n\n        return account;\n    }\n\n    fromMnemonic: typeof TronWeb.fromMnemonic;\n    static fromMnemonic(\n        ...params: Parameters<(typeof utils)['accounts']['generateAccountWithMnemonic']>\n    ): ReturnType<(typeof utils)['accounts']['generateAccountWithMnemonic']> {\n        const account = utils.accounts.generateAccountWithMnemonic(...params);\n\n        return account;\n    }\n\n    async isConnected() {\n        return {\n            fullNode: await this.fullNode.isConnected(),\n            solidityNode: await this.solidityNode.isConnected(),\n            eventServer: this.eventServer && (await this.eventServer.isConnected()),\n        };\n    }\n}\nexport default TronWeb;\n", "import { AbiCoder } from './ethersUtils.js';\nimport { TronWeb } from '../tronweb.js';\nimport { ADDRESS_PREFIX, ADDRESS_PREFIX_REGEX } from './address.js';\nimport { FunctionFragment, AbiParamsCommon, AbiInputsType } from '../types/ABI.js';\n\nconst abiCoder = new AbiCoder();\n\nfunction _addressToHex(value: string) {\n    return TronWeb.address.toHex(value).replace(ADDRESS_PREFIX_REGEX, '0x');\n}\n\nexport function decodeParams(names: string[], types: string[], output: string, ignoreMethodHash = false) {\n    if (ignoreMethodHash && output.replace(/^0x/, '').length % 64 === 8) output = '0x' + output.replace(/^0x/, '').substring(8);\n\n    if (output.replace(/^0x/, '').length % 64) {\n        throw new Error('The encoded string is not valid. Its length must be a multiple of 64.');\n    }\n\n    // workaround for unsupported trcToken type\n    types = types.map((type) => {\n        if (/trcToken/.test(type)) {\n            type = type.replace(/trcToken/, 'uint256');\n        }\n        return type;\n    });\n\n    return abiCoder.decode(types, output).reduce(\n        (obj, arg, index) => {\n            if (types[index] == 'address') {\n                arg = ADDRESS_PREFIX + arg.substr(2).toLowerCase();\n            }\n\n            if (names.length) {\n                obj[names[index]] = arg;\n            } else {\n                obj.push(arg);\n            }\n\n            return obj;\n        },\n        names.length ? {} : []\n    );\n}\n\nexport function encodeParams(types: string[], values: any[]) {\n    for (let i = 0; i < types.length; i++) {\n        if (types[i] === 'address') {\n            values[i] = TronWeb.address.toHex(values[i]).replace(ADDRESS_PREFIX_REGEX, '0x');\n        }\n    }\n\n    return abiCoder.encode(types, values);\n}\n\nfunction extractSize(type: string) {\n    const size = type.match(/([a-zA-Z0-9])(\\[.*\\])/);\n    return size ? size[2] : '';\n}\n\nfunction extractArrayDim(type: string) {\n    const size = extractSize(type);\n    return (size.match(/\\]\\[/g) || []).length + 1;\n}\n\nexport function encodeParamsV2ByABI(funABI: FunctionFragment, args: any[]) {\n    const types: string[] = [];\n\n    const buildFullTypeDefinition = (typeDef: AbiParamsCommon): string => {\n        if (typeDef && typeDef.type.indexOf('tuple') === 0 && typeDef.components) {\n            const innerTypes = typeDef.components.map((innerType: AbiParamsCommon) => {\n                return buildFullTypeDefinition(innerType);\n            });\n            return `tuple(${innerTypes.join(',')})${extractSize(typeDef.type)}`;\n        }\n\n        if (/trcToken/.test(typeDef.type)) return typeDef.type.replace(/trcToken/, 'uint256');\n\n        return typeDef.type;\n    };\n\n    const convertTypes = (types: string[]) => {\n        for (let i = 0; i < types.length; i++) {\n            const type = types[i];\n            if (/trcToken/.test(type)) types[i] = type.replace(/trcToken/, 'uint256');\n        }\n    };\n\n    const convertAddresses = (addrArr: string | string[]) => {\n        if (Array.isArray(addrArr)) {\n            addrArr.forEach((addrs, i) => {\n                addrArr[i] = convertAddresses(addrs) as string;\n            });\n            return addrArr;\n        } else {\n            return _addressToHex(addrArr);\n        }\n    };\n\n    const mapTuple = (components: ReadonlyArray<FunctionFragment>, args: any[], dimension: number) => {\n        if (dimension > 1) {\n            if (args.length) {\n                args.forEach((arg) => {\n                    mapTuple(components, arg, dimension - 1);\n                });\n            }\n        } else {\n            if (args.length && dimension) {\n                args.forEach((arg) => {\n                    encodeArgs(components, arg);\n                });\n            }\n        }\n    };\n\n    const encodeArgs = (inputs: ReadonlyArray<AbiParamsCommon> = [], args: any[]) => {\n        if (inputs.length)\n            inputs.forEach((input: AbiParamsCommon, i: number) => {\n                const type = input.type;\n\n                if (args[i])\n                    if (type === 'address') args[i] = _addressToHex(args[i]);\n                    else if (type.match(/^([^\\x5b]*)(\\x5b|$)/)![0] === 'address[') convertAddresses(args[i]);\n                    else if (type.indexOf('tuple') === 0)\n                        if (extractSize(type)) {\n                            const dimension = extractArrayDim(type);\n                            mapTuple(input.components!, args[i], dimension);\n                        } else encodeArgs(input.components!, args[i]);\n            });\n    };\n\n    if (funABI.inputs && funABI.inputs.length) {\n        for (let i = 0; i < funABI.inputs.length; i++) {\n            const type = funABI.inputs[i].type;\n            // \"false\" will be converting to `false` and \"true\" will be working\n            // fine as abiCoder assume anything in quotes as `true`\n            if (type === 'bool' && args[i] === 'false') {\n                args[i] = false;\n            }\n            types.push(type.indexOf('tuple') === 0 ? buildFullTypeDefinition(funABI.inputs[i]) : type);\n            if (args.length < types.length) {\n                args.push('');\n            }\n        }\n    }\n\n    encodeArgs(funABI.inputs, args);\n    convertTypes(types);\n\n    return abiCoder.encode(types, args);\n}\n\nexport function decodeParamsV2ByABI(funABI: FunctionFragment | AbiInputsType, data: string | Uint8Array) {\n    const convertTypeNames = (types: string[]) => {\n        for (let i = 0; i < types.length; i++) {\n            const type = types[i];\n            if (/^trcToken/.test(type)) types[i] = type.replace(/^trcToken/, 'uint256');\n        }\n    };\n\n    const convertAddresses = (addrArr: string | string[]) => {\n        if (Array.isArray(addrArr)) {\n            addrArr.forEach((addrs, i) => {\n                addrArr[i] = convertAddresses(addrs) as string;\n            });\n            return addrArr;\n        } else {\n            return TronWeb.address.toHex(addrArr);\n        }\n    };\n\n    const mapTuple = (components: ReadonlyArray<AbiParamsCommon>, args: string[] | string[][], dimension: number) => {\n        if (dimension > 1) {\n            if (args.length) {\n                args.forEach((arg) => {\n                    mapTuple(components, arg as string[], dimension - 1);\n                });\n            }\n        } else {\n            if (args.length && dimension) {\n                args.forEach((arg) => {\n                    decodeResult(components, arg as string[]);\n                });\n            }\n        }\n    };\n\n    const buildFullTypeNameDefinition = (typeDef: AbiParamsCommon): string => {\n        const name = typeDef.name ? ` ${typeDef.name}` : '';\n        if (typeDef && typeDef.type.indexOf('tuple') === 0 && typeDef.components) {\n            const innerTypes = typeDef.components.map((innerType) => {\n                return buildFullTypeNameDefinition(innerType);\n            });\n            return `tuple(${innerTypes.join(',')})${extractSize(typeDef.type)}${name}`;\n        }\n        if (/trcToken/.test(typeDef.type)) return typeDef.type.replace(/trcToken/, 'uint256') + name;\n\n        return typeDef.type + name;\n    };\n\n    const decodeResult = (outputs: ReadonlyArray<AbiParamsCommon>, result: any[]) => {\n        if (outputs.length)\n            outputs.forEach((output, i) => {\n                const { type, name } = output;\n\n                if (result[i]) {\n                    if (type === 'address') {\n                        result[i] = TronWeb.address.toHex(result[i]);\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                        //@ts-ignore\n                        if (name) result[name] = TronWeb.address.toHex(result[i]);\n                    } else if (type.match(/^([^\\x5b]*)(\\x5b|$)/)![0] === 'address[') {\n                        convertAddresses(result[i]);\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                        //@ts-ignore\n                        if (name) result[name] = convertAddresses(result[i]);\n                    } else if (type.indexOf('tuple') === 0) {\n                        if (extractSize(type)) {\n                            const dimension = extractArrayDim(type);\n                            mapTuple(output.components!, result[i], dimension);\n                        } else decodeResult(output.components!, result[i]);\n\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                        //@ts-ignore\n                        if (name) result[name] = result[i];\n                    } else {\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                        //@ts-ignore\n                        if (name) result[name] = result[i];\n                    }\n                } else {\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    //@ts-ignore\n                    if (name) result[name] = result[i];\n                }\n            });\n    };\n\n    // Only decode if there supposed to be fields\n    if ('outputs' in funABI && funABI.outputs && funABI.outputs.length > 0) {\n        const outputTypes: any[] = [];\n        for (let i = 0; i < funABI.outputs.length; i++) {\n            const type = funABI.outputs[i].type;\n            const name = funABI.outputs[i].name ? ` ${funABI.outputs[i].name}` : '';\n            outputTypes.push(type.indexOf('tuple') === 0 ? buildFullTypeNameDefinition(funABI.outputs[i]) : type + name);\n        }\n        convertTypeNames(outputTypes);\n\n        if (!data || !data.length) data = new Uint8Array(32 * funABI.outputs.length); // ensuring the data is at least filled by 0 cause `AbiCoder` throws if there's not engouh data\n        // decode data\n        const decodeRes = abiCoder.decode(outputTypes, data);\n        const decodeResCopy = decodeRes.toArray(true);\n        decodeResult(funABI.outputs, decodeResCopy);\n\n        return decodeResCopy;\n    }\n    return [];\n}\n", "import { isAddress, toHex } from '../utils/address.js';\nimport { isNotNullOrUndefined, isInteger, isString, isObject, isValidURL, isHex, isBoolean } from '../utils/validations.js';\n\nexport type ValidatorParamType = {\n    value?: string | number | boolean | Record<string, unknown> | unknown[];\n    type: unknown;\n    name?: string;\n    msg?: string;\n    names?: string[];\n    gt?: number;\n    lt?: number;\n    gte?: number;\n    lte?: number;\n    se?: number;\n    optional?: boolean;\n};\n\nexport class Validator {\n    invalid(param: ValidatorParamType) {\n        return param.msg || `Invalid ${param.name}${param.type === 'address' ? ' address' : ''} provided`;\n    }\n\n    notPositive(param: ValidatorParamType) {\n        return `${param.name} must be a positive integer`;\n    }\n\n    notEqual(param: ValidatorParamType) {\n        return param.msg || `${param.names?.[0]} can not be equal to ${param.names?.[1]}`;\n    }\n\n    notValid(params: ValidatorParamType[]) {\n        const normalized: Record<string, unknown> = {};\n        let no = false;\n        for (const param of params) {\n            const { name, names, value, type, gt, lt, gte, lte, optional } = param;\n            if (optional && (!isNotNullOrUndefined(value) || (type !== 'boolean' && value === false))) continue;\n            normalized[name as string] = param.value;\n            switch (type) {\n                case 'address':\n                    if (!isAddress(value as string)) {\n                        no = true;\n                    } else {\n                        normalized[name as string] = toHex(value as string);\n                    }\n                    break;\n\n                case 'integer':\n                    if (\n                        !isInteger(value) ||\n                        (typeof gt === 'number' && value <= gt) ||\n                        (typeof lt === 'number' && value >= lt) ||\n                        (typeof gte === 'number' && value < gte) ||\n                        (typeof lte === 'number' && value > lte)\n                    ) {\n                        no = true;\n                    }\n                    break;\n\n                case 'positive-integer':\n                    if (!isInteger(value) || value <= 0) {\n                        throw new Error(this.notPositive(param));\n                    }\n                    break;\n\n                case 'tokenId':\n                    if (!isString(value) || !value.length) {\n                        no = true;\n                    }\n                    break;\n\n                case 'notEmptyObject':\n                    if (!isObject(value) || !Object.keys(value).length) {\n                        no = true;\n                    }\n                    break;\n\n                case 'notEqual':\n                    if (names && normalized[names[0]] === normalized[names[1]]) {\n                        throw new Error(this.notEqual(param));\n                    }\n                    break;\n\n                case 'resource':\n                    if (!['BANDWIDTH', 'ENERGY'].includes(value as string)) {\n                        no = true;\n                    }\n                    break;\n\n                case 'url':\n                    if (!isValidURL(value as string)) {\n                        no = true;\n                    }\n                    break;\n\n                case 'hex':\n                    if (!isHex(value as string)) {\n                        no = true;\n                    }\n                    break;\n\n                case 'array':\n                    if (!Array.isArray(value)) {\n                        no = true;\n                    }\n                    break;\n\n                case 'not-empty-string':\n                    if (!isString(value) || !value.length) {\n                        no = true;\n                    }\n                    break;\n\n                case 'boolean':\n                    if (!isBoolean(value)) {\n                        no = true;\n                    }\n                    break;\n                case 'string':\n                    if (\n                        !isString(value) ||\n                        (typeof gt === 'number' && value.length <= gt) ||\n                        (typeof lt === 'number' && value.length >= lt) ||\n                        (typeof gte === 'number' && value.length < gte) ||\n                        (typeof lte === 'number' && value.length > lte)\n                    ) {\n                        no = true;\n                    }\n                    break;\n            }\n            if (no) {\n                throw new Error(this.invalid(param));\n            }\n        }\n        return false;\n    }\n}\n", "import { Resource } from '../types/TransactionBuilder.js';\nimport { ContractAbiInterface } from './ABI.js';\nexport enum ContractType {\n    AccountCreateContract = 'AccountCreateContract',\n    TransferContract = 'TransferContract',\n    TransferAssetContract = 'TransferAssetContract',\n    VoteAssetContract = 'VoteAssetContract',\n    VoteWitnessContract = 'VoteWitnessContract',\n    WitnessCreateContract = 'WitnessCreateContract',\n    AssetIssueContract = 'AssetIssueContract',\n    WitnessUpdateContract = 'WitnessUpdateContract',\n    ParticipateAssetIssueContract = 'ParticipateAssetIssueContract',\n    AccountUpdateContract = 'AccountUpdateContract',\n    FreezeBalanceContract = 'FreezeBalanceContract',\n    UnfreezeBalanceContract = 'UnfreezeBalanceContract',\n    CancelAllUnfreezeV2Contract = 'CancelAllUnfreezeV2Contract',\n    WithdrawBalanceContract = 'WithdrawBalanceContract',\n    UnfreezeAssetContract = 'UnfreezeAssetContract',\n    UpdateAssetContract = 'UpdateAssetContract',\n    ProposalCreateContract = 'ProposalCreateContract',\n    ProposalApproveContract = 'ProposalApproveContract',\n    ProposalDeleteContract = 'ProposalDeleteContract',\n    SetAccountIdContract = 'SetAccountIdContract',\n    CustomContract = 'CustomContract',\n    CreateSmartContract = 'CreateSmartContract',\n    TriggerSmartContract = 'TriggerSmartContract',\n    GetContract = 'GetContract',\n    UpdateSettingContract = 'UpdateSettingContract',\n    ExchangeCreateContract = 'ExchangeCreateContract',\n    ExchangeInjectContract = 'ExchangeInjectContract',\n    ExchangeWithdrawContract = 'ExchangeWithdrawContract',\n    ExchangeTransactionContract = 'ExchangeTransactionContract',\n    UpdateEnergyLimitContract = 'UpdateEnergyLimitContract',\n    AccountPermissionUpdateContract = 'AccountPermissionUpdateContract',\n    ClearABIContract = 'ClearABIContract',\n    UpdateBrokerageContract = 'UpdateBrokerageContract',\n    ShieldedTransferContract = 'ShieldedTransferContract',\n    MarketSellAssetContract = 'MarketSellAssetContract',\n    MarketCancelOrderContract = 'MarketCancelOrderContract',\n    FreezeBalanceV2Contract = 'FreezeBalanceV2Contract',\n    UnfreezeBalanceV2Contract = 'UnfreezeBalanceV2Contract',\n    WithdrawExpireUnfreezeContract = 'WithdrawExpireUnfreezeContract',\n    DelegateResourceContract = 'DelegateResourceContract',\n    UnDelegateResourceContract = 'UnDelegateResourceContract',\n    UNRECOGNIZED = 'UNRECOGNIZED',\n}\nexport enum Permission_PermissionType {\n    Owner = 0,\n    Witness = 1,\n    Active = 2,\n    UNRECOGNIZED = -1,\n}\n\nexport interface Key {\n    address: Uint8Array;\n    weight: number;\n}\n\nexport enum AccountType {\n    Normal = 0,\n    AssetIssue = 1,\n    Contract = 2,\n    UNRECOGNIZED = -1,\n}\n\nexport interface PermissionKey {\n    address: string;\n    weight: number;\n}\nexport interface Permission {\n    type: number;\n    /** Owner id=0, Witness id=1, Active id start by 2 */\n    id?: number;\n    permission_name: string;\n    threshold: number;\n    operations?: string;\n    keys: PermissionKey[];\n}\n\nexport interface TransferContract {\n    to_address: string;\n    owner_address: string;\n    amount: number;\n}\n\nexport interface TransferAssetContract {\n    to_address: string;\n    owner_address: string;\n    amount: number;\n    asset_name: string;\n}\n\nexport interface ParticipateAssetIssueContract {\n    to_address: string;\n    owner_address: string;\n    asset_name: string;\n    amount: number;\n}\n\nexport interface TriggerSmartContract {\n    owner_address: string;\n    contract_address: string;\n    call_value?: number;\n    call_token_value?: number;\n    token_id?: number;\n    data?: string;\n}\n\nexport interface FreezeBalanceContract {\n    owner_address: string;\n    frozen_balance: number;\n    frozen_duration: number;\n    resource?: Resource;\n    receiver_address?: string;\n}\n\nexport interface UnfreezeBalanceContract {\n    owner_address: string;\n    resource: string;\n    receiver_address: string;\n}\n\nexport interface WithdrawBalanceContract {\n    owner_address: string;\n}\n\nexport interface FreezeBalanceV2Contract {\n    owner_address: string;\n    frozen_balance: number;\n    resource?: Resource;\n}\n\nexport interface CancelFreezeBalanceV2Contract {\n    owner_address: string;\n}\n\nexport interface UnfreezeBalanceV2Contract {\n    owner_address: string;\n    unfreeze_balance: number;\n    resource?: Resource;\n}\n\nexport interface DelegateResourceContract {\n    owner_address: string;\n    receiver_address: string;\n    balance: number;\n    resource?: Resource;\n    lock?: boolean;\n    lock_period?: number;\n}\n\nexport interface UnDelegateResourceContract {\n    owner_address: string;\n    receiver_address: string;\n    balance: number;\n    resource?: Resource;\n}\n\nexport interface WithdrawExpireUnfreezeContract {\n    owner_address: string;\n}\n\nexport interface CreateSmartContract {\n    owner_address: string;\n    call_token_value: number;\n    token_id: string;\n    new_contract: {\n        name: string;\n        origin_address: string;\n        contract_address: string;\n        abi: { entrys?: ContractAbiInterface };\n        bytecode: string;\n        call_value: number;\n        consume_user_resource_percent: number;\n        origin_energy_limit: number;\n    };\n}\n\nexport interface DeployConstantContract {\n    data: string;\n    owner_address: string;\n    call_value?: number;\n    token_id?: number | string;\n    call_token_value?: number | string;\n}\n\nexport interface ClearABIContract {\n    contract_address: string;\n    owner_address: string;\n}\n\nexport interface UpdateBrokerageContract {\n    brokerage: number;\n    owner_address: string;\n}\n\ninterface FrozenSupply {\n    frozen_amount: number;\n    frozen_days: number;\n}\nexport interface AssetIssueContract {\n    owner_address: string;\n    name: string;\n    abbr: string;\n    description: string;\n    url: string;\n    total_supply: number;\n    trx_num: number;\n    num: number;\n    start_time: number;\n    end_time: number;\n    precision: number;\n    free_asset_net_limit: number;\n    public_free_asset_net_limit: number;\n    public_free_asset_net_usage: number;\n    public_latest_free_net_time: number;\n    vote_score: number;\n    frozen_supply: FrozenSupply[];\n}\n\nexport interface AccountCreateContract {\n    account_address: string;\n    owner_address: string;\n}\n\nexport interface AccountUpdateContract {\n    account_name: string;\n    owner_address: string;\n}\n\nexport interface SetAccountIdContract {\n    account_id: string;\n    owner_address: string;\n}\n\nexport interface ProposalCreateContract {\n    owner_address: string;\n    parameters: Record<string, string | number>[];\n}\n\nexport interface ProposalDeleteContract {\n    owner_address: string;\n    proposal_id: number;\n}\n\nexport interface VoteProposalContract {\n    owner_address: string;\n    proposal_id: number;\n    is_add_approval: boolean;\n}\n\nexport interface ExchangeCreateContract {\n    owner_address: string;\n    first_token_id: string;\n    first_token_balance: number;\n    second_token_id: string;\n    second_token_balance: number;\n}\n\nexport interface ExchangeInjectContract {\n    owner_address: string;\n    exchange_id: number;\n    token_id: string;\n    quant: number;\n}\n\nexport interface ExchangeWithdrawContract {\n    owner_address: string;\n    exchange_id: number;\n    token_id: string;\n    quant: number;\n}\n\nexport interface ExchangeTransactionContract {\n    owner_address: string;\n    exchange_id: number;\n    token_id: string;\n    quant: number;\n    expected: number;\n}\n\nexport interface UpdateSettingContract {\n    owner_address: string;\n    contract_address: string;\n    consume_user_resource_percent: number;\n}\n\nexport interface UpdateEnergyLimitContract {\n    owner_address: string;\n    contract_address: string;\n    origin_energy_limit: number;\n}\n\nexport interface AccountPermissionUpdateContract {\n    owner_address: string;\n    owner?: Permission;\n    witness?: Permission;\n    actives?: Permission[];\n}\n\nexport interface UpdateAssetContract {\n    owner_address: string;\n    description: string;\n    url: string;\n    new_limit?: number;\n    new_public_limit?: number;\n}\n\nexport interface WitnessCreateContract {\n    owner_address: string;\n    url: string;\n}\n\nexport interface VoteWitnessContract {\n    owner_address: string;\n    votes: { vote_address: string; vote_count: number }[];\n}\n\nexport type ContractParamter =\n    | TransferContract\n    | TransferAssetContract\n    | ParticipateAssetIssueContract\n    | TriggerSmartContract\n    | FreezeBalanceContract\n    | UnfreezeBalanceContract\n    | WithdrawBalanceContract\n    | FreezeBalanceV2Contract\n    | CancelFreezeBalanceV2Contract\n    | UnfreezeBalanceV2Contract\n    | DelegateResourceContract\n    | UnDelegateResourceContract\n    | WithdrawExpireUnfreezeContract\n    | CreateSmartContract\n    | ClearABIContract\n    | UpdateBrokerageContract\n    | AssetIssueContract\n    | AccountCreateContract\n    | AccountUpdateContract\n    | SetAccountIdContract\n    | ProposalCreateContract\n    | ProposalDeleteContract\n    | VoteProposalContract\n    | ExchangeCreateContract\n    | ExchangeInjectContract\n    | ExchangeWithdrawContract\n    | ExchangeTransactionContract\n    | UpdateSettingContract\n    | UpdateEnergyLimitContract\n    | AccountPermissionUpdateContract\n    | UpdateAssetContract\n    | WitnessCreateContract\n    | VoteWitnessContract;\n", "// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nimport google_protobuf_any_pb from 'google-protobuf/google/protobuf/any_pb.js';\n\nimport '../protocol/core/Tron_pb.cjs';\nconst { Transaction, Permission, Key } = globalThis.TronWebProto;\n\nimport '../protocol/core/contract/balance_contract_pb.cjs';\nconst {\n    TransferContract,\n    FreezeBalanceContract,\n    UnfreezeBalanceContract,\n    WithdrawBalanceContract,\n    FreezeBalanceV2Contract,\n    UnfreezeBalanceV2Contract,\n    CancelAllUnfreezeV2Contract,\n    WithdrawExpireUnfreezeContract,\n    DelegateResourceContract,\n    UnDelegateResourceContract,\n} = globalThis.TronWebProto;\n\nimport '../protocol/core/contract/asset_issue_contract_pb.cjs';\nconst { TransferAssetContract, ParticipateAssetIssueContract, AssetIssueContract, UpdateAssetContract } = globalThis.TronWebProto;\n\nimport '../protocol/core/contract/smart_contract_pb.cjs';\nconst {\n    TriggerSmartContract,\n    ClearABIContract,\n    UpdateEnergyLimitContract,\n    UpdateSettingContract,\n    CreateSmartContract,\n    SmartContract,\n} = globalThis.TronWebProto;\n\nimport '../protocol/core/contract/common_pb.cjs';\nconst { ResourceCode } = globalThis.TronWebProto;\n\nimport '../protocol/core/contract/witness_contract_pb.cjs';\nconst { WitnessCreateContract, VoteWitnessContract } = globalThis.TronWebProto;\n\nimport '../protocol/core/contract/storage_contract_pb.cjs';\nconst { UpdateBrokerageContract } = globalThis.TronWebProto;\n\nimport '../protocol/core/contract/account_contract_pb.cjs';\nconst { AccountCreateContract, AccountUpdateContract, SetAccountIdContract, AccountPermissionUpdateContract } =\n    globalThis.TronWebProto;\n\nimport '../protocol/core/contract/proposal_contract_pb.cjs';\nconst { ProposalCreateContract, ProposalDeleteContract, ProposalApproveContract } = globalThis.TronWebProto;\n\nimport '../protocol/core/contract/exchange_contract_pb.cjs';\nconst { ExchangeCreateContract, ExchangeInjectContract, ExchangeWithdrawContract, ExchangeTransactionContract } =\n    globalThis.TronWebProto;\n\nimport { byteArray2hexStr } from './bytes.js';\nimport { hexStr2byteArray } from './code.js';\nimport { sha256, keccak256 } from './ethersUtils.js';\nimport TronWeb from '../tronweb.js';\nimport { isHex } from './validations.js';\n\nconst fromHexString = (hexString: string) => {\n    if (!hexString || hexString.length === 0) return new Uint8Array([]);\n    return new Uint8Array(\n        TronWeb.address\n            .toHex(hexString)\n            .match(/.{1,2}/g)\n            .map((byte: string) => parseInt(byte, 16))\n    );\n};\n\nconst stringToUint8Array = (hexString: string) => {\n    if (!hexString || hexString.length === 0) return new Uint8Array([]);\n    return new Uint8Array(\n        (isHex(hexString) ? hexString : TronWeb.toHex(hexString))\n            .replace(/^0x/, '')\n            .match(/.{1,2}/g)\n            .map((byte: string) => parseInt(byte, 16))\n    );\n};\n\nconst flexToUint8Array = (str: string, visible: boolean) => {\n    if (!visible) return stringToUint8Array(str.replace(/^0x/, ''));\n    return stringToUint8Array(TronWeb.fromUtf8(str).replace(/^0x/, ''));\n};\n\nconst sha3 = (string: string, prefix = true) => {\n    return (prefix ? '0x' : '') + keccak256(Buffer.from(string, 'utf-8')).toString().substring(2);\n};\n\nconst buildCommonTransaction = (message, contractType, typeName, permissionId) => {\n    const anyValue = new google_protobuf_any_pb.Any();\n    anyValue.pack(message.serializeBinary(), 'protocol.' + typeName);\n    const contract = new Transaction.Contract();\n    contract.setType(contractType);\n    contract.setParameter(anyValue);\n    if (permissionId) {\n        contract.setPermissionId(permissionId);\n    }\n    const raw = new Transaction.raw();\n    raw.addContract(contract);\n    const transaction = new Transaction();\n    transaction.setRawData(raw);\n    return transaction;\n};\n\n// wallet/createtransaction for sendTrx\nconst buildTransferContract = (value, options) => {\n    const { to_address, owner_address, amount } = value;\n    const transferContract = new TransferContract();\n    transferContract.setToAddress(fromHexString(to_address));\n    transferContract.setOwnerAddress(fromHexString(owner_address));\n    transferContract.setAmount(amount);\n    return buildCommonTransaction(\n        transferContract,\n        Transaction.Contract.ContractType.TRANSFERCONTRACT,\n        'TransferContract',\n        options.Permission_id\n    );\n};\n\n// wallet/transferasset for sendToken\nconst buildTransferAssetContract = (value, options) => {\n    const { to_address, owner_address, amount, asset_name } = value;\n    const transferContract = new TransferAssetContract();\n    transferContract.setToAddress(fromHexString(to_address));\n    transferContract.setOwnerAddress(fromHexString(owner_address));\n    transferContract.setAssetName(flexToUint8Array(asset_name, options.visible));\n    transferContract.setAmount(amount);\n    return buildCommonTransaction(\n        transferContract,\n        Transaction.Contract.ContractType.TRANSFERASSETCONTRACT,\n        'TransferAssetContract',\n        options.Permission_id\n    );\n};\n\n// wallet/participateassetissue for purchaseToken\nconst buildParticipateAssetIssueContract = (value, options) => {\n    const pbObj = new ParticipateAssetIssueContract();\n    pbObj.setToAddress(fromHexString(value.to_address));\n    pbObj.setOwnerAddress(fromHexString(value.owner_address));\n    pbObj.setAssetName(flexToUint8Array(value.asset_name, options.visible));\n    pbObj.setAmount(value.amount);\n\n    return buildCommonTransaction(\n        pbObj,\n        Transaction.Contract.ContractType.PARTICIPATEASSETISSUECONTRACT,\n        'ParticipateAssetIssueContract',\n        options.Permission_id\n    );\n};\n\nconst buildTriggerSmartContract = (value, options) => {\n    const triggerSmartContract = new TriggerSmartContract();\n    const {\n        owner_address,\n        contract_address,\n        parameter = '',\n        function_selector,\n        call_value,\n        call_token_value,\n        token_id,\n        data,\n    } = value;\n    triggerSmartContract.setOwnerAddress(fromHexString(owner_address));\n    triggerSmartContract.setContractAddress(fromHexString(contract_address));\n    triggerSmartContract.setCallValue(call_value);\n    if (data) {\n        triggerSmartContract.setData(stringToUint8Array(data));\n    } else if (function_selector) {\n        const contractData = sha3(function_selector).substring(2, 10) + parameter;\n        triggerSmartContract.setData(stringToUint8Array(contractData));\n    }\n\n    if (token_id) {\n        triggerSmartContract.setTokenId(token_id);\n    }\n    if (call_token_value) {\n        triggerSmartContract.setCallTokenValue(call_token_value);\n    }\n\n    return buildCommonTransaction(\n        triggerSmartContract,\n        Transaction.Contract.ContractType.TRIGGERSMARTCONTRACT,\n        'TriggerSmartContract',\n        options.Permission_id\n    );\n};\n\nconst buildFreezeBalanceContract = (value, options) => {\n    const freezeBalanceContract = new FreezeBalanceContract();\n    const { owner_address, frozen_balance, frozen_duration, resource, receiver_address } = value;\n    freezeBalanceContract.setOwnerAddress(fromHexString(owner_address));\n    freezeBalanceContract.setFrozenBalance(frozen_balance);\n    freezeBalanceContract.setFrozenDuration(frozen_duration);\n    if (resource) {\n        freezeBalanceContract.setResource(ResourceCode[resource]);\n    }\n    if (receiver_address) {\n        freezeBalanceContract.setReceiverAddress(fromHexString(receiver_address));\n    }\n\n    return buildCommonTransaction(\n        freezeBalanceContract,\n        Transaction.Contract.ContractType.FREEZEBALANCECONTRACT,\n        'FreezeBalanceContract',\n        options.Permission_id\n    );\n};\n\nconst buildUnfreezeBalanceContract = (value, options) => {\n    const unfreezeBalanceContract = new UnfreezeBalanceContract();\n    const { owner_address, resource, receiver_address } = value;\n    unfreezeBalanceContract.setOwnerAddress(fromHexString(owner_address));\n    if (resource) {\n        unfreezeBalanceContract.setResource(ResourceCode[resource]);\n    }\n    if (receiver_address) {\n        unfreezeBalanceContract.setReceiverAddress(fromHexString(receiver_address));\n    }\n\n    return buildCommonTransaction(\n        unfreezeBalanceContract,\n        Transaction.Contract.ContractType.UNFREEZEBALANCECONTRACT,\n        'UnfreezeBalanceContract',\n        options.Permission_id\n    );\n};\n\nconst buildWithdrawBalanceContract = (value, options) => {\n    const withdrawbalanceContract = new WithdrawBalanceContract();\n    const { owner_address } = value;\n    withdrawbalanceContract.setOwnerAddress(fromHexString(owner_address));\n\n    return buildCommonTransaction(\n        withdrawbalanceContract,\n        Transaction.Contract.ContractType.WITHDRAWBALANCECONTRACT,\n        'WithdrawBalanceContract',\n        options.Permission_id\n    );\n};\n\nconst buildFreezeBalanceV2Contract = (value, options) => {\n    const freezeBalanceV2Contract = new FreezeBalanceV2Contract();\n    const { owner_address, frozen_balance, resource } = value;\n    freezeBalanceV2Contract.setOwnerAddress(fromHexString(owner_address));\n    freezeBalanceV2Contract.setFrozenBalance(frozen_balance);\n    freezeBalanceV2Contract.setResource(ResourceCode[resource]);\n\n    return buildCommonTransaction(\n        freezeBalanceV2Contract,\n        Transaction.Contract.ContractType.FREEZEBALANCEV2CONTRACT,\n        'FreezeBalanceV2Contract',\n        options.Permission_id\n    );\n};\n\nconst buildCancelFreezeBalanceV2Contract = (value, options) => {\n    const cancelAllUnfreezeV2Contract = new CancelAllUnfreezeV2Contract();\n    const { owner_address } = value;\n    cancelAllUnfreezeV2Contract.setOwnerAddress(fromHexString(owner_address));\n\n    return buildCommonTransaction(\n        cancelAllUnfreezeV2Contract,\n        Transaction.Contract.ContractType.CANCELALLUNFREEZEV2CONTRACT,\n        'CancelAllUnfreezeV2Contract',\n        options.Permission_id\n    );\n};\n\nconst buildUnfreezeBalanceV2Contract = (value, options) => {\n    const unfreezeBalanceV2Contract = new UnfreezeBalanceV2Contract();\n    const { owner_address, unfreeze_balance, resource } = value;\n    unfreezeBalanceV2Contract.setOwnerAddress(fromHexString(owner_address));\n    unfreezeBalanceV2Contract.setUnfreezeBalance(unfreeze_balance);\n    unfreezeBalanceV2Contract.setResource(ResourceCode[resource]);\n\n    return buildCommonTransaction(\n        unfreezeBalanceV2Contract,\n        Transaction.Contract.ContractType.UNFREEZEBALANCEV2CONTRACT,\n        'UnfreezeBalanceV2Contract',\n        options.Permission_id\n    );\n};\n\nconst buildDelegateResourceContract = (value, options) => {\n    const delegateResourceContract = new DelegateResourceContract();\n    const { owner_address, receiver_address, balance, resource, lock = false, lock_period } = value;\n    delegateResourceContract.setOwnerAddress(fromHexString(owner_address));\n    delegateResourceContract.setBalance(balance);\n    delegateResourceContract.setResource(ResourceCode[resource]);\n    delegateResourceContract.setLock(lock);\n    delegateResourceContract.setLockPeriod(lock_period);\n    delegateResourceContract.setReceiverAddress(fromHexString(receiver_address));\n\n    return buildCommonTransaction(\n        delegateResourceContract,\n        Transaction.Contract.ContractType.DELEGATERESOURCECONTRACT,\n        'DelegateResourceContract',\n        options.Permission_id\n    );\n};\n\nconst buildUnDelegateResourceContract = (value, options) => {\n    const unDelegateResourceContract = new UnDelegateResourceContract();\n    const { owner_address, receiver_address, balance, resource } = value;\n    unDelegateResourceContract.setOwnerAddress(fromHexString(owner_address));\n    unDelegateResourceContract.setBalance(balance);\n    unDelegateResourceContract.setResource(ResourceCode[resource]);\n    unDelegateResourceContract.setReceiverAddress(fromHexString(receiver_address));\n\n    return buildCommonTransaction(\n        unDelegateResourceContract,\n        Transaction.Contract.ContractType.UNDELEGATERESOURCECONTRACT,\n        'UnDelegateResourceContract',\n        options.Permission_id\n    );\n};\n\nconst buildWithdrawExpireUnfreezeContract = (value, options) => {\n    const withdrawExpireUnfreeze = new WithdrawExpireUnfreezeContract();\n    const { owner_address } = value;\n    withdrawExpireUnfreeze.setOwnerAddress(fromHexString(owner_address));\n\n    return buildCommonTransaction(\n        withdrawExpireUnfreeze,\n        Transaction.Contract.ContractType.WITHDRAWEXPIREUNFREEZECONTRACT,\n        'WithdrawExpireUnfreezeContract',\n        options.Permission_id\n    );\n};\n\n// applyForSR\nconst buildCreateWitness = (value, options) => {\n    const createWitnessContract = new WitnessCreateContract();\n    const { owner_address, url } = value;\n    createWitnessContract.setOwnerAddress(fromHexString(owner_address));\n    createWitnessContract.setUrl(stringToUint8Array(url.replace(/^0x/, '')));\n    return buildCommonTransaction(\n        createWitnessContract,\n        Transaction.Contract.ContractType.WITNESSCREATECONTRACT,\n        'WitnessCreateContract',\n        options.Permission_id\n    );\n};\n\n// vote\nconst buildVoteWitnessAccount = (value, options) => {\n    const voteWitnessContract = new VoteWitnessContract();\n    const { owner_address, votes } = value;\n    voteWitnessContract.setOwnerAddress(fromHexString(owner_address));\n\n    votes.forEach((voteItem) => {\n        const vote = new VoteWitnessContract.Vote();\n        const { vote_address, vote_count } = voteItem;\n        vote.setVoteAddress(fromHexString(vote_address));\n        const numberOfVotes = parseInt(vote_count);\n        vote.setVoteCount(numberOfVotes);\n        voteWitnessContract.addVotes(vote);\n    });\n\n    return buildCommonTransaction(\n        voteWitnessContract,\n        Transaction.Contract.ContractType.VOTEWITNESSCONTRACT,\n        'VoteWitnessContract',\n        options.Permission_id\n    );\n};\n\nconst buildCreateSmartContract = (value, options) => {\n    const params = value?.new_contract\n        ? {\n              ...{\n                  owner_address: value.owner_address,\n                  call_token_value: value.call_token_value,\n                  token_id: value.token_id,\n              },\n              ...value.new_contract,\n          }\n        : value;\n    const {\n        owner_address,\n        consume_user_resource_percent,\n        origin_energy_limit,\n        abi,\n        bytecode = '',\n        parameter = '',\n        call_value,\n        call_token_value,\n        token_id,\n        name: contracName,\n    } = params;\n    let { origin_address } = params;\n\n    const createSmartContract = new CreateSmartContract();\n    createSmartContract.setOwnerAddress(fromHexString(owner_address));\n    if (token_id) {\n        createSmartContract.setTokenId(token_id);\n    }\n    if (call_token_value) {\n        createSmartContract.setCallTokenValue(call_token_value);\n    }\n    const smartContractBuilder = new SmartContract();\n\n    if (abi) {\n        let abiJson;\n        if (typeof abi === 'string') {\n            abiJson = JSON.parse(abi);\n        } else {\n            abiJson = abi?.entrys || []; // abi could be an empty object if origin abi is `[]`;\n        }\n        const abiBuilder = new SmartContract.ABI();\n\n        const buildEntryParam = (data) => {\n            const param = new SmartContract.ABI.Entry.Param();\n            const { indexed, name, type } = data;\n            if (indexed === true) {\n                param.setIndexed(true);\n            }\n            param.setName(name);\n            param.setType(type);\n            return param;\n        };\n        const entryBuilders = abiJson.map((entry) => {\n            const { anonymous, constant, name, inputs, outputs, type, payable, stateMutability } = entry;\n            const entryBuilder = new SmartContract.ABI.Entry();\n            entryBuilder.setAnonymous(anonymous);\n            entryBuilder.setConstant(constant);\n            entryBuilder.setName(name);\n            if (inputs) {\n                entryBuilder.setInputsList(inputs.map((input) => buildEntryParam(input)));\n            }\n            if (outputs) {\n                entryBuilder.setOutputsList(outputs.map((output) => buildEntryParam(output)));\n            }\n            if (type) {\n                entryBuilder.setType(SmartContract.ABI.Entry.EntryType[type.toUpperCase()]);\n            }\n\n            entryBuilder.setPayable(payable);\n            if (stateMutability) {\n                entryBuilder.setStatemutability(SmartContract.ABI.Entry.StateMutabilityType[stateMutability.toUpperCase()]);\n            }\n\n            return entryBuilder;\n        });\n        abiBuilder.setEntrysList(entryBuilders);\n        smartContractBuilder.setAbi(abiBuilder);\n    }\n\n    if (call_value) {\n        smartContractBuilder.setCallValue(call_value);\n    }\n\n    smartContractBuilder.setConsumeUserResourcePercent(consume_user_resource_percent);\n    smartContractBuilder.setOriginEnergyLimit(origin_energy_limit);\n\n    if (!origin_address) {\n        origin_address = owner_address;\n    }\n    smartContractBuilder.setOriginAddress(fromHexString(origin_address));\n\n    if (bytecode) {\n        const bytecodeParameter = bytecode.replace(/^0x/, '') + parameter.replace(/^0x/, '');\n        smartContractBuilder.setBytecode(stringToUint8Array(bytecodeParameter));\n    }\n\n    smartContractBuilder.setName(contracName);\n\n    createSmartContract.setNewContract(smartContractBuilder);\n\n    return buildCommonTransaction(\n        createSmartContract,\n        Transaction.Contract.ContractType.CREATESMARTCONTRACT,\n        'CreateSmartContract',\n        options.Permission_id\n    );\n};\n\nconst buildClearABIContract = (value, options) => {\n    const { contract_address, owner_address } = value;\n    const clearABIContract = new ClearABIContract();\n    clearABIContract.setOwnerAddress(fromHexString(owner_address));\n    clearABIContract.setContractAddress(fromHexString(contract_address));\n\n    return buildCommonTransaction(\n        clearABIContract,\n        Transaction.Contract.ContractType.CLEARABICONTRACT,\n        'ClearABIContract',\n        options.Permission_id\n    );\n};\n\n// updateBrokerage\nconst buildUpdateBrokerageContract = (value, options) => {\n    const { brokerage, owner_address } = value;\n    const updateBrokerageContract = new UpdateBrokerageContract();\n    updateBrokerageContract.setOwnerAddress(fromHexString(owner_address));\n    updateBrokerageContract.setBrokerage(brokerage);\n\n    return buildCommonTransaction(\n        updateBrokerageContract,\n        Transaction.Contract.ContractType.UPDATEBROKERAGECONTRACT,\n        'UpdateBrokerageContract',\n        options.Permission_id\n    );\n};\n\n// createToken\nconst buildAssetIssueContract = (value, options) => {\n    const {\n        owner_address,\n        name,\n        abbr,\n        description,\n        url,\n        total_supply,\n        trx_num,\n        num,\n        start_time,\n        end_time,\n        precision,\n        free_asset_net_limit,\n        public_free_asset_net_limit,\n        public_free_asset_net_usage = 0,\n        public_latest_free_net_time = 0,\n        vote_score = 0,\n        frozen_supply,\n    } = value;\n    const assetIssueContract = new AssetIssueContract();\n    assetIssueContract.setOwnerAddress(fromHexString(owner_address));\n    if (name) {\n        assetIssueContract.setName(stringToUint8Array(name.replace(/^0x/, '')));\n    }\n    if (abbr) {\n        assetIssueContract.setAbbr(stringToUint8Array(abbr.replace(/^0x/, '')));\n    }\n    assetIssueContract.setTotalSupply(total_supply);\n    assetIssueContract.setNum(num);\n    assetIssueContract.setEndTime(end_time);\n    assetIssueContract.setStartTime(start_time);\n    assetIssueContract.setTrxNum(trx_num);\n    assetIssueContract.setVoteScore(vote_score);\n    if (precision) {\n        assetIssueContract.setPrecision(precision);\n    }\n    if (public_latest_free_net_time) {\n        assetIssueContract.setPublicLatestFreeNetTime(public_latest_free_net_time);\n    }\n    if (description) {\n        assetIssueContract.setDescription(stringToUint8Array(description.replace(/^0x/, '')));\n    }\n    if (url) {\n        assetIssueContract.setUrl(stringToUint8Array(url.replace(/^0x/, '')));\n    }\n\n    assetIssueContract.setPublicFreeAssetNetUsage(public_free_asset_net_usage);\n    assetIssueContract.setFreeAssetNetLimit(free_asset_net_limit);\n    assetIssueContract.setPublicFreeAssetNetLimit(public_free_asset_net_limit);\n    if (frozen_supply) {\n        const frozenSupplyContract = new AssetIssueContract.FrozenSupply();\n        frozenSupplyContract.setFrozenAmount(frozen_supply.length ? frozen_supply[0].frozen_amount : frozen_supply.frozen_amount);\n        frozenSupplyContract.setFrozenDays(frozen_supply.length ? frozen_supply[0].frozen_days : frozen_supply.frozen_days);\n        assetIssueContract.addFrozenSupply(frozenSupplyContract);\n    }\n    return buildCommonTransaction(\n        assetIssueContract,\n        Transaction.Contract.ContractType.ASSETISSUECONTRACT,\n        'AssetIssueContract',\n        options.Permission_id\n    );\n};\n\n//createAccount\nconst buildAccountCreateContract = (value, options) => {\n    const accountCreateContract = new AccountCreateContract();\n    const { account_address, owner_address } = value;\n    accountCreateContract.setOwnerAddress(fromHexString(owner_address));\n    accountCreateContract.setAccountAddress(fromHexString(account_address.replace(/^0x/, '')));\n    return buildCommonTransaction(\n        accountCreateContract,\n        Transaction.Contract.ContractType.ACCOUNTCREATECONTRACT,\n        'AccountCreateContract',\n        options.Permission_id\n    );\n};\n\n// updateAccount\nconst buildAccountUpdateContract = (value, options) => {\n    const accountUpdateContract = new AccountUpdateContract();\n    const { account_name, owner_address } = value;\n    accountUpdateContract.setOwnerAddress(fromHexString(owner_address));\n    accountUpdateContract.setAccountName(stringToUint8Array(account_name.replace(/^0x/, '')));\n    return buildCommonTransaction(\n        accountUpdateContract,\n        Transaction.Contract.ContractType.ACCOUNTUPDATECONTRACT,\n        'AccountUpdateContract',\n        options.Permission_id\n    );\n};\n\n// setAccountId\nconst buildSetAccountIdContract = (value, options) => {\n    const setAccountIdContract = new SetAccountIdContract();\n    const { account_id, owner_address } = value;\n    setAccountIdContract.setOwnerAddress(fromHexString(owner_address));\n    setAccountIdContract.setAccountId(stringToUint8Array(account_id.replace(/^0x/, '')));\n    return buildCommonTransaction(\n        setAccountIdContract,\n        Transaction.Contract.ContractType.SETACCOUNTIDCONTRACT,\n        'SetAccountIdContract',\n        options.Permission_id\n    );\n};\n\nconst buildProposalCreateContract = (value, options) => {\n    const proposalCreateContract = new ProposalCreateContract();\n    const { owner_address, parameters } = value;\n    proposalCreateContract.setOwnerAddress(fromHexString(owner_address));\n    parameters.forEach((parameter) => {\n        proposalCreateContract.getParametersMap().set(parameter.key, parameter.value);\n    });\n    return buildCommonTransaction(\n        proposalCreateContract,\n        Transaction.Contract.ContractType.PROPOSALCREATECONTRACT,\n        'ProposalCreateContract',\n        options.Permission_id\n    );\n};\n\nconst buildProposalDeleteContract = (value, options) => {\n    const proposalDeleteContract = new ProposalDeleteContract();\n    const { owner_address, proposal_id } = value;\n    proposalDeleteContract.setOwnerAddress(fromHexString(owner_address));\n    proposalDeleteContract.setProposalId(proposal_id);\n    return buildCommonTransaction(\n        proposalDeleteContract,\n        Transaction.Contract.ContractType.PROPOSALDELETECONTRACT,\n        'ProposalDeleteContract',\n        options.Permission_id\n    );\n};\n\nconst buildVoteProposalContract = (value, options) => {\n    const proposalVoteContract = new ProposalApproveContract();\n    const { owner_address, proposal_id, is_add_approval } = value;\n    proposalVoteContract.setOwnerAddress(fromHexString(owner_address));\n    proposalVoteContract.setProposalId(proposal_id);\n    proposalVoteContract.setIsAddApproval(is_add_approval);\n    return buildCommonTransaction(\n        proposalVoteContract,\n        Transaction.Contract.ContractType.PROPOSALAPPROVECONTRACT,\n        'ProposalApproveContract',\n        options.Permission_id\n    );\n};\n\nconst buildExchangeCreateContract = (value, options) => {\n    const exchangeCreateContract = new ExchangeCreateContract();\n    const { owner_address, first_token_id, first_token_balance, second_token_id, second_token_balance } = value;\n    exchangeCreateContract.setOwnerAddress(fromHexString(owner_address));\n    exchangeCreateContract.setFirstTokenId(flexToUint8Array(first_token_id, options.visible));\n    exchangeCreateContract.setFirstTokenBalance(first_token_balance);\n    exchangeCreateContract.setSecondTokenId(flexToUint8Array(second_token_id, options.visible));\n    exchangeCreateContract.setSecondTokenBalance(second_token_balance);\n    return buildCommonTransaction(\n        exchangeCreateContract,\n        Transaction.Contract.ContractType.EXCHANGECREATECONTRACT,\n        'ExchangeCreateContract',\n        options.Permission_id\n    );\n};\n\nconst buildExchangeInjectContract = (value, options) => {\n    const exchangeInjectContract = new ExchangeInjectContract();\n    const { owner_address, exchange_id, token_id, quant } = value;\n    exchangeInjectContract.setOwnerAddress(fromHexString(owner_address));\n    exchangeInjectContract.setExchangeId(exchange_id);\n    exchangeInjectContract.setTokenId(flexToUint8Array(token_id, options.visible));\n    exchangeInjectContract.setQuant(quant);\n    return buildCommonTransaction(\n        exchangeInjectContract,\n        Transaction.Contract.ContractType.EXCHANGEINJECTCONTRACT,\n        'ExchangeInjectContract',\n        options.Permission_id\n    );\n};\n\nconst buildExchangeWithdrawContract = (value, options) => {\n    const exchangeWithdrawContract = new ExchangeWithdrawContract();\n    const { owner_address, exchange_id, token_id, quant } = value;\n    exchangeWithdrawContract.setOwnerAddress(fromHexString(owner_address));\n    exchangeWithdrawContract.setExchangeId(exchange_id);\n    exchangeWithdrawContract.setTokenId(flexToUint8Array(token_id, options.visible));\n    exchangeWithdrawContract.setQuant(quant);\n    return buildCommonTransaction(\n        exchangeWithdrawContract,\n        Transaction.Contract.ContractType.EXCHANGEWITHDRAWCONTRACT,\n        'ExchangeWithdrawContract',\n        options.Permission_id\n    );\n};\n\nconst buildExchangeTransactionContract = (value, options) => {\n    const exchangeTransactionContract = new ExchangeTransactionContract();\n    const { owner_address, exchange_id, token_id, quant, expected } = value;\n    exchangeTransactionContract.setOwnerAddress(fromHexString(owner_address));\n    exchangeTransactionContract.setExchangeId(exchange_id);\n    exchangeTransactionContract.setTokenId(flexToUint8Array(token_id, options.visible));\n    exchangeTransactionContract.setQuant(quant);\n    exchangeTransactionContract.setExpected(expected);\n    return buildCommonTransaction(\n        exchangeTransactionContract,\n        Transaction.Contract.ContractType.EXCHANGETRANSACTIONCONTRACT,\n        'ExchangeTransactionContract',\n        options.Permission_id\n    );\n};\n\nconst buildUpdateSettingContract = (value, options) => {\n    const updateSettingContract = new UpdateSettingContract();\n    const { owner_address, contract_address, consume_user_resource_percent } = value;\n    updateSettingContract.setOwnerAddress(fromHexString(owner_address));\n    updateSettingContract.setContractAddress(fromHexString(contract_address));\n    updateSettingContract.setConsumeUserResourcePercent(consume_user_resource_percent);\n    return buildCommonTransaction(\n        updateSettingContract,\n        Transaction.Contract.ContractType.UPDATESETTINGCONTRACT,\n        'UpdateSettingContract',\n        options.Permission_id\n    );\n};\n\nconst buildUpdateEnergyLimitContract = (value, options) => {\n    const updateEnergyLimitContract = new UpdateEnergyLimitContract();\n    const { owner_address, contract_address, origin_energy_limit } = value;\n    updateEnergyLimitContract.setOwnerAddress(fromHexString(owner_address));\n    updateEnergyLimitContract.setContractAddress(fromHexString(contract_address));\n    updateEnergyLimitContract.setOriginEnergyLimit(origin_energy_limit);\n    return buildCommonTransaction(\n        updateEnergyLimitContract,\n        Transaction.Contract.ContractType.UPDATEENERGYLIMITCONTRACT,\n        'UpdateEnergyLimitContract',\n        options.Permission_id\n    );\n};\n\nconst buildAccountPermissionUpdateContract = (value, options) => {\n    const accountPermissionUpdateContract = new AccountPermissionUpdateContract();\n    const { owner_address, owner, witness, actives } = value;\n    accountPermissionUpdateContract.setOwnerAddress(fromHexString(owner_address));\n    const getType = (type) => {\n        // no type when permission_name is owner\n        if (isNaN(type)) return type === 'Active' ? 2 : type === 'Witness' ? 1 : 0;\n        return type;\n    };\n    const buildPermission = (data) => {\n        // no type when permission_name is owner\n        const permission = new Permission();\n        const { type, id, permission_name, threshold, parentId, operations, keys } = data;\n        permission.setType(getType(type));\n        permission.setId(id);\n        permission.setPermissionName(permission_name);\n        permission.setThreshold(threshold);\n        if (parentId) {\n            permission.setParentId(parentId);\n        }\n        if (operations) {\n            permission.setOperations(stringToUint8Array(operations));\n        }\n        if (keys) {\n            permission.setKeysList(\n                keys.map((key) => {\n                    const keyBuilder = new Key();\n                    keyBuilder.setAddress(fromHexString(key.address));\n                    keyBuilder.setWeight(key.weight);\n                    return keyBuilder;\n                })\n            );\n        }\n        return permission;\n    };\n    if (owner) {\n        accountPermissionUpdateContract.setOwner(buildPermission(owner));\n    }\n    if (witness) {\n        accountPermissionUpdateContract.setWitness(buildPermission(witness));\n    }\n    if (actives) {\n        if (Array.isArray(actives)) {\n            accountPermissionUpdateContract.setActivesList(actives.map((active) => buildPermission(active)));\n        } else {\n            accountPermissionUpdateContract.setActivesList([buildPermission(actives)]);\n        }\n    }\n    return buildCommonTransaction(\n        accountPermissionUpdateContract,\n        Transaction.Contract.ContractType.ACCOUNTPERMISSIONUPDATECONTRACT,\n        'AccountPermissionUpdateContract',\n        options.Permission_id\n    );\n};\n\nconst buildUpdateAssetContract = (value, options) => {\n    const updateAssetContract = new UpdateAssetContract();\n    const { owner_address, description, url, new_limit, new_public_limit } = value;\n    updateAssetContract.setOwnerAddress(fromHexString(owner_address));\n    if (description) {\n        updateAssetContract.setDescription(stringToUint8Array(description.replace(/^0x/, '')));\n    }\n    if (url) {\n        updateAssetContract.setUrl(stringToUint8Array(url.replace(/^0x/, '')));\n    }\n    if (new_limit) {\n        updateAssetContract.setNewLimit(new_limit);\n    }\n    if (new_public_limit) {\n        updateAssetContract.setNewPublicLimit(new_public_limit);\n    }\n    return buildCommonTransaction(\n        updateAssetContract,\n        Transaction.Contract.ContractType.UPDATEASSETCONTRACT,\n        'UpdateAssetContract',\n        options.Permission_id\n    );\n};\n\nconst contractJsonToProtobuf = (contract, value, options) => {\n    switch (contract.type) {\n        case 'TransferContract':\n            return buildTransferContract(value, options);\n        case 'TransferAssetContract':\n            return buildTransferAssetContract(value, options);\n        case 'ParticipateAssetIssueContract':\n            return buildParticipateAssetIssueContract(value, options);\n        case 'TriggerSmartContract':\n            return buildTriggerSmartContract(value, options);\n        case 'FreezeBalanceContract':\n            return buildFreezeBalanceContract(value, options);\n        case 'UnfreezeBalanceContract':\n            return buildUnfreezeBalanceContract(value, options);\n        case 'WithdrawBalanceContract':\n            return buildWithdrawBalanceContract(value, options);\n        case 'FreezeBalanceV2Contract':\n            return buildFreezeBalanceV2Contract(value, options);\n        case 'CancelAllUnfreezeV2Contract':\n            return buildCancelFreezeBalanceV2Contract(value, options);\n        case 'UnfreezeBalanceV2Contract':\n            return buildUnfreezeBalanceV2Contract(value, options);\n        case 'DelegateResourceContract':\n            return buildDelegateResourceContract(value, options);\n        case 'UnDelegateResourceContract':\n            return buildUnDelegateResourceContract(value, options);\n        case 'WithdrawExpireUnfreezeContract':\n            return buildWithdrawExpireUnfreezeContract(value, options);\n        case 'WitnessCreateContract':\n            return buildCreateWitness(value, options);\n        case 'VoteWitnessContract':\n            return buildVoteWitnessAccount(value, options);\n        case 'CreateSmartContract':\n            return buildCreateSmartContract(value, options);\n        case 'ClearABIContract':\n            return buildClearABIContract(value, options);\n        case 'UpdateBrokerageContract':\n            return buildUpdateBrokerageContract(value, options);\n        case 'AssetIssueContract':\n            return buildAssetIssueContract(value, options);\n        case 'AccountCreateContract':\n            return buildAccountCreateContract(value, options);\n        case 'AccountUpdateContract':\n            return buildAccountUpdateContract(value, options);\n        case 'SetAccountIdContract':\n            return buildSetAccountIdContract(value, options);\n        case 'ProposalCreateContract':\n            return buildProposalCreateContract(value, options);\n        case 'ProposalDeleteContract':\n            return buildProposalDeleteContract(value, options);\n        case 'ProposalApproveContract':\n            return buildVoteProposalContract(value, options);\n        case 'ExchangeCreateContract':\n            return buildExchangeCreateContract(value, options);\n        case 'ExchangeInjectContract':\n            return buildExchangeInjectContract(value, options);\n        case 'ExchangeWithdrawContract':\n            return buildExchangeWithdrawContract(value, options);\n        case 'ExchangeTransactionContract':\n            return buildExchangeTransactionContract(value, options);\n        case 'UpdateSettingContract':\n            return buildUpdateSettingContract(value, options);\n        case 'UpdateEnergyLimitContract':\n            return buildUpdateEnergyLimitContract(value, options);\n        case 'AccountPermissionUpdateContract':\n            return buildAccountPermissionUpdateContract(value, options);\n        case 'UpdateAssetContract':\n            return buildUpdateAssetContract(value, options);\n    }\n};\n\nconst txJsonToPb = (transaction) => {\n    const rawData = transaction['raw_data'];\n    const contractJson = rawData.contract[0];\n    const data = contractJson.parameter.value;\n    const options = { Permission_id: contractJson.Permission_id, visible: transaction.visible };\n    const transactionObj = contractJsonToProtobuf(contractJson, data, options) as any;\n\n    const rawDataObj = transactionObj.getRawData();\n    rawDataObj.setRefBlockBytes(stringToUint8Array(rawData.ref_block_bytes));\n    rawDataObj.setRefBlockHash(stringToUint8Array(rawData.ref_block_hash));\n    if (rawData.data) {\n        rawDataObj.setData(stringToUint8Array(rawData.data));\n    }\n\n    if (rawData.fee_limit) {\n        rawDataObj.setFeeLimit(rawData.fee_limit);\n    }\n\n    if (rawData.expiration) {\n        rawDataObj.setExpiration(rawData.expiration);\n    }\n\n    if (rawData.timestamp) {\n        rawDataObj.setTimestamp(rawData.timestamp);\n    }\n\n    transactionObj.setRawData(rawDataObj);\n\n    return transactionObj;\n};\n\nconst txJsonToPbWithArgs = (transaction, args: any = {}, options: any = {}) => {\n    const rawData = transaction['raw_data'];\n    const contractJson = rawData.contract[0];\n\n    const transactionObj = contractJsonToProtobuf(contractJson, args, {\n        Permission_id: args?.Permission_id,\n    }) as any;\n\n    const rawDataObj = transactionObj.getRawData();\n    rawDataObj.setRefBlockBytes(stringToUint8Array(rawData.ref_block_bytes));\n    rawDataObj.setRefBlockHash(stringToUint8Array(rawData.ref_block_hash));\n    // for memo\n    if (options.data) {\n        rawDataObj.setData(stringToUint8Array(options.data.replace(/^0x/, '')));\n    }\n\n    if (options.fee_limit || args.fee_limit) {\n        rawDataObj.setFeeLimit(options.fee_limit || args.fee_limit);\n    }\n\n    if (rawData.expiration) {\n        rawDataObj.setExpiration(rawData.expiration);\n    }\n\n    if (rawData.timestamp) {\n        rawDataObj.setTimestamp(rawData.timestamp);\n    }\n\n    transactionObj.setRawData(rawDataObj);\n\n    return transactionObj;\n};\n\nconst compareTransaction = (transaction, transactionPb) => {\n    const rawDataBytes = transactionPb.getRawData().serializeBinary();\n    const rawDataHex = byteArray2hexStr(rawDataBytes);\n    const txID = sha256(rawDataBytes);\n    return (\n        rawDataHex.toLowerCase() === transaction.raw_data_hex.toLowerCase() &&\n        txID.replace(/^0x/, '').toLowerCase() === transaction.txID.replace(/^0x/, '').toLowerCase()\n    );\n};\n\nconst txPbToRawDataHex = (pb) => {\n    return byteArray2hexStr(pb.getRawData().serializeBinary());\n};\n\nconst txCheck = (transaction) => {\n    const transactionPb = txJsonToPb(transaction);\n    return compareTransaction(transaction, transactionPb);\n};\n\nconst txCheckWithArgs = (transaction, args, options) => {\n    const transactionPb = txJsonToPbWithArgs(transaction, args, options);\n    return compareTransaction(transaction, transactionPb);\n};\n\nconst txPbToTxID = (transactionPb) => {\n    const rawDataBytes = transactionPb.getRawData().serializeBinary();\n    const txID = sha256(rawDataBytes);\n    return txID;\n};\n\n\nconst ContractTypeMap = {\n    '0': 'AccountCreateContract',\n    '1': 'TransferContract',\n    '2': 'TransferAssetContract',\n    '4': 'VoteWitnessContract',\n    '5': 'WitnessCreateContract',\n    '6': 'AssetIssueContract',\n    '9': 'ParticipateAssetIssueContract',\n    '10': 'AccountUpdateContract',\n    '11': 'FreezeBalanceContract',\n    '12': 'UnfreezeBalanceContract',\n    '13': 'WithdrawBalanceContract',\n    '15': 'UpdateAssetContract',\n    '16': 'ProposalCreateContract',\n    '17': 'ProposalApproveContract',\n    '18': 'ProposalDeleteContract',\n    '19': 'SetAccountIdContract',\n    '30': 'CreateSmartContract',\n    '31': 'TriggerSmartContract',\n    '33': 'UpdateSettingContract',\n    '41': 'ExchangeCreateContract',\n    '42': 'ExchangeInjectContract',\n    '43': 'ExchangeWithdrawContract',\n    '44': 'ExchangeTransactionContract',\n    '45': 'UpdateEnergyLimitContract',\n    '46': 'AccountPermissionUpdateContract',\n    '48': 'ClearABIContract',\n    '49': 'UpdateBrokerageContract',\n    '54': 'FreezeBalanceV2Contract',\n    '55': 'UnfreezeBalanceV2Contract',\n    '56': 'WithdrawExpireUnfreezeContract',\n    '57': 'DelegateResourceContract',\n    '58': 'UnDelegateResourceContract',\n    '59': 'CancelAllUnfreezeV2Contract',\n};\n\nconst getAuthsList = (pb) => {\n    const authsList = pb.getAuthsList();\n    return authsList.map((authPb) => {\n        const permission_name = byteArray2hexStr(authPb.getPermissionName_asU8());\n        const accountPb = authPb.getAccount();\n        const account = {\n            name: byteArray2hexStr(accountPb.getName_asU8()),\n            address: byteArray2hexStr(accountPb.getAddress_asU8()),\n        };\n        return {\n            permission_name,\n            account,\n        };\n    });\n}\n\nconst DCommonData = (type: string, rawDataHex: string) => {\n    const pb = Transaction.raw.deserializeBinary(hexStr2byteArray(rawDataHex));\n    const contract = pb.getContractList()[0];\n    const valuePb = contract.getParameter().getValue();\n    const contractType = ContractTypeMap[contract.getType()];\n    if (type !== contractType) {\n        throw new Error(`type ${type} dismatches with rawDataHex type ${contractType}`);\n    }\n    return [\n        {\n            contract: [\n                {\n                    parameter: {\n                        value: {},\n                        type_url: contract.getParameter().getTypeUrl(),\n                    },\n                    type,\n                    Permission_id: contract.getPermissionId(),\n                },\n            ],\n            data: byteArray2hexStr(pb.getData()),\n            fee_limit: pb.getFeeLimit(),\n            ref_block_bytes: byteArray2hexStr(pb.getRefBlockBytes_asU8()),\n            ref_block_hash: byteArray2hexStr(pb.getRefBlockHash_asU8()),\n            expiration: pb.getExpiration(),\n            timestamp: pb.getTimestamp(),\n            scripts: byteArray2hexStr(pb.getScripts_asU8()),\n            auths: getAuthsList(pb),\n        },\n        valuePb,\n    ];\n};\n\nconst DTriggerSmartContract = (type, rawDataHex) => {\n    const [commonData, valuePb] = DCommonData(type, rawDataHex);\n    const triggerSmartContract = TriggerSmartContract.deserializeBinary(valuePb);\n    commonData.contract[0].parameter.value = {\n        owner_address: byteArray2hexStr(triggerSmartContract.getOwnerAddress_asU8()),\n        contract_address: byteArray2hexStr(triggerSmartContract.getContractAddress_asU8()),\n        call_value: triggerSmartContract.getCallValue(),\n        data: byteArray2hexStr(triggerSmartContract.getData_asU8()),\n        call_token_value: triggerSmartContract.getCallTokenValue(),\n        token_id: triggerSmartContract.getTokenId(),\n    };\n    return commonData;\n};\n\nconst getResourceName = (type) => {\n    switch (type) {\n        case 0:\n            return 'BANDWIDTH';\n        case 1:\n            return 'ENERGY';\n        default:\n            return 'BANDWIDTH';\n    }\n};\n\nconst DFreezeBalanceV2Contract = (type, rawDataHex) => {\n    const [commonData, valuePb] = DCommonData(type, rawDataHex);\n    const freezeBalanceV2Contract = FreezeBalanceV2Contract.deserializeBinary(valuePb);\n    commonData.contract[0].parameter.value = {\n        owner_address: byteArray2hexStr(freezeBalanceV2Contract.getOwnerAddress_asU8()),\n        frozen_balance: freezeBalanceV2Contract.getFrozenBalance(),\n        resource: getResourceName(freezeBalanceV2Contract.getResource()),\n    };\n    \n    return commonData;\n};\n\nconst DUnfreezeBalanceV2Contract = (type, rawDataHex) => {\n    const [commonData, valuePb] = DCommonData(type, rawDataHex);\n    const unfreezeBalanceV2Contract = UnfreezeBalanceV2Contract.deserializeBinary(valuePb);\n    commonData.contract[0].parameter.value = {\n        owner_address: byteArray2hexStr(unfreezeBalanceV2Contract.getOwnerAddress_asU8()),\n        unfreeze_balance: unfreezeBalanceV2Contract.getUnfreezeBalance(),\n        resource: getResourceName(unfreezeBalanceV2Contract.getResource()),\n    };\n    return commonData;\n};\n\nconst DCancelAllUnfreezeV2Contract = (type, rawDataHex) => {\n    const [commonData, valuePb] = DCommonData(type, rawDataHex);\n    const cancelAllUnfreezeV2Contract = CancelAllUnfreezeV2Contract.deserializeBinary(valuePb);\n    commonData.contract[0].parameter.value = {\n        owner_address: byteArray2hexStr(cancelAllUnfreezeV2Contract.getOwnerAddress_asU8()),\n    };\n    return commonData;\n};\n\nconst DDelegateResourceContract = (type, rawDataHex) => {\n    const [commonData, valuePb] = DCommonData(type, rawDataHex);\n    const delegateResourceContract = DelegateResourceContract.deserializeBinary(valuePb);\n    commonData.contract[0].parameter.value = {\n        owner_address: byteArray2hexStr(delegateResourceContract.getOwnerAddress_asU8()),\n        balance: delegateResourceContract.getBalance(),\n        lock: delegateResourceContract.getLock(),\n        lock_period: delegateResourceContract.getLockPeriod(),\n        receiver_address: byteArray2hexStr(delegateResourceContract.getReceiverAddress_asU8()),\n        resource: getResourceName(delegateResourceContract.getResource())\n    };\n    return commonData;\n};\n\nconst DUnDelegateResourceContract = (type, rawDataHex) => {\n    const [commonData, valuePb] = DCommonData(type, rawDataHex);\n    const undelegateResourceContract = UnDelegateResourceContract.deserializeBinary(valuePb);\n    commonData.contract[0].parameter.value = {\n        owner_address: byteArray2hexStr(undelegateResourceContract.getOwnerAddress_asU8()),\n        balance: undelegateResourceContract.getBalance(),\n        receiver_address: byteArray2hexStr(undelegateResourceContract.getReceiverAddress_asU8()),\n        resource: getResourceName(undelegateResourceContract.getResource()),\n    };\n    return commonData;\n};\n\nconst DWithdrawExpireUnfreezeContract = (type, rawDataHex) => {\n    const [commonData, valuePb] = DCommonData(type, rawDataHex);\n    const withdrawExpireUnfreezeContract = WithdrawExpireUnfreezeContract.deserializeBinary(valuePb);\n    commonData.contract[0].parameter.value = {\n        owner_address: byteArray2hexStr(withdrawExpireUnfreezeContract.getOwnerAddress_asU8()),\n    };\n    return commonData;\n};\n\nconst DeserializeTransaction = (type: string, rawDataHex: string) => {\n    if (!rawDataHex) {\n        throw new Error('rawDataHex cannot be empty');\n    }\n    if (!isHex(rawDataHex)) {\n        throw new Error('rawDataHex is not a valid hex string');\n    }\n    switch (type) {\n        case 'TriggerSmartContract':\n            return DTriggerSmartContract(type, rawDataHex);\n        case 'FreezeBalanceV2Contract':\n            return DFreezeBalanceV2Contract(type, rawDataHex);\n        case 'UnfreezeBalanceV2Contract':\n            return DUnfreezeBalanceV2Contract(type, rawDataHex);\n        case 'CancelAllUnfreezeV2Contract':\n            return DCancelAllUnfreezeV2Contract(type, rawDataHex);\n        case 'DelegateResourceContract':\n            return DDelegateResourceContract(type, rawDataHex);\n        case 'UnDelegateResourceContract':\n            return DUnDelegateResourceContract(type, rawDataHex);\n        case 'WithdrawExpireUnfreezeContract':\n            return DWithdrawExpireUnfreezeContract(type, rawDataHex);\n        default:\n            throw new Error(`trasaction ${type} not supported`);\n    }\n}\n\nexport { txJsonToPb, txPbToTxID, txPbToRawDataHex, txJsonToPbWithArgs, txCheckWithArgs, txCheck,\n    DeserializeTransaction };\n", "import { TronWeb } from '../../tronweb.js';\nimport { Transaction, TransactionWrapper } from '../../types/Transaction.js';\nimport { txCheckWithArgs, txJsonToPb, txPbToTxID, txPbToRawDataHex } from '../../utils/transaction.js';\nimport { keccak256 } from '../../utils/ethersUtils.js';\nimport { BlockWithoutDetail } from '../../types/APIResponse.js';\nimport HttpProvider from '../providers/HttpProvider.js';\nimport { ContractParamter, ContractType } from '../../types/Contract.js';\nimport { TriggerConstantContractOptions } from '../../types/TransactionBuilder.js';\n\nexport function fromUtf8(value: string) {\n    return TronWeb.fromUtf8(value).replace(/^0x/, '');\n}\n\nexport function deepCopyJson<T = unknown>(json: object): T {\n    return JSON.parse(JSON.stringify(json));\n}\nexport function resultManager(transaction: TransactionWrapper, data: unknown, options: TriggerConstantContractOptions) {\n    if (transaction.Error) throw new Error(transaction.Error);\n\n    if (transaction.result && transaction.result.message) {\n        throw new Error(TronWeb.toUtf8(transaction.result.message));\n    }\n    const authResult = txCheckWithArgs(transaction, data, options);\n    if (authResult) {\n        return transaction;\n    }\n    throw new Error('Invalid transaction');\n}\n\nexport function resultManagerTriggerSmartContract(\n    transaction: TransactionWrapper,\n    data: unknown,\n    options: TriggerConstantContractOptions\n) {\n    if (transaction.Error) throw new Error(transaction.Error);\n\n    if (transaction.result && transaction.result.message) {\n        throw new Error(TronWeb.toUtf8(transaction.result.message));\n    }\n\n    if (!(options._isConstant || options.estimateEnergy)) {\n        const authResult = txCheckWithArgs(transaction.transaction, data, options);\n        if (authResult) {\n            return transaction;\n        }\n        throw new Error('Invalid transaction');\n    }\n    return transaction;\n}\n\nexport function genContractAddress(ownerAddress: string, txID: string) {\n    return (\n        '41' +\n        keccak256(Buffer.from(txID + ownerAddress, 'hex'))\n            .toString()\n            .substring(2)\n            .slice(24)\n    );\n}\n\nexport function getHeaderInfo(node: HttpProvider) {\n    return node.request<BlockWithoutDetail>('wallet/getblock', { detail: false }, 'post').then((data) => {\n        return {\n            ref_block_bytes: data.block_header.raw_data.number.toString(16).slice(-4).padStart(4, '0'),\n            ref_block_hash: data.blockID.slice(16, 32),\n            expiration: data.block_header.raw_data.timestamp + 60 * 1000,\n            timestamp: data.block_header.raw_data.timestamp,\n        };\n    });\n}\n\nfunction checkBlockHeader(options = {} as Partial<Transaction['raw_data']>): boolean {\n    if (\n        typeof options['ref_block_bytes'] === 'undefined' &&\n        typeof options['ref_block_hash'] === 'undefined' &&\n        typeof options['expiration'] === 'undefined' &&\n        typeof options['timestamp'] === 'undefined'\n    ) {\n        return false;\n    }\n    if (typeof options['ref_block_bytes'] !== 'string') {\n        throw new Error('Invalid ref_block_bytes provided.');\n    }\n    if (typeof options['ref_block_hash'] !== 'string') {\n        throw new Error('Invalid ref_block_hash provided.');\n    }\n    if (typeof options['expiration'] !== 'number') {\n        throw new Error('Invalid expiration provided.');\n    }\n    if (typeof options['timestamp'] !== 'number') {\n        throw new Error('Invalid timestamp provided.');\n    }\n    return true;\n}\n\nexport async function createTransaction<T extends ContractParamter>(\n    tronWeb: TronWeb,\n    type: ContractType,\n    value: T,\n    Permission_id?: number,\n    options = {} as Partial<Omit<Transaction['raw_data'], 'contract'>>\n): Promise<Transaction<T>> {\n    const tx: Transaction<T> = {\n        visible: false,\n        txID: '',\n        raw_data_hex: '',\n        raw_data: {\n            contract: [\n                {\n                    parameter: {\n                        value,\n                        type_url: `type.googleapis.com/protocol.${type}`,\n                    },\n                    type,\n                },\n            ],\n            ...(checkBlockHeader(options) ? ({} as Transaction['raw_data']) : await getHeaderInfo(tronWeb.fullNode)),\n            ...options,\n        },\n    };\n    if (Permission_id) {\n        tx.raw_data.contract[0].Permission_id = Permission_id;\n    }\n    const pb = txJsonToPb(tx);\n    tx.txID = txPbToTxID(pb).replace(/^0x/, '');\n    tx.raw_data_hex = txPbToRawDataHex(pb).toLowerCase();\n    return tx;\n}\n\nexport function getTransactionOptions(options: { blockHeader?: Partial<Transaction['raw_data']> } = {}) {\n    const ret = {} as Partial<Transaction['raw_data']>;\n    if (checkBlockHeader(options.blockHeader)) {\n        ret['ref_block_bytes'] = options.blockHeader!['ref_block_bytes'];\n        ret['ref_block_hash'] = options.blockHeader!['ref_block_hash'];\n        ret['expiration'] = options.blockHeader!['expiration'];\n        ret['timestamp'] = options.blockHeader!['timestamp'];\n    }\n    return ret;\n}\n", "import { TronWeb } from '../../tronweb.js';\nimport { AbiCoder, keccak256 } from '../../utils/ethersUtils.js';\nimport { ADDRESS_PREFIX_REGEX, toHex } from '../../utils/address.js';\nimport { encodeParamsV2ByABI } from '../../utils/abi.js';\nimport { CreateSmartContractTransaction, SignedTransaction, Transaction, TransactionWrapper } from '../../types/Transaction.js';\nimport { Validator } from '../../paramValidator/index.js';\nimport { GetSignWeightResponse } from '../../types/APIResponse.js';\nimport { isArray, isInteger, isNotNullOrUndefined, isObject, isString } from '../../utils/validations.js';\nimport {\n    AccountCreateContract,\n    AccountPermissionUpdateContract,\n    AccountUpdateContract,\n    AssetIssueContract,\n    CancelFreezeBalanceV2Contract,\n    ClearABIContract,\n    ContractParamter,\n    ContractType,\n    CreateSmartContract,\n    DelegateResourceContract,\n    DeployConstantContract,\n    ExchangeCreateContract,\n    ExchangeInjectContract,\n    ExchangeTransactionContract,\n    ExchangeWithdrawContract,\n    FreezeBalanceContract,\n    FreezeBalanceV2Contract,\n    ParticipateAssetIssueContract,\n    Permission,\n    ProposalCreateContract,\n    ProposalDeleteContract,\n    SetAccountIdContract,\n    TransferAssetContract,\n    TransferContract,\n    TriggerSmartContract,\n    UnDelegateResourceContract,\n    UnfreezeBalanceContract,\n    UnfreezeBalanceV2Contract,\n    UpdateAssetContract,\n    UpdateBrokerageContract,\n    UpdateEnergyLimitContract,\n    UpdateSettingContract,\n    VoteProposalContract,\n    VoteWitnessContract,\n    WithdrawBalanceContract,\n    WithdrawExpireUnfreezeContract,\n    WitnessCreateContract,\n} from '../../types/Contract.js';\nimport {\n    createTransaction,\n    deepCopyJson,\n    fromUtf8,\n    genContractAddress,\n    resultManager,\n    resultManagerTriggerSmartContract,\n    getTransactionOptions,\n} from './helper.js';\nimport {\n    AlterTransactionOptions,\n    CreateSmartContractOptions,\n    CreateTokenOptions,\n    DeployConstantContractOptions,\n    TriggerConstantContractOptions,\n    TransactionCommonOptions,\n    Resource,\n    ContractFunctionParameter,\n    TriggerSmartContractOptions,\n    TxLocal,\n    UpdateTokenOptions,\n    VoteInfo,\n} from '../../types/TransactionBuilder.js';\nimport { Address } from '../../types/Trx.js';\nimport { ConstructorFragment, ContractAbiInterface, FunctionFragment } from '../../types/ABI.js';\n\ninterface IArgs extends TriggerSmartContract {\n    function_selector?: string;\n    parameter?: string;\n    fee_limit?: number;\n    Permission_id?: number;\n}\nexport class TransactionBuilder {\n    private tronWeb: TronWeb;\n    private validator: Validator;\n    constructor(tronWeb?: TronWeb) {\n        if (!tronWeb || !(tronWeb instanceof TronWeb)) {\n            throw new Error('Expected instance of TronWeb');\n        }\n        this.tronWeb = tronWeb;\n        this.validator = new Validator();\n    }\n\n    async sendTrx(\n        to: string,\n        amount = 0,\n        from: string = this.tronWeb.defaultAddress.hex as string,\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<TransferContract>> {\n        // accept amounts passed as strings\n        amount = parseInt(amount);\n\n        this.validator.notValid([\n            {\n                name: 'recipient',\n                type: 'address',\n                value: to,\n            },\n            {\n                name: 'origin',\n                type: 'address',\n                value: from as string,\n            },\n            {\n                names: ['recipient', 'origin'],\n                type: 'notEqual',\n                msg: 'Cannot transfer TRX to the same account',\n            },\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount,\n            },\n        ]);\n\n        const data: TransferContract = {\n            to_address: toHex(to),\n            owner_address: toHex(from as string),\n            amount: amount,\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction<TransferContract>(this.tronWeb, ContractType.TransferContract, data, options?.permissionId, transactionOptions);\n    }\n\n    async sendToken(\n        to: string,\n        amount = 0,\n        tokenId: string,\n        from: string = this.tronWeb.defaultAddress.hex as string,\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<TransferAssetContract>> {\n        amount = parseInt(amount);\n        this.validator.notValid([\n            {\n                name: 'recipient',\n                type: 'address',\n                value: to,\n            },\n            {\n                name: 'origin',\n                type: 'address',\n                value: from as string,\n            },\n            {\n                names: ['recipient', 'origin'],\n                type: 'notEqual',\n                msg: 'Cannot transfer tokens to the same account',\n            },\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount,\n            },\n            {\n                name: 'token ID',\n                type: 'tokenId',\n                value: tokenId,\n            },\n        ]);\n\n        const data: TransferAssetContract = {\n            to_address: toHex(to),\n            owner_address: toHex(from as string),\n            asset_name: fromUtf8(tokenId as string),\n            amount,\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction<TransferAssetContract>(this.tronWeb, ContractType.TransferAssetContract, data, options?.permissionId, transactionOptions);\n    }\n\n    async purchaseToken(\n        issuerAddress: string,\n        tokenId: string,\n        amount = 0,\n        buyer: string = this.tronWeb.defaultAddress.hex as string,\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<ParticipateAssetIssueContract>> {\n        this.validator.notValid([\n            {\n                name: 'buyer',\n                type: 'address',\n                value: buyer as string,\n            },\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress,\n            },\n            {\n                names: ['buyer', 'issuer'],\n                type: 'notEqual',\n                msg: 'Cannot purchase tokens from same account',\n            },\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount,\n            },\n            {\n                name: 'token ID',\n                type: 'tokenId',\n                value: tokenId,\n            },\n        ]);\n\n        const data: ParticipateAssetIssueContract = {\n            to_address: toHex(issuerAddress),\n            owner_address: toHex(buyer as string),\n            asset_name: fromUtf8(tokenId as string),\n            amount: parseInt(amount),\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction<ParticipateAssetIssueContract>(this.tronWeb, ContractType.ParticipateAssetIssueContract, data, options?.permissionId, transactionOptions);\n    }\n\n    async freezeBalance(\n        amount = 0,\n        duration = 3,\n        resource: Resource = 'BANDWIDTH',\n        ownerAddress: string = this.tronWeb.defaultAddress.hex as string,\n        receiverAddress?: string,\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<FreezeBalanceContract>> {\n        this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: ownerAddress as string,\n            },\n            {\n                name: 'receiver',\n                type: 'address',\n                value: receiverAddress as string,\n                optional: true,\n            },\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount,\n            },\n            {\n                name: 'duration',\n                type: 'integer',\n                gte: 3,\n                value: duration,\n            },\n            {\n                name: 'resource',\n                type: 'resource',\n                value: resource,\n                msg: 'Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"',\n            },\n        ]);\n        const data: FreezeBalanceContract = {\n            owner_address: toHex(ownerAddress as string),\n            frozen_balance: parseInt(amount),\n            frozen_duration: parseInt(String(duration)),\n        };\n        if (resource !== 'BANDWIDTH') {\n            data.resource = resource as Resource;\n        }\n\n        if (isNotNullOrUndefined(receiverAddress) && toHex(receiverAddress as string) !== toHex(ownerAddress as string)) {\n            data.receiver_address = toHex(receiverAddress as string);\n        }\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction<FreezeBalanceContract>(this.tronWeb, ContractType.FreezeBalanceContract, data, options?.permissionId, transactionOptions);\n    }\n\n    async unfreezeBalance(\n        resource: Resource = 'BANDWIDTH',\n        address: string = this.tronWeb.defaultAddress.hex as string,\n        receiverAddress?: string,\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<UnfreezeBalanceContract>> {\n        this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address as string,\n            },\n            {\n                name: 'receiver',\n                type: 'address',\n                value: receiverAddress as string,\n                optional: true,\n            },\n            {\n                name: 'resource',\n                type: 'resource',\n                value: resource,\n                msg: 'Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"',\n            },\n        ]);\n        const data: Partial<UnfreezeBalanceContract> = {\n            owner_address: toHex(address as string),\n        };\n        if (resource !== 'BANDWIDTH') {\n            data.resource = resource as Resource;\n        }\n\n        if (isNotNullOrUndefined(receiverAddress) && toHex(receiverAddress as string) !== toHex(address as string)) {\n            data.receiver_address = toHex(receiverAddress as string);\n        }\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction<UnfreezeBalanceContract>(this.tronWeb, ContractType.UnfreezeBalanceContract, data as UnfreezeBalanceContract, options?.permissionId, transactionOptions);\n    }\n\n    async freezeBalanceV2(\n        amount = 0,\n        resource: Resource = 'BANDWIDTH',\n        address: string = this.tronWeb.defaultAddress.hex as string,\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<FreezeBalanceV2Contract>> {\n        this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address as string,\n            },\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount,\n            },\n            {\n                name: 'resource',\n                type: 'resource',\n                value: resource as string,\n                msg: 'Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"',\n            },\n        ]);\n        const data: FreezeBalanceV2Contract = {\n            owner_address: toHex(address as string),\n            frozen_balance: parseInt(amount),\n        };\n        if (resource !== 'BANDWIDTH') {\n            data.resource = resource as Resource;\n        }\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction<FreezeBalanceV2Contract>(this.tronWeb, ContractType.FreezeBalanceV2Contract, data, options?.permissionId, transactionOptions);\n    }\n\n    async unfreezeBalanceV2(\n        amount = 0,\n        resource: Resource = 'BANDWIDTH',\n        address: string = this.tronWeb.defaultAddress.hex as string,\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<UnfreezeBalanceV2Contract>> {\n        this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address as string,\n            },\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount,\n            },\n            {\n                name: 'resource',\n                type: 'resource',\n                value: resource as string,\n                msg: 'Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"',\n            },\n        ]);\n        const data: UnfreezeBalanceV2Contract = {\n            owner_address: toHex(address as string),\n            unfreeze_balance: parseInt(amount),\n        };\n        if (resource !== 'BANDWIDTH') {\n            data.resource = resource as Resource;\n        }\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction<UnfreezeBalanceV2Contract>(this.tronWeb, ContractType.UnfreezeBalanceV2Contract, data, options?.permissionId, transactionOptions);\n    }\n\n    async cancelUnfreezeBalanceV2(\n        address: string = this.tronWeb.defaultAddress.hex as string,\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<CancelFreezeBalanceV2Contract>> {\n        this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address as string,\n            },\n        ]);\n        const data: CancelFreezeBalanceV2Contract = {\n            owner_address: toHex(address as string),\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction<CancelFreezeBalanceV2Contract>(this.tronWeb, ContractType.CancelAllUnfreezeV2Contract, data, options?.permissionId, transactionOptions);\n    }\n\n    async delegateResource(\n        amount = 0,\n        receiverAddress: string,\n        resource: Resource = 'BANDWIDTH',\n        address: string = this.tronWeb.defaultAddress.hex as string,\n        lock = false,\n        lockPeriod?: number,\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<DelegateResourceContract>> {\n        this.validator.notValid([\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount,\n            },\n            {\n                name: 'resource',\n                type: 'resource',\n                value: resource as string,\n                msg: 'Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"',\n            },\n            {\n                name: 'receiver',\n                type: 'address',\n                value: receiverAddress,\n            },\n            {\n                name: 'origin',\n                type: 'address',\n                value: address as string,\n            },\n            {\n                name: 'lock',\n                type: 'boolean',\n                value: lock as boolean,\n            },\n            {\n                name: 'lock period',\n                type: 'integer',\n                gte: 0,\n                value: lockPeriod as number,\n                optional: true,\n            },\n        ]);\n        if (toHex(receiverAddress) === toHex(address as string)) {\n            throw new Error('Receiver address must not be the same as owner address');\n        }\n\n        const data: DelegateResourceContract = {\n            owner_address: toHex(address as string),\n            receiver_address: toHex(receiverAddress),\n            balance: parseInt(amount),\n        };\n        if (resource !== 'BANDWIDTH') {\n            data.resource = resource as Resource;\n        }\n        if (lock) {\n            data.lock = lock as boolean;\n            if (isNotNullOrUndefined(lockPeriod)) {\n                data.lock_period = lockPeriod as number;\n            }\n        }\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction<DelegateResourceContract>(this.tronWeb, ContractType.DelegateResourceContract, data, options?.permissionId, transactionOptions);\n    }\n\n    async undelegateResource(\n        amount = 0,\n        receiverAddress: string,\n        resource: Resource = 'BANDWIDTH',\n        address: string = this.tronWeb.defaultAddress.hex as string,\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<UnDelegateResourceContract>> {\n        this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address as string,\n            },\n            {\n                name: 'receiver',\n                type: 'address',\n                value: receiverAddress,\n            },\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount,\n            },\n            {\n                name: 'resource',\n                type: 'resource',\n                value: resource as string,\n                msg: 'Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"',\n            },\n        ]);\n\n        if (toHex(receiverAddress) === toHex(address as string)) {\n            throw new Error('Receiver address must not be the same as owner address');\n        }\n\n        const data: UnDelegateResourceContract = {\n            owner_address: toHex(address as string),\n            receiver_address: toHex(receiverAddress),\n            balance: parseInt(amount),\n        };\n        if (resource !== 'BANDWIDTH') {\n            data.resource = resource as Resource;\n        }\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction<UnDelegateResourceContract>(this.tronWeb, ContractType.UnDelegateResourceContract, data, options?.permissionId, transactionOptions);\n    }\n\n    async withdrawExpireUnfreeze(\n        address: string = this.tronWeb.defaultAddress.hex as string,\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<WithdrawExpireUnfreezeContract>> {\n        this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address,\n            },\n        ]);\n\n        const data: WithdrawExpireUnfreezeContract = {\n            owner_address: toHex(address),\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction<WithdrawExpireUnfreezeContract>(this.tronWeb, ContractType.WithdrawExpireUnfreezeContract, data, options?.permissionId, transactionOptions);\n    }\n\n    async withdrawBlockRewards(\n        address: string = this.tronWeb.defaultAddress.hex as string,\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<WithdrawBalanceContract>> {\n        this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address as string,\n            },\n        ]);\n\n        const data: WithdrawBalanceContract = {\n            owner_address: toHex(address as string),\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction<WithdrawBalanceContract>(this.tronWeb, ContractType.WithdrawBalanceContract, data, options?.permissionId, transactionOptions);\n    }\n\n    async applyForSR(\n        address: string = this.tronWeb.defaultAddress.hex as string,\n        url = '',\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<WitnessCreateContract>> {\n        this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address,\n            },\n            {\n                name: 'url',\n                type: 'url',\n                value: url as string,\n                msg: 'Invalid url provided',\n            },\n            {\n                name: 'url',\n                type: 'string',\n                value: url as string,\n                lte: 256,\n                msg: 'Invalid url provided',\n            },\n        ]);\n\n        const data: WitnessCreateContract = {\n            owner_address: toHex(address as string),\n            url: fromUtf8(url as string),\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction<WitnessCreateContract>(this.tronWeb, ContractType.WitnessCreateContract, data, options?.permissionId, transactionOptions);\n    }\n\n    async vote(\n        votes: VoteInfo = {},\n        voterAddress: string = this.tronWeb.defaultAddress.hex as string,\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<VoteWitnessContract>> {\n        this.validator.notValid([\n            {\n                name: 'voter',\n                type: 'address',\n                value: voterAddress as string,\n            },\n            {\n                name: 'votes',\n                type: 'notEmptyObject',\n                value: votes as VoteInfo,\n            },\n        ]);\n\n        const entries = Object.entries(votes);\n        for (const [srAddress, voteCount] of entries) {\n            this.validator.notValid([\n                {\n                    name: 'SR',\n                    type: 'address',\n                    value: srAddress,\n                },\n                {\n                    name: 'vote count',\n                    type: 'integer',\n                    gt: 0,\n                    value: voteCount,\n                    msg: 'Invalid vote count provided for SR: ' + srAddress,\n                },\n            ]);\n        }\n        const voteList = entries.map(([srAddress, voteCount]) => {\n            return {\n                vote_address: toHex(srAddress),\n                vote_count: parseInt(voteCount),\n            };\n        });\n\n        const data: VoteWitnessContract = {\n            owner_address: toHex(voterAddress as string),\n            votes: voteList,\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction<VoteWitnessContract>(this.tronWeb, ContractType.VoteWitnessContract, data, options?.permissionId, transactionOptions);\n    }\n\n    async createSmartContract(\n        options: CreateSmartContractOptions = {} as CreateSmartContractOptions,\n        issuerAddress: string = this.tronWeb.defaultAddress.hex as string\n    ): Promise<CreateSmartContractTransaction> {\n        const feeLimit = options.feeLimit || this.tronWeb.feeLimit;\n        let userFeePercentage = options.userFeePercentage;\n        if (typeof userFeePercentage !== 'number' && !userFeePercentage) {\n            userFeePercentage = 100;\n        }\n        const originEnergyLimit = options.originEnergyLimit || 10_000_000;\n        const callValue = options.callValue || 0;\n        const tokenValue = options.tokenValue;\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        const tokenId = options.tokenId || options.token_id;\n\n        let { abi } = options;\n        const { parameters = [] } = options;\n        let parameter = '';\n        const { bytecode = false, name = '' } = options;\n        if (abi && isString(abi)) {\n            try {\n                abi = JSON.parse(abi);\n            } catch {\n                throw new Error('Invalid options.abi provided');\n            }\n        }\n\n        const newAbi = abi as { entrys: ContractAbiInterface } | ContractAbiInterface;\n        let entries: ContractAbiInterface | null = newAbi as ContractAbiInterface;\n        if ((newAbi as { entrys: ContractAbiInterface }).entrys) {\n            entries = (newAbi as { entrys: ContractAbiInterface }).entrys;\n        }\n\n        if (!isArray(entries)) throw new Error('Invalid options.abi provided');\n\n        const payable = entries.some((func) => {\n            return func.type === 'constructor' && 'payable' === (func as ConstructorFragment).stateMutability.toLowerCase();\n        });\n\n        this.validator.notValid([\n            {\n                name: 'bytecode',\n                type: 'hex',\n                value: bytecode,\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gt: 0,\n            },\n            {\n                name: 'callValue',\n                type: 'integer',\n                value: callValue,\n                gte: 0,\n            },\n            {\n                name: 'userFeePercentage',\n                type: 'integer',\n                value: userFeePercentage,\n                gte: 0,\n                lte: 100,\n            },\n            {\n                name: 'originEnergyLimit',\n                type: 'integer',\n                value: originEnergyLimit,\n                gte: 0,\n                lte: 10_000_000,\n            },\n            {\n                name: 'parameters',\n                type: 'array',\n                value: parameters,\n            },\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress,\n            },\n            {\n                name: 'tokenValue',\n                type: 'integer',\n                value: tokenValue,\n                gte: 0,\n                optional: true,\n            },\n            {\n                name: 'tokenId',\n                type: 'integer',\n                value: tokenId,\n                gte: 0,\n                optional: true,\n            },\n        ]);\n\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        if (!payable && (callValue > 0 || tokenValue > 0))\n            throw new Error('When contract is not payable, options.callValue and options.tokenValue must be 0');\n\n        const { rawParameter, funcABIV2, parametersV2 } = options as any;\n        if (rawParameter && isString(rawParameter)) {\n            parameter = rawParameter.replace(/^(0x)/, '');\n        } else if (funcABIV2) {\n            parameter = encodeParamsV2ByABI(funcABIV2, parametersV2).replace(/^(0x)/, '');\n        } else {\n            let constructorParams: any = entries.find((it: any) => {\n                return it.type === 'constructor';\n            });\n\n            if (typeof constructorParams !== 'undefined' && constructorParams) {\n                const abiCoder = new AbiCoder();\n                const types = [];\n                const values = [];\n                constructorParams = constructorParams.inputs;\n\n                if (parameters.length != constructorParams.length)\n                    throw new Error(`constructor needs ${constructorParams.length} but ${parameters.length} provided`);\n\n                for (let i = 0; i < parameters.length; i++) {\n                    let type = constructorParams[i].type;\n                    let value: any = parameters[i];\n\n                    if (!type || !isString(type) || !type.length) throw new Error('Invalid parameter type provided: ' + type);\n\n                    const replaceAddressPrefix = (value: unknown): any => {\n                        if (isArray(value)) {\n                            return value.map((v) => replaceAddressPrefix(v));\n                        }\n                        return toHex(value as string).replace(ADDRESS_PREFIX_REGEX, '0x');\n                    };\n                    if (type === 'address') value = replaceAddressPrefix(value);\n                    else if (type.match(/^([^\\x5b]*)(\\x5b|$)/)?.[0] === 'address[') value = replaceAddressPrefix(value);\n                    else if (/trcToken/.test(type)) {\n                        type = type.replace(/trcToken/, 'uint256');\n                    }\n\n                    types.push(type);\n                    values.push(value);\n                }\n\n                try {\n                    parameter = abiCoder.encode(types, values).replace(/^(0x)/, '');\n                } catch (ex) {\n                    throw new Error(ex as string);\n                }\n            } else {\n                parameter = '';\n            }\n        }\n\n        const args: any = {\n            owner_address: toHex(issuerAddress),\n            fee_limit: parseInt(feeLimit),\n            call_value: parseInt(callValue),\n            consume_user_resource_percent: userFeePercentage,\n            origin_energy_limit: originEnergyLimit,\n            abi: JSON.stringify(entries),\n            bytecode,\n            parameter,\n            name,\n        };\n\n        // tokenValue and tokenId can cause errors if provided when the trx10 proposal has not been approved yet. So we set them only if they are passed to the method.\n        if (isNotNullOrUndefined(tokenValue)) {\n            args.call_token_value = parseInt(tokenValue as number);\n        }\n        if (isNotNullOrUndefined(tokenId)) {\n            args.token_id = parseInt(tokenId);\n        }\n\n        const contract: CreateSmartContract = {} as CreateSmartContract;\n        contract.owner_address = args.owner_address;\n        if (isNotNullOrUndefined(args.call_token_value)) {\n            contract.call_token_value = args.call_token_value;\n        }\n        if (isNotNullOrUndefined(args.token_id)) {\n            contract.token_id = args.token_id;\n        }\n        const new_contract = (contract.new_contract = {} as CreateSmartContract['new_contract']);\n\n        if (args.abi) {\n            new_contract.abi = {\n                entrys: JSON.parse(args.abi),\n            };\n        } else {\n            new_contract.abi = {};\n        }\n        if (args.call_value) {\n            new_contract.call_value = args.call_value;\n        }\n        new_contract.consume_user_resource_percent = args.consume_user_resource_percent;\n        new_contract.origin_energy_limit = args.origin_energy_limit;\n        new_contract.origin_address = args.origin_address ?? args.owner_address;\n        if (args.bytecode + args.parameter) {\n            new_contract.bytecode = (args.bytecode + args.parameter).replace(/^0x/, '');\n        }\n        if (isNotNullOrUndefined(args.name)) {\n            new_contract.name = args.name;\n        }\n        const transactionOptions = getTransactionOptions(options);\n        const tx = (await createTransaction(this.tronWeb, ContractType.CreateSmartContract, contract, options?.permissionId, {\n            ...transactionOptions,\n            fee_limit: args.fee_limit,\n        })) as CreateSmartContractTransaction;\n        tx.contract_address = genContractAddress(args.owner_address, tx.txID);\n        return tx;\n    }\n\n    async triggerSmartContract(\n        contractAddress: string,\n        functionSelector: string,\n        options?: TriggerSmartContractOptions,\n        parameters?: ContractFunctionParameter[],\n        issuerAddress?: string\n    ): Promise<TransactionWrapper> {\n        const params: Parameters<typeof this._triggerSmartContractLocal> = [\n            contractAddress,\n            functionSelector,\n            options,\n            parameters,\n            issuerAddress,\n        ];\n        if (typeof params[2] !== 'object') {\n            params[2] = {\n                feeLimit: params[2],\n                callValue: params[3] as unknown as number,\n            };\n            params.splice(3, 1);\n        }\n        if (params[2]?.txLocal) {\n            return this._triggerSmartContractLocal(...params);\n        }\n        return this._triggerSmartContract(...params);\n    }\n\n    async triggerConstantContract(\n        contractAddress: string,\n        functionSelector: string,\n        options: TriggerConstantContractOptions = {},\n        parameters: ContractFunctionParameter[] = [],\n        issuerAddress: string = this.tronWeb.defaultAddress.hex as string\n    ): Promise<TransactionWrapper> {\n        options._isConstant = true;\n        return this._triggerSmartContract(contractAddress, functionSelector, options, parameters, issuerAddress);\n    }\n\n    async triggerConfirmedConstantContract(\n        contractAddress: string,\n        functionSelector: string,\n        options: TriggerConstantContractOptions = {},\n        parameters: ContractFunctionParameter[] = [],\n        issuerAddress: string = this.tronWeb.defaultAddress.hex as string\n    ): Promise<TransactionWrapper> {\n        options._isConstant = true;\n        options.confirmed = true;\n        return this._triggerSmartContract(contractAddress, functionSelector, options, parameters, issuerAddress);\n    }\n\n    async estimateEnergy(\n        contractAddress: string,\n        functionSelector: string,\n        options: TriggerConstantContractOptions = {},\n        parameters: ContractFunctionParameter[] = [],\n        issuerAddress: string = this.tronWeb.defaultAddress.hex as string\n    ): Promise<{ result: { result: boolean }; energy_required: number }> {\n        options.estimateEnergy = true;\n        const result = await this._triggerSmartContract(contractAddress, functionSelector, options, parameters, issuerAddress);\n        return result as { result: { result: boolean }; energy_required: number };\n    }\n\n    async deployConstantContract(options: DeployConstantContractOptions = { input: '', ownerAddress: '' }) {\n        const { input, ownerAddress, tokenId, tokenValue, callValue = 0 } = options;\n\n        this.validator.notValid([\n            {\n                name: 'input',\n                type: 'not-empty-string',\n                value: input,\n            },\n            {\n                name: 'callValue',\n                type: 'integer',\n                value: callValue,\n                gte: 0,\n            },\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress,\n            },\n            {\n                name: 'tokenValue',\n                type: 'integer',\n                value: tokenValue,\n                gte: 0,\n                optional: true,\n            },\n            {\n                name: 'tokenId',\n                type: 'integer',\n                value: tokenId,\n                gte: 0,\n                optional: true,\n            },\n        ]);\n\n        const args: DeployConstantContract = {\n            data: input,\n            owner_address: toHex(ownerAddress),\n            call_value: callValue,\n        };\n\n        if (tokenId) {\n            args.token_id = tokenId;\n        }\n        if (tokenValue) {\n            args.call_token_value = tokenValue;\n        }\n\n        const pathInfo = `wallet${options.confirmed ? 'solidity' : ''}/estimateenergy`;\n        const transaction: TransactionWrapper = await this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(\n            pathInfo,\n            args,\n            'post'\n        );\n        if (transaction.Error) throw new Error(transaction.Error);\n\n        if (transaction.result && transaction.result.message) {\n            throw new Error(this.tronWeb.toUtf8(transaction.result.message));\n        }\n        return transaction as { result: { result: boolean }; energy_required: number };\n    }\n\n    _getTriggerSmartContractArgs(\n        contractAddress: string,\n        functionSelector: string,\n        options: TriggerConstantContractOptions,\n        parameters: ContractFunctionParameter[],\n        issuerAddress: string,\n        tokenValue?: number,\n        tokenId?: string,\n        callValue?: number,\n        feeLimit?: number\n    ) {\n        const args: IArgs = {\n            contract_address: toHex(contractAddress),\n            owner_address: toHex(issuerAddress),\n        };\n\n        if (functionSelector && isString(functionSelector)) {\n            functionSelector = functionSelector.replace(/\\s*/g, '');\n            let parameterStr;\n            if (parameters.length) {\n                const abiCoder = new AbiCoder();\n                let types = [];\n                const values = [];\n\n                for (let i = 0; i < parameters.length; i++) {\n                    let { value } = parameters[i];\n                    const { type } = parameters[i];\n\n                    if (!type || !isString(type) || !type.length) throw new Error('Invalid parameter type provided: ' + type);\n\n                    const replaceAddressPrefix = (value: unknown): any => {\n                        if (isArray(value)) {\n                            return value.map((v) => replaceAddressPrefix(v));\n                        }\n                        return toHex(value as string).replace(ADDRESS_PREFIX_REGEX, '0x');\n                    };\n                    if (type === 'address') value = replaceAddressPrefix(value);\n                    else if (type.match(/^([^\\x5b]*)(\\x5b|$)/)?.[0] === 'address[') value = replaceAddressPrefix(value);\n\n                    types.push(type);\n                    values.push(value);\n                }\n\n                try {\n                    // workaround for unsupported trcToken type\n                    types = types.map((type) => {\n                        if (/trcToken/.test(type)) {\n                            type = type.replace(/trcToken/, 'uint256');\n                        }\n                        return type;\n                    });\n\n                    parameterStr = abiCoder.encode(types, values).replace(/^(0x)/, '');\n                } catch (ex) {\n                    throw new Error(ex as string);\n                }\n            } else parameterStr = '';\n\n            // work for abiv2 if passed the function abi in options\n            if (options.funcABIV2) {\n                parameterStr = encodeParamsV2ByABI(\n                    options.funcABIV2 as FunctionFragment,\n                    options.parametersV2 as unknown[]\n                ).replace(/^(0x)/, '');\n            }\n\n            if (options.shieldedParameter && isString(options.shieldedParameter)) {\n                parameterStr = options.shieldedParameter.replace(/^(0x)/, '');\n            }\n\n            if (options.rawParameter && isString(options.rawParameter)) {\n                parameterStr = options.rawParameter.replace(/^(0x)/, '');\n            }\n\n            args.function_selector = functionSelector;\n            args.parameter = parameterStr;\n        } else if (options.input) {\n            args.data = options.input;\n        }\n\n        args.call_value = parseInt(callValue as number);\n        if (isNotNullOrUndefined(tokenValue)) args.call_token_value = parseInt(tokenValue as number);\n        if (isNotNullOrUndefined(tokenId)) args.token_id = parseInt(tokenId as string);\n\n        if (!(options._isConstant || options.estimateEnergy)) {\n            args.fee_limit = parseInt(feeLimit as number);\n        }\n\n        if (options.permissionId) {\n            args.Permission_id = options.permissionId;\n        }\n\n        return args;\n    }\n\n    async _triggerSmartContractLocal(\n        contractAddress: string,\n        functionSelector: string,\n        options: TriggerConstantContractOptions = {},\n        parameters: ContractFunctionParameter[] = [],\n        issuerAddress = this.tronWeb.defaultAddress.hex as string\n    ) {\n        const { tokenValue, tokenId, callValue, feeLimit } = Object.assign(\n            {\n                callValue: 0,\n                feeLimit: this.tronWeb.feeLimit,\n            },\n            options\n        );\n\n        this.validator.notValid([\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gt: 0,\n            },\n            {\n                name: 'callValue',\n                type: 'integer',\n                value: callValue,\n                gte: 0,\n            },\n            {\n                name: 'parameters',\n                type: 'array',\n                value: parameters,\n            },\n            {\n                name: 'contract',\n                type: 'address',\n                value: contractAddress,\n            },\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress,\n                optional: true,\n            },\n            {\n                name: 'tokenValue',\n                type: 'integer',\n                value: tokenValue,\n                gte: 0,\n                optional: true,\n            },\n            {\n                name: 'tokenId',\n                type: 'integer',\n                value: tokenId,\n                gte: 0,\n                optional: true,\n            },\n        ]);\n\n        const args = this._getTriggerSmartContractArgs(\n            contractAddress,\n            functionSelector,\n            options,\n            parameters,\n            issuerAddress,\n            tokenValue,\n            tokenId,\n            callValue,\n            feeLimit\n        );\n\n        if (args.function_selector) {\n            args.data = keccak256(Buffer.from(args.function_selector, 'utf-8')).toString().substring(2, 10) + args.parameter;\n        }\n        const value: TriggerSmartContract = {\n            data: args.data,\n            owner_address: args.owner_address,\n            contract_address: args.contract_address,\n        };\n        if (args.call_value) {\n            value.call_value = args.call_value;\n        }\n        if (args.call_token_value) {\n            value.call_token_value = args.call_token_value;\n        }\n        if (args.token_id) {\n            value.token_id = args.token_id;\n        }\n        const transactionOptions = getTransactionOptions(options);\n        const transaction = await createTransaction<TriggerSmartContract>(\n            this.tronWeb,\n            ContractType.TriggerSmartContract,\n            value,\n            options.permissionId,\n            {\n                ...transactionOptions,\n                fee_limit: args.fee_limit,\n            }\n        );\n        return {\n            result: {\n                result: true,\n            },\n            transaction,\n        };\n    }\n\n    async _triggerSmartContract(\n        contractAddress: string,\n        functionSelector: string,\n        options: TriggerConstantContractOptions = {},\n        parameters: ContractFunctionParameter[] = [],\n        issuerAddress: string = this.tronWeb.defaultAddress.hex as string\n    ) {\n        const { tokenValue, tokenId, callValue, feeLimit } = Object.assign(\n            {\n                callValue: 0,\n                feeLimit: this.tronWeb.feeLimit,\n            },\n            options\n        );\n        this.validator.notValid([\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gt: 0,\n            },\n            {\n                name: 'callValue',\n                type: 'integer',\n                value: callValue,\n                gte: 0,\n            },\n            {\n                name: 'parameters',\n                type: 'array',\n                value: parameters,\n            },\n            {\n                name: 'contract',\n                type: 'address',\n                value: contractAddress,\n            },\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress,\n                optional: true,\n            },\n            {\n                name: 'tokenValue',\n                type: 'integer',\n                value: tokenValue,\n                gte: 0,\n                optional: true,\n            },\n            {\n                name: 'tokenId',\n                type: 'integer',\n                value: tokenId,\n                gte: 0,\n                optional: true,\n            },\n        ]);\n        const args = this._getTriggerSmartContractArgs(\n            contractAddress,\n            functionSelector,\n            options,\n            parameters,\n            issuerAddress,\n            tokenValue,\n            tokenId,\n            callValue,\n            feeLimit\n        );\n\n        let pathInfo = 'triggersmartcontract';\n        if (options._isConstant) {\n            pathInfo = 'triggerconstantcontract';\n        } else if (options.estimateEnergy) {\n            pathInfo = 'estimateenergy';\n        }\n\n        pathInfo = `wallet${options.confirmed ? 'solidity' : ''}/${pathInfo}`;\n        const transaction: TransactionWrapper = await this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(\n            pathInfo,\n            args,\n            'post'\n        );\n        return resultManagerTriggerSmartContract(transaction, args, options);\n    }\n\n    async clearABI(\n        contractAddress: string,\n        ownerAddress: string = this.tronWeb.defaultAddress.hex as string,\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<ClearABIContract>> {\n        if (!TronWeb.isAddress(contractAddress)) throw new Error('Invalid contract address provided');\n        if (!TronWeb.isAddress(ownerAddress)) throw new Error('Invalid owner address provided');\n        const data: ClearABIContract = {\n            contract_address: toHex(contractAddress),\n            owner_address: toHex(ownerAddress as string),\n        };\n\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        if (this.tronWeb.trx.cache.contracts[contractAddress]) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            delete this.tronWeb.trx.cache.contracts[contractAddress];\n        }\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction<ClearABIContract>(this.tronWeb, ContractType.ClearABIContract, data, options?.permissionId, transactionOptions);\n    }\n    async updateBrokerage(\n        brokerage: number,\n        ownerAddress: string = this.tronWeb.defaultAddress.hex as string,\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<UpdateBrokerageContract>> {\n        if (!isNotNullOrUndefined(brokerage)) throw new Error('Invalid brokerage provided');\n\n        if (!isInteger(brokerage) || brokerage < 0 || brokerage > 100)\n            throw new Error('Brokerage must be an integer between 0 and 100');\n\n        if (!TronWeb.isAddress(ownerAddress)) throw new Error('Invalid owner address provided');\n\n        const data: UpdateBrokerageContract = {\n            brokerage: parseInt(brokerage),\n            owner_address: toHex(ownerAddress as string),\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction<UpdateBrokerageContract>(this.tronWeb, ContractType.UpdateBrokerageContract, data, options?.permissionId, transactionOptions);\n    }\n\n    async createToken(\n        options: CreateTokenOptions = {} as CreateTokenOptions,\n        issuerAddress: string = this.tronWeb.defaultAddress.hex as string\n    ): Promise<Transaction<AssetIssueContract>> {\n        const {\n            name = false,\n            abbreviation = false,\n            description = '',\n            url = false,\n            totalSupply = 0,\n            trxRatio = 1, // How much TRX will `tokenRatio` cost\n            tokenRatio = 1, // How many tokens will `trxRatio` afford\n            saleStart = Date.now(),\n            saleEnd = false,\n            freeBandwidth = 0, // The creator's \"donated\" bandwidth for use by token holders\n            freeBandwidthLimit = 0, // Out of `totalFreeBandwidth`, the amount each token holder get\n            frozenAmount = 0,\n            frozenDuration = 0,\n            // for now there is no default for the following values\n            voteScore,\n            precision,\n        } = options;\n\n        this.validator.notValid([\n            {\n                name: 'Supply amount',\n                type: 'positive-integer',\n                value: totalSupply,\n            },\n            {\n                name: 'TRX ratio',\n                type: 'positive-integer',\n                value: trxRatio,\n            },\n            {\n                name: 'Token ratio',\n                type: 'positive-integer',\n                value: tokenRatio,\n            },\n            {\n                name: 'token abbreviation',\n                type: 'string',\n                value: abbreviation,\n                lte: 32,\n                gt: 0,\n            },\n            {\n                name: 'token name',\n                type: 'not-empty-string',\n                value: name,\n            },\n            {\n                name: 'token description',\n                type: 'string',\n                value: description,\n                lte: 200,\n            },\n            {\n                name: 'token url',\n                type: 'url',\n                value: url,\n            },\n            {\n                name: 'token url',\n                type: 'string',\n                value: url,\n                lte: 256,\n            },\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress,\n            },\n            {\n                name: 'sale start timestamp',\n                type: 'integer',\n                value: saleStart,\n                gte: Date.now(),\n            },\n            {\n                name: 'sale end timestamp',\n                type: 'integer',\n                value: saleEnd,\n                gt: saleStart,\n            },\n            {\n                name: 'Frozen supply',\n                type: 'integer',\n                value: frozenAmount,\n                gte: 0,\n            },\n            {\n                name: 'Frozen duration',\n                type: 'integer',\n                value: frozenDuration,\n                gte: 0,\n            },\n        ]);\n\n        if (isNotNullOrUndefined(voteScore) && (!isInteger(voteScore) || voteScore <= 0))\n            throw new Error('voteScore must be a positive integer greater than 0');\n\n        if (isNotNullOrUndefined(precision) && (!isInteger(precision) || precision < 0 || precision > 6))\n            throw new Error('precision must be a positive integer >= 0 and <= 6');\n\n        const data: Partial<AssetIssueContract> = {\n            owner_address: toHex(issuerAddress),\n            name: fromUtf8(name as string),\n            abbr: fromUtf8(abbreviation as string),\n            description: fromUtf8(description),\n            url: fromUtf8(url as string),\n            total_supply: parseInt(totalSupply),\n            trx_num: parseInt(trxRatio),\n            num: parseInt(tokenRatio),\n            start_time: parseInt(saleStart),\n            end_time: parseInt(saleEnd as number),\n            frozen_supply: [\n                {\n                    frozen_amount: parseInt(frozenAmount),\n                    frozen_days: parseInt(frozenDuration),\n                },\n            ],\n        };\n        (['name', 'abbr', 'description', 'url'] as (keyof typeof data)[]).forEach((key) => {\n            if (!data[key]) {\n                delete data[key];\n            }\n        });\n        if (!(parseInt(frozenAmount) > 0)) {\n            delete data.frozen_supply;\n        }\n        if (freeBandwidth && !isNaN(parseInt(freeBandwidth)) && parseInt(freeBandwidth) >= 0) {\n            data.free_asset_net_limit = parseInt(freeBandwidth);\n        }\n        if (freeBandwidthLimit && !isNaN(parseInt(freeBandwidthLimit)) && parseInt(freeBandwidthLimit) >= 0) {\n            data.public_free_asset_net_limit = parseInt(freeBandwidthLimit);\n        }\n        if (precision && !isNaN(parseInt(precision))) {\n            data.precision = parseInt(precision);\n        }\n        if (voteScore && !isNaN(parseInt(voteScore))) {\n            data.vote_score = parseInt(voteScore);\n        }\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction<AssetIssueContract>(\n            this.tronWeb,\n            ContractType.AssetIssueContract,\n            data as AssetIssueContract,\n            options?.permissionId,\n            transactionOptions,\n        );\n    }\n\n    async createAccount(\n        accountAddress: string,\n        address: string = this.tronWeb.defaultAddress.hex as string,\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<AccountCreateContract>> {\n        this.validator.notValid([\n            {\n                name: 'account',\n                type: 'address',\n                value: accountAddress,\n            },\n            {\n                name: 'origin',\n                type: 'address',\n                value: address as string,\n            },\n        ]);\n        const data: AccountCreateContract = {\n            owner_address: toHex(address as string),\n            account_address: toHex(accountAddress),\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction<AccountCreateContract>(this.tronWeb, ContractType.AccountCreateContract, data, options?.permissionId, transactionOptions);\n    }\n\n    async updateAccount(\n        accountName: string,\n        address: string = this.tronWeb.defaultAddress.hex as string,\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<AccountUpdateContract>> {\n        this.validator.notValid([\n            {\n                name: 'Name',\n                type: 'string',\n                lte: 200,\n                gt: 0,\n                value: accountName,\n                msg: 'Invalid accountName',\n            },\n            {\n                name: 'origin',\n                type: 'address',\n                value: address as string,\n            },\n        ]);\n\n        const data: AccountUpdateContract = {\n            account_name: fromUtf8(accountName as string),\n            owner_address: toHex(address as string),\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction<AccountUpdateContract>(this.tronWeb, ContractType.AccountUpdateContract, data, options?.permissionId, transactionOptions);\n    }\n\n    async setAccountId(\n        accountId: string,\n        address: string = this.tronWeb.defaultAddress.hex as string,\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<SetAccountIdContract>> {\n        if (accountId && isString(accountId) && accountId.startsWith('0x')) {\n            accountId = accountId.slice(2);\n        }\n\n        this.validator.notValid([\n            {\n                name: 'accountId',\n                type: 'hex',\n                value: accountId,\n            },\n            {\n                name: 'accountId',\n                type: 'string',\n                lte: 32,\n                gte: 8,\n                value: accountId,\n            },\n            {\n                name: 'origin',\n                type: 'address',\n                value: address as string,\n            },\n        ]);\n\n        const data: SetAccountIdContract = {\n            account_id: accountId,\n            owner_address: toHex(address as string),\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction<SetAccountIdContract>(this.tronWeb, ContractType.SetAccountIdContract, data, options?.permissionId, transactionOptions);\n    }\n\n    async updateToken(\n        options: UpdateTokenOptions = {} as UpdateTokenOptions,\n        issuerAddress: string = this.tronWeb.defaultAddress.hex as string\n    ): Promise<Transaction<UpdateAssetContract>> {\n        const {\n            description = '',\n            url = false,\n            freeBandwidth = 0, // The creator's \"donated\" bandwidth for use by token holders\n            freeBandwidthLimit = 0, // Out of `totalFreeBandwidth`, the amount each token holder get\n        } = options;\n\n        this.validator.notValid([\n            {\n                name: 'token description',\n                type: 'string',\n                value: description,\n                lte: 200,\n            },\n            {\n                name: 'token url',\n                type: 'url',\n                value: url,\n            },\n            {\n                name: 'token url',\n                type: 'string',\n                value: url,\n                lte: 256,\n            },\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress as string,\n            },\n        ]);\n\n        const data: UpdateAssetContract = {\n            owner_address: toHex(issuerAddress as string),\n            description: fromUtf8(description),\n            url: fromUtf8(url as string),\n        };\n\n        if (freeBandwidth && !isNaN(parseInt(freeBandwidth)) && parseInt(freeBandwidth) >= 0) {\n            data.new_limit = parseInt(freeBandwidth);\n        }\n        if (freeBandwidthLimit && !isNaN(parseInt(freeBandwidthLimit)) && parseInt(freeBandwidthLimit) >= 0) {\n            data.new_public_limit = parseInt(freeBandwidthLimit);\n        }\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction<UpdateAssetContract>(this.tronWeb, ContractType.UpdateAssetContract, data, options?.permissionId, transactionOptions);\n    }\n\n    async sendAsset(\n        to: string,\n        amount = 0,\n        tokenId: string,\n        from: string = this.tronWeb.defaultAddress.hex as string,\n        options: TransactionCommonOptions = {}\n    ) {\n        return this.sendToken(to, amount, tokenId, from as string, options);\n    }\n\n    async purchaseAsset(\n        issuerAddress: string,\n        tokenId: string,\n        amount = 0,\n        buyer: string = this.tronWeb.defaultAddress.hex as string,\n        options: TransactionCommonOptions = {}\n    ) {\n        return this.purchaseToken(issuerAddress, tokenId, amount, buyer as string, options);\n    }\n\n    async createAsset(options: CreateTokenOptions, issuerAddress: string) {\n        return this.createToken(options, issuerAddress);\n    }\n\n    async updateAsset(\n        options: UpdateTokenOptions = {} as UpdateTokenOptions,\n        issuerAddress: string = this.tronWeb.defaultAddress.hex as string\n    ) {\n        return this.updateToken(options, issuerAddress);\n    }\n\n    /**\n     * Creates a proposal to modify the network.\n     * Can only be created by a current Super Representative.\n     */\n    async createProposal(\n        parameters: Record<string, string | number> | Record<string, string | number>[],\n        issuerAddress: string = this.tronWeb.defaultAddress.hex as string,\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<ProposalCreateContract>> {\n        this.validator.notValid([\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress as string,\n            },\n        ]);\n\n        const invalid = 'Invalid proposal parameters provided';\n        if (!parameters) throw new Error(invalid);\n\n        const newParams = isArray(parameters) ? parameters : [parameters];\n        for (const parameter of newParams) {\n            if (!isObject(parameter)) throw new Error(invalid);\n        }\n\n        const data: ProposalCreateContract = {\n            owner_address: toHex(issuerAddress as string),\n            parameters: newParams,\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction<ProposalCreateContract>(this.tronWeb, ContractType.ProposalCreateContract, data, options?.permissionId, transactionOptions);\n    }\n\n    /**\n     * Deletes a network modification proposal that the owner issued.\n     * Only current Super Representative can vote on a proposal.\n     */\n    async deleteProposal(\n        proposalID: number,\n        issuerAddress: string = this.tronWeb.defaultAddress.hex as string,\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<ProposalDeleteContract>> {\n        this.validator.notValid([\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress as string,\n            },\n            {\n                name: 'proposalID',\n                type: 'integer',\n                value: proposalID,\n                gte: 0,\n            },\n        ]);\n\n        const data: ProposalDeleteContract = {\n            owner_address: toHex(issuerAddress as string),\n            proposal_id: parseInt(proposalID as number),\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction<ProposalDeleteContract>(this.tronWeb, ContractType.ProposalDeleteContract, data, options?.permissionId, transactionOptions);\n    }\n\n    /**\n     * Adds a vote to an issued network modification proposal.\n     * Only current Super Representative can vote on a proposal.\n     */\n    async voteProposal(\n        proposalID: number,\n        isApproval = false,\n        voterAddress: string = this.tronWeb.defaultAddress.hex as string,\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<VoteProposalContract>> {\n        this.validator.notValid([\n            {\n                name: 'voter',\n                type: 'address',\n                value: voterAddress as string,\n            },\n            {\n                name: 'proposalID',\n                type: 'integer',\n                value: proposalID,\n                gte: 0,\n            },\n            {\n                name: 'has approval',\n                type: 'boolean',\n                value: isApproval,\n            },\n        ]);\n\n        const data: VoteProposalContract = {\n            owner_address: toHex(voterAddress as string),\n            proposal_id: parseInt(proposalID),\n            is_add_approval: isApproval,\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction(this.tronWeb, ContractType.ProposalApproveContract, data, options?.permissionId, transactionOptions);\n    }\n\n    /**\n     * Create an exchange between a token and TRX.\n     * Token Name should be a CASE SENSITIVE string.\n     * PLEASE VERIFY THIS ON TRONSCAN.\n     */\n    async createTRXExchange(\n        tokenName: string,\n        tokenBalance: number,\n        trxBalance: number,\n        ownerAddress: string = this.tronWeb.defaultAddress.hex as string,\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<ExchangeCreateContract>> {\n        this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress as string,\n            },\n            {\n                name: 'token name',\n                type: 'not-empty-string',\n                value: tokenName,\n            },\n            {\n                name: 'token balance',\n                type: 'positive-integer',\n                value: tokenBalance,\n            },\n            {\n                name: 'trx balance',\n                type: 'positive-integer',\n                value: trxBalance,\n            },\n        ]);\n\n        const data: ExchangeCreateContract = {\n            owner_address: toHex(ownerAddress as string),\n            first_token_id: fromUtf8(tokenName),\n            first_token_balance: tokenBalance,\n            second_token_id: '5f', // Constant for TRX.\n            second_token_balance: trxBalance,\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction(this.tronWeb, ContractType.ExchangeCreateContract, data, options?.permissionId, transactionOptions);\n    }\n\n    /**\n     * Create an exchange between a token and another token.\n     * DO NOT USE THIS FOR TRX.\n     * Token Names should be a CASE SENSITIVE string.\n     * PLEASE VERIFY THIS ON TRONSCAN.\n     */\n    async createTokenExchange(\n        firstTokenName: string,\n        firstTokenBalance: number,\n        secondTokenName: string,\n        secondTokenBalance: number,\n        ownerAddress: string = this.tronWeb.defaultAddress.hex as string,\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<ExchangeCreateContract>> {\n        this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress as string,\n            },\n            {\n                name: 'first token name',\n                type: 'not-empty-string',\n                value: firstTokenName,\n            },\n            {\n                name: 'second token name',\n                type: 'not-empty-string',\n                value: secondTokenName,\n            },\n            {\n                name: 'first token balance',\n                type: 'positive-integer',\n                value: firstTokenBalance,\n            },\n            {\n                name: 'second token balance',\n                type: 'positive-integer',\n                value: secondTokenBalance,\n            },\n        ]);\n\n        const data: ExchangeCreateContract = {\n            owner_address: toHex(ownerAddress as string),\n            first_token_id: fromUtf8(firstTokenName),\n            first_token_balance: firstTokenBalance,\n            second_token_id: fromUtf8(secondTokenName),\n            second_token_balance: secondTokenBalance,\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction<ExchangeCreateContract>(this.tronWeb, ContractType.ExchangeCreateContract, data, options?.permissionId, transactionOptions);\n    }\n\n    /**\n     * Adds tokens into a bancor style exchange.\n     * Will add both tokens at market rate.\n     * Use \"_\" for the constant value for TRX.\n     */\n    async injectExchangeTokens(\n        exchangeID: number,\n        tokenName: string,\n        tokenAmount: number,\n        ownerAddress: string = this.tronWeb.defaultAddress.hex as string,\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<ExchangeInjectContract>> {\n        this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress as string,\n            },\n            {\n                name: 'token name',\n                type: 'not-empty-string',\n                value: tokenName,\n            },\n            {\n                name: 'token amount',\n                type: 'integer',\n                value: tokenAmount,\n                gte: 1,\n            },\n            {\n                name: 'exchangeID',\n                type: 'integer',\n                value: exchangeID,\n                gte: 0,\n            },\n        ]);\n\n        const data: ExchangeInjectContract = {\n            owner_address: toHex(ownerAddress as string),\n            exchange_id: parseInt(exchangeID),\n            token_id: fromUtf8(tokenName),\n            quant: parseInt(tokenAmount),\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction(this.tronWeb, ContractType.ExchangeInjectContract, data, options?.permissionId, transactionOptions);\n    }\n\n    /**\n     * Withdraws tokens from a bancor style exchange.\n     * Will withdraw at market rate both tokens.\n     * Use \"_\" for the constant value for TRX.\n     */\n    async withdrawExchangeTokens(\n        exchangeID: number,\n        tokenName: string,\n        tokenAmount: number,\n        ownerAddress: string = this.tronWeb.defaultAddress.hex as string,\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<ExchangeWithdrawContract>> {\n        this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress as string,\n            },\n            {\n                name: 'token name',\n                type: 'not-empty-string',\n                value: tokenName,\n            },\n            {\n                name: 'token amount',\n                type: 'integer',\n                value: tokenAmount,\n                gte: 1,\n            },\n            {\n                name: 'exchangeID',\n                type: 'integer',\n                value: exchangeID,\n                gte: 0,\n            },\n        ]);\n\n        const data: ExchangeWithdrawContract = {\n            owner_address: toHex(ownerAddress as string),\n            exchange_id: parseInt(exchangeID),\n            token_id: fromUtf8(tokenName),\n            quant: parseInt(tokenAmount),\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction<ExchangeWithdrawContract>(this.tronWeb, ContractType.ExchangeWithdrawContract, data, options?.permissionId, transactionOptions);\n    }\n\n    /**\n     * Trade tokens on a bancor style exchange.\n     * Expected value is a validation and used to cap the total amt of token 2 spent.\n     * Use \"_\" for the constant value for TRX.\n     */\n    async tradeExchangeTokens(\n        exchangeID: number,\n        tokenName: string,\n        tokenAmountSold: number,\n        tokenAmountExpected: number,\n        ownerAddress: string = this.tronWeb.defaultAddress.hex as string,\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<ExchangeTransactionContract>> {\n        this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress as string,\n            },\n            {\n                name: 'token name',\n                type: 'not-empty-string',\n                value: tokenName,\n            },\n            {\n                name: 'tokenAmountSold',\n                type: 'integer',\n                value: tokenAmountSold,\n                gte: 1,\n            },\n            {\n                name: 'tokenAmountExpected',\n                type: 'integer',\n                value: tokenAmountExpected,\n                gte: 1,\n            },\n            {\n                name: 'exchangeID',\n                type: 'integer',\n                value: exchangeID,\n                gte: 0,\n            },\n        ]);\n\n        const data: ExchangeTransactionContract = {\n            owner_address: toHex(ownerAddress as string),\n            exchange_id: parseInt(exchangeID),\n            token_id: TronWeb.fromAscii(tokenName).replace(/^0x/, ''),\n            quant: parseInt(tokenAmountSold),\n            expected: parseInt(tokenAmountExpected),\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction<ExchangeTransactionContract>(this.tronWeb, ContractType.ExchangeTransactionContract, data, options?.permissionId, transactionOptions);\n    }\n\n    /**\n     * Update userFeePercentage.\n     */\n    async updateSetting(\n        contractAddress: string,\n        userFeePercentage: number,\n        ownerAddress: string = this.tronWeb.defaultAddress.hex as string,\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<UpdateSettingContract>> {\n        this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress as string,\n            },\n            {\n                name: 'contract',\n                type: 'address',\n                value: contractAddress,\n            },\n            {\n                name: 'userFeePercentage',\n                type: 'integer',\n                value: userFeePercentage,\n                gte: 0,\n                lte: 100,\n            },\n        ]);\n\n        const data: UpdateSettingContract = {\n            owner_address: toHex(ownerAddress as string),\n            contract_address: toHex(contractAddress),\n            consume_user_resource_percent: userFeePercentage,\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction<UpdateSettingContract>(this.tronWeb, ContractType.UpdateSettingContract, data, options?.permissionId, transactionOptions);\n    }\n\n    /**\n     * Update energy limit.\n     */\n    async updateEnergyLimit(\n        contractAddress: string,\n        originEnergyLimit = 0,\n        ownerAddress: string = this.tronWeb.defaultAddress.hex as string,\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<UpdateEnergyLimitContract>> {\n        this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress as string,\n            },\n            {\n                name: 'contract',\n                type: 'address',\n                value: contractAddress,\n            },\n            {\n                name: 'originEnergyLimit',\n                type: 'integer',\n                value: originEnergyLimit,\n                gte: 0,\n                lte: 10_000_000,\n            },\n        ]);\n\n        const data: UpdateEnergyLimitContract = {\n            owner_address: toHex(ownerAddress as string),\n            contract_address: toHex(contractAddress),\n            origin_energy_limit: originEnergyLimit,\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction<UpdateEnergyLimitContract>(this.tronWeb, ContractType.UpdateEnergyLimitContract, data, options?.permissionId, transactionOptions);\n    }\n\n    private checkPermissions(permissions: Permission, type: number) {\n        if (permissions) {\n            if (\n                permissions.type !== type ||\n                !permissions.permission_name ||\n                !isString(permissions.permission_name) ||\n                !isInteger(permissions.threshold) ||\n                permissions.threshold < 1 ||\n                !permissions.keys\n            ) {\n                return false;\n            }\n            for (const key of permissions.keys) {\n                if (\n                    !TronWeb.isAddress(key.address) ||\n                    !isInteger(key.weight) ||\n                    key.weight > permissions.threshold ||\n                    key.weight < 1 ||\n                    (type === 2 && !permissions.operations)\n                ) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    async updateAccountPermissions(\n        ownerAddress: string = this.tronWeb.defaultAddress.hex as string,\n        ownerPermission: Permission,\n        witnessPermission?: Permission,\n        activesPermissions?: Permission | Permission[],\n        options: TransactionCommonOptions = {}\n    ): Promise<Transaction<AccountPermissionUpdateContract>> {\n        if (!TronWeb.isAddress(ownerAddress as Address)) throw new Error('Invalid ownerAddress provided');\n\n        if (!this.checkPermissions(ownerPermission, 0)) {\n            throw new Error('Invalid ownerPermissions provided');\n        }\n\n        if (!this.checkPermissions(witnessPermission!, 1)) {\n            throw new Error('Invalid witnessPermissions provided');\n        }\n\n        if (!Array.isArray(activesPermissions)) {\n            activesPermissions = [activesPermissions!];\n        }\n\n        for (const activesPermission of activesPermissions) {\n            if (!this.checkPermissions(activesPermission, 2)) {\n                throw new Error('Invalid activesPermissions provided');\n            }\n        }\n\n        const data: AccountPermissionUpdateContract = {\n            owner_address: toHex(ownerAddress as string),\n        };\n        if (ownerPermission) {\n            const _ownerPermissions = deepCopyJson<Partial<Permission>>(ownerPermission);\n            // for compatible with old way of building transaction from chain which type prop is omitted\n            if ('type' in _ownerPermissions) {\n                delete _ownerPermissions.type;\n            }\n            _ownerPermissions.keys = _ownerPermissions.keys?.map(({ address, weight }) => ({\n                address: this.tronWeb.address.toHex(address),\n                weight,\n            }));\n            data.owner = _ownerPermissions as Permission;\n        }\n        if (witnessPermission) {\n            const _witnessPermissions = deepCopyJson<Permission>(witnessPermission);\n            // for compatible with old way of building transaction from chain which type prop is Witness\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            _witnessPermissions.type = 'Witness';\n            _witnessPermissions.keys = _witnessPermissions.keys.map(({ address, weight }) => ({\n                address: this.tronWeb.address.toHex(address),\n                weight,\n            }));\n            data.witness = _witnessPermissions;\n        }\n        if (activesPermissions) {\n            const _activesPermissions = deepCopyJson<Permission[]>(activesPermissions);\n            // for compatible with old way of building transaction from chain which type prop is Active\n            _activesPermissions.forEach((activePermissions: Permission) => {\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore\n                activePermissions.type = 'Active';\n            });\n            _activesPermissions.forEach((_activesPermission) => {\n                _activesPermission.keys = _activesPermission.keys.map(({ address, weight }) => ({\n                    address: this.tronWeb.address.toHex(address),\n                    weight,\n                }));\n            });\n            data.actives = _activesPermissions as Permission[];\n        }\n\n        const transactionOptions = getTransactionOptions(options);\n        return createTransaction<AccountPermissionUpdateContract>(this.tronWeb, ContractType.AccountPermissionUpdateContract, data, options?.permissionId, transactionOptions);\n    }\n\n    async newTxID<T extends ContractParamter, U extends (SignedTransaction<T> | Transaction<T>)>(transaction: U, options: { txLocal?: boolean } = {}): Promise<U> {\n        if (options?.txLocal) {\n            const contract = transaction.raw_data.contract[0];\n            try {\n                const tx = await createTransaction<T>(\n                    this.tronWeb,\n                    contract.type,\n                    contract.parameter.value,\n                    contract.Permission_id,\n                    {\n                        fee_limit: transaction.raw_data.fee_limit,\n                        data: transaction.raw_data.data,\n                        ref_block_bytes: transaction.raw_data.ref_block_bytes,\n                        ref_block_hash: transaction.raw_data.ref_block_hash,\n                        expiration: transaction.raw_data.expiration,\n                        timestamp: transaction.raw_data.timestamp,\n                    }\n                );\n                (tx as SignedTransaction<T>).signature = (transaction as SignedTransaction<T>).signature;\n                tx.visible = transaction.visible;\n                return tx as U;\n            } catch (e) {\n                throw new Error('Error generating a new transaction id.');\n            }\n        }\n        try {\n            const res: GetSignWeightResponse = await this.tronWeb.fullNode.request('wallet/getsignweight', transaction, 'post');\n            if (typeof transaction.visible === 'boolean') {\n                res.transaction.transaction.visible = transaction.visible;\n            }\n            return resultManager(\n                res.transaction.transaction as unknown as TransactionWrapper,\n                {\n                    ...transaction.raw_data.contract[0].parameter.value,\n                    Permission_id: transaction.raw_data.contract[0].Permission_id,\n                },\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                /* @ts-ignore */\n                { data: transaction.raw_data.data, fee_limit: transaction.raw_data.fee_limit }\n            ) as unknown as U;\n        } catch (e) {\n            throw new Error('Error generating a new transaction id.');\n        }\n    }\n\n    async alterTransaction(transaction: Transaction, options: AlterTransactionOptions = {}) {\n        if (Reflect.has(transaction, 'signature')) throw new Error('You can not extend the expiration of a signed transaction.');\n\n        if (options.data) {\n            if (options.dataFormat !== 'hex') options.data = TronWeb.toHex(options.data);\n            options.data = options.data!.replace(/^0x/, '');\n            if (options.data.length === 0) throw new Error('Invalid data provided');\n            transaction.raw_data.data = options.data;\n        }\n\n        if (options.extension) {\n            options.extension = parseInt(options.extension * 1000);\n            if (isNaN(options.extension) || transaction.raw_data.expiration + options.extension <= Date.now() + 3000)\n                throw new Error('Invalid extension provided');\n            transaction.raw_data.expiration += options.extension;\n        }\n\n        return await this.newTxID(transaction, { txLocal: options.txLocal });\n    }\n\n    async extendExpiration(transaction: Transaction, extension: number, options: TxLocal = {}) {\n        return await this.alterTransaction(transaction, { extension, txLocal: options?.txLocal });\n    }\n\n    async addUpdateData(transaction: Transaction, data: string, dataFormat: 'utf8' | 'hex' = 'utf8', options: TxLocal = {}) {\n        return this.alterTransaction(transaction, { data, dataFormat: dataFormat as string, txLocal: options?.txLocal });\n    }\n}\n", "import { TronWeb } from '../tronweb.js';\nimport utils from '../utils/index.js';\nimport { keccak256, toUtf8Bytes, recoverAddress, SigningKey, Signature } from '../utils/ethersUtils.js';\nimport { ADDRESS_PREFIX } from '../utils/address.js';\nimport { Validator } from '../paramValidator/index.js';\nimport { txCheck } from '../utils/transaction.js';\nimport { ecRecover } from '../utils/crypto.js';\nimport { Block, GetTransactionResponse } from '../types/APIResponse.js';\nimport {\n    Token,\n    Account,\n    AccountNetMessage,\n    Witness,\n    TransactionSignWeight,\n    BroadcastReturn,\n    AddressOptions,\n    Proposal,\n    ChainParameter,\n    BroadcastHexReturn,\n    AccountResourceMessage,\n    Address,\n    Exchange,\n    TransactionInfo,\n} from '../types/Trx.js';\nimport { SignedTransaction, Transaction } from '../types/Transaction.js';\nimport { TypedDataDomain, TypedDataField } from '../utils/typedData.js';\nimport { Resource } from '../types/TransactionBuilder.js';\n\nconst TRX_MESSAGE_HEADER = '\\x19TRON Signed Message:\\n32';\n// it should be: '\\x15TRON Signed Message:\\n32';\nconst ETH_MESSAGE_HEADER = '\\x19Ethereum Signed Message:\\n32';\n\nfunction toHex(value: string) {\n    return TronWeb.address.toHex(value);\n}\n\ntype SignedStringOrSignedTransaction<T extends string | Transaction | SignedTransaction> = T extends string\n    ? string\n    : SignedTransaction & T;\n\nexport class Trx {\n    private tronWeb: TronWeb;\n    private cache: { contracts: Record<string, any> };\n    private validator: Validator;\n\n    signMessage;\n    sendAsset;\n    send;\n    sendTrx;\n    broadcast;\n    broadcastHex;\n    signTransaction;\n\n    constructor(tronWeb: TronWeb) {\n        this.tronWeb = tronWeb;\n\n        this.cache = {\n            contracts: {},\n        };\n        this.validator = new Validator();\n        this.signMessage = this.sign;\n        this.sendAsset = this.sendToken;\n        this.send = this.sendTransaction;\n        this.sendTrx = this.sendTransaction;\n        this.broadcast = this.sendRawTransaction;\n        this.broadcastHex = this.sendHexTransaction;\n        this.signTransaction = this.sign;\n    }\n\n    _parseToken(token: any): Token {\n        return {\n            ...token,\n            name: this.tronWeb.toUtf8(token.name),\n            abbr: token.abbr && this.tronWeb.toUtf8(token.abbr),\n            description: token.description && this.tronWeb.toUtf8(token.description),\n            url: token.url && this.tronWeb.toUtf8(token.url),\n        };\n    }\n\n    getCurrentBlock(): Promise<Block> {\n        return this.tronWeb.fullNode.request('wallet/getnowblock');\n    }\n\n    getConfirmedCurrentBlock(): Promise<Block> {\n        return this.tronWeb.solidityNode.request('walletsolidity/getnowblock');\n    }\n\n    async getBlock(block: 'earliest' | 'latest' | number | string | false = this.tronWeb.defaultBlock): Promise<Block> {\n        if (block === false) {\n            throw new Error('No block identifier provided');\n        }\n\n        if (block == 'earliest') block = 0;\n\n        if (block == 'latest') return this.getCurrentBlock();\n\n        if (isNaN(+block) && utils.isHex(block.toString())) return this.getBlockByHash(block as string);\n\n        return this.getBlockByNumber(block as number);\n    }\n\n    async getBlockByHash(blockHash: string): Promise<Block> {\n        const block = await this.tronWeb.fullNode.request<Block>(\n            'wallet/getblockbyid',\n            {\n                value: blockHash,\n            },\n            'post'\n        );\n        if (!Object.keys(block).length) {\n            throw new Error('Block not found');\n        }\n        return block;\n    }\n\n    async getBlockByNumber(blockID: number): Promise<Block> {\n        if (!utils.isInteger(blockID) || blockID < 0) {\n            throw new Error('Invalid block number provided');\n        }\n\n        return this.tronWeb.fullNode\n            .request<Block>(\n                'wallet/getblockbynum',\n                {\n                    num: parseInt(blockID),\n                },\n                'post'\n            )\n            .then((block) => {\n                if (!Object.keys(block).length) {\n                    throw new Error('Block not found');\n                }\n\n                return block;\n            });\n    }\n\n    async getBlockTransactionCount(\n        block: 'earliest' | 'latest' | number | string | false = this.tronWeb.defaultBlock\n    ): Promise<number> {\n        const { transactions = [] } = await this.getBlock(block);\n        return transactions.length;\n    }\n\n    async getTransactionFromBlock(\n        block: 'earliest' | 'latest' | number | string | false = this.tronWeb.defaultBlock,\n        index: number\n    ): Promise<GetTransactionResponse> {\n        const { transactions } = await this.getBlock(block);\n        if (!transactions) {\n            throw new Error('Transaction not found in block');\n        }\n        if (index >= 0 && index < transactions.length) return transactions[index];\n        else throw new Error('Invalid transaction index provided');\n    }\n\n    async getTransactionsFromBlock(\n        block: 'earliest' | 'latest' | number | string | false = this.tronWeb.defaultBlock\n    ): Promise<GetTransactionResponse[]> {\n        const { transactions } = await this.getBlock(block);\n        if (!transactions) {\n            throw new Error('Transaction not found in block');\n        }\n        return transactions;\n    }\n\n    async getTransaction(transactionID: string): Promise<GetTransactionResponse> {\n        const transaction = await this.tronWeb.fullNode.request<GetTransactionResponse>(\n            'wallet/gettransactionbyid',\n            {\n                value: transactionID,\n            },\n            'post'\n        );\n        if (!Object.keys(transaction).length) {\n            throw new Error('Transaction not found');\n        }\n        return transaction;\n    }\n\n    async getConfirmedTransaction(transactionID: string): Promise<GetTransactionResponse> {\n        const transaction = await this.tronWeb.solidityNode.request<GetTransactionResponse>(\n            'walletsolidity/gettransactionbyid',\n            {\n                value: transactionID,\n            },\n            'post'\n        );\n        if (!Object.keys(transaction).length) {\n            throw new Error('Transaction not found');\n        }\n        return transaction;\n    }\n\n    getUnconfirmedTransactionInfo(transactionID: string): Promise<TransactionInfo> {\n        return this.tronWeb.fullNode.request('wallet/gettransactioninfobyid', { value: transactionID }, 'post');\n    }\n\n    getTransactionInfo(transactionID: string): Promise<TransactionInfo> {\n        return this.tronWeb.solidityNode.request('walletsolidity/gettransactioninfobyid', { value: transactionID }, 'post');\n    }\n\n    getTransactionsToAddress(address = this.tronWeb.defaultAddress.hex, limit = 30, offset = 0): Promise<GetTransactionResponse[]> {\n        return this.getTransactionsRelated(this.tronWeb.address.toHex(address as string), 'to', limit, offset);\n    }\n\n    getTransactionsFromAddress(address = this.tronWeb.defaultAddress.hex, limit = 30, offset = 0): Promise<GetTransactionResponse[]> {\n        return this.getTransactionsRelated(this.tronWeb.address.toHex(address as string), 'from', limit, offset);\n    }\n\n    async getTransactionsRelated(\n        address = this.tronWeb.defaultAddress.hex,\n        direction = 'all',\n        limit = 30,\n        offset = 0\n    ): Promise<GetTransactionResponse[]> {\n        if (this.tronWeb.fullnodeSatisfies('>=4.1.1')) {\n            throw new Error('This api is not supported any more');\n        }\n\n        if (!['to', 'from', 'all'].includes(direction)) {\n            throw new Error('Invalid direction provided: Expected \"to\", \"from\" or \"all\"');\n        }\n\n        if (direction == 'all') {\n            const [from, to] = await Promise.all([\n                this.getTransactionsRelated(address, 'from', limit, offset),\n                this.getTransactionsRelated(address, 'to', limit, offset),\n            ]);\n\n            return [\n                ...from.map((tx) => (((tx as any).direction = 'from'), tx)),\n                ...to.map((tx) => (((tx as any).direction = 'to'), tx)),\n            ].sort((a, b) => {\n                return b.raw_data.timestamp - a.raw_data.timestamp;\n            });\n        }\n\n        if (!this.tronWeb.isAddress(address as string)) {\n            throw new Error('Invalid address provided');\n        }\n\n        if (!utils.isInteger(limit) || limit < 0 || (offset && limit < 1)) {\n            throw new Error('Invalid limit provided');\n        }\n\n        if (!utils.isInteger(offset) || offset < 0) {\n            throw new Error('Invalid offset provided');\n        }\n\n        address = this.tronWeb.address.toHex(address as string);\n\n        return this.tronWeb.solidityNode\n            .request<{ transaction: GetTransactionResponse[] }>(\n                `walletextension/gettransactions${direction}this`,\n                {\n                    account: {\n                        address,\n                    },\n                    offset,\n                    limit,\n                },\n                'post'\n            )\n            .then(({ transaction }) => {\n                return transaction;\n            });\n    }\n\n    async getAccount(address = this.tronWeb.defaultAddress.hex): Promise<Account> {\n        if (!this.tronWeb.isAddress(address as Address)) {\n            throw new Error('Invalid address provided');\n        }\n\n        address = this.tronWeb.address.toHex(address as string);\n\n        return this.tronWeb.solidityNode.request(\n            'walletsolidity/getaccount',\n            {\n                address,\n            },\n            'post'\n        );\n    }\n\n    getAccountById(id: string): Promise<Account> {\n        return this.getAccountInfoById(id, { confirmed: true });\n    }\n\n    async getAccountInfoById(id: string, options: { confirmed: boolean }): Promise<Account> {\n        this.validator.notValid([\n            {\n                name: 'accountId',\n                type: 'hex',\n                value: id,\n            },\n            {\n                name: 'accountId',\n                type: 'string',\n                lte: 32,\n                gte: 8,\n                value: id,\n            },\n        ]);\n\n        if (id.startsWith('0x')) {\n            id = id.slice(2);\n        }\n\n        return this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(\n            `wallet${options.confirmed ? 'solidity' : ''}/getaccountbyid`,\n            {\n                account_id: id,\n            },\n            'post'\n        );\n    }\n\n    async getBalance(address = this.tronWeb.defaultAddress.hex): Promise<number> {\n        const { balance = 0 } = await this.getAccount(address);\n        return balance;\n    }\n\n    async getUnconfirmedAccount(address = this.tronWeb.defaultAddress.hex): Promise<Account> {\n        if (!this.tronWeb.isAddress(address as Address)) {\n            throw new Error('Invalid address provided');\n        }\n\n        address = this.tronWeb.address.toHex(address as string);\n\n        return this.tronWeb.fullNode.request(\n            'wallet/getaccount',\n            {\n                address,\n            },\n            'post'\n        );\n    }\n\n    getUnconfirmedAccountById(id: string): Promise<Account> {\n        return this.getAccountInfoById(id, { confirmed: false });\n    }\n\n    async getUnconfirmedBalance(address = this.tronWeb.defaultAddress.hex): Promise<number> {\n        const { balance = 0 } = await this.getUnconfirmedAccount(address);\n        return balance;\n    }\n\n    async getBandwidth(address = this.tronWeb.defaultAddress.hex): Promise<number> {\n        if (!this.tronWeb.isAddress(address as Address)) {\n            throw new Error('Invalid address provided');\n        }\n\n        address = this.tronWeb.address.toHex(address as string);\n\n        return this.tronWeb.fullNode\n            .request<AccountNetMessage>(\n                'wallet/getaccountnet',\n                {\n                    address,\n                },\n                'post'\n            )\n            .then(({ freeNetUsed = 0, freeNetLimit = 0, NetUsed = 0, NetLimit = 0 }) => {\n                return freeNetLimit - freeNetUsed + (NetLimit - NetUsed);\n            });\n    }\n\n    async getTokensIssuedByAddress(address = this.tronWeb.defaultAddress.hex): Promise<Record<string, Token>> {\n        if (!this.tronWeb.isAddress(address as Address)) {\n            throw new Error('Invalid address provided');\n        }\n\n        address = this.tronWeb.address.toHex(address as string);\n\n        return this.tronWeb.fullNode\n            .request<{ assetIssue: Token[] }>(\n                'wallet/getassetissuebyaccount',\n                {\n                    address,\n                },\n                'post'\n            )\n            .then(({ assetIssue }) => {\n                if (!assetIssue) return {};\n\n                const tokens = assetIssue\n                    .map((token) => {\n                        return this._parseToken(token);\n                    })\n                    .reduce((tokens, token) => {\n                        return (tokens[token.name] = token), tokens;\n                    }, {} as Record<string, Token>);\n\n                return tokens;\n            });\n    }\n\n    async getTokenFromID(tokenID: string | number): Promise<Token> {\n        if (utils.isInteger(tokenID)) tokenID = tokenID.toString();\n\n        if (!utils.isString(tokenID) || !tokenID.length) {\n            throw new Error('Invalid token ID provided');\n        }\n\n        return this.tronWeb.fullNode\n            .request<Token>(\n                'wallet/getassetissuebyname',\n                {\n                    value: this.tronWeb.fromUtf8(tokenID),\n                },\n                'post'\n            )\n            .then((token) => {\n                if (!token.name) {\n                    throw new Error('Token does not exist');\n                }\n\n                return this._parseToken(token);\n            });\n    }\n\n    async listNodes(): Promise<string[]> {\n        const { nodes = [] } = await this.tronWeb.fullNode.request<{ nodes: { address: { host: string; port: number } }[] }>(\n            'wallet/listnodes'\n        );\n        return nodes.map(({ address: { host, port } }) => `${this.tronWeb.toUtf8(host)}:${port}`);\n    }\n\n    async getBlockRange(start = 0, end = 30): Promise<Block[]> {\n        if (!utils.isInteger(start) || start < 0) {\n            throw new Error('Invalid start of range provided');\n        }\n\n        if (!utils.isInteger(end) || end < start) {\n            throw new Error('Invalid end of range provided');\n        }\n\n        if (end + 1 - start > 100) {\n            throw new Error('Invalid range size, which should be no more than 100.');\n        }\n\n        return this.tronWeb.fullNode\n            .request<{ block: Block[] }>(\n                'wallet/getblockbylimitnext',\n                {\n                    startNum: parseInt(start),\n                    endNum: parseInt(end) + 1,\n                },\n                'post'\n            )\n            .then(({ block = [] }) => block);\n    }\n\n    async listSuperRepresentatives(): Promise<Witness[]> {\n        const { witnesses = [] } = await this.tronWeb.fullNode.request<{ witnesses: Witness[] }>('wallet/listwitnesses');\n        return witnesses;\n    }\n\n    async listTokens(limit = 0, offset = 0): Promise<Token[]> {\n        if (!utils.isInteger(limit) || limit < 0 || (offset && limit < 1)) {\n            throw new Error('Invalid limit provided');\n        }\n\n        if (!utils.isInteger(offset) || offset < 0) {\n            throw new Error('Invalid offset provided');\n        }\n\n        if (!limit) {\n            return this.tronWeb.fullNode\n                .request<{ assetIssue: Token[] }>('wallet/getassetissuelist')\n                .then(({ assetIssue = [] }) => assetIssue.map((token) => this._parseToken(token)));\n        }\n\n        return this.tronWeb.fullNode\n            .request<{ assetIssue: Token[] }>(\n                'wallet/getpaginatedassetissuelist',\n                {\n                    offset: parseInt(offset),\n                    limit: parseInt(limit),\n                },\n                'post'\n            )\n            .then(({ assetIssue = [] }) => assetIssue.map((token) => this._parseToken(token)));\n    }\n\n    async timeUntilNextVoteCycle(): Promise<number> {\n        const { num = -1 } = await this.tronWeb.fullNode.request<{ num: number }>('wallet/getnextmaintenancetime');\n        if (num == -1) {\n            throw new Error('Failed to get time until next vote cycle');\n        }\n        return Math.floor(num / 1000);\n    }\n\n    async getContract(contractAddress: string): Promise<any> {\n        if (!this.tronWeb.isAddress(contractAddress)) {\n            throw new Error('Invalid contract address provided');\n        }\n\n        if (this.cache.contracts[contractAddress]) {\n            return this.cache.contracts[contractAddress];\n        }\n\n        contractAddress = this.tronWeb.address.toHex(contractAddress);\n\n        const contract = await this.tronWeb.fullNode.request<any>('wallet/getcontract', {\n            value: contractAddress,\n        });\n        if (contract.Error) {\n            throw new Error('Contract does not exist');\n        }\n        this.cache.contracts[contractAddress] = contract;\n        return contract;\n    }\n\n    ecRecover(transaction: SignedTransaction) {\n        return Trx.ecRecover(transaction);\n    }\n\n    static ecRecover(transaction: SignedTransaction): Address | Address[] {\n        if (!txCheck(transaction)) {\n            throw new Error('Invalid transaction');\n        }\n        if (!transaction.signature?.length) {\n            throw new Error('Transaction is not signed');\n        }\n        if (transaction.signature.length === 1) {\n            const tronAddress = ecRecover(transaction.txID, transaction.signature[0]);\n            return TronWeb.address.fromHex(tronAddress);\n        }\n        return transaction.signature.map((sig) => {\n            const tronAddress = ecRecover(transaction.txID, sig);\n            return TronWeb.address.fromHex(tronAddress);\n        });\n    }\n\n    async verifyMessage(message: string, signature: string, address = this.tronWeb.defaultAddress.base58, useTronHeader = true) {\n        if (!utils.isHex(message)) {\n            throw new Error('Expected hex message input');\n        }\n\n        if (Trx.verifySignature(message, address as string, signature, useTronHeader)) {\n            return true;\n        }\n\n        throw new Error('Signature does not match');\n    }\n\n    static verifySignature(message: string, address: string, signature: string, useTronHeader = true) {\n        message = message.replace(/^0x/, '');\n        const messageBytes = [\n            ...toUtf8Bytes(useTronHeader ? TRX_MESSAGE_HEADER : ETH_MESSAGE_HEADER),\n            ...utils.code.hexStr2byteArray(message),\n        ];\n\n        const messageDigest = keccak256(new Uint8Array(messageBytes));\n        const recovered = recoverAddress(messageDigest, Signature.from(`0x${signature.replace(/^0x/, '')}`));\n\n        const tronAddress = ADDRESS_PREFIX + recovered.substr(2);\n        const base58Address = TronWeb.address.fromHex(tronAddress);\n\n        return base58Address == TronWeb.address.fromHex(address);\n    }\n\n    async verifyMessageV2(message: string | Uint8Array | Array<number>, signature: string) {\n        return Trx.verifyMessageV2(message, signature);\n    }\n\n    static verifyMessageV2(message: string | Uint8Array | Array<number>, signature: string) {\n        return utils.message.verifyMessage(message, signature);\n    }\n\n    verifyTypedData(\n        domain: TypedDataDomain,\n        types: Record<string, TypedDataField[]>,\n        value: Record<string, any>,\n        signature: string,\n        address = this.tronWeb.defaultAddress.base58\n    ) {\n        if (Trx.verifyTypedData(domain, types, value, signature, address as string)) return true;\n\n        throw new Error('Signature does not match');\n    }\n\n    static verifyTypedData(\n        domain: TypedDataDomain,\n        types: Record<string, TypedDataField[]>,\n        value: Record<string, any>,\n        signature: string,\n        address: string\n    ) {\n        const messageDigest = utils._TypedDataEncoder.hash(domain, types, value);\n        const recovered = recoverAddress(messageDigest, Signature.from(`0x${signature.replace(/^0x/, '')}`));\n\n        const tronAddress = ADDRESS_PREFIX + recovered.substr(2);\n        const base58Address = TronWeb.address.fromHex(tronAddress);\n\n        return base58Address == TronWeb.address.fromHex(address);\n    }\n\n    async sign<T extends SignedTransaction | Transaction | string>(\n        transaction: T,\n        privateKey = this.tronWeb.defaultPrivateKey,\n        useTronHeader = true,\n        multisig = false\n    ): Promise<SignedStringOrSignedTransaction<T>> {\n        // Message signing\n        if (utils.isString(transaction)) {\n            if (!utils.isHex(transaction)) {\n                throw new Error('Expected hex message input');\n            }\n\n            return Trx.signString(transaction, privateKey as string, useTronHeader) as SignedStringOrSignedTransaction<T>;\n        }\n\n        if (!utils.isObject(transaction)) {\n            throw new Error('Invalid transaction provided');\n        }\n\n        if (!multisig && (transaction as SignedTransaction).signature) {\n            throw new Error('Transaction is already signed');\n        }\n\n        if (!multisig) {\n            const address = this.tronWeb.address\n                .toHex(this.tronWeb.address.fromPrivateKey(privateKey as string) as string)\n                .toLowerCase();\n\n            if (address !== this.tronWeb.address.toHex(transaction.raw_data.contract[0].parameter.value.owner_address)) {\n                throw new Error('Private key does not match address in transaction');\n            }\n\n            if (!txCheck(transaction)) {\n                throw new Error('Invalid transaction');\n            }\n        }\n        return utils.crypto.signTransaction(privateKey as string, transaction) as SignedStringOrSignedTransaction<T>;\n    }\n\n    static signString(message: string, privateKey: string, useTronHeader = true) {\n        message = message.replace(/^0x/, '');\n        const value = `0x${privateKey.replace(/^0x/, '')}`;\n        const signingKey = new SigningKey(value);\n        const messageBytes = [\n            ...toUtf8Bytes(useTronHeader ? TRX_MESSAGE_HEADER : ETH_MESSAGE_HEADER),\n            ...utils.code.hexStr2byteArray(message),\n        ];\n        const messageDigest = keccak256(new Uint8Array(messageBytes));\n        const signature = signingKey.sign(messageDigest);\n        const signatureHex = ['0x', signature.r.substring(2), signature.s.substring(2), Number(signature.v).toString(16)].join(\n            ''\n        );\n        return signatureHex;\n    }\n\n    /**\n     * sign message v2 for verified header length\n     *\n     * @param {message to be signed, should be Bytes or string} message\n     * @param {privateKey for signature} privateKey\n     * @param {reserved} options\n     */\n    signMessageV2(message: string | Uint8Array | Array<number>, privateKey = this.tronWeb.defaultPrivateKey) {\n        return Trx.signMessageV2(message, privateKey as string);\n    }\n\n    static signMessageV2(message: string | Uint8Array | Array<number>, privateKey: string) {\n        return utils.message.signMessage(message, privateKey);\n    }\n\n    _signTypedData(\n        domain: TypedDataDomain,\n        types: Record<string, TypedDataField[]>,\n        value: Record<string, any>,\n        privateKey = this.tronWeb.defaultPrivateKey\n    ) {\n        return Trx._signTypedData(domain, types, value, privateKey as string);\n    }\n\n    static _signTypedData(\n        domain: TypedDataDomain,\n        types: Record<string, TypedDataField[]>,\n        value: Record<string, any>,\n        privateKey: string\n    ) {\n        return utils.crypto._signTypedData(domain, types, value, privateKey);\n    }\n\n    async multiSign(transaction: Transaction, privateKey = this.tronWeb.defaultPrivateKey, permissionId = 0) {\n        if (!utils.isObject(transaction) || !transaction.raw_data || !transaction.raw_data.contract) {\n            throw new Error('Invalid transaction provided');\n        }\n\n        // If owner permission or permission id exists in transaction, do sign directly\n        // If no permission id inside transaction or user passes permission id, use old way to reset permission id\n        if (!transaction.raw_data.contract[0].Permission_id && permissionId > 0) {\n            // set permission id\n            transaction.raw_data.contract[0].Permission_id = permissionId;\n\n            // check if private key insides permission list\n            const address = this.tronWeb.address\n                .toHex(this.tronWeb.address.fromPrivateKey(privateKey as string) as string)\n                .toLowerCase();\n            const signWeight = await this.getSignWeight(transaction, permissionId);\n\n            if (signWeight.result.code === 'PERMISSION_ERROR') {\n                throw new Error(signWeight.result.message);\n            }\n\n            let foundKey = false;\n            signWeight.permission.keys.map((key) => {\n                if (key.address === address) foundKey = true;\n            });\n\n            if (!foundKey) {\n                throw new Error(privateKey + ' has no permission to sign');\n            }\n\n            if (signWeight.approved_list && signWeight.approved_list.indexOf(address) != -1) {\n                throw new Error(privateKey + ' already sign transaction');\n            }\n\n            // reset transaction\n            if (signWeight.transaction && signWeight.transaction.transaction) {\n                transaction = signWeight.transaction.transaction;\n                if (permissionId > 0) {\n                    transaction.raw_data.contract[0].Permission_id = permissionId;\n                }\n            } else {\n                throw new Error('Invalid transaction provided');\n            }\n        }\n\n        // sign\n        if (!txCheck(transaction)) {\n            throw new Error('Invalid transaction');\n        }\n        return utils.crypto.signTransaction(privateKey as string, transaction);\n    }\n\n    async getApprovedList(transaction: Transaction): Promise<{ approved_list: string[] }> {\n        if (!utils.isObject(transaction)) {\n            throw new Error('Invalid transaction provided');\n        }\n\n        return this.tronWeb.fullNode.request('wallet/getapprovedlist', transaction, 'post');\n    }\n\n    async getSignWeight(transaction: Transaction, permissionId?: number): Promise<TransactionSignWeight> {\n        if (!utils.isObject(transaction) || !transaction.raw_data || !transaction.raw_data.contract)\n            throw new Error('Invalid transaction provided');\n\n        if (utils.isInteger(permissionId)) {\n            transaction.raw_data.contract[0].Permission_id = parseInt(permissionId);\n        } else if (typeof transaction.raw_data.contract[0].Permission_id !== 'number') {\n            transaction.raw_data.contract[0].Permission_id = 0;\n        }\n\n        return this.tronWeb.fullNode.request('wallet/getsignweight', transaction, 'post');\n    }\n\n    async sendRawTransaction<T extends SignedTransaction>(signedTransaction: T): Promise<BroadcastReturn<T>> {\n        if (!utils.isObject(signedTransaction)) {\n            throw new Error('Invalid transaction provided');\n        }\n\n        if (!signedTransaction.signature || !utils.isArray(signedTransaction.signature)) {\n            throw new Error('Transaction is not signed');\n        }\n\n        const result = await this.tronWeb.fullNode.request<Omit<BroadcastReturn<T>, 'transaction'>>(\n            'wallet/broadcasttransaction',\n            signedTransaction,\n            'post'\n        );\n        return {\n            ...result,\n            transaction: signedTransaction,\n        };\n    }\n\n    async sendHexTransaction(signedHexTransaction: string) {\n        if (!utils.isHex(signedHexTransaction)) {\n            throw new Error('Invalid hex transaction provided');\n        }\n\n        const params = {\n            transaction: signedHexTransaction,\n        };\n\n        const result = await this.tronWeb.fullNode.request<BroadcastHexReturn>('wallet/broadcasthex', params, 'post');\n        if (result.result) {\n            return {\n                ...result,\n                transaction: JSON.parse(result.transaction) as Transaction,\n                hexTransaction: signedHexTransaction,\n            };\n        }\n        return result;\n    }\n\n    async sendTransaction(to: string, amount: number, options: AddressOptions = {}): Promise<BroadcastReturn<SignedTransaction>> {\n        if (typeof options === 'string') options = { privateKey: options };\n\n        if (!this.tronWeb.isAddress(to)) {\n            throw new Error('Invalid recipient provided');\n        }\n\n        if (!utils.isInteger(amount) || amount <= 0) {\n            throw new Error('Invalid amount provided');\n        }\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey as string,\n            address: this.tronWeb.defaultAddress.hex as string,\n            ...options,\n        };\n\n        if (!options.privateKey && !options.address) {\n            throw new Error('Function requires either a private key or address to be set');\n        }\n\n        const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n        const transaction = await this.tronWeb.transactionBuilder.sendTrx(to, amount, address as Address);\n        const signedTransaction = await this.sign(transaction, options.privateKey);\n        const result = await this.sendRawTransaction(signedTransaction);\n        return result;\n    }\n\n    async sendToken(\n        to: string,\n        amount: number,\n        tokenID: string | number,\n        options: AddressOptions = {}\n    ): Promise<BroadcastReturn<SignedTransaction>> {\n        if (typeof options === 'string') options = { privateKey: options };\n\n        if (!this.tronWeb.isAddress(to)) {\n            throw new Error('Invalid recipient provided');\n        }\n\n        if (!utils.isInteger(amount) || amount <= 0) {\n            throw new Error('Invalid amount provided');\n        }\n\n        if (utils.isInteger(tokenID)) tokenID = tokenID.toString();\n\n        if (!utils.isString(tokenID)) {\n            throw new Error('Invalid token ID provided');\n        }\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey as string,\n            address: this.tronWeb.defaultAddress.hex as string,\n            ...options,\n        };\n\n        if (!options.privateKey && !options.address) {\n            throw new Error('Function requires either a private key or address to be set');\n        }\n\n        const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n        const transaction = await this.tronWeb.transactionBuilder.sendToken(to, amount, tokenID, address as Address);\n        const signedTransaction = await this.sign(transaction, options.privateKey);\n        const result = await this.sendRawTransaction(signedTransaction);\n        return result;\n    }\n\n    /**\n     * Freezes an amount of TRX.\n     * Will give bandwidth OR Energy and TRON Power(voting rights)\n     * to the owner of the frozen tokens.\n     *\n     * @param amount - is the number of frozen trx\n     * @param duration - is the duration in days to be frozen\n     * @param resource - is the type, must be either \"ENERGY\" or \"BANDWIDTH\"\n     * @param options\n     */\n    async freezeBalance(\n        amount = 0,\n        duration = 3,\n        resource: Resource = 'BANDWIDTH',\n        options: AddressOptions = {},\n        receiverAddress?: string\n    ): Promise<BroadcastReturn<SignedTransaction>> {\n        if (typeof options === 'string') options = { privateKey: options };\n\n        if (!['BANDWIDTH', 'ENERGY'].includes(resource)) {\n            throw new Error('Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"');\n        }\n\n        if (!utils.isInteger(amount) || amount <= 0) {\n            throw new Error('Invalid amount provided');\n        }\n\n        if (!utils.isInteger(duration) || duration < 3) {\n            throw new Error('Invalid duration provided, minimum of 3 days');\n        }\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey as string,\n            address: this.tronWeb.defaultAddress.hex as string,\n            ...options,\n        };\n\n        if (!options.privateKey && !options.address) {\n            throw new Error('Function requires either a private key or address to be set');\n        }\n\n        const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n        const freezeBalance = await this.tronWeb.transactionBuilder.freezeBalance(\n            amount,\n            duration,\n            resource,\n            address as Address,\n            receiverAddress\n        );\n        const signedTransaction = await this.sign(freezeBalance, options.privateKey);\n        const result = await this.sendRawTransaction(signedTransaction);\n        return result;\n    }\n\n    /**\n     * Unfreeze TRX that has passed the minimum freeze duration.\n     * Unfreezing will remove bandwidth and TRON Power.\n     *\n     * @param resource - is the type, must be either \"ENERGY\" or \"BANDWIDTH\"\n     * @param options\n     */\n    async unfreezeBalance(\n        resource: Resource = 'BANDWIDTH',\n        options: AddressOptions = {},\n        receiverAddress: string\n    ): Promise<BroadcastReturn<SignedTransaction>> {\n        if (typeof options === 'string') options = { privateKey: options };\n\n        if (!['BANDWIDTH', 'ENERGY'].includes(resource)) {\n            throw new Error('Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"');\n        }\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey as string,\n            address: this.tronWeb.defaultAddress.hex as string,\n            ...options,\n        };\n\n        if (!options.privateKey && !options.address) {\n            throw new Error('Function requires either a private key or address to be set');\n        }\n\n        const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n        const unfreezeBalance = await this.tronWeb.transactionBuilder.unfreezeBalance(\n            resource,\n            address as Address,\n            receiverAddress\n        );\n        const signedTransaction = await this.sign(unfreezeBalance, options.privateKey);\n        const result = await this.sendRawTransaction(signedTransaction);\n        return result;\n    }\n\n    /**\n     * Modify account name\n     * Note: Username is allowed to edit only once.\n     *\n     * @param privateKey - Account private Key\n     * @param accountName - name of the account\n     *\n     * @return modified Transaction Object\n     */\n    async updateAccount(accountName: string, options: AddressOptions = {}): Promise<BroadcastReturn<SignedTransaction>> {\n        if (typeof options === 'string') options = { privateKey: options };\n\n        if (!utils.isString(accountName) || !accountName.length) {\n            throw new Error('Name must be a string');\n        }\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey as string,\n            address: this.tronWeb.defaultAddress.hex as string,\n            ...options,\n        };\n\n        if (!options.privateKey && !options.address) throw Error('Function requires either a private key or address to be set');\n\n        const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n        const updateAccount = await this.tronWeb.transactionBuilder.updateAccount(accountName, address as Address);\n        const signedTransaction = await this.sign(updateAccount, options.privateKey);\n        const result = await this.sendRawTransaction(signedTransaction);\n        return result;\n    }\n\n    /**\n     * Gets a network modification proposal by ID.\n     */\n    async getProposal(proposalID: number): Promise<Proposal> {\n        if (!utils.isInteger(proposalID) || proposalID < 0) {\n            throw new Error('Invalid proposalID provided');\n        }\n\n        return this.tronWeb.fullNode.request(\n            'wallet/getproposalbyid',\n            {\n                id: parseInt(proposalID),\n            },\n            'post'\n        );\n    }\n\n    /**\n     * Lists all network modification proposals.\n     */\n    async listProposals(): Promise<Proposal[]> {\n        const { proposals = [] } = await this.tronWeb.fullNode.request<{ proposals: Proposal[] }>(\n            'wallet/listproposals',\n            {},\n            'post'\n        );\n        return proposals;\n    }\n\n    /**\n     * Lists all parameters available for network modification proposals.\n     */\n    async getChainParameters(): Promise<ChainParameter[]> {\n        const { chainParameter = [] } = await this.tronWeb.fullNode.request<{ chainParameter: ChainParameter[] }>(\n            'wallet/getchainparameters',\n            {},\n            'post'\n        );\n        return chainParameter;\n    }\n\n    /**\n     * Get the account resources\n     */\n    async getAccountResources(address = this.tronWeb.defaultAddress.hex): Promise<AccountResourceMessage> {\n        if (!this.tronWeb.isAddress(address as Address)) {\n            throw new Error('Invalid address provided');\n        }\n\n        return this.tronWeb.fullNode.request(\n            'wallet/getaccountresource',\n            {\n                address: this.tronWeb.address.toHex(address as string),\n            },\n            'post'\n        );\n    }\n\n    /**\n     * Query the amount of resources of a specific resourceType delegated by fromAddress to toAddress\n     */\n    async getDelegatedResourceV2(\n        fromAddress = this.tronWeb.defaultAddress.hex,\n        toAddress = this.tronWeb.defaultAddress.hex,\n        options = { confirmed: true }\n    ): Promise<{\n        delegatedResource: {\n            from: string;\n            to: string;\n            frozen_balance_for_bandwidth: number;\n            frozen_balance_for_energy: number;\n            expire_time_for_bandwidth: number;\n            expire_time_for_energy: number;\n        };\n    }> {\n        if (!this.tronWeb.isAddress(fromAddress as Address)) {\n            throw new Error('Invalid address provided');\n        }\n\n        if (!this.tronWeb.isAddress(toAddress as Address)) {\n            throw new Error('Invalid address provided');\n        }\n\n        return this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(\n            `wallet${options.confirmed ? 'solidity' : ''}/getdelegatedresourcev2`,\n            {\n                fromAddress: toHex(fromAddress as string),\n                toAddress: toHex(toAddress as string),\n            },\n            'post'\n        );\n    }\n\n    /**\n     * Query the resource delegation index by an account\n     */\n    async getDelegatedResourceAccountIndexV2(\n        address = this.tronWeb.defaultAddress.hex,\n        options = { confirmed: true }\n    ): Promise<{\n        account: Address;\n        fromAccounts: Address[];\n        toAccounts: Address[];\n    }> {\n        if (!this.tronWeb.isAddress(address as Address)) {\n            throw new Error('Invalid address provided');\n        }\n\n        return this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(\n            `wallet${options.confirmed ? 'solidity' : ''}/getdelegatedresourceaccountindexv2`,\n            {\n                value: toHex(address as Address),\n            },\n            'post'\n        );\n    }\n\n    /**\n     * Query the amount of delegatable resources of the specified resource Type for target address, unit is sun.\n     */\n    async getCanDelegatedMaxSize(\n        address = this.tronWeb.defaultAddress.hex,\n        resource: Resource = 'BANDWIDTH',\n        options = { confirmed: true }\n    ): Promise<{\n        max_size: number;\n    }> {\n        if (!this.tronWeb.isAddress(address as Address)) {\n            throw new Error('Invalid address provided');\n        }\n\n        this.validator.notValid([\n            {\n                name: 'resource',\n                type: 'resource',\n                value: resource,\n                msg: 'Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"',\n            },\n        ]);\n\n        return this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(\n            `wallet${options.confirmed ? 'solidity' : ''}/getcandelegatedmaxsize`,\n            {\n                owner_address: toHex(address as Address),\n                type: resource === 'ENERGY' ? 1 : 0,\n            },\n            'post'\n        );\n    }\n\n    /**\n     * Remaining times of available unstaking API\n     */\n    async getAvailableUnfreezeCount(\n        address = this.tronWeb.defaultAddress.hex,\n        options = { confirmed: true }\n    ): Promise<{\n        count: number;\n    }> {\n        if (!this.tronWeb.isAddress(address as Address)) {\n            throw new Error('Invalid address provided');\n        }\n\n        return this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(\n            `wallet${options.confirmed ? 'solidity' : ''}/getavailableunfreezecount`,\n            {\n                owner_address: toHex(address as Address),\n            },\n            'post'\n        );\n    }\n\n    /**\n     * Query the withdrawable balance at the specified timestamp\n     */\n    async getCanWithdrawUnfreezeAmount(\n        address = this.tronWeb.defaultAddress.hex,\n        timestamp = Date.now(),\n        options = { confirmed: true }\n    ): Promise<{\n        amount: number;\n    }> {\n        if (!this.tronWeb.isAddress(address as Address)) {\n            throw new Error('Invalid address provided');\n        }\n\n        if (!utils.isInteger(timestamp) || timestamp < 0) {\n            throw new Error('Invalid timestamp provided');\n        }\n\n        return this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(\n            `wallet${options.confirmed ? 'solidity' : ''}/getcanwithdrawunfreezeamount`,\n            {\n                owner_address: toHex(address as Address),\n                timestamp: timestamp,\n            },\n            'post'\n        );\n    }\n\n    /**\n     * Get the exchange ID.\n     */\n    async getExchangeByID(exchangeID: number): Promise<Exchange> {\n        if (!utils.isInteger(exchangeID) || exchangeID < 0) {\n            throw new Error('Invalid exchangeID provided');\n        }\n\n        return this.tronWeb.fullNode.request(\n            'wallet/getexchangebyid',\n            {\n                id: exchangeID,\n            },\n            'post'\n        );\n    }\n\n    /**\n     * Lists the exchanges\n     */\n    async listExchanges() {\n        return this.tronWeb.fullNode\n            .request<{ exchanges: Exchange[] }>('wallet/listexchanges', {}, 'post')\n            .then(({ exchanges = [] }) => exchanges);\n    }\n\n    /**\n     * Lists all network modification proposals.\n     */\n    async listExchangesPaginated(limit = 10, offset = 0) {\n        return this.tronWeb.fullNode\n            .request<{ exchanges: Exchange[] }>(\n                'wallet/getpaginatedexchangelist',\n                {\n                    limit,\n                    offset,\n                },\n                'post'\n            )\n            .then(({ exchanges = [] }) => exchanges);\n    }\n\n    /**\n     * Get info about thre node\n     */\n    async getNodeInfo(): Promise<{\n        beginSyncNum: number;\n        block: string;\n        solidityBlock: string;\n        currentConnectCount: number;\n        activeConnectCount: number;\n        passiveConnectCount: number;\n        totalFlow: number;\n        peerInfoList: {\n            lastSyncBlock: string;\n            remainNum: number;\n            lastBlockUpdateTime: number;\n            syncFlag: boolean;\n            headBlockTimeWeBothHave: number;\n            needSyncFromPeer: boolean;\n            needSyncFromUs: boolean;\n            host: string;\n            port: number;\n            nodeId: string;\n            connectTime: number;\n            avgLatency: number;\n            syncToFetchSize: number;\n            syncToFetchSizePeekNum: number;\n            syncBlockRequestedSize: number;\n            unFetchSynNum: number;\n            blockInPorcSize: number;\n            headBlockWeBothHave: string;\n            isActive: boolean;\n            score: number;\n            nodeCount: number;\n            inFlow: number;\n            disconnectTimes: number;\n            localDisconnectReason: string;\n            remoteDisconnectReason: string;\n        };\n        configNodeInfo: {\n            codeVersion: string;\n            p2pVersion: string;\n            listenPort: number;\n            discoverEnable: boolean;\n            activeNodeSize: number;\n            passiveNodeSize: number;\n            sendNodeSize: number;\n            maxConnectCount: number;\n            sameIpMaxConnectCount: number;\n            backupListenPort: number;\n            backupMemberSize: number;\n            backupPriority: number;\n            dbVersion: number;\n            minParticipationRate: number;\n            supportConstant: boolean;\n            minTimeRatio: number;\n            maxTimeRatio: number;\n            allowCreationOfContracts: number;\n            allowAdaptiveEnergy: number;\n        };\n        machineInfo: {\n            threadCount: number;\n            deadLockThreadCount: number;\n            cpuCount: number;\n            totalMemory: number;\n            freeMemory: number;\n            cpuRate: number;\n            javaVersion: string;\n            osName: string;\n            jvmTotalMemory: number;\n            jvmFreeMemory: number;\n            processCpuRate: number;\n            memoryDescInfoList: {\n                name: string;\n                initSize: number;\n                useSize: number;\n                maxSize: number;\n                useRate: number;\n            };\n            deadLockThreadInfoList: {\n                name: string;\n                lockName: string;\n                lockOwner: string;\n                state: string;\n                blockTime: number;\n                waitTime: number;\n                stackTrace: string;\n            };\n        };\n        cheatWitnessInfoMap: Map<string, string>;\n    }> {\n        return this.tronWeb.fullNode.request('wallet/getnodeinfo', {}, 'post');\n    }\n\n    async getTokenListByName(tokenID: string | number): Promise<Token | Token[]> {\n        if (utils.isInteger(tokenID)) tokenID = tokenID.toString();\n\n        if (!utils.isString(tokenID) || !tokenID.length) {\n            throw new Error('Invalid token ID provided');\n        }\n\n        return this.tronWeb.fullNode\n            .request<({ assetIssue: Token[] } & { name: undefined }) | (Token & { assetIssue: undefined })>(\n                'wallet/getassetissuelistbyname',\n                {\n                    value: this.tronWeb.fromUtf8(tokenID),\n                },\n                'post'\n            )\n            .then((token) => {\n                if (Array.isArray(token.assetIssue)) {\n                    return token.assetIssue.map((t) => this._parseToken(t));\n                } else if (!token.name) {\n                    throw new Error('Token does not exist');\n                }\n\n                return this._parseToken(token);\n            });\n    }\n\n    getTokenByID(tokenID: number | string): Promise<Token> {\n        if (utils.isInteger(tokenID)) tokenID = tokenID.toString();\n\n        if (!utils.isString(tokenID) || !tokenID.length) {\n            throw new Error('Invalid token ID provided');\n        }\n\n        return this.tronWeb.fullNode\n            .request<Token>(\n                'wallet/getassetissuebyid',\n                {\n                    value: tokenID,\n                },\n                'post'\n            )\n            .then((token) => {\n                if (!token.name) {\n                    throw new Error('Token does not exist');\n                }\n\n                return this._parseToken(token);\n            });\n    }\n\n    async getReward(address: Address, options: { confirmed?: boolean } = {}) {\n        options.confirmed = true;\n        return this._getReward(address, options);\n    }\n\n    async getUnconfirmedReward(address: Address, options: { confirmed?: boolean } = {}) {\n        options.confirmed = false;\n        return this._getReward(address, options);\n    }\n\n    async getBrokerage(address: Address, options: { confirmed?: boolean } = {}) {\n        options.confirmed = true;\n        return this._getBrokerage(address, options);\n    }\n\n    async getUnconfirmedBrokerage(address: Address, options: { confirmed?: boolean } = {}) {\n        options.confirmed = false;\n        return this._getBrokerage(address, options);\n    }\n\n    async _getReward(address = this.tronWeb.defaultAddress.hex, options: { confirmed?: boolean }): Promise<number> {\n        this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address,\n            },\n        ]);\n\n        const data = {\n            address: toHex(address as Address),\n        };\n\n        return this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode']\n            .request<{ reward?: number }>(`wallet${options.confirmed ? 'solidity' : ''}/getReward`, data, 'post')\n            .then((result = { reward: undefined }) => {\n                if (typeof result.reward === 'undefined') {\n                    throw new Error('Not found.');\n                }\n\n                return result.reward;\n            });\n    }\n\n    private async _getBrokerage(address = this.tronWeb.defaultAddress.hex, options: { confirmed?: boolean }): Promise<number> {\n        this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address,\n            },\n        ]);\n\n        const data = {\n            address: toHex(address as Address),\n        };\n\n        return this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode']\n            .request<{ brokerage?: number }>(`wallet${options.confirmed ? 'solidity' : ''}/getBrokerage`, data, 'post')\n            .then((result = {}) => {\n                if (typeof result.brokerage === 'undefined') {\n                    throw new Error('Not found.');\n                }\n\n                return result.brokerage;\n            });\n    }\n\n    async getBandwidthPrices(): Promise<string> {\n        return this.tronWeb.fullNode.request<{ prices?: string }>('wallet/getbandwidthprices', {}, 'post')\n            .then((result = {}) => {\n                if (typeof result.prices === 'undefined') {\n                    throw new Error('Not found.');\n                }\n\n                return result.prices;\n            });\n    }\n\n    async getEnergyPrices(): Promise<string> {\n        return this.tronWeb.fullNode.request<{ prices?: string }>('wallet/getenergyprices', {}, 'post')\n            .then((result = {}) => {\n                if (typeof result.prices === 'undefined') {\n                    throw new Error('Not found.');\n                }\n\n                return result.prices;\n            });\n    }\n}\n", "/* eslint-disable no-control-regex */\nimport utils from '../../utils/index.js';\nimport { encodeParamsV2ByABI, decodeParamsV2ByABI } from '../../utils/abi.js';\nimport { TronWeb } from '../../tronweb.js';\nimport { Contract } from './index.js';\nimport { sha3 } from '../../utils/crypto.js';\n\nexport interface CallOptions {\n    feeLimit?: number;\n    callValue?: number;\n    callTokenValue?: number;\n    callTokenId?: number;\n    userFeePercentage?: number;\n    shouldPollResponse?: boolean;\n    from?: string | false;\n    rawParameter?: string;\n    _isConstant?: true;\n}\n\nexport interface SendOptions {\n    from?: string | false;\n    feeLimit?: number;\n    callValue?: number;\n    rawParameter?: string;\n    userFeePercentage?: number;\n    shouldPollResponse?: boolean;\n    pollTimes?: number;\n    rawResponse?: boolean;\n    keepTxID?: boolean;\n}\n\nimport type {\n    FragmentTypes,\n    StateMutabilityTypes,\n    FunctionFragment,\n    FallbackFragment,\n    ReceiveFragment,\n    EventFragment,\n    AbiInputsType,\n    AbiOutputsType,\n} from '../../types/ABI.js';\n\nexport type AbiFragmentNoErrConstructor = FunctionFragment | EventFragment | FallbackFragment | ReceiveFragment;\n\nconst getFunctionSelector = (abi: AbiFragmentNoErrConstructor) => {\n    if ('stateMutability' in abi) {\n        (abi.stateMutability as StateMutabilityTypes) = abi.stateMutability ? abi.stateMutability.toLowerCase() : 'nonpayable';\n    }\n    (abi.type as FragmentTypes) = abi.type ? abi.type.toLowerCase() : '';\n    if (abi.type === 'fallback' || abi.type === 'receive') return '0x';\n    const iface = new utils.ethersUtils.Interface([abi]);\n    let obj;\n    if (abi.type === 'event') {\n        obj = iface.getEvent(abi.name);\n    } else {\n        obj = iface.getFunction(abi.name);\n    }\n    if (obj) {\n        return obj.format('sighash');\n    }\n    throw new Error('unknown function');\n};\n\nconst decodeOutput = (abi: AbiFragmentNoErrConstructor, output: string) => {\n    return decodeParamsV2ByABI(abi, output);\n};\n\nexport class Method {\n    tronWeb: TronWeb;\n    contract: Contract;\n    abi: AbiFragmentNoErrConstructor;\n    name: string;\n    inputs: AbiInputsType;\n    outputs: AbiOutputsType;\n    functionSelector: string | null;\n    signature: string;\n    defaultOptions: {\n        feeLimit: number;\n        callValue: number;\n        userFeePercentage: number;\n        shouldPollResponse: boolean;\n    };\n\n    constructor(contract: Contract, abi: AbiFragmentNoErrConstructor) {\n        this.tronWeb = contract.tronWeb;\n        this.contract = contract;\n\n        this.abi = abi;\n        this.name = abi.name || abi.type;\n\n        this.inputs = abi.inputs || [];\n\n        this.outputs = [];\n        if ('outputs' in abi && abi.outputs) {\n            this.outputs = abi.outputs;\n        }\n\n        this.functionSelector = getFunctionSelector(abi);\n        this.signature = sha3(this.functionSelector, false).slice(0, 8);\n\n        this.defaultOptions = {\n            feeLimit: this.tronWeb.feeLimit,\n            callValue: 0,\n            userFeePercentage: 100,\n            shouldPollResponse: false, // Only used for sign()\n        };\n    }\n\n    decodeInput(data: string) {\n        const abi = JSON.parse(JSON.stringify(this.abi));\n        abi.outputs = abi.inputs;\n        return decodeOutput(abi, '0x' + data);\n    }\n\n    onMethod(...args: any[]) {\n        let rawParameter = '';\n        if (this.abi && !/event/i.test(this.abi.type)) {\n            rawParameter = encodeParamsV2ByABI(this.abi, args);\n        }\n        return {\n            call: async (options: CallOptions = {}) => {\n                options = {\n                    ...options,\n                    rawParameter,\n                };\n\n                return await this._call([], [], options);\n            },\n            send: async (options: SendOptions = {}, privateKey = this.tronWeb.defaultPrivateKey) => {\n                options = {\n                    ...options,\n                    rawParameter,\n                };\n\n                return await this._send([], [], options, privateKey);\n            },\n        };\n    }\n\n    async _call(types: [], args: [], options: CallOptions = {}) {\n        if (types.length !== args.length) {\n            throw new Error('Invalid argument count provided');\n        }\n\n        if (!this.contract.address) {\n            throw new Error('Smart contract is missing address');\n        }\n\n        if (!this.contract.deployed) {\n            throw new Error('Calling smart contracts requires you to load the contract first');\n        }\n        if ('stateMutability' in this.abi) {\n            const { stateMutability } = this.abi;\n\n            if (stateMutability && !['pure', 'view'].includes(stateMutability.toLowerCase())) {\n                throw new Error(`Methods with state mutability \"${stateMutability}\" must use send()`);\n            }\n        }\n\n        options = {\n            ...this.defaultOptions,\n            from: this.tronWeb.defaultAddress.hex,\n            ...options,\n            _isConstant: true,\n        };\n\n        const parameters = args.map((value, index) => ({\n            type: types[index],\n            value,\n        }));\n\n        const transaction = await this.tronWeb.transactionBuilder.triggerSmartContract(\n            this.contract.address,\n            this.functionSelector!,\n            options,\n            parameters,\n            options.from ? this.tronWeb.address.toHex(options.from) : undefined\n        );\n\n        if (!utils.hasProperty(transaction, 'constant_result')) {\n            throw new Error('Failed to execute');\n        }\n\n        const len = transaction.constant_result![0].length;\n        if (len === 0 || len % 64 === 8) {\n            let msg = 'The call has been reverted or has thrown an error.';\n            if (len !== 0) {\n                msg += ' Error message: ';\n                let msg2 = '';\n                const chunk = transaction.constant_result![0].substring(8);\n                for (let i = 0; i < len - 8; i += 64) {\n                    msg2 += this.tronWeb.toUtf8(chunk.substring(i, i + 64));\n                }\n                msg += msg2\n                    .replace(/(\\u0000|\\u000b|\\f)+/g, ' ')\n                    .replace(/ +/g, ' ')\n                    .replace(/\\s+$/g, '');\n            }\n            throw new Error(msg);\n        }\n\n        let output = decodeOutput(this.abi, '0x' + transaction.constant_result![0]);\n\n        if (output.length === 1 && Object.keys(output).length === 1) {\n            output = output[0];\n        }\n        return output;\n    }\n\n    async _send(types: [], args: [], options: SendOptions = {}, privateKey = this.tronWeb.defaultPrivateKey) {\n        if (types.length !== args.length) {\n            throw new Error('Invalid argument count provided');\n        }\n\n        if (!this.contract.address) {\n            throw new Error('Smart contract is missing address');\n        }\n\n        if (!this.contract.deployed) {\n            throw new Error('Calling smart contracts requires you to load the contract first');\n        }\n\n        const { stateMutability } = this.abi as { stateMutability: StateMutabilityTypes };\n\n        if (['pure', 'view'].includes(stateMutability.toLowerCase())) {\n            throw new Error(`Methods with state mutability \"${stateMutability}\" must use call()`);\n        }\n\n        // If a function isn't payable, dont provide a callValue.\n        if (!['payable'].includes(stateMutability.toLowerCase())) {\n            options.callValue = 0;\n        }\n\n        options = {\n            ...this.defaultOptions,\n            from: this.tronWeb.defaultAddress.hex,\n            ...options,\n        };\n\n        const parameters = args.map((value, index) => ({\n            type: types[index],\n            value,\n        }));\n\n        const address = privateKey ? this.tronWeb.address.fromPrivateKey(privateKey) : this.tronWeb.defaultAddress.base58;\n        const transaction = await this.tronWeb.transactionBuilder.triggerSmartContract(\n            this.contract.address,\n            this.functionSelector!,\n            options,\n            parameters,\n            this.tronWeb.address.toHex(address as string)\n        );\n\n        if (!transaction.result || !transaction.result.result) {\n            throw new Error('Unknown error: ' + JSON.stringify(transaction, null, 2));\n        }\n\n        // If privateKey is false, this won't be signed here. We assume sign functionality will be replaced.\n        const signedTransaction = await this.tronWeb.trx.sign(transaction.transaction, privateKey);\n\n        if (!signedTransaction.signature) {\n            if (!privateKey) {\n                throw new Error('Transaction was not signed properly');\n            }\n\n            throw new Error('Invalid private key provided');\n        }\n\n        const broadcast = await this.tronWeb.trx.sendRawTransaction(signedTransaction);\n\n        if (broadcast.code) {\n            const err = {\n                error: broadcast.code,\n                message: broadcast.code as unknown as string,\n            };\n            if (broadcast.message) err.message = this.tronWeb.toUtf8(broadcast.message);\n            const error = new Error(err.message);\n            (error as any).error = broadcast.code;\n            throw error;\n        }\n\n        if (!options.shouldPollResponse) {\n            return signedTransaction.txID;\n        }\n\n        const checkResult: (index: number) => any = async (index) => {\n            if (index === (options.pollTimes || 20)) {\n                const error: any = new Error('Cannot find result in solidity node');\n                error.error = 'Cannot find result in solidity node';\n                error.transaction = signedTransaction;\n                throw error;\n            }\n\n            const output = await this.tronWeb.trx.getTransactionInfo(signedTransaction.txID);\n\n            if (!Object.keys(output).length) {\n                await new Promise((r) => setTimeout(r, 3000));\n                return checkResult(index + 1);\n            }\n\n            if (output.result && output.result === 'FAILED') {\n                const error: any = new Error(this.tronWeb.toUtf8(output.resMessage));\n                error.error = this.tronWeb.toUtf8(output.resMessage);\n                error.transaction = signedTransaction;\n                error.output = output;\n                throw error;\n            }\n\n            if (!utils.hasProperty(output, 'contractResult')) {\n                const error: any = new Error('Failed to execute: ' + JSON.stringify(output, null, 2));\n                error.error = 'Failed to execute: ' + JSON.stringify(output, null, 2);\n                error.transaction = signedTransaction;\n                error.output = output;\n                throw error;\n            }\n\n            if (options.rawResponse) {\n                return output;\n            }\n\n            let decoded = decodeOutput(this.abi, '0x' + output.contractResult[0]);\n\n            if (decoded.length === 1 && Object.keys(decoded).length === 1) {\n                decoded = decoded[0];\n            }\n\n            if (options.keepTxID) {\n                return [signedTransaction.txID, decoded];\n            }\n\n            return decoded;\n        };\n\n        return checkResult(0);\n    }\n}\n", "import { TronWeb } from '../../tronweb.js';\nimport utils from '../../utils/index.js';\nimport { Method, AbiFragmentNoErrConstructor } from './method.js';\nimport type { ContractAbiInterface } from '../../types/ABI.js';\nimport { Address } from '../../types/Trx.js';\nimport { CreateSmartContractOptions } from '../../types/TransactionBuilder.js';\n\n\nexport class Contract {\n    tronWeb: TronWeb;\n    abi: ContractAbiInterface;\n    address: false | string;\n    eventListener: any;\n    bytecode?: false | string;\n    deployed?: boolean;\n    lastBlock?: false | number;\n    methods: Record<string | number | symbol, (...args: any) => ReturnType<Method['onMethod']>>;\n    methodInstances: Record<string | number | symbol, Method>;\n    props: any[];\n    [key: string | number | symbol]: any;\n\n    constructor(tronWeb: TronWeb, abi: ContractAbiInterface = [], address: Address) {\n        if (!tronWeb || !(tronWeb instanceof TronWeb)) throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n\n        this.address = address;\n        this.abi = abi;\n\n        this.eventListener = false;\n        this.bytecode = false;\n        this.deployed = false;\n        this.lastBlock = false;\n\n        this.methods = {};\n        this.methodInstances = {};\n        this.props = [];\n\n        if (utils.address.isAddress(address)) {\n            this.deployed = true;\n        } else {\n            this.address = false;\n        }\n\n        this.loadAbi(abi);\n    }\n\n    hasProperty(property: number | string | symbol) {\n        // eslint-disable-next-line no-prototype-builtins\n        return this.hasOwnProperty(property) || (this as any).__proto__.hasOwnProperty(property);\n    }\n\n    loadAbi(abi: ContractAbiInterface) {\n        this.abi = abi;\n        this.methods = {};\n\n        this.props.forEach((prop: string) => delete (this as any)[prop]);\n\n        abi.forEach((func) => {\n            // Don't build a method for constructor function. That's handled through contract create.\n            // Don't build a method for error function.\n            if (!func.type || /constructor|error/i.test(func.type)) return;\n\n            const method = new Method(this, func as AbiFragmentNoErrConstructor);\n            const methodCall = method.onMethod.bind(method);\n\n            const { name, functionSelector, signature } = method;\n\n            this.methods[name] = methodCall;\n            this.methods[functionSelector!] = methodCall;\n            this.methods[signature] = methodCall;\n\n            this.methodInstances[name] = method;\n            this.methodInstances[functionSelector!] = method;\n            this.methodInstances[signature] = method;\n\n            if (!this.hasProperty(name)) {\n                (this as any)[name] = methodCall;\n                this.props.push(name);\n            }\n\n            if (!this.hasProperty(functionSelector!)) {\n                (this as any)[functionSelector!] = methodCall;\n                this.props.push(functionSelector);\n            }\n\n            if (!this.hasProperty(signature)) {\n                (this as any)[signature] = methodCall;\n                this.props.push(signature);\n            }\n        });\n    }\n\n    decodeInput(data: string) {\n        const methodName = data.substring(0, 8);\n        const inputData = data.substring(8);\n\n        if (!this.methodInstances[methodName]) throw new Error('Contract method ' + methodName + ' not found');\n\n        const methodInstance = this.methodInstances[methodName];\n\n        return {\n            name: methodInstance.name,\n            params: this.methodInstances[methodName].decodeInput(inputData),\n        };\n    }\n\n    async new(options: CreateSmartContractOptions, privateKey = this.tronWeb.defaultPrivateKey) {\n        const address = this.tronWeb.address.fromPrivateKey(privateKey as string);\n        const transaction = await this.tronWeb.transactionBuilder.createSmartContract(options, address as Address);\n        const signedTransaction = await this.tronWeb.trx.sign(transaction, privateKey);\n        const contract = await this.tronWeb.trx.sendRawTransaction(signedTransaction);\n\n        if (contract.code) {\n            throw {\n                error: contract.code,\n                message: this.tronWeb.toUtf8(contract.message),\n            };\n        }\n\n        await utils.sleep(3000);\n        return this.at(signedTransaction.contract_address);\n    }\n\n    async at(contractAddress: Address) {\n        try {\n            const contract = await this.tronWeb.trx.getContract(contractAddress);\n\n            if (!contract.contract_address) {\n                throw new Error('Unknown error: ' + JSON.stringify(contract, null, 2));\n            }\n\n            this.address = contract.contract_address;\n            this.bytecode = contract.bytecode;\n            this.deployed = true;\n\n            this.loadAbi(contract.abi ? (contract.abi.entrys ? contract.abi.entrys : []) : []);\n\n            return this;\n        } catch (ex: any) {\n            if (ex.toString().includes('does not exist')) {\n                throw new Error('Contract has not been deployed on the network');\n            }\n\n            throw new Error(ex);\n        }\n    }\n}\n\nexport type { CallOptions, SendOptions, AbiFragmentNoErrConstructor } from './method.js';\nexport { Method } from './method.js';\n", "import { TronWeb } from '../tronweb.js';\nimport utils from '../utils/index.js';\nimport semver from 'semver';\n\ninterface PluginConstructorOptions {\n    disablePlugins?: boolean;\n}\n\ninterface PluginClassInterface {\n    new (tronWeb: TronWeb): {\n        pluginInterface?: (options: PluginOptions) => PluginInterfaceReturn;\n    };\n}\n\ninterface PluginInterfaceReturn {\n    requires: string;\n    components?: Record<string | number | symbol, any>;\n    fullClass?: boolean;\n}\n\ntype PluginOptions = any;\n\nexport class Plugin {\n    tronWeb: TronWeb;\n    pluginNoOverride: string[];\n    disablePlugins: boolean;\n\n    constructor(tronWeb: TronWeb, options: PluginConstructorOptions = {}) {\n        if (!tronWeb || !(tronWeb instanceof TronWeb)) throw new Error('Expected instance of TronWeb');\n        this.tronWeb = tronWeb;\n        this.pluginNoOverride = ['register'];\n        this.disablePlugins = !!options.disablePlugins;\n    }\n\n    register(Plugin: PluginClassInterface, options?: PluginOptions) {\n        let pluginInterface: PluginInterfaceReturn = {\n            requires: '0.0.0',\n            components: {},\n        };\n        const result: {\n            libs: any[];\n            plugged: any[];\n            skipped: any[];\n            error?: string;\n        } = {\n            libs: [],\n            plugged: [],\n            skipped: [],\n            error: undefined,\n        };\n        if (this.disablePlugins) {\n            result.error = 'This instance of TronWeb has plugins disabled.';\n            return result;\n        }\n        const plugin = new Plugin(this.tronWeb);\n        if (utils.isFunction(plugin.pluginInterface)) {\n            pluginInterface = plugin.pluginInterface(options);\n        }\n        if (semver.satisfies(TronWeb.version, pluginInterface.requires)) {\n            if (pluginInterface.fullClass) {\n                // plug the entire class at the same level of tronWeb.trx\n                const className = plugin.constructor.name;\n                const classInstanceName = className.substring(0, 1).toLowerCase() + className.substring(1);\n                if (className !== classInstanceName) {\n                    Object.assign(TronWeb, {\n                        [className]: Plugin,\n                    });\n                    Object.assign(this.tronWeb, {\n                        [classInstanceName]: plugin,\n                    });\n                    result.libs.push(className);\n                }\n            } else {\n                // plug methods into a class, like trx\n                for (const component in pluginInterface.components) {\n                    // eslint-disable-next-line no-prototype-builtins\n                    if (!this.tronWeb.hasOwnProperty(component)) {\n                        continue;\n                    }\n                    const methods = pluginInterface.components[component];\n                    const pluginNoOverride = (this.tronWeb as any)[component].pluginNoOverride || [];\n                    for (const method in methods) {\n                        if (\n                            method === 'constructor' ||\n                            ((this.tronWeb as any)[component][method] &&\n                                (pluginNoOverride.includes(method) || // blacklisted methods\n                                    /^_/.test(method))) // private methods\n                        ) {\n                            result.skipped.push(method);\n                            continue;\n                        }\n                        (this.tronWeb as any)[component][method] = methods[method].bind((this.tronWeb as any)[component]);\n                        result.plugged.push(method);\n                    }\n                }\n            }\n        } else {\n            throw new Error('The plugin is not compatible with this version of TronWeb');\n        }\n        return result;\n    }\n}\n", "import { TronWeb } from '../tronweb.js';\nimport { NodeProvider } from '../types/TronWeb.js';\nimport utils from '../utils/index.js';\nimport { HttpProvider } from './providers/index.js';\n\nexport interface GetEventResultOptions {\n    /**\n     * Name of the event to filter by.\n     */\n    eventName?: string;\n    /**\n     * Specific block number to query.\n     */\n    blockNumber?: number;\n    /**\n     * Maximum number returned.\n     */\n    limit?: number;\n    /**\n     * When the data volume of the query result is large, the returned result of one query will not contain all the data, and it takes multiple queries to obtain the complete data. Therefore, the fingerprint field will appear in the last piece of data in the returned result. After specifying this field as the content of the fingerprint in the result of the previous query in the next query, the query will return subsequent data. If there is no such field in the last data of the query result, it means that there is no more data.\n     */\n    fingerprint?: string;\n    /**\n     * If set to true, only returns confirmed transactions.\n     */\n    onlyConfirmed?: boolean;\n    /**\n     * If set to true, only returns unconfirmed transactions.\n     */\n    onlyUnconfirmed?: boolean;\n    /**\n     * Specify the query order, whether to query forward or backward from the sinceTimestamp.\n     * The value can be 'block_timestamp,desc' for time sequence or 'block_timestamp,asc' for the reverse.\n     * Default is 'block_timestamp,desc'.\n     */\n    orderBy?: 'block_timestamp,desc' | 'block_timestamp,asc';\n    /**\n     * Specifies the starting timestamp of the query, in milliseconds, default value is the current time.\n     */\n    minBlockTimestamp?: number;\n    /**\n     * Specifies the ending timestamp of the query, in milliseconds.\n     */\n    maxBlockTimestamp?: number;\n}\n\nexport interface EventResponse {\n    success: boolean;\n    error?: string;\n    data?: {\n        block_number: number;\n        block_timestamp: number;\n        caller_contract_address: string;\n        contract_address: string;\n        event_index: number;\n        event_name: string;\n        result: Record<string, string>;\n        result_type: Record<string, string>;\n        event: string;\n        transaction_id: string;\n        _unconfirmed: boolean;\n    }[];\n    meta?: {\n        at: number;\n        fingerprint?: string;\n        links?: {\n            next: string;\n        };\n        page_size: number;\n    };\n}\n\nexport class Event {\n    private tronWeb: TronWeb;\n\n    constructor(tronWeb: TronWeb) {\n        if (!tronWeb || !(tronWeb instanceof TronWeb)) throw new Error('Expected instance of TronWeb');\n        this.tronWeb = tronWeb;\n    }\n\n    setServer(eventServer: NodeProvider, healthcheck = 'healthcheck') {\n        if (!eventServer) return (this.tronWeb.eventServer = undefined);\n\n        if (utils.isString(eventServer)) eventServer = new HttpProvider(eventServer);\n\n        if (!this.tronWeb.isValidProvider(eventServer)) throw new Error('Invalid event server provided');\n\n        this.tronWeb.eventServer = eventServer;\n        this.tronWeb.eventServer.isConnected = () =>\n            this.tronWeb\n                .eventServer!.request(healthcheck)\n                .then(() => true)\n                .catch(() => false);\n    }\n\n    async getEventsByContractAddress(contractAddress: string, options: GetEventResultOptions = {}) {\n        const newOptions = Object.assign(\n            {\n                limit: 20,\n            },\n            options\n        );\n        const {\n            eventName,\n            blockNumber,\n            onlyUnconfirmed,\n            onlyConfirmed,\n            minBlockTimestamp,\n            maxBlockTimestamp,\n            orderBy,\n            fingerprint,\n        } = newOptions;\n        let { limit } = newOptions;\n\n        if (!this.tronWeb.eventServer) {\n            throw new Error('No event server configured');\n        }\n\n        if (!this.tronWeb.isAddress(contractAddress)) {\n            throw new Error('Invalid contract address provided');\n        }\n\n        if (typeof minBlockTimestamp !== 'undefined' && !utils.isInteger(minBlockTimestamp)) {\n            throw new Error('Invalid minBlockTimestamp provided');\n        }\n\n        if (typeof maxBlockTimestamp !== 'undefined' && !utils.isInteger(maxBlockTimestamp)) {\n            throw new Error('Invalid maxBlockTimestamp provided');\n        }\n\n        if (utils.isInteger(limit) && limit > 200) {\n            console.warn('Defaulting to maximum accepted limit: 200');\n            limit = 200;\n        }\n\n        const qs = {} as any;\n\n        if (eventName) qs.event_name = eventName;\n        if (blockNumber) qs.block_number = blockNumber;\n        if (typeof onlyUnconfirmed === 'boolean') qs.only_unconfirmed = onlyUnconfirmed;\n        if (typeof onlyConfirmed === 'boolean') qs.only_confirmed = onlyConfirmed;\n        if (minBlockTimestamp) qs.min_block_timestamp = minBlockTimestamp;\n        if (maxBlockTimestamp) qs.max_block_timestamp = maxBlockTimestamp;\n        if (orderBy) qs.order_by = orderBy;\n        if (fingerprint) qs.fingerprint = fingerprint;\n        if (utils.isInteger(limit)) qs.limit = limit;\n\n        const res = await this.tronWeb.eventServer.request<EventResponse>(\n            `v1/contracts/${this.tronWeb.address.fromHex(contractAddress)}/events?${new URLSearchParams(qs).toString()}`\n        );\n        if (res.success) {\n            return res;\n        }\n        throw new Error(res.error);\n    }\n\n    async getEventsByTransactionID(\n        transactionID: string,\n        options: {\n            only_unconfirmed?: boolean;\n            only_confirmed?: boolean;\n        } = {}\n    ) {\n        if (!this.tronWeb.eventServer) {\n            throw new Error('No event server configured');\n        }\n\n        const qs = {} as any;\n\n        if (typeof options.only_unconfirmed === 'boolean') {\n            qs.only_unconfirmed = options.only_unconfirmed;\n        }\n\n        if (typeof options.only_confirmed === 'boolean') {\n            qs.only_confirmed = options.only_confirmed;\n        }\n\n        return this.tronWeb.eventServer\n            .request<EventResponse>(`v1/transactions/${transactionID}/events?${new URLSearchParams(qs).toString()}`)\n            .then((res) => {\n                if (res.success) {\n                    return res;\n                }\n                throw new Error(JSON.parse(res.error!).message);\n            });\n    }\n\n    async getEventsByBlockNumber(\n        blockNumber: number | string,\n        options: {\n            only_confirmed?: boolean;\n            limit?: number;\n            fingerprint?: string;\n        } = {}\n    ) {\n        if (!this.tronWeb.eventServer) {\n            throw new Error('No event server configured');\n        }\n\n        const qs = {} as any;\n\n        if (typeof options.only_confirmed === 'boolean') {\n            qs.only_confirmed = options.only_confirmed;\n        }\n\n        if (options.limit) {\n            qs.limit = options.limit;\n        }\n\n        if (options.fingerprint) {\n            qs.fingerprint = options.fingerprint;\n        }\n\n        return this.tronWeb.eventServer\n            .request<EventResponse>(`v1/blocks/${blockNumber}/events?${new URLSearchParams(qs).toString()}`)\n            .then((res) => {\n                if (res.success) {\n                    return res;\n                }\n                throw new Error(res.error);\n            });\n    }\n\n    async getEventsOfLatestBlock(\n        options: {\n            only_confirmed?: boolean;\n        } = {}\n    ) {\n        if (!this.tronWeb.eventServer) {\n            throw new Error('No event server configured');\n        }\n\n        const qs = {} as any;\n\n        if (typeof options.only_confirmed === 'boolean') {\n            qs.only_confirmed = options.only_confirmed;\n        }\n\n        return this.tronWeb.eventServer\n            .request<EventResponse>(`v1/blocks/latest/events?${new URLSearchParams(qs).toString()}`)\n            .then((res) => {\n                if (res.success) {\n                    return res;\n                }\n                throw new Error(res.error);\n            });\n    }\n}\n", "import { TronWeb } from '../tronweb.js';\nimport {\n    keccak256,\n    recoverAddress,\n    concat,\n    defineProperties,\n    getBigInt,\n    getBytes,\n    hexlify,\n    isHexString,\n    mask,\n    toBeHex,\n    toQuantity,\n    toTwos,\n    zeroPadValue,\n    assertArgument,\n    id,\n} from 'ethers';\nimport type { BigNumberish, BytesLike, SignatureLike } from 'ethers';\n\nimport { ADDRESS_PREFIX_REGEX } from './address.js';\n\nfunction getAddress(address: string) {\n    return TronWeb.address.toHex(address).replace(ADDRESS_PREFIX_REGEX, '0x');\n}\nfunction getTronAddress(address: string) {\n    return TronWeb.address.toHex(address);\n}\n\nconst padding = new Uint8Array(32);\npadding.fill(0);\n\nconst BN__1 = BigInt(-1);\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_MAX_UINT256 = BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\n\n// @TODO: in v7, verifyingContract should be an AddressLike and use resolveAddress\n\n/**\n *  The domain for an [[link-eip-712]] payload.\n */\nexport interface TypedDataDomain {\n    /**\n     *  The human-readable name of the signing domain.\n     */\n    name?: null | string;\n\n    /**\n     *  The major version of the signing domain.\n     */\n    version?: null | string;\n\n    /**\n     *  The chain ID of the signing domain.\n     */\n    chainId?: null | BigNumberish;\n\n    /**\n     *  The the address of the contract that will verify the signature.\n     */\n    verifyingContract?: null | string;\n\n    /**\n     *  A salt used for purposes decided by the specific domain.\n     */\n    salt?: null | BytesLike;\n}\n\n/**\n *  A specific field of a structured [[link-eip-712]] type.\n */\nexport interface TypedDataField {\n    /**\n     *  The field name.\n     */\n    name: string;\n\n    /**\n     *  The type of the field.\n     */\n    type: string;\n}\n\nfunction hexPadRight(value: BytesLike): string {\n    const bytes = getBytes(value);\n    const padOffset = bytes.length % 32;\n    if (padOffset) {\n        return concat([bytes, padding.slice(padOffset)]);\n    }\n    return hexlify(bytes);\n}\n\nconst hexTrue = toBeHex(BN_1, 32);\nconst hexFalse = toBeHex(BN_0, 32);\n\nconst domainFieldTypes: Record<string, string> = {\n    name: 'string',\n    version: 'string',\n    chainId: 'uint256',\n    verifyingContract: 'address',\n    salt: 'bytes32',\n};\n\nconst domainFieldNames: Array<string> = ['name', 'version', 'chainId', 'verifyingContract', 'salt'];\n\nfunction checkString(key: string): (value: any) => string {\n    return function (value: any) {\n        assertArgument(typeof value === 'string', `invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);\n        return value;\n    };\n}\n\nconst domainChecks: Record<string, (value: any) => any> = {\n    name: checkString('name'),\n    version: checkString('version'),\n    chainId: function (_value: any) {\n        const value = getBigInt(_value, 'domain.chainId');\n        assertArgument(value >= 0, 'invalid chain ID', 'domain.chainId', _value);\n        if (Number.isSafeInteger(value)) {\n            return Number(value);\n        }\n        return toQuantity(value);\n    },\n    verifyingContract: function (value: any) {\n        try {\n            return getTronAddress(value).toLowerCase();\n        } catch (error) {\n            //\n        }\n        assertArgument(false, `invalid domain value \"verifyingContract\"`, 'domain.verifyingContract', value);\n    },\n    salt: function (value: any) {\n        const bytes = getBytes(value, 'domain.salt');\n        assertArgument(bytes.length === 32, `invalid domain value \"salt\"`, 'domain.salt', value);\n        return hexlify(bytes);\n    },\n};\n\nfunction getBaseEncoder(type: string): null | ((value: any) => string) {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = match[1] === '';\n\n            const width = parseInt(match[2] || '256');\n            assertArgument(\n                width % 8 === 0 && width !== 0 && width <= 256 && (match[2] == null || match[2] === String(width)),\n                'invalid numeric width',\n                'type',\n                type\n            );\n\n            const boundsUpper = mask(BN_MAX_UINT256, signed ? width - 1 : width);\n            const boundsLower = signed ? (boundsUpper + BN_1) * BN__1 : BN_0;\n\n            return function (_value: BigNumberish) {\n                const value = getBigInt(_value, 'value');\n\n                assertArgument(value >= boundsLower && value <= boundsUpper, `value out-of-bounds for ${type}`, 'value', value);\n\n                return toBeHex(signed ? toTwos(value, 256) : value, 32);\n            };\n        }\n    }\n\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            assertArgument(width !== 0 && width <= 32 && match[1] === String(width), 'invalid bytes width', 'type', type);\n\n            return function (value: BytesLike) {\n                const bytes = getBytes(value);\n                assertArgument(bytes.length === width, `invalid length for ${type}`, 'value', value);\n                return hexPadRight(value);\n            };\n        }\n    }\n\n    switch (type) {\n        case 'trcToken':\n            return getBaseEncoder('uint256');\n        case 'address':\n            return function (value: string) {\n                return zeroPadValue(getAddress(value), 32);\n            };\n        case 'bool':\n            return function (value: boolean) {\n                return !value ? hexFalse : hexTrue;\n            };\n        case 'bytes':\n            return function (value: BytesLike) {\n                return keccak256(value);\n            };\n        case 'string':\n            return function (value: string) {\n                return id(value);\n            };\n    }\n\n    return null;\n}\n\nfunction encodeType(name: string, fields: Array<TypedDataField>): string {\n    return `${name}(${fields.map(({ name, type }) => type + ' ' + name).join(',')})`;\n}\n\n/**\n *  A **TypedDataEncode** prepares and encodes [[link-eip-712]] payloads\n *  for signed typed data.\n *\n *  This is useful for those that wish to compute various components of a\n *  typed data hash, primary types, or sub-components, but generally the\n *  higher level [[Signer-signTypedData]] is more useful.\n */\nexport class TypedDataEncoder {\n    /**\n     *  The primary type for the structured [[types]].\n     *\n     *  This is derived automatically from the [[types]], since no\n     *  recursion is possible, once the DAG for the types is consturcted\n     *  internally, the primary type must be the only remaining type with\n     *  no parent nodes.\n     */\n    readonly primaryType!: string;\n\n    readonly #types: string;\n\n    /**\n     *  The types.\n     */\n    get types(): Record<string, Array<TypedDataField>> {\n        return JSON.parse(this.#types);\n    }\n\n    readonly #fullTypes: Map<string, string>;\n\n    readonly #encoderCache: Map<string, (value: any) => string>;\n\n    /**\n     *  Create a new **TypedDataEncoder** for %%types%%.\n     *\n     *  This performs all necessary checking that types are valid and\n     *  do not violate the [[link-eip-712]] structural constraints as\n     *  well as computes the [[primaryType]].\n     */\n    constructor(types: Record<string, Array<TypedDataField>>) {\n        this.#types = JSON.stringify(types);\n        this.#fullTypes = new Map();\n        this.#encoderCache = new Map();\n\n        // Link struct types to their direct child structs\n        const links: Map<string, Set<string>> = new Map();\n\n        // Link structs to structs which contain them as a child\n        const parents: Map<string, Array<string>> = new Map();\n\n        // Link all subtypes within a given struct\n        const subtypes: Map<string, Set<string>> = new Map();\n\n        Object.keys(types).forEach((type) => {\n            links.set(type, new Set());\n            parents.set(type, []);\n            subtypes.set(type, new Set());\n        });\n\n        for (const name in types) {\n            const uniqueNames: Set<string> = new Set();\n\n            for (const field of types[name]) {\n                // Check each field has a unique name\n                assertArgument(\n                    !uniqueNames.has(field.name),\n                    `duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`,\n                    'types',\n                    types\n                );\n                uniqueNames.add(field.name);\n\n                // Get the base type (drop any array specifiers)\n                const baseType = (<any>field.type.match(/^([^\\x5b]*)(\\x5b|$)/))[1] || null;\n                assertArgument(baseType !== name, `circular type reference to ${JSON.stringify(baseType)}`, 'types', types);\n\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) {\n                    continue;\n                }\n\n                assertArgument(parents.has(baseType), `unknown type ${JSON.stringify(baseType)}`, 'types', types);\n\n                // Add linkage\n                (parents.get(baseType) as Array<string>).push(name);\n                (links.get(name) as Set<string>).add(baseType);\n            }\n        }\n\n        // Deduce the primary type\n        const primaryTypes = Array.from(parents.keys()).filter((n) => (parents.get(n) as Array<string>).length === 0);\n        assertArgument(primaryTypes.length !== 0, 'missing primary type', 'types', types);\n        assertArgument(\n            primaryTypes.length === 1,\n            `ambiguous primary types or unused types: ${primaryTypes.map((t) => JSON.stringify(t)).join(', ')}`,\n            'types',\n            types\n        );\n\n        defineProperties<TypedDataEncoder>(this, { primaryType: primaryTypes[0] });\n\n        // Check for circular type references\n        function checkCircular(type: string, found: Set<string>) {\n            assertArgument(!found.has(type), `circular type reference to ${JSON.stringify(type)}`, 'types', types);\n\n            found.add(type);\n\n            for (const child of links.get(type) as Set<string>) {\n                if (!parents.has(child)) {\n                    continue;\n                }\n\n                // Recursively check children\n                checkCircular(child, found);\n\n                // Mark all ancestors as having this decendant\n                for (const subtype of found) {\n                    (subtypes.get(subtype) as Set<string>).add(child);\n                }\n            }\n\n            found.delete(type);\n        }\n        checkCircular(this.primaryType, new Set());\n\n        // Compute each fully describe type\n        for (const [name, set] of subtypes) {\n            const st = Array.from(set);\n            st.sort();\n            this.#fullTypes.set(name, encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(''));\n        }\n    }\n\n    /**\n     *  Returnthe encoder for the specific %%type%%.\n     */\n    getEncoder(type: string): (value: any) => string {\n        let encoder = this.#encoderCache.get(type);\n        if (!encoder) {\n            encoder = this.#getEncoder(type);\n            this.#encoderCache.set(type, encoder);\n        }\n        return encoder;\n    }\n\n    #getEncoder(type: string): (value: any) => string {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return encoder;\n            }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            return (value: Array<any>) => {\n                assertArgument(\n                    !match[3] || parseInt(match[3]) === value.length,\n                    `array length mismatch; expected length ${parseInt(match[3])}`,\n                    'value',\n                    value\n                );\n\n                let result = value.map(subEncoder);\n                if (this.#fullTypes.has(subtype)) {\n                    result = result.map(keccak256);\n                }\n\n                return keccak256(concat(result));\n            };\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this.#fullTypes.get(type) as string);\n            return (value: Record<string, any>) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this.#fullTypes.has(type)) {\n                        return keccak256(result);\n                    }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return concat(values);\n            };\n        }\n\n        assertArgument(false, `unknown type: ${type}`, 'type', type);\n    }\n\n    /**\n     *  Return the full type for %%name%%.\n     */\n    encodeType(name: string): string {\n        const result = this.#fullTypes.get(name);\n        assertArgument(result, `unknown type: ${JSON.stringify(name)}`, 'name', name);\n        return result!;\n    }\n\n    /**\n     *  Return the encoded %%value%% for the %%type%%.\n     */\n    encodeData(type: string, value: any): string {\n        return this.getEncoder(type)(value);\n    }\n\n    /**\n     *  Returns the hash of %%value%% for the type of %%name%%.\n     */\n    hashStruct(name: string, value: Record<string, any>): string {\n        return keccak256(this.encodeData(name, value));\n    }\n\n    /**\n     *  Return the fulled encoded %%value%% for the [[types]].\n     */\n    encode(value: Record<string, any>): string {\n        return this.encodeData(this.primaryType, value);\n    }\n\n    /**\n     *  Return the hash of the fully encoded %%value%% for the [[types]].\n     */\n    hash(value: Record<string, any>): string {\n        return this.hashStruct(this.primaryType, value);\n    }\n\n    /**\n     *  @_ignore:\n     */\n    _visit(type: string, value: any, callback: (type: string, data: any) => any): any {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return callback(type, value);\n            }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            assertArgument(\n                !match[3] || parseInt(match[3]) === value.length,\n                `array length mismatch; expected length ${parseInt(match[3])}`,\n                'value',\n                value\n            );\n            return value.map((v: any) => this._visit(match[1], v, callback));\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, <Record<string, any>>{});\n        }\n\n        assertArgument(false, `unknown type: ${type}`, 'type', type);\n    }\n\n    /**\n     *  Call %%calback%% for each value in %%value%%, passing the type and\n     *  component within %%value%%.\n     *\n     *  This is useful for replacing addresses or other transformation that\n     *  may be desired on each component, based on its type.\n     */\n    visit(value: Record<string, any>, callback: (type: string, data: any) => any): any {\n        return this._visit(this.primaryType, value, callback);\n    }\n\n    /**\n     *  Create a new **TypedDataEncoder** for %%types%%.\n     */\n    static from(types: Record<string, Array<TypedDataField>>): TypedDataEncoder {\n        return new TypedDataEncoder(types);\n    }\n\n    /**\n     *  Return the primary type for %%types%%.\n     */\n    static getPrimaryType(types: Record<string, Array<TypedDataField>>): string {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n\n    /**\n     *  Return the hashed struct for %%value%% using %%types%% and %%name%%.\n     */\n    static hashStruct(name: string, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n\n    /**\n     *  Return the domain hash for %%domain%%.\n     */\n    static hashDomain(domain: TypedDataDomain): string {\n        const domainFields: Array<TypedDataField> = [];\n        for (const name in domain) {\n            if ((<Record<string, any>>domain)[name] == null) {\n                continue;\n            }\n            const type = domainFieldTypes[name];\n            assertArgument(type, `invalid typed-data domain key: ${JSON.stringify(name)}`, 'domain', domain);\n            domainFields.push({ name, type });\n        }\n\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n\n        return TypedDataEncoder.hashStruct('EIP712Domain', { EIP712Domain: domainFields }, domain);\n    }\n\n    /**\n     *  Return the fully encoded [[link-eip-712]] %%value%% for %%types%% with %%domain%%.\n     */\n    static encode(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return concat(['0x1901', TypedDataEncoder.hashDomain(domain), TypedDataEncoder.from(types).hash(value)]);\n    }\n\n    /**\n     *  Return the hash of the fully encoded [[link-eip-712]] %%value%% for %%types%% with %%domain%%.\n     */\n    static hash(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n\n    // Replaces all address types with ENS names with their looked up address\n    /**\n     * Resolves to the value from resolving all addresses in %%value%% for\n     * %%types%% and the %%domain%%.\n     */\n    static async resolveNames(\n        domain: TypedDataDomain,\n        types: Record<string, Array<TypedDataField>>,\n        value: Record<string, any>,\n        resolveName: (name: string) => Promise<string>\n    ): Promise<{ domain: TypedDataDomain; value: any }> {\n        // Make a copy to isolate it from the object passed in\n        domain = Object.assign({}, domain);\n\n        // Allow passing null to ignore value\n        for (const key in domain) {\n            if ((<Record<string, any>>domain)[key] == null) {\n                delete (<Record<string, any>>domain)[key];\n            }\n        }\n\n        // Look up all ENS names\n        const ensCache: Record<string, string> = {};\n\n        // Do we need to look up the domain's verifyingContract?\n        if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n            ensCache[domain.verifyingContract] = '0x';\n        }\n\n        // We are going to use the encoder to visit all the base values\n        const encoder = TypedDataEncoder.from(types);\n\n        // Get a list of all the addresses\n        encoder.visit(value, (type: string, value: any) => {\n            if (type === 'address' && !isHexString(value, 20)) {\n                ensCache[value] = '0x';\n            }\n            return value;\n        });\n\n        // Lookup each name\n        for (const name in ensCache) {\n            ensCache[name] = await resolveName(name);\n        }\n\n        // Replace the domain verifyingContract if needed\n        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n            domain.verifyingContract = ensCache[domain.verifyingContract];\n        }\n\n        // Replace all ENS names with their address\n        value = encoder.visit(value, (type: string, value: any) => {\n            if (type === 'address' && ensCache[value]) {\n                return ensCache[value];\n            }\n            return value;\n        });\n\n        return { domain, value };\n    }\n\n    /**\n     *  Returns the JSON-encoded payload expected by nodes which implement\n     *  the JSON-RPC [[link-eip-712]] method.\n     */\n    static getPayload(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): any {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n\n        // Derive the EIP712Domain Struct reference type\n        const domainValues: Record<string, any> = {};\n        const domainTypes: Array<{ name: string; type: string }> = [];\n\n        domainFieldNames.forEach((name) => {\n            const value = (<any>domain)[name];\n            if (value == null) {\n                return;\n            }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n\n        const encoder = TypedDataEncoder.from(types);\n\n        const typesWithDomain = Object.assign({}, types);\n        assertArgument(\n            typesWithDomain.EIP712Domain == null,\n            'types must not contain EIP712Domain type',\n            'types.EIP712Domain',\n            types\n        );\n\n        typesWithDomain.EIP712Domain = domainTypes;\n\n        // Validate the data structures and types\n        encoder.encode(value);\n\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type: string, value: any) => {\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(getBytes(value));\n                }\n\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return getBigInt(value).toString();\n                }\n\n                switch (type) {\n                    case 'trcToken':\n                        return getBigInt(value).toString();\n                    case 'address':\n                        return value.toLowerCase();\n                    case 'bool':\n                        return !!value;\n                    case 'string':\n                        assertArgument(typeof value === 'string', 'invalid string', 'value', value);\n                        return value;\n                }\n\n                assertArgument(false, 'unsupported type', 'type', type);\n            }),\n        };\n    }\n}\n\n/**\n *  Compute the address used to sign the typed data for the %%signature%%.\n */\nexport function verifyTypedData(\n    domain: TypedDataDomain,\n    types: Record<string, Array<TypedDataField>>,\n    value: Record<string, any>,\n    signature: SignatureLike\n): string {\n    return recoverAddress(TypedDataEncoder.hash(domain, types, value), signature);\n}\n", "function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`positive integer expected, not ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`boolean expected, not ${b}`);\n}\n\n// copied from utils\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(h: Hash) {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(h.outputLen);\n  number(h.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n", "// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { bytes as abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word: number, shift: number) =>\n  (word << shift) | ((word >>> (32 - shift)) >>> 0);\n\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nexport const byteSwap = (word: number) =>\n  ((word << 24) & 0xff000000) |\n  ((word << 8) & 0xff0000) |\n  ((word >>> 8) & 0xff00) |\n  ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n: number) => n : (n: number) => byteSwap(n);\n\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr: Uint32Array) {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n}\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "import { exists, output } from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Choice: a ? b : c\nexport const Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nexport const Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport abstract class HashMD<T extends HashMD<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    exists(this);\n    output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in\n    // current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n", "import { HashMD, Chi, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends HashMD<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = SHA256_IV[0] | 0;\n  B = SHA256_IV[1] | 0;\n  C = SHA256_IV[2] | 0;\n  D = SHA256_IV[3] | 0;\n  E = SHA256_IV[4] | 0;\n  F = SHA256_IV[5] | 0;\n  G = SHA256_IV[6] | 0;\n  H = SHA256_IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n", "import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assertHash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assertExists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assertExists(this);\n    assertBytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nexport type Hex = Uint8Array | string; // hex strings are accepted for simplicity\nexport type PrivKey = Hex | bigint; // bigints are accepted to ease learning curve\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nexport function abytes(item: unknown): void {\n  if (!isBytes(item)) throw new Error('Uint8Array expected');\n}\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? `0${hex}` : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  abytes(bytes);\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n: number | bigint, len: number): Uint8Array {\n  return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n: number | bigint): Uint8Array {\n  return hexToBytes(numberToHexUnpadded(n));\n}\n\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n    }\n  } else if (isBytes(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(`${title} must be hex string or Uint8Array`);\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n  return res;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a: Uint8Array, b: Uint8Array) {\n  if (a.length !== b.length) return false;\n  let diff = 0;\n  for (let i = 0; i < a.length; i++) diff |= a[i] ^ b[i];\n  return diff === 0;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n// Bit operations\n\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n: bigint) {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n: bigint, pos: number) {\n  return (n >> BigInt(pos)) & _1n;\n}\n\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n: bigint, pos: number, value: boolean) {\n  return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n: number) => (_2n << BigInt(n - 1)) - _1n;\n\n// DRBG\n\nconst u8n = (data?: any) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr: any) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n()) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any) => typeof val === 'bigint',\n  function: (val: any) => typeof val === 'function',\n  boolean: (val: any) => typeof val === 'boolean',\n  string: (val: any) => typeof val === 'string',\n  stringOrUint8Array: (val: any) => typeof val === 'string' || isBytes(val),\n  isSafeInteger: (val: any) => Number.isSafeInteger(val),\n  array: (val: any) => Array.isArray(val),\n  field: (val: any, object: any) => (object as any).Fp.isValid(val),\n  hash: (val: any) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n) {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function')\n      throw new Error(`Invalid validator \"${type}\", expected function`);\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        `Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport {\n  bitMask,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  numberToBytesBE,\n  numberToBytesLE,\n  validateObject,\n} from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  if (modulo <= _0n || power < _0n) throw new Error('Expected power/modulo > 0');\n  if (modulo === _1n) return _0n;\n  let res = _1n;\n  while (power > _0n) {\n    if (power & _1n) res = (res * num) % modulo;\n    num = (num * num) % modulo;\n    power >>= _1n;\n  }\n  return res;\n}\n\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n// Inverses number over modulo\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n || modulo <= _0n) {\n    throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n  }\n  // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P: bigint) {\n  // Legendre constant: used to calculate Legendre symbol (a | p),\n  // which denotes the value of a^((p-1)/2) (mod p).\n  // (a | p) ≡ 1    if a is a square (mod p)\n  // (a | p) ≡ -1   if a is not a square (mod p)\n  // (a | p) ≡ 0    if a ≡ 0 (mod p)\n  const legendreC = (P - _1n) / _2n;\n\n  let Q: bigint, S: number, Z: bigint;\n  // Step 1: By factoring out powers of 2 from p - 1,\n  // find q and s such that p - 1 = q*(2^s) with q odd\n  for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++);\n\n  // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n  for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++);\n\n  // Fast-path\n  if (S === 1) {\n    const p1div4 = (P + _1n) / _4n;\n    return function tonelliFast<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Slow-path\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n    if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE)) throw new Error('Cannot find square root');\n    let r = S;\n    // TODO: will fail at Fp2/etc\n    let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n    let x = Fp.pow(n, Q1div2); // first guess at the square root\n    let b = Fp.pow(n, Q); // first guess at the fudge factor\n\n    while (!Fp.eql(b, Fp.ONE)) {\n      if (Fp.eql(b, Fp.ZERO)) return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n      // Find m such b^(2^m)==1\n      let m = 1;\n      for (let t2 = Fp.sqr(b); m < r; m++) {\n        if (Fp.eql(t2, Fp.ONE)) break;\n        t2 = Fp.sqr(t2); // t2 *= t2\n      }\n      // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n      const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n      g = Fp.sqr(ge); // g = ge * ge\n      x = Fp.mul(x, ge); // x *= ge\n      b = Fp.mul(b, g); // b *= g\n      r = m;\n    }\n    return x;\n  };\n}\n\nexport function FpSqrt(P: bigint) {\n  // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n  // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n\n  // P ≡ 3 (mod 4)\n  // √n = n^((P+1)/4)\n  if (P % _4n === _3n) {\n    // Not all roots possible!\n    // const ORDER =\n    //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n    // const NUM = 72057594037927816n;\n    const p1div4 = (P + _1n) / _4n;\n    return function sqrt3mod4<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      // Throw if root**2 != n\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n  if (P % _8n === _5n) {\n    const c1 = (P - _5n) / _8n;\n    return function sqrt5mod8<T>(Fp: IField<T>, n: T) {\n      const n2 = Fp.mul(n, _2n);\n      const v = Fp.pow(n2, c1);\n      const nv = Fp.mul(n, v);\n      const i = Fp.mul(Fp.mul(nv, _2n), v);\n      const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // P ≡ 9 (mod 16)\n  if (P % _16n === _9n) {\n    // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n    // Means we cannot use sqrt for constants at all!\n    //\n    // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    // sqrt = (x) => {\n    //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n    //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n    //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n    //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n    //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n    //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n    //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n    //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n    // }\n  }\n\n  // Other cases: Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint) => (mod(num, modulo) & _1n) === _1n;\n\n// Field is not always over prime: for example, Fp2 has ORDER(q)=p^m\nexport interface IField<T> {\n  ORDER: bigint;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in\n  // [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#section-4.1).\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  pow(lhs: T, power: bigint): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>) {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\n\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow<T>(f: IField<T>, num: T, power: bigint): T {\n  // Should have same speed as pow for bigints\n  // TODO: benchmark!\n  if (power < _0n) throw new Error('Expected power > 0');\n  if (power === _0n) return f.ONE;\n  if (power === _1n) return num;\n  let p = f.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = f.mul(p, d);\n    d = f.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch<T>(f: IField<T>, nums: T[]): T[] {\n  const tmp = new Array(nums.length);\n  // Walk from first to last, multiply them by each other MOD p\n  const lastMultiplied = nums.reduce((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = acc;\n    return f.mul(acc, num);\n  }, f.ONE);\n  // Invert last element\n  const inverted = f.inv(lastMultiplied);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = f.mul(acc, tmp[i]);\n    return f.mul(acc, num);\n  }, inverted);\n  return tmp;\n}\n\nexport function FpDiv<T>(f: IField<T>, lhs: T, rhs: T | bigint): T {\n  return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(f: IField<T>) {\n  const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n  return (x: T): boolean => {\n    const p = f.pow(x, legendreConst);\n    return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n  };\n}\n\n// CURVE.n lengths\nexport function nLength(n: bigint, nBitLength?: number) {\n  // Bit size, byte size of CURVE.n\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<IField<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('Field lengths over 2048 bytes are not supported');\n  const sqrtP = FpSqrt(ORDER);\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (a, b, c) => (c ? b : a),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder: bigint): number {\n  if (typeof fieldOrder !== 'bigint') throw new Error('field order must be bigint');\n  const bitLength = fieldOrder.toString(2).length;\n  return Math.ceil(bitLength / 8);\n}\n\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder: bigint): number {\n  const length = getFieldBytesLength(fieldOrder);\n  return length + Math.ceil(length / 2);\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key: Uint8Array, fieldOrder: bigint, isLE = false): Uint8Array {\n  const len = key.length;\n  const fieldLen = getFieldBytesLength(fieldOrder);\n  const minLen = getMinHashLength(fieldOrder);\n  // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n  if (len < 16 || len < minLen || len > 1024)\n    throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n  const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n  // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n  const reduced = mod(num, fieldOrder - _1n) + _1n;\n  return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { IField, validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number) {\n  const constTimeNegate = (condition: boolean, item: T): T => {\n    const neg = item.negate();\n    return condition ? neg : item;\n  };\n  const opts = (W: number) => {\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n  };\n  return {\n    constTimeNegate,\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint) {\n      let p = c.ZERO;\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n     * - 𝑊 is the window size\n     * - 𝑛 is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = opts(W);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // =1, because we skip zero\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n      // But need to carefully remove other checks before wNAF. ORDER == bits here\n      const { windows, windowSize } = opts(W);\n\n      let p = c.ZERO;\n      let f = c.BASE;\n\n      const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n      const maxNumber = 2 ** W;\n      const shiftBy = BigInt(W);\n\n      for (let window = 0; window < windows; window++) {\n        const offset = window * windowSize;\n        // Extract W bits.\n        let wbits = Number(n & mask);\n\n        // Shift number by W bits.\n        n >>= shiftBy;\n\n        // If the bits are bigger than max size, we'll split those.\n        // +224 => 256 - 32\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += _1n;\n        }\n\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n\n        // Check if we're onto Zero point.\n        // Add random point inside current window to f.\n        const offset1 = offset;\n        const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n        const cond1 = window % 2 !== 0;\n        const cond2 = wbits < 0;\n        if (wbits === 0) {\n          // The most important part for const-time getPublicKey\n          f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n        } else {\n          p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n        }\n      }\n      // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n      // Even if the variable is still unused, there are some checks which will\n      // throw an exception, so compiler needs to prove they won't happen, which is hard.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    wNAFCached(P: T, precomputesMap: Map<T, T[]>, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      // @ts-ignore\n      const W: number = P._WINDOW_SIZE || 1;\n      // Calculate precomputes on a first run, reuse them after\n      let comp = precomputesMap.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) {\n          precomputesMap.set(P, transform(comp));\n        }\n      }\n      return this.wNAF(W, comp, n);\n    },\n  };\n}\n\n// Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n// Though generator can be different (Fp2 / Fp6 for BLS).\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(curve: BasicCurve<FP> & T) {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport { AffinePoint, BasicCurve, Group, GroupConstructor, validateBasic, wNAF } from './curve.js';\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { CHash, Hex, PrivKey, ensureBytes } from './utils.js';\n\nexport type { AffinePoint };\ntype HmacFnSync = (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array;\ntype EndomorphismOpts = {\n  beta: bigint;\n  splitScalar: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\nexport type BasicWCurve<T> = BasicCurve<T> & {\n  // Params: a, b\n  a: T;\n  b: T;\n\n  // Optional params\n  allowedPrivateKeyLengths?: readonly number[]; // for P521\n  wrapPrivateKey?: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  endo?: EndomorphismOpts; // Endomorphism options for Koblitz curves\n  // When a cofactor != 1, there can be an effective methods to:\n  // 1. Determine whether a point is torsion-free\n  isTorsionFree?: (c: ProjConstructor<T>, point: ProjPointType<T>) => boolean;\n  // 2. Clear torsion component\n  clearCofactor?: (c: ProjConstructor<T>, point: ProjPointType<T>) => ProjPointType<T>;\n};\n\ntype Entropy = Hex | boolean;\nexport type SignOpts = { lowS?: boolean; extraEntropy?: Entropy; prehash?: boolean };\nexport type VerOpts = { lowS?: boolean; prehash?: boolean };\n\n/**\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance of nominative types in TypeScript and interfaces only check for shape, so it's hard to create unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * TODO: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n */\n\n// Instance for 3d XYZ points\nexport interface ProjPointType<T> extends Group<ProjPointType<T>> {\n  readonly px: T;\n  readonly py: T;\n  readonly pz: T;\n  get x(): T;\n  get y(): T;\n  multiply(scalar: bigint): ProjPointType<T>;\n  toAffine(iz?: T): AffinePoint<T>;\n  isTorsionFree(): boolean;\n  clearCofactor(): ProjPointType<T>;\n  assertValidity(): void;\n  hasEvenY(): boolean;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n\n  multiplyUnsafe(scalar: bigint): ProjPointType<T>;\n  multiplyAndAddUnsafe(Q: ProjPointType<T>, a: bigint, b: bigint): ProjPointType<T> | undefined;\n  _setWindowSize(windowSize: number): void;\n}\n// Static methods for 3d XYZ points\nexport interface ProjConstructor<T> extends GroupConstructor<ProjPointType<T>> {\n  new (x: T, y: T, z: T): ProjPointType<T>;\n  fromAffine(p: AffinePoint<T>): ProjPointType<T>;\n  fromHex(hex: Hex): ProjPointType<T>;\n  fromPrivateKey(privateKey: PrivKey): ProjPointType<T>;\n  normalizeZ(points: ProjPointType<T>[]): ProjPointType<T>[];\n}\n\nexport type CurvePointsType<T> = BasicWCurve<T> & {\n  // Bytes\n  fromBytes?: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes?: (c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => Uint8Array;\n};\n\nfunction validatePointOpts<T>(curve: CurvePointsType<T>) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      a: 'field',\n      b: 'field',\n    },\n    {\n      allowedPrivateKeyLengths: 'array',\n      wrapPrivateKey: 'boolean',\n      isTorsionFree: 'function',\n      clearCofactor: 'function',\n      allowInfinityPoint: 'boolean',\n      fromBytes: 'function',\n      toBytes: 'function',\n    }\n  );\n  const { endo, Fp, a } = opts;\n  if (endo) {\n    if (!Fp.eql(a, Fp.ZERO)) {\n      throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n    }\n    if (\n      typeof endo !== 'object' ||\n      typeof endo.beta !== 'bigint' ||\n      typeof endo.splitScalar !== 'function'\n    ) {\n      throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n    }\n  }\n  return Object.freeze({ ...opts } as const);\n}\n\nexport type CurvePointsRes<T> = {\n  CURVE: ReturnType<typeof validatePointOpts<T>>;\n  ProjectivePoint: ProjConstructor<T>;\n  normPrivateKeyToScalar: (key: PrivKey) => bigint;\n  weierstrassEquation: (x: T) => T;\n  isWithinCurveOrder: (num: bigint) => boolean;\n};\n\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n  // asn.1 DER encoding utils\n  Err: class DERErr extends Error {\n    constructor(m = '') {\n      super(m);\n    }\n  },\n  _parseInt(data: Uint8Array): { d: bigint; l: Uint8Array } {\n    const { Err: E } = DER;\n    if (data.length < 2 || data[0] !== 0x02) throw new E('Invalid signature integer tag');\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) throw new E('Invalid signature integer: wrong length');\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    if (res[0] & 0b10000000) throw new E('Invalid signature integer: negative');\n    if (res[0] === 0x00 && !(res[1] & 0b10000000))\n      throw new E('Invalid signature integer: unnecessary leading zero');\n    return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n  },\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E } = DER;\n    const data = typeof hex === 'string' ? h2b(hex) : hex;\n    ut.abytes(data);\n    let l = data.length;\n    if (l < 2 || data[0] != 0x30) throw new E('Invalid signature tag');\n    if (data[1] !== l - 2) throw new E('Invalid signature: incorrect length');\n    const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n    const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n    if (rBytesLeft.length) throw new E('Invalid signature: left bytes after parsing');\n    return { r, s };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n    const slice = (s: string): string => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n    const h = (num: number | bigint) => {\n      const hex = num.toString(16);\n      return hex.length & 1 ? `0${hex}` : hex;\n    };\n    const s = slice(h(sig.s));\n    const r = slice(h(sig.r));\n    const shl = s.length / 2;\n    const rhl = r.length / 2;\n    const sl = h(shl);\n    const rl = h(rhl);\n    return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n  },\n};\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n\nexport function weierstrassPoints<T>(opts: CurvePointsType<T>): CurvePointsRes<T> {\n  const CURVE = validatePointOpts(opts);\n  const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n\n  const toBytes =\n    CURVE.toBytes ||\n    ((_c: ProjConstructor<T>, point: ProjPointType<T>, _isCompressed: boolean) => {\n      const a = point.toAffine();\n      return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n    });\n  const fromBytes =\n    CURVE.fromBytes ||\n    ((bytes: Uint8Array) => {\n      // const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n      const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n      const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n      return { x, y };\n    });\n\n  /**\n   * y² = x³ + ax + b: Short weierstrass curve formula\n   * @returns y²\n   */\n  function weierstrassEquation(x: T): T {\n    const { a, b } = CURVE;\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x2 * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n  }\n  // Validate whether the passed curve params are valid.\n  // We check if curve equation works for generator point.\n  // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n  // ProjectivePoint class has not been initialized yet.\n  if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n    throw new Error('bad generator point: equation left != right');\n\n  // Valid group elements reside in range 1..n-1\n  function isWithinCurveOrder(num: bigint): boolean {\n    return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n  }\n  function assertGE(num: bigint) {\n    if (!isWithinCurveOrder(num)) throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n  }\n  // Validates if priv key is valid and converts it to bigint.\n  // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n  function normPrivateKeyToScalar(key: PrivKey): bigint {\n    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n    if (lengths && typeof key !== 'bigint') {\n      if (ut.isBytes(key)) key = ut.bytesToHex(key);\n      // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n      if (typeof key !== 'string' || !lengths.includes(key.length)) throw new Error('Invalid key');\n      key = key.padStart(nByteLength * 2, '0');\n    }\n    let num: bigint;\n    try {\n      num =\n        typeof key === 'bigint'\n          ? key\n          : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n    } catch (error) {\n      throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n    }\n    if (wrapPrivateKey) num = mod.mod(num, n); // disabled by default, enabled for BLS\n    assertGE(num); // num in range [1..N-1]\n    return num;\n  }\n\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function assertPrjPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ProjectivePoint expected');\n  }\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n   * Default Point works in 2d / affine coordinates: (x, y)\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements ProjPointType<T> {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n\n    constructor(\n      readonly px: T,\n      readonly py: T,\n      readonly pz: T\n    ) {\n      if (px == null || !Fp.isValid(px)) throw new Error('x required');\n      if (py == null || !Fp.isValid(py)) throw new Error('y required');\n      if (pz == null || !Fp.isValid(pz)) throw new Error('z required');\n    }\n\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      const is0 = (i: T) => Fp.eql(i, Fp.ZERO);\n      // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n      if (is0(x) && is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.pz));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(hex: Hex): Point {\n      const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n      P.assertValidity();\n      return P;\n    }\n\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(privateKey: PrivKey) {\n      return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n\n    // A point on curve is valid if it conforms to equation.\n    assertValidity(): void {\n      if (this.is0()) {\n        // (0, 1, 0) aka ZERO is invalid in most contexts.\n        // In BLS, ZERO can be serialized, so we allow it.\n        // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n        if (CURVE.allowInfinityPoint && !Fp.is0(this.py)) return;\n        throw new Error('bad point: ZERO');\n      }\n      // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n      const { x, y } = this.toAffine();\n      // Check if x, y are valid field elements\n      if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not FE');\n      const left = Fp.sqr(y); // y²\n      const right = weierstrassEquation(x); // x³ + ax + b\n      if (!Fp.eql(left, right)) throw new Error('bad point: equation left != right');\n      if (!this.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    }\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (Fp.isOdd) return !Fp.isOdd(y);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n\n    /**\n     * Compare one point to another.\n     */\n    equals(other: Point): boolean {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate(): Point {\n      return new Point(this.px, Fp.neg(this.py), this.pz);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, _3n);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, _3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    private is0() {\n      return this.equals(Point.ZERO);\n    }\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, (comp: Point[]) => {\n        const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n        return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n      });\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(n: bigint): Point {\n      const I = Point.ZERO;\n      if (n === _0n) return I;\n      assertGE(n); // Will throw on 0\n      if (n === _1n) return this;\n      const { endo } = CURVE;\n      if (!endo) return wnaf.unsafeLadder(this, n);\n\n      // Apply endomorphism\n      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n      let k1p = I;\n      let k2p = I;\n      let d: Point = this;\n      while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n) k1p = k1p.add(d);\n        if (k2 & _1n) k2p = k2p.add(d);\n        d = d.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n      }\n      if (k1neg) k1p = k1p.negate();\n      if (k2neg) k2p = k2p.negate();\n      k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n      return k1p.add(k2p);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      assertGE(scalar);\n      let n = scalar;\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      const { endo } = CURVE;\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let { p: k1p, f: f1p } = this.wNAF(k1);\n        let { p: k2p, f: f2p } = this.wNAF(k2);\n        k1p = wnaf.constTimeNegate(k1neg, k1p);\n        k2p = wnaf.constTimeNegate(k2neg, k2p);\n        k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n        point = k1p.add(k2p);\n        fake = f1p.add(f2p);\n      } else {\n        const { p, f } = this.wNAF(n);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return Point.normalizeZ([point, fake])[0];\n    }\n\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(Q: Point, a: bigint, b: bigint): Point | undefined {\n      const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n      const mul = (\n        P: Point,\n        a: bigint // Select faster multiply() method\n      ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n      const sum = mul(this, a).add(mul(Q, b));\n      return sum.is0() ? undefined : sum;\n    }\n\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) ∋ (x=x/z, y=y/z)\n    toAffine(iz?: T): AffinePoint<T> {\n      const { px: x, py: y, pz: z } = this;\n      const is0 = this.is0();\n      // If invZ was 0, we return zero point. However we still want to execute\n      // all operations, so we replace invZ with a random number, 1.\n      if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(z);\n      const ax = Fp.mul(x, iz);\n      const ay = Fp.mul(y, iz);\n      const zz = Fp.mul(z, iz);\n      if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n      if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n    isTorsionFree(): boolean {\n      const { h: cofactor, isTorsionFree } = CURVE;\n      if (cofactor === _1n) return true; // No subgroups, always torsion-free\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n    }\n    clearCofactor(): Point {\n      const { h: cofactor, clearCofactor } = CURVE;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(CURVE.h);\n    }\n\n    toRawBytes(isCompressed = true): Uint8Array {\n      this.assertValidity();\n      return toBytes(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      return ut.bytesToHex(this.toRawBytes(isCompressed));\n    }\n  }\n  const _bits = CURVE.nBitLength;\n  const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n  // Validate if generator point is on curve\n  return {\n    CURVE,\n    ProjectivePoint: Point as ProjConstructor<T>,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  };\n}\n\n// Instance\nexport interface SignatureType {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  assertValidity(): void;\n  addRecoveryBit(recovery: number): RecoveredSignatureType;\n  hasHighS(): boolean;\n  normalizeS(): SignatureType;\n  recoverPublicKey(msgHash: Hex): ProjPointType<bigint>;\n  toCompactRawBytes(): Uint8Array;\n  toCompactHex(): string;\n  // DER-encoded\n  toDERRawBytes(isCompressed?: boolean): Uint8Array;\n  toDERHex(isCompressed?: boolean): string;\n}\nexport type RecoveredSignatureType = SignatureType & {\n  readonly recovery: number;\n};\n// Static methods\nexport type SignatureConstructor = {\n  new (r: bigint, s: bigint): SignatureType;\n  fromCompact(hex: Hex): SignatureType;\n  fromDER(hex: Hex): SignatureType;\n};\ntype SignatureLike = { r: bigint; s: bigint };\n\nexport type PubKey = Hex | ProjPointType<bigint>;\n\nexport type CurveType = BasicWCurve<bigint> & {\n  hash: CHash; // CHash not FHash because we need outputLen for DRBG\n  hmac: HmacFnSync;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  lowS?: boolean;\n  bits2int?: (bytes: Uint8Array) => bigint;\n  bits2int_modN?: (bytes: Uint8Array) => bigint;\n};\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      hash: 'hash',\n      hmac: 'function',\n      randomBytes: 'function',\n    },\n    {\n      bits2int: 'function',\n      bits2int_modN: 'function',\n      lowS: 'boolean',\n    }\n  );\n  return Object.freeze({ lowS: true, ...opts } as const);\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: PrivKey, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (privateA: PrivKey, publicB: Hex, isCompressed?: boolean) => Uint8Array;\n  sign: (msgHash: Hex, privKey: PrivKey, opts?: SignOpts) => RecoveredSignatureType;\n  verify: (signature: Hex | SignatureLike, msgHash: Hex, publicKey: Hex, opts?: VerOpts) => boolean;\n  ProjectivePoint: ProjConstructor<bigint>;\n  Signature: SignatureConstructor;\n  utils: {\n    normPrivateKeyToScalar: (key: PrivKey) => bigint;\n    isValidPrivateKey(privateKey: PrivKey): boolean;\n    randomPrivateKey: () => Uint8Array;\n    precompute: (windowSize?: number, point?: ProjPointType<bigint>) => ProjPointType<bigint>;\n  };\n};\n\nexport function weierstrass(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const { Fp, n: CURVE_ORDER } = CURVE;\n  const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n  const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n\n  function isValidFieldElement(num: bigint): boolean {\n    return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n  }\n  function modN(a: bigint) {\n    return mod.mod(a, CURVE_ORDER);\n  }\n  function invN(a: bigint) {\n    return mod.invert(a, CURVE_ORDER);\n  }\n\n  const {\n    ProjectivePoint: Point,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  } = weierstrassPoints({\n    ...CURVE,\n    toBytes(_c, point, isCompressed: boolean): Uint8Array {\n      const a = point.toAffine();\n      const x = Fp.toBytes(a.x);\n      const cat = ut.concatBytes;\n      if (isCompressed) {\n        return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n      } else {\n        return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n      }\n    },\n    fromBytes(bytes: Uint8Array) {\n      const len = bytes.length;\n      const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // this.assertValidity() is done inside of fromHex\n      if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n        const x = ut.bytesToNumberBE(tail);\n        if (!isValidFieldElement(x)) throw new Error('Point is not on curve');\n        const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n        let y: bigint;\n        try {\n          y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n        } catch (sqrtError) {\n          const suffix = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n          throw new Error('Point is not on curve' + suffix);\n        }\n        const isYOdd = (y & _1n) === _1n;\n        // ECDSA\n        const isHeadOdd = (head & 1) === 1;\n        if (isHeadOdd !== isYOdd) y = Fp.neg(y);\n        return { x, y };\n      } else if (len === uncompressedLen && head === 0x04) {\n        const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n        const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n        return { x, y };\n      } else {\n        throw new Error(\n          `Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`\n        );\n      }\n    },\n  });\n  const numToNByteStr = (num: bigint): string =>\n    ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n\n  function normalizeS(s: bigint) {\n    return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n  }\n  // slice bytes num\n  const slcNum = (b: Uint8Array, from: number, to: number) => ut.bytesToNumberBE(b.slice(from, to));\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n   */\n  class Signature implements SignatureType {\n    constructor(\n      readonly r: bigint,\n      readonly s: bigint,\n      readonly recovery?: number\n    ) {\n      this.assertValidity();\n    }\n\n    // pair (bytes of r, bytes of s)\n    static fromCompact(hex: Hex) {\n      const l = CURVE.nByteLength;\n      hex = ensureBytes('compactSignature', hex, l * 2);\n      return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n    }\n\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER(hex: Hex) {\n      const { r, s } = DER.toSig(ensureBytes('DER', hex));\n      return new Signature(r, s);\n    }\n\n    assertValidity(): void {\n      // can use assertGE here\n      if (!isWithinCurveOrder(this.r)) throw new Error('r must be 0 < r < CURVE.n');\n      if (!isWithinCurveOrder(this.s)) throw new Error('s must be 0 < s < CURVE.n');\n    }\n\n    addRecoveryBit(recovery: number): RecoveredSignature {\n      return new Signature(this.r, this.s, recovery) as RecoveredSignature;\n    }\n\n    recoverPublicKey(msgHash: Hex): typeof Point.BASE {\n      const { r, s, recovery: rec } = this;\n      const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n      if (rec == null || ![0, 1, 2, 3].includes(rec)) throw new Error('recovery id invalid');\n      const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n      if (radj >= Fp.ORDER) throw new Error('recovery id 2 or 3 invalid');\n      const prefix = (rec & 1) === 0 ? '02' : '03';\n      const R = Point.fromHex(prefix + numToNByteStr(radj));\n      const ir = invN(radj); // r^-1\n      const u1 = modN(-h * ir); // -hr^-1\n      const u2 = modN(s * ir); // sr^-1\n      const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n      if (!Q) throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n    }\n\n    // DER-encoded\n    toDERRawBytes() {\n      return ut.hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n      return DER.hexFromSig({ r: this.r, s: this.s });\n    }\n\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return ut.hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n      return numToNByteStr(this.r) + numToNByteStr(this.s);\n    }\n  }\n  type RecoveredSignature = Signature & { recovery: number };\n\n  const utils = {\n    isValidPrivateKey(privateKey: PrivKey) {\n      try {\n        normPrivateKeyToScalar(privateKey);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    normPrivateKeyToScalar: normPrivateKeyToScalar,\n\n    /**\n     * Produces cryptographically secure private key from random of size\n     * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n     */\n    randomPrivateKey: (): Uint8Array => {\n      const length = mod.getMinHashLength(CURVE.n);\n      return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n    },\n\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n      return point;\n    },\n  };\n\n  /**\n   * Computes public key for a private key. Checks for validity of the private key.\n   * @param privateKey private key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(privateKey: PrivKey, isCompressed = true): Uint8Array {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: PrivKey | PubKey): boolean {\n    const arr = ut.isBytes(item);\n    const str = typeof item === 'string';\n    const len = (arr || str) && (item as Hex).length;\n    if (arr) return len === compressedLen || len === uncompressedLen;\n    if (str) return len === 2 * compressedLen || len === 2 * uncompressedLen;\n    if (item instanceof Point) return true;\n    return false;\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from private key and public key.\n   * Checks: 1) private key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param privateA private key\n   * @param publicB different public key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(privateA: PrivKey, publicB: Hex, isCompressed = true): Uint8Array {\n    if (isProbPub(privateA)) throw new Error('first arg must be private key');\n    if (!isProbPub(publicB)) throw new Error('second arg must be public key');\n    const b = Point.fromHex(publicB); // check for being on-curve\n    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n  }\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    CURVE.bits2int ||\n    function (bytes: Uint8Array): bigint {\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    CURVE.bits2int_modN ||\n    function (bytes: Uint8Array): bigint {\n      return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // NOTE: pads output with zero as per spec\n  const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n  /**\n   * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n   */\n  function int2octets(num: bigint): Uint8Array {\n    if (typeof num !== 'bigint') throw new Error('bigint expected');\n    if (!(_0n <= num && num < ORDER_MASK))\n      throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n    // works with order, can have different size than numToField!\n    return ut.numberToBytesBE(num, CURVE.nByteLength);\n  }\n\n  // Steps A, D of RFC6979 3.2\n  // Creates RFC6979 seed; converts msg/privKey to numbers.\n  // Used only in sign, not in verify.\n  // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n  // Also it can be bigger for P224 + SHA256\n  function prepSig(msgHash: Hex, privateKey: PrivKey, opts = defaultSigOpts) {\n    if (['recovered', 'canonical'].some((k) => k in opts))\n      throw new Error('sign() legacy options not supported');\n    const { hash, randomBytes } = CURVE;\n    let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n    if (lowS == null) lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n    msgHash = ensureBytes('msgHash', msgHash);\n    if (prehash) msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(msgHash);\n    const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (ent != null && ent !== false) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n      seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n    }\n    const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    function k2sig(kBytes: Uint8Array): RecoveredSignature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n      if (!isWithinCurveOrder(k)) return; // Important: all mod() calls here must be done over N\n      const ik = invN(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n      const r = modN(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n      // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n      // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n      const s = modN(ik * modN(m + r * d)); // Not using blinding here\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = normalizeS(s); // if lowS was passed, ensure s is always\n        recovery ^= 1; // // in the bottom half of N\n      }\n      return new Signature(r, normS, recovery) as RecoveredSignature; // use normS, not s\n    }\n    return { seed, k2sig };\n  }\n  const defaultSigOpts: SignOpts = { lowS: CURVE.lowS, prehash: false };\n  const defaultVerOpts: VerOpts = { lowS: CURVE.lowS, prehash: false };\n\n  /**\n   * Signs message hash with a private key.\n   * ```\n   * sign(m, d, k) where\n   *   (x, y) = G × k\n   *   r = x mod n\n   *   s = (m + dr)/k mod n\n   * ```\n   * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n   * @param privKey private key\n   * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n   * @returns signature with recovery param\n   */\n  function sign(msgHash: Hex, privKey: PrivKey, opts = defaultSigOpts): RecoveredSignature {\n    const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n    const C = CURVE;\n    const drbg = ut.createHmacDrbg<RecoveredSignature>(C.hash.outputLen, C.nByteLength, C.hmac);\n    return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n  }\n\n  // Enable precomputes. Slows down first publicKey computation by 20ms.\n  Point.BASE._setWindowSize(8);\n  // utils.precompute(8, ProjectivePoint.BASE)\n\n  /**\n   * Verifies a signature against message hash and public key.\n   * Rejects lowS signatures by default: to override,\n   * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   U1 = hs^-1 mod n\n   *   U2 = rs^-1 mod n\n   *   R = U1⋅G - U2⋅P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Hex | SignatureLike,\n    msgHash: Hex,\n    publicKey: Hex,\n    opts = defaultVerOpts\n  ): boolean {\n    const sg = signature;\n    msgHash = ensureBytes('msgHash', msgHash);\n    publicKey = ensureBytes('publicKey', publicKey);\n    if ('strict' in opts) throw new Error('options.strict was renamed to lowS');\n    const { lowS, prehash } = opts;\n\n    let _sig: Signature | undefined = undefined;\n    let P: ProjPointType<bigint>;\n    try {\n      if (typeof sg === 'string' || ut.isBytes(sg)) {\n        // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n        // Since DER can also be 2*nByteLength bytes, we check for it first.\n        try {\n          _sig = Signature.fromDER(sg);\n        } catch (derError) {\n          if (!(derError instanceof DER.Err)) throw derError;\n          _sig = Signature.fromCompact(sg);\n        }\n      } else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n        const { r, s } = sg;\n        _sig = new Signature(r, s);\n      } else {\n        throw new Error('PARSE');\n      }\n      P = Point.fromHex(publicKey);\n    } catch (error) {\n      if ((error as Error).message === 'PARSE')\n        throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n      return false;\n    }\n    if (lowS && _sig.hasHighS()) return false;\n    if (prehash) msgHash = CURVE.hash(msgHash);\n    const { r, s } = _sig;\n    const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n    const is = invN(s); // s^-1\n    const u1 = modN(h * is); // u1 = hs^-1 mod n\n    const u2 = modN(r * is); // u2 = rs^-1 mod n\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n    if (!R) return false;\n    const v = modN(R.x);\n    return v === r;\n  }\n  return {\n    CURVE,\n    getPublicKey,\n    getSharedSecret,\n    sign,\n    verify,\n    ProjectivePoint: Point,\n    Signature,\n    utils,\n  };\n}\n\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio<T>(Fp: mod.IField<T>, Z: T) {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = _0n;\n  for (let o = q - _1n; o % _2n === _0n; o /= _2n) l += _1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n  // 2n ** c1 == 2n << (c1-1)\n  const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n  const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n  const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n  const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > _1n; i--) {\n      let tv5 = i - _2n; // 18.    tv5 = i - 2\n      tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % _4n === _3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU<T>(\n  Fp: mod.IField<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n) {\n  mod.validateField(Fp);\n  if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n  if (!Fp.isOdd) throw new Error('Fp.isOdd is not implemented!');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    x = Fp.div(x, tv4); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { CHash } from './abstract/utils.js';\nimport { CurveType, weierstrass } from './abstract/weierstrass.js';\n\n// connects noble-curves to noble-hashes\nexport function getHash(hash: CHash) {\n  return {\n    hash,\n    hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => hmac(hash, key, concatBytes(...msgs)),\n    randomBytes,\n  };\n}\n// Same API as @noble/hashes, with ability to create curve with custom hash\ntype CurveDef = Readonly<Omit<CurveType, 'hash' | 'hmac' | 'randomBytes'>>;\nexport function createCurve(curveDef: CurveDef, defHash: CHash) {\n  const create = (hash: CHash) => weierstrass({ ...curveDef, ...getHash(hash) });\n  return Object.freeze({ ...create(defHash), create });\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport type { AffinePoint, Group, GroupConstructor } from './curve.js';\nimport { IField, mod } from './modular.js';\nimport type { CHash } from './utils.js';\nimport { abytes, bytesToNumberBE, concatBytes, utf8ToBytes, validateObject } from './utils.js';\n\n/**\n * * `DST` is a domain separation tag, defined in section 2.2.5\n * * `p` characteristic of F, where F is a finite field of characteristic p and order q = p^m\n * * `m` is extension degree (1 for prime fields)\n * * `k` is the target security target in bits (e.g. 128), from section 5.1\n * * `expand` is `xmd` (SHA2, SHA3, BLAKE) or `xof` (SHAKE, BLAKE-XOF)\n * * `hash` conforming to `utils.CHash` interface, with `outputLen` / `blockLen` props\n */\ntype UnicodeOrBytes = string | Uint8Array;\nexport type Opts = {\n  DST: UnicodeOrBytes;\n  p: bigint;\n  m: number;\n  k: number;\n  expand: 'xmd' | 'xof';\n  hash: CHash;\n};\n\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = bytesToNumberBE;\n\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value: number, length: number): Uint8Array {\n  if (value < 0 || value >= 1 << (8 * length)) {\n    throw new Error(`bad I2OSP call: value=${value} length=${length}`);\n  }\n  const res = Array.from({ length }).fill(0) as number[];\n  for (let i = length - 1; i >= 0; i--) {\n    res[i] = value & 0xff;\n    value >>>= 8;\n  }\n  return new Uint8Array(res);\n}\n\nfunction strxor(a: Uint8Array, b: Uint8Array): Uint8Array {\n  const arr = new Uint8Array(a.length);\n  for (let i = 0; i < a.length; i++) {\n    arr[i] = a[i] ^ b[i];\n  }\n  return arr;\n}\n\nfunction anum(item: unknown): void {\n  if (!Number.isSafeInteger(item)) throw new Error('number expected');\n}\n\n// Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits\n// https://www.rfc-editor.org/rfc/rfc9380#section-5.3.1\nexport function expand_message_xmd(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  H: CHash\n): Uint8Array {\n  abytes(msg);\n  abytes(DST);\n  anum(lenInBytes);\n  // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n  if (DST.length > 255) DST = H(concatBytes(utf8ToBytes('H2C-OVERSIZE-DST-'), DST));\n  const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n  const ell = Math.ceil(lenInBytes / b_in_bytes);\n  if (ell > 255) throw new Error('Invalid xmd length');\n  const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n  const Z_pad = i2osp(0, r_in_bytes);\n  const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n  const b = new Array<Uint8Array>(ell);\n  const b_0 = H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n  b[0] = H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n  for (let i = 1; i <= ell; i++) {\n    const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n    b[i] = H(concatBytes(...args));\n  }\n  const pseudo_random_bytes = concatBytes(...b);\n  return pseudo_random_bytes.slice(0, lenInBytes);\n}\n\n// Produces a uniformly random byte string using an extendable-output function (XOF) H.\n// 1. The collision resistance of H MUST be at least k bits.\n// 2. H MUST be an XOF that has been proved indifferentiable from\n//    a random oracle under a reasonable cryptographic assumption.\n// https://www.rfc-editor.org/rfc/rfc9380#section-5.3.2\nexport function expand_message_xof(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  k: number,\n  H: CHash\n): Uint8Array {\n  abytes(msg);\n  abytes(DST);\n  anum(lenInBytes);\n  // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n  // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n  if (DST.length > 255) {\n    const dkLen = Math.ceil((2 * k) / 8);\n    DST = H.create({ dkLen }).update(utf8ToBytes('H2C-OVERSIZE-DST-')).update(DST).digest();\n  }\n  if (lenInBytes > 65535 || DST.length > 255)\n    throw new Error('expand_message_xof: invalid lenInBytes');\n  return (\n    H.create({ dkLen: lenInBytes })\n      .update(msg)\n      .update(i2osp(lenInBytes, 2))\n      // 2. DST_prime = DST || I2OSP(len(DST), 1)\n      .update(DST)\n      .update(i2osp(DST.length, 1))\n      .digest()\n  );\n}\n\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F\n * https://www.rfc-editor.org/rfc/rfc9380#section-5.2\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nexport function hash_to_field(msg: Uint8Array, count: number, options: Opts): bigint[][] {\n  validateObject(options, {\n    DST: 'stringOrUint8Array',\n    p: 'bigint',\n    m: 'isSafeInteger',\n    k: 'isSafeInteger',\n    hash: 'hash',\n  });\n  const { p, k, m, hash, expand, DST: _DST } = options;\n  abytes(msg);\n  anum(count);\n  const DST = typeof _DST === 'string' ? utf8ToBytes(_DST) : _DST;\n  const log2p = p.toString(2).length;\n  const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n  const len_in_bytes = count * m * L;\n  let prb; // pseudo_random_bytes\n  if (expand === 'xmd') {\n    prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n  } else if (expand === 'xof') {\n    prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n  } else if (expand === '_internal_pass') {\n    // for internal tests only\n    prb = msg;\n  } else {\n    throw new Error('expand must be \"xmd\" or \"xof\"');\n  }\n  const u = new Array(count);\n  for (let i = 0; i < count; i++) {\n    const e = new Array(m);\n    for (let j = 0; j < m; j++) {\n      const elm_offset = L * (j + i * m);\n      const tv = prb.subarray(elm_offset, elm_offset + L);\n      e[j] = mod(os2ip(tv), p);\n    }\n    u[i] = e;\n  }\n  return u;\n}\n\nexport function isogenyMap<T, F extends IField<T>>(field: F, map: [T[], T[], T[], T[]]) {\n  // Make same order as in spec\n  const COEFF = map.map((i) => Array.from(i).reverse());\n  return (x: T, y: T) => {\n    const [xNum, xDen, yNum, yDen] = COEFF.map((val) =>\n      val.reduce((acc, i) => field.add(field.mul(acc, x), i))\n    );\n    x = field.div(xNum, xDen); // xNum / xDen\n    y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n    return { x, y };\n  };\n}\n\nexport interface H2CPoint<T> extends Group<H2CPoint<T>> {\n  add(rhs: H2CPoint<T>): H2CPoint<T>;\n  toAffine(iz?: bigint): AffinePoint<T>;\n  clearCofactor(): H2CPoint<T>;\n  assertValidity(): void;\n}\n\nexport interface H2CPointConstructor<T> extends GroupConstructor<H2CPoint<T>> {\n  fromAffine(ap: AffinePoint<T>): H2CPoint<T>;\n}\n\nexport type MapToCurve<T> = (scalar: bigint[]) => AffinePoint<T>;\n\n// Separated from initialization opts, so users won't accidentally change per-curve parameters\n// (changing DST is ok!)\nexport type htfBasicOpts = { DST: UnicodeOrBytes };\n\nexport function createHasher<T>(\n  Point: H2CPointConstructor<T>,\n  mapToCurve: MapToCurve<T>,\n  def: Opts & { encodeDST?: UnicodeOrBytes }\n) {\n  if (typeof mapToCurve !== 'function') throw new Error('mapToCurve() must be defined');\n  return {\n    // Encodes byte string to elliptic curve.\n    // hash_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n    hashToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options } as Opts);\n      const u0 = Point.fromAffine(mapToCurve(u[0]));\n      const u1 = Point.fromAffine(mapToCurve(u[1]));\n      const P = u0.add(u1).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n\n    // Encodes byte string to elliptic curve.\n    // encode_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n    encodeToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options } as Opts);\n      const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n    // Same as encodeToCurve, but without hash\n    mapToCurve(scalars: bigint[]) {\n      if (!Array.isArray(scalars)) throw new Error('mapToCurve: expected array of bigints');\n      for (const i of scalars)\n        if (typeof i !== 'bigint')\n          throw new Error(`mapToCurve: expected array of bigints, got ${i} in array`);\n      const P = Point.fromAffine(mapToCurve(scalars)).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n  };\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { createCurve } from './_shortw_utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport type { Hex, PrivKey } from './abstract/utils.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { ProjPointType as PointType, mapToCurveSimpleSWU } from './abstract/weierstrass.js';\n\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a: bigint, b: bigint) => (a + b / _2n) / b;\n\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y: bigint): bigint {\n  const P = secp256k1P;\n  // prettier-ignore\n  const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n  // prettier-ignore\n  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n  const b2 = (y * y * y) % P; // x^3, 11\n  const b3 = (b2 * b2 * y) % P; // x^7\n  const b6 = (pow2(b3, _3n, P) * b3) % P;\n  const b9 = (pow2(b6, _3n, P) * b3) % P;\n  const b11 = (pow2(b9, _2n, P) * b2) % P;\n  const b22 = (pow2(b11, _11n, P) * b11) % P;\n  const b44 = (pow2(b22, _22n, P) * b22) % P;\n  const b88 = (pow2(b44, _44n, P) * b44) % P;\n  const b176 = (pow2(b88, _88n, P) * b88) % P;\n  const b220 = (pow2(b176, _44n, P) * b44) % P;\n  const b223 = (pow2(b220, _3n, P) * b3) % P;\n  const t1 = (pow2(b223, _23n, P) * b22) % P;\n  const t2 = (pow2(t1, _6n, P) * b2) % P;\n  const root = pow2(t2, _2n, P);\n  if (!Fp.eql(Fp.sqr(root), y)) throw new Error('Cannot find square root');\n  return root;\n}\n\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n\nexport const secp256k1 = createCurve(\n  {\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n      beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n      splitScalar: (k: bigint) => {\n        const n = secp256k1N;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg) k1 = n - k1;\n        if (k2neg) k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n          throw new Error('splitScalar: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n      },\n    },\n  },\n  sha256\n);\n\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES: { [tag: string]: Uint8Array } = {};\nfunction taggedHash(tag: string, ...messages: Uint8Array[]): Uint8Array {\n  let tagP = TAGGED_HASH_PREFIXES[tag];\n  if (tagP === undefined) {\n    const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n    tagP = concatBytes(tagH, tagH);\n    TAGGED_HASH_PREFIXES[tag] = tagP;\n  }\n  return sha256(concatBytes(tagP, ...messages));\n}\n\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point: PointType<bigint>) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n: bigint) => numberToBytesBE(n, 32);\nconst modP = (x: bigint) => mod(x, secp256k1P);\nconst modN = (x: bigint) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q: PointType<bigint>, a: bigint, b: bigint) =>\n  Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv: PrivKey) {\n  let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n  let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n  const scalar = p.hasEvenY() ? d_ : modN(-d_);\n  return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x: bigint): PointType<bigint> {\n  if (!fe(x)) throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n  const xx = modP(x * x);\n  const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n  let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n  if (y % _2n !== _0n) y = modP(-y); // Return the unique point P such that x(P) = x and\n  const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n  p.assertValidity();\n  return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args: Uint8Array[]): bigint {\n  return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey: Hex): Uint8Array {\n  return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(\n  message: Hex,\n  privateKey: PrivKey,\n  auxRand: Hex = randomBytes(32)\n): Uint8Array {\n  const m = ensureBytes('message', message);\n  const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n  const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n  const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n  const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n  const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n  if (k_ === _0n) throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n  const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n  const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n  const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n  sig.set(rx, 0);\n  sig.set(numTo32b(modN(k + e * d)), 32);\n  // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n  if (!schnorrVerify(sig, m, px)) throw new Error('sign: Invalid signature produced');\n  return sig;\n}\n\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature: Hex, message: Hex, publicKey: Hex): boolean {\n  const sig = ensureBytes('signature', signature, 64);\n  const m = ensureBytes('message', message);\n  const pub = ensureBytes('publicKey', publicKey, 32);\n  try {\n    const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n    const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n    if (!fe(r)) return false;\n    const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n    if (!ge(s)) return false;\n    const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n    const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n    if (!R || !R.hasEvenY() || R.toAffine().x !== r) return false; // -eP == (n-e)P\n    return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n  } catch (error) {\n    return false;\n  }\n}\n\nexport const schnorr = /* @__PURE__ */ (() => ({\n  getPublicKey: schnorrGetPublicKey,\n  sign: schnorrSign,\n  verify: schnorrVerify,\n  utils: {\n    randomPrivateKey: secp256k1.utils.randomPrivateKey,\n    lift_x,\n    pointToBytes,\n    numberToBytesBE,\n    bytesToNumberBE,\n    taggedHash,\n    mod,\n  },\n}))();\n\nconst isoMap = /* @__PURE__ */ (() =>\n  isogenyMap(\n    Fp,\n    [\n      // xNum\n      [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n      ],\n      // xDen\n      [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n      // yNum\n      [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n      ],\n      // yDen\n      [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n    ].map((i) => i.map((j) => BigInt(j))) as [bigint[], bigint[], bigint[], bigint[]]\n  ))();\nconst mapSWU = /* @__PURE__ */ (() =>\n  mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n  }))();\nconst htf = /* @__PURE__ */ (() =>\n  createHasher(\n    secp256k1.ProjectivePoint,\n    (scalars: bigint[]) => {\n      const { x, y } = mapSWU(Fp.create(scalars[0]));\n      return isoMap(x, y);\n    },\n    {\n      DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n      encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n      p: Fp.ORDER,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha256,\n    }\n  ))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n", "import { keccak256, toUtf8Bytes, concat, recoverAddress, SigningKey, joinSignature } from './ethersUtils.js';\nimport { ADDRESS_PREFIX } from './address.js';\nimport { getBase58CheckAddress } from './crypto.js';\nimport { hexStr2byteArray } from './code.js';\n\nexport const TRON_MESSAGE_PREFIX = '\\x19TRON Signed Message:\\n';\n\nexport function hashMessage(message: string | Uint8Array | Array<number>) {\n    if (typeof message === 'string') {\n        message = toUtf8Bytes(message);\n    } else if (Array.isArray(message)) {\n        message = new Uint8Array(message);\n    }\n\n    return keccak256(concat([toUtf8Bytes(TRON_MESSAGE_PREFIX), toUtf8Bytes(String(message.length)), message]));\n}\n\nexport function signMessage(message: string | Uint8Array | Array<number>, privateKey: string) {\n    if (!privateKey.match(/^0x/)) {\n        privateKey = '0x' + privateKey;\n    }\n\n    const signingKey = new SigningKey(privateKey);\n    const messageDigest = hashMessage(message);\n    const signature = signingKey.sign(messageDigest);\n\n    return joinSignature(signature);\n}\n\nexport function verifyMessage(message: string | Uint8Array | Array<number>, signature: string) {\n    if (!signature.match(/^0x/)) {\n        signature = '0x' + signature;\n    }\n    const recovered = recoverAddress(hashMessage(message), signature);\n    const base58Address = getBase58CheckAddress(hexStr2byteArray(recovered.replace(/^0x/, ADDRESS_PREFIX)));\n\n    return base58Address;\n}\n", "import * as accounts from './accounts.js';\nimport * as address from './address.js';\nimport * as base58 from './base58.js';\nimport * as bytes from './bytes.js';\nimport * as crypto from './crypto.js';\nimport * as code from './code.js';\nimport * as abi from './abi.js';\nimport * as message from './message.js';\nimport * as ethersUtils from './ethersUtils.js';\nimport { TypedDataEncoder as _TypedDataEncoder } from './typedData.js';\nimport * as transaction from './transaction.js';\n\nimport * as validations from './validations.js';\n\nconst utils = {\n    ...validations,\n    address,\n    code,\n    accounts,\n    base58,\n    bytes,\n    crypto,\n    abi,\n    message,\n    _TypedDataEncoder,\n    transaction,\n    ethersUtils,\n};\nexport default utils;\nexport * from './accounts.js';\nexport * from './address.js';\nexport * from './base58.js';\nexport * from './bytes.js';\nexport * from './crypto.js';\nexport * from './code.js';\nexport * from './abi.js';\nexport * from './message.js';\nexport * from './ethersUtils.js';\nexport * from './typedData.js';\nexport * from './transaction.js';\n\nexport * from './validations.js';\n", "export * from './ABI.js';\nexport * from './APIResponse.js';\nexport * from './Contract.js';\nexport * from './Providers.js';\nexport * from './Transaction.js';\nexport * from './TransactionBuilder.js';\nexport * from './TronWeb.js';\nexport * from './Trx.js';\nexport * from './UtilsTypes.js';\n", "import { AccountType } from './Contract.js';\nimport { SignedTransaction, Transaction } from './Transaction.js';\nimport { Resource } from './TransactionBuilder.js';\nimport { APIReturnedPermission } from './APIResponse.js';\n\ntype HTTPMap<T extends string | number | symbol, U> = Record<T, U>[];\n\nexport interface FrozenSupply {\n    frozen_amount: number;\n    frozen_days: number;\n}\n\nexport interface Token {\n    id: string;\n    owner_address: string;\n    name: string;\n    abbr: string;\n    total_supply: number;\n    frozen_supply: FrozenSupply[];\n    trx_num: number;\n    precision: number;\n    num: number;\n    start_time: number;\n    end_time: number;\n    order: number; // useless\n    vote_score: number;\n    description: string;\n    url: string;\n    free_asset_net_limit: number;\n    public_free_asset_net_limit: number;\n    public_free_asset_net_usage: number;\n    public_latest_free_net_time: number;\n}\n\nexport interface Frozen {\n    frozen_balance: number;\n    expire_time: number;\n}\n\nexport interface Vote {\n    vote_address: string;\n    vote_count: number;\n}\n\nexport interface AccountResource {\n    energy_usage: number;\n    frozen_balance_for_energy: Frozen;\n    latest_consume_time_for_energy: number;\n    acquired_delegated_frozen_balance_for_energy: number;\n    delegated_frozen_balance_for_energy: number;\n    storage_limit: number;\n    storage_usage: number;\n    latest_exchange_storage_time: number;\n    energy_window_size: number;\n    delegated_frozenV2_balance_for_energy: number;\n    acquired_delegated_frozenV2_balance_for_energy: number;\n    energy_window_optimized: boolean;\n}\n\nexport enum ResourceCode {\n    BANDWIDTH = 0x00,\n    ENERGY = 0x01,\n    TRON_POWER = 0x02,\n}\n\nexport interface FreezeV2 {\n    type: Resource;\n    amount: number;\n}\nexport interface UnFreezeV2 {\n    type: Resource;\n    unfreeze_amount: number;\n    unfreeze_expire_time: number;\n}\n\nexport interface Account {\n    account_name: string;\n    type: AccountType;\n    address: string;\n    balance: number;\n    votes: Vote[];\n    asset: HTTPMap<string, number>;\n    assetV2: HTTPMap<string, number>;\n    frozen: Frozen[];\n    net_usage: number;\n    acquired_delegated_frozen_balance_for_bandwidth: number;\n    delegated_frozen_balance_for_bandwidth: number;\n    old_tron_power: number;\n    tron_power: Frozen;\n    asset_optimized: boolean;\n    create_time: number;\n    latest_opration_time: number;\n    allowance: number;\n    latest_withdraw_time: number;\n    code: string;\n    is_witness: boolean;\n    is_committee: boolean;\n    frozen_supply: Frozen;\n    asset_issued_name: string;\n    asset_issued_ID: string;\n    latest_asset_operation_time: HTTPMap<string, number>;\n    latest_asset_operation_timeV2: HTTPMap<string, number>;\n    free_net_usage: number;\n    free_asset_net_usage: HTTPMap<string, number>;\n    free_asset_net_usageV2: HTTPMap<string, number>;\n    latest_consume_time: number;\n    latest_consume_free_time: number;\n    account_id: string;\n    net_window_size: number;\n    net_window_optimized: boolean;\n    account_resource: AccountResource;\n    codeHash: string;\n    owner_permission: APIReturnedPermission;\n    witness_permission: APIReturnedPermission;\n    active_permission: APIReturnedPermission[];\n    frozenV2: FreezeV2[];\n    unfrozenV2: UnFreezeV2[];\n    delegated_frozenV2_balance_for_bandwidth: number;\n    acquired_delegated_frozenV2_balance_for_bandwidth: number;\n}\n\nexport interface AccountNetMessage {\n    freeNetUsed: number;\n    freeNetLimit: number;\n    NetUsed: number;\n    NetLimit: number;\n    assetNetUsed: HTTPMap<string, number>;\n    assetNetLimit: HTTPMap<string, number>;\n    TotalNetLimit: number;\n    TotalNetWeight: number;\n}\n\nexport interface Witness {\n    address: string;\n    voteCount: number;\n    pubKey: string;\n    url: string;\n    totalProduced: number;\n    totalMissed: number;\n    latestBlockNum: number;\n    latestSlotNum: number;\n    isJobs: boolean;\n}\n\nenum TransactionSignWeight_response_code {\n    ENOUGH_PERMISSION = 'ENOUGH_PERMISSION',\n    NOT_ENOUGH_PERMISSION = 'NOT_ENOUGH_PERMISSION', // error in\n    SIGNATURE_FORMAT_ERROR = 'SIGNATURE_FORMAT_ERROR',\n    COMPUTE_ADDRESS_ERROR = 'COMPUTE_ADDRESS_ERROR',\n    PERMISSION_ERROR = 'PERMISSION_ERROR', //The key is not in permission\n    OTHER_ERROR = 'OTHER_ERROR',\n}\n\ninterface TransactionSignWeightResult {\n    code: TransactionSignWeight_response_code;\n    message: string;\n}\n\nexport interface TransactionSignWeight {\n    permission: APIReturnedPermission;\n    approved_list: string[];\n    current_weight: number;\n    result: TransactionSignWeightResult;\n    transaction: { transaction: Transaction };\n}\n\nenum BroadcastReturn_response_code {\n    SUCCESS = 0,\n    SIGERROR = 1, // error in signature\n    CONTRACT_VALIDATE_ERROR = 2,\n    CONTRACT_EXE_ERROR = 3,\n    BANDWITH_ERROR = 4,\n    DUP_TRANSACTION_ERROR = 5,\n    TAPOS_ERROR = 6,\n    TOO_BIG_TRANSACTION_ERROR = 7,\n    TRANSACTION_EXPIRATION_ERROR = 8,\n    SERVER_BUSY = 9,\n    NO_CONNECTION = 10,\n    NOT_ENOUGH_EFFECTIVE_CONNECTION = 11,\n    OTHER_ERROR = 20,\n}\n\nexport interface BroadcastReturn<T extends SignedTransaction> {\n    result: boolean;\n    txid: string;\n    code: BroadcastReturn_response_code;\n    message: string;\n    transaction: T;\n}\n\nexport interface BroadcastHexReturn {\n    result: boolean;\n    txid: string;\n    code: string;\n    message: string;\n    transaction: string;\n}\n\nexport interface AddressOptions {\n    privateKey?: string;\n    address?: string;\n}\n\nenum ProposalState {\n    PENDING = 0,\n    DISAPPROVED = 1,\n    APPROVED = 2,\n    CANCELED = 3,\n}\n\nexport interface Proposal {\n    proposal_id: number;\n    proposer_address: string;\n    parameters: HTTPMap<number, number>;\n    expiration_time: number;\n    create_time: number;\n    approvals: string[];\n    state: ProposalState;\n}\n\nexport interface ChainParameter {\n    key: string;\n    value: number;\n}\n\nexport interface AccountResourceMessage {\n    freeNetUsed: number;\n    freeNetLimit: number;\n    NetUsed: number;\n    NetLimit: number;\n    assetNetUsed: HTTPMap<string, number>;\n    assetNetLimit: HTTPMap<string, number>;\n    TotalNetLimit: number;\n    TotalNetWeight: number;\n    TotalTronPowerWeight: number;\n    tronPowerUsed: number;\n    tronPowerLimit: number;\n    EnergyUsed: number;\n    EnergyLimit: number;\n    TotalEnergyLimit: number;\n    TotalEnergyWeight: number;\n    storageUsed: number;\n    storageLimit: number;\n}\n\nexport type Address = string;\n\nexport interface Exchange {\n    exchange_id: number;\n    creator_address: Address;\n    create_time: number;\n    first_token_id: string;\n    first_token_balance: number;\n    second_token_id: string;\n    second_token_balance: number;\n}\n\nexport interface TransactionInfo {\n    id: string;\n    fee: number;\n    blockNumber: number;\n    blockTimeStamp: number;\n    contractResult: string[];\n    contract_address: string;\n    receipt: {\n        energy_usage: number;\n        energy_fee: number;\n        origin_energy_usage: number;\n        energy_usage_total: number;\n        net_usage: number;\n        net_fee: number;\n        result: string;\n        energy_penalty_total: number;\n    };\n    log: {\n        address: Address;\n        topics: string[];\n        data: string;\n    }[];\n    result?: 'FAILED';\n    resMessage: string;\n    assetIssueID: string;\n    withdraw_amount: number;\n    unfreeze_amount: number;\n    internal_transactions: {\n        hash: string;\n        caller_address: string;\n        transferTo_address: string;\n        callValueInfo: {\n            callValue: number;\n            tokenId: string;\n        }[];\n        note: string;\n        rejected: boolean;\n        extra: string;\n    }[];\n    exchange_received_amount: number;\n    exchange_inject_another_amount: number;\n    exchange_withdraw_another_amount: number;\n    shielded_transaction_fee: number;\n    withdraw_expire_amount: number;\n    cancel_unfreezeV2_amount: HTTPMap<string, number>;\n    exchange_id: string;\n    orderId: string;\n    orderDetails: {\n        makerOrderId: string;\n        takerOrderId: string;\n        fillSellQuantity: number;\n        fillBuyQuantity: number;\n    }[];\n    packingFee: number;\n}\n", "import utils from './utils/index.js';\nexport { utils };\n\nimport { BigNumber } from 'bignumber.js';\nexport { BigNumber };\n\nimport { providers } from './lib/providers/index.js';\nexport { providers };\n\nimport { TransactionBuilder } from './lib/TransactionBuilder/TransactionBuilder.js';\nexport { TransactionBuilder };\n\nimport { Trx } from './lib/trx.js';\nexport { Trx };\n\nimport { Contract, Method } from './lib/contract/index.js';\nexport { Contract, Method };\n\nimport { Event } from './lib/event.js';\nexport { Event };\n\nimport { Plugin } from './lib/plugin.js';\nexport { Plugin };\n\nimport { TronWeb } from './tronweb.js';\nexport { TronWeb };\n\nimport * as Types from './types/index.js';\nexport { Types };\n\nexport default {\n    utils,\n    BigNumber,\n    providers,\n    TransactionBuilder,\n    Trx,\n    Contract,\n    Method,\n    Event,\n    Plugin,\n    TronWeb,\n    Types,\n};\n"],
  "mappings": "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",
  "names": ["o", "isString", "toString", "o", "merge", "defaults", "o", "version", "n", "f", "r", "isRegExp", "split", "version", "isDate", "n", "f", "r", "F", "isBoolean", "defaultOptions", "isNumeric", "includes", "hash", "o", "o", "version", "o", "validators", "number", "f", "id", "checkAddressCode", "checkBirthDayCode", "getParityBit", "mod", "checkParityBit", "check15IdCardNo", "check18IdCardNo", "checkIdCardNo", "validator", "checksum", "version", "checksum", "checksum", "checksum", "b", "o", "_getRequireWildcardCache", "e", "n", "checksum", "_checksum", "key", "phone", "isValidDate", "trim", "n", "f", "r", "F", "unescape", "validators", "validator", "defaultOptions", "o", "_getRequireWildcardCache", "e", "n", "AU", "CH", "hasValidCheckNumber", "PT", "checksum", "o", "_getRequireWildcardCache", "e", "n", "version", "validator", "EventEmitter", "emit", "MAX_SAFE_INTEGER", "b", "anum", "MAX_SAFE_INTEGER", "version", "id", "b", "version", "version", "version", "version", "version2", "version", "compare", "b", "compare", "b", "compare", "b", "b", "b", "b", "compare", "b", "compare", "b", "compare", "b", "compare", "b", "compare", "b", "compare", "b", "b", "version", "version", "id", "version", "version", "require_valid", "version", "version", "version", "compare", "b", "version", "compare", "b", "require_semver", "compare", "b", "f", "n", "N", "S", "global", "f", "bytes", "global", "google_protobuf_any_pb", "f", "bytes", "reader", "global", "global", "f", "bytes", "global", "f", "bytes", "global", "f", "bytes", "global", "f", "bytes", "global", "f", "bytes", "global", "f", "bytes", "global", "f", "bytes", "reader", "global", "f", "bytes", "output", "n", "bytes", "b", "SHA256", "computeAddress", "sha3", "isAddress", "bytes", "BigNumber", "ALPHABET", "b", "isNum", "n", "compare", "id", "format", "validator", "number", "padding", "Interface", "sha256", "bytes", "bytes", "_value", "mask", "BN_0", "_value", "bytes", "_data", "filter", "bytes", "output", "bytes", "_signal", "_error", "process", "clone", "_request", "_a", "response", "delay", "_headers", "_body", "all", "BN_0", "BN_1", "offset", "_data", "object", "length", "randomBytes", "bytes", "args", "_names", "bytes", "_data", "_a", "n", "b", "hash", "crypto", "defaults", "crypto", "hash", "hash", "isLE", "_32n", "b", "T1", "T2", "n", "n", "crypto", "randomBytes", "locked", "_data", "bytes", "locked", "_data", "locked", "ripemd160", "_data", "locked", "pbkdf2", "locked", "randomBytes", "rotl", "b", "N", "Pi", "N", "scrypt", "sha256", "_data", "sha512", "concatBytes", "utf8ToBytes", "_0n", "_1n", "_2n", "u8a", "hexes", "bytes", "n", "b", "gen", "object", "validators", "_0n", "_1n", "_2n", "b", "number", "n", "S", "Fp", "ge", "n2", "f", "_0n", "_1n", "n", "bitLen", "isLE", "_0n", "f", "_1n", "b", "bytes", "isLE", "_1n", "_0n", "_1n", "n", "window", "f", "mask", "Fp", "s", "_0n", "_1n", "_2n", "_3n", "_4n", "toBytes", "concatBytes", "bytes", "b", "n", "Point", "U1", "U2", "f", "a", "modN", "number", "Signature", "utils", "hash", "randomBytes", "_a", "_sig", "r", "tv5", "c1", "c2", "utf8ToBytes", "b", "concatBytes", "hash", "Point", "hash", "_1n", "_2n", "b", "_3n", "n", "_0n", "concatBytes", "BN_0", "BN_1", "_guard", "_value", "clone", "bytes", "r", "s", "v", "_r", "_v", "bytes", "BN_0", "checksum", "BN_0", "_value", "_value", "_value", "_value", "BN_0", "BN_1", "_value", "_value", "_value", "Zeros", "b", "BN_0", "BN_2", "BN_27", "BN_28", "BN_35", "version", "hash", "sha256", "_value", "b", "_data", "_blobs", "BN_0", "BN_1", "BN_MAX_UINT256", "bytes", "BN_1", "BN_0", "_value", "BN_MAX_UINT256", "name", "_types", "type", "n", "b", "value", "_offset", "throwError", "_guard", "result", "process", "value", "type", "indexed", "name", "_a", "inputs", "abiCoder", "bytes", "hash", "PanicReasons", "f", "b", "bytes", "_data", "value", "BN_0", "b", "BN_0", "hash", "blockNumber", "_timeout", "receipt", "_iface", "filter", "BN_0", "internal", "fragment", "t", "filter", "listener", "passProperties", "addr", "target", "code", "hash", "BN_0", "allowNull", "BN_2", "from", "getGlobal", "getGlobal", "BN_1", "BN_2", "words", "all", "words", "_data", "checksum", "words", "wordlist", "words", "checksum", "sha256", "_guard", "pbkdf2", "T1", "bytes", "i", "__classPrivateFieldGet", "__classPrivateFieldSet", "__classPrivateFieldGet", "_a", "randomBytes", "N", "scrypt", "defaultPath", "N", "Nibbles", "zpad", "_value", "sha256", "bytes", "_guard", "ripemd160", "wordlist", "_a", "randomBytes", "setify", "_kwVisib", "KwVisib", "_kwTypes", "KwTypes", "_kwModifiers", "KwModifiers", "_kwOther", "_keywords", "Keywords", "SimpleTokens", "regexWhitespacePrefix", "regexNumberPrefix", "regexIdPrefix", "regexId", "regexType", "_offset", "_tokens", "_TokenString_instances", "subTokenString_fn", "TokenString", "_a", "lex", "throwError", "allowSingle", "consumeName", "consumeKeywords", "consumeMutability", "consumeParams", "ParamType", "consumeGas", "consumeEoi", "regexArrayType", "verifyBasicType", "_guard", "internal", "ParamTypeInternal", "ErrorFragmentInternal", "EventFragmentInternal", "ConstructorFragmentInternal", "FallbackFragmentInternal", "FunctionFragmentInternal", "StructFragmentInternal", "_ParamType_instances", "walkAsync_fn", "_ParamType", "result", "process", "value", "type", "indexed", "name", "Fragment", "ConstructorFragment", "ErrorFragment", "EventFragment", "FallbackFragment", "FunctionFragment", "StructFragment", "NamedFragment", "joinParams", "inputs", "LogDescription", "TransactionDescription", "ErrorDescription", "Indexed", "hash", "PanicReasons", "BuiltinErrors", "_errors", "_events", "_functions", "_abiCoder", "_Interface_instances", "getFunction_fn", "getEvent_fn", "_Interface", "Fragment", "ConstructorFragment", "f", "b", "ErrorFragment", "bytes", "_data", "value", "ParamType", "FunctionFragment", "EventFragment", "Interface", "getChecksumAddress", "isAddress", "BASE", "bytes", "toString", "isArray", "isFunction", "isString", "isNumber", "isObject", "isBoolean", "prototype", "b", "descriptors", "filter", "hasOwnProperty", "filter", "prototype", "toString", "_encode", "encode", "_encode", "id", "utils_exports", "utils_exports", "isFormData", "isFileList", "transitional", "filter", "self", "_value", "prototype", "validateStatus", "bytes", "origin", "b", "merge", "transitional", "signal", "bytes", "done", "res", "_request", "id", "validator", "version", "validators", "transitional", "Axios", "AxiosError", "CanceledError", "isCancel", "CancelToken", "VERSION", "all", "isAxiosError", "spread", "toFormData", "AxiosHeaders", "HttpStatusCode", "mergeConfig", "EventEmitter", "import_semver", "output", "types", "args", "_a", "isAddress", "ContractType", "Permission_PermissionType", "AccountType", "Transaction", "google_protobuf_any_pb", "lock", "output", "id", "sha256", "lock", "_a", "abiCoder", "value", "toHex", "utils_default", "b", "id", "tokens", "_a", "utils_default", "output", "sha3", "Contract", "utils_default", "Plugin", "utils_default", "semver", "utils_default", "version", "utils_default", "semver", "Contract", "padding", "number", "isAddress", "getAddress", "padding", "BN__1", "BN_0", "BN_1", "BN_MAX_UINT256", "hexPadRight", "bytes", "hexTrue", "hexFalse", "domainFieldTypes", "domainFieldNames", "checkString", "domainChecks", "_value", "getBaseEncoder", "encodeType", "name", "_types", "_fullTypes", "_encoderCache", "_TypedDataEncoder_instances", "getEncoder_fn", "_TypedDataEncoder", "n", "type", "b", "value", "TypedDataEncoder", "number", "n", "isBytes", "bytes", "b", "hash", "number", "exists", "output", "crypto", "createView", "rotr", "isLE", "hexes", "utf8ToBytes", "toBytes", "bytes", "concatBytes", "Hash", "toStr", "wrapConstructor", "toBytes", "randomBytes", "crypto", "setBigUint64", "isLE", "_32n", "Chi", "b", "Maj", "Hash", "createView", "exists", "toBytes", "output", "SHA256_K", "SHA256_W", "SHA256", "rotr", "T1", "Chi", "T2", "Maj", "SHA224", "sha256", "wrapConstructor", "sha224", "HMAC", "Hash", "hash", "toBytes", "exists", "bytes", "hmac", "utils_exports", "bitGet", "bitLen", "bitMask", "bitSet", "bytesToHex", "bytesToNumberBE", "bytesToNumberLE", "concatBytes", "createHmacDrbg", "ensureBytes", "equalBytes", "hexToBytes", "hexToNumber", "isBytes", "numberToBytesBE", "numberToBytesLE", "numberToHexUnpadded", "numberToVarBytesBE", "utf8ToBytes", "validateObject", "_0n", "_1n", "_2n", "hexes", "bytes", "n", "b", "u8n", "u8fr", "gen", "validatorFns", "object", "validators", "_0n", "_1n", "_2n", "_3n", "_4n", "_5n", "_8n", "_9n", "_16n", "mod", "b", "pow", "pow2", "invert", "number", "n", "tonelliShanks", "S", "Fp", "ge", "FpSqrt", "n2", "FIELD_FIELDS", "validateField", "validateObject", "FpPow", "f", "_0n", "_1n", "FpInvertBatch", "nLength", "n", "Field", "bitLen", "isLE", "_0n", "FpSqrt", "f", "bitMask", "_1n", "mod", "FpPow", "invert", "FpInvertBatch", "b", "numberToBytesLE", "numberToBytesBE", "bytes", "bytesToNumberLE", "bytesToNumberBE", "getFieldBytesLength", "getMinHashLength", "mapHashToField", "isLE", "bytesToNumberBE", "bytesToNumberLE", "mod", "_1n", "numberToBytesLE", "numberToBytesBE", "_0n", "_1n", "wNAF", "n", "window", "f", "mask", "validateBasic", "validateField", "validateObject", "nLength", "validatePointOpts", "validateBasic", "validateObject", "Fp", "b2n", "h2b", "utils_exports", "DER", "DERErr", "s", "_0n", "_1n", "_2n", "_3n", "_4n", "weierstrassPoints", "toBytes", "concatBytes", "bytes", "b", "n", "isBytes", "bytesToHex", "bytesToNumberBE", "ensureBytes", "mod", "Point", "U1", "U2", "f", "a", "wNAF", "validateOpts", "weierstrass", "modN", "invert", "numberToBytesBE", "number", "Signature", "hexToBytes", "utils", "getMinHashLength", "mapHashToField", "bitMask", "hash", "randomBytes", "createHmacDrbg", "_a", "_sig", "r", "SWUFpSqrtRatio", "tv5", "c1", "c2", "mapToCurveSimpleSWU", "validateField", "getHash", "hash", "hmac", "concatBytes", "randomBytes", "createCurve", "weierstrass", "os2ip", "bytesToNumberBE", "i2osp", "strxor", "b", "expand_message_xmd", "concatBytes", "utf8ToBytes", "expand_message_xof", "hash_to_field", "validateObject", "hash", "mod", "isogenyMap", "createHasher", "Point", "secp256k1P", "secp256k1N", "_1n", "_2n", "divNearest", "b", "sqrtMod", "_3n", "pow2", "Fp", "Field", "secp256k1", "createCurve", "n", "mod", "sha256", "_0n", "fe", "ge", "TAGGED_HASH_PREFIXES", "taggedHash", "concatBytes", "pointToBytes", "numTo32b", "numberToBytesBE", "modP", "modN", "Point", "GmulAdd", "schnorrGetExtPubKey", "lift_x", "challenge", "bytesToNumberBE", "schnorrGetPublicKey", "schnorrSign", "randomBytes", "ensureBytes", "schnorrVerify", "schnorr", "isoMap", "isogenyMap", "mapSWU", "mapToCurveSimpleSWU", "htf", "createHasher", "hashToCurve", "encodeToCurve", "SHA256", "signBytes", "TypedDataEncoder", "secp256k1", "computeAddress", "hash", "sha256", "sha3", "wordlist", "hashMessage", "verifyMessage", "hashMessage", "verifyMessage", "TypedDataEncoder", "utils_default", "ResourceCode", "ResourceCode", "TransactionSignWeight_response_code", "BroadcastReturn_response_code", "ProposalState", "utils_default", "Contract"]
}
